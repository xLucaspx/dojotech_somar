{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9830,"endOffset":9903,"count":76}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":9909,"endOffset":9960,"count":467}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9966,"endOffset":10013,"count":54}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":11625,"endOffset":11694,"count":22}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":12376,"endOffset":12404,"count":780}],"isBlockCoverage":false},{"functionName":"SafeWeakMap","ranges":[{"startOffset":12554,"endOffset":12582,"count":1}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12718,"endOffset":12746,"count":575}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":13184,"endOffset":13240,"count":2}],"isBlockCoverage":true},{"functionName":"SafePromise","ranges":[{"startOffset":13594,"endOffset":13636,"count":320}],"isBlockCoverage":true},{"functionName":"arrayToSafePromiseIterable","ranges":[{"startOffset":14634,"endOffset":14878,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14741,"endOffset":14864,"count":113}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14782,"endOffset":14863,"count":113},{"startOffset":14827,"endOffset":14836,"count":78},{"startOffset":14837,"endOffset":14856,"count":35}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAll","ranges":[{"startOffset":15099,"endOffset":15332,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15240,"endOffset":15326,"count":8}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnArrayLike","ranges":[{"startOffset":15792,"endOffset":16364,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15828,"endOffset":16363,"count":1},{"startOffset":16003,"endOffset":16022,"count":0},{"startOffset":16161,"endOffset":16174,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16229,"endOffset":16341,"count":1}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseRace","ranges":[{"startOffset":18735,"endOffset":18969,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18876,"endOffset":18963,"count":39}],"isBlockCoverage":true}]},{"scriptId":"7","url":"node:internal/per_context/domexception","functions":[{"functionName":"DOMException","ranges":[{"startOffset":1153,"endOffset":1804,"count":1},{"startOffset":1286,"endOffset":1681,"count":0}],"isBlockCoverage":true}]},{"scriptId":"9","url":"node:internal/bootstrap/realm","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":6113,"endOffset":6382,"count":148}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":6552,"endOffset":6710,"count":5228},{"startOffset":6690,"endOffset":6706,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9297,"endOffset":9374,"count":265}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9387,"endOffset":9483,"count":2704}],"isBlockCoverage":true},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9496,"endOffset":9852,"count":2020},{"startOffset":9573,"endOffset":9740,"count":0},{"startOffset":9796,"endOffset":9822,"count":122},{"startOffset":9822,"endOffset":9851,"count":1898}],"isBlockCoverage":true},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10125,"endOffset":10236,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10401,"endOffset":11129,"count":129},{"startOffset":10483,"endOffset":10679,"count":0},{"startOffset":10745,"endOffset":11047,"count":21},{"startOffset":11008,"endOffset":11012,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":11135,"endOffset":11916,"count":129},{"startOffset":11174,"endOffset":11193,"count":108},{"startOffset":11193,"endOffset":11915,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11645,"endOffset":11751,"count":21}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":12218,"endOffset":12572,"count":150},{"startOffset":12340,"endOffset":12560,"count":5228},{"startOffset":12419,"endOffset":12428,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12578,"endOffset":13426,"count":1972}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13632,"endOffset":14007,"count":1844}],"isBlockCoverage":false},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":14127,"endOffset":14300,"count":44},{"startOffset":14213,"endOffset":14262,"count":0}],"isBlockCoverage":true}]},{"scriptId":"10","url":"node:internal/errors","functions":[{"functionName":"prepareStackTrace","ranges":[{"startOffset":2222,"endOffset":3753,"count":32},{"startOffset":2402,"endOffset":2522,"count":0},{"startOffset":2656,"endOffset":3164,"count":2},{"startOffset":2707,"endOffset":2905,"count":17},{"startOffset":2770,"endOffset":2822,"count":15},{"startOffset":2824,"endOffset":2898,"count":2},{"startOffset":3110,"endOffset":3159,"count":0},{"startOffset":3295,"endOffset":3317,"count":24},{"startOffset":3317,"endOffset":3475,"count":8},{"startOffset":3475,"endOffset":3551,"count":2},{"startOffset":3551,"endOffset":3613,"count":6},{"startOffset":3613,"endOffset":3641,"count":8},{"startOffset":3641,"endOffset":3672,"count":0},{"startOffset":3672,"endOffset":3752,"count":8}],"isBlockCoverage":true},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":3797,"endOffset":4520,"count":32},{"startOffset":4071,"endOffset":4139,"count":24},{"startOffset":4139,"endOffset":4424,"count":8},{"startOffset":4424,"endOffset":4492,"count":0},{"startOffset":4492,"endOffset":4519,"count":8}],"isBlockCoverage":true},{"functionName":"lazyInternalUtilInspect","ranges":[{"startOffset":5595,"endOffset":5726,"count":2}],"isBlockCoverage":true},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":5955,"endOffset":6477,"count":270},{"startOffset":6188,"endOffset":6213,"count":0},{"startOffset":6317,"endOffset":6362,"count":0},{"startOffset":6444,"endOffset":6473,"count":0}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":10833,"endOffset":11870,"count":90}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":11604,"endOffset":11684,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":12044,"endOffset":12315,"count":11}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":12959,"endOffset":13859,"count":90},{"startOffset":13112,"endOffset":13384,"count":88},{"startOffset":13384,"endOffset":13736,"count":2},{"startOffset":13736,"endOffset":13747,"count":0},{"startOffset":13747,"endOffset":13858,"count":2}],"isBlockCoverage":true},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":14237,"endOffset":14650,"count":90}],"isBlockCoverage":true},{"functionName":"hideInternalStackFrames","ranges":[{"startOffset":25856,"endOffset":26347,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25931,"endOffset":26342,"count":0}],"isBlockCoverage":false},{"functionName":"AbortError","ranges":[{"startOffset":26586,"endOffset":26902,"count":1},{"startOffset":26691,"endOffset":26721,"count":0},{"startOffset":26723,"endOffset":26806,"count":0}],"isBlockCoverage":true},{"functionName":"determineSpecificType","ranges":[{"startOffset":27491,"endOffset":28128,"count":1},{"startOffset":27583,"endOffset":27632,"count":0},{"startOffset":27634,"endOffset":28127,"count":0}],"isBlockCoverage":true},{"functionName":"formatList","ranges":[{"startOffset":28460,"endOffset":28682,"count":2},{"startOffset":28530,"endOffset":28570,"count":1},{"startOffset":28571,"endOffset":28678,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43091,"endOffset":45281,"count":1},{"startOffset":43221,"endOffset":43259,"count":0},{"startOffset":43338,"endOffset":43414,"count":0},{"startOffset":43477,"endOffset":43489,"count":0},{"startOffset":43683,"endOffset":44210,"count":5},{"startOffset":43841,"endOffset":43922,"count":1},{"startOffset":43922,"endOffset":44203,"count":4},{"startOffset":44039,"endOffset":44203,"count":0},{"startOffset":44451,"endOffset":44557,"count":0},{"startOffset":44630,"endOffset":44645,"count":0},{"startOffset":44720,"endOffset":44739,"count":0},{"startOffset":44908,"endOffset":44922,"count":0},{"startOffset":44959,"endOffset":45196,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49753,"endOffset":49911,"count":86}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60390,"endOffset":60808,"count":1},{"startOffset":60497,"endOffset":60531,"count":0},{"startOffset":60682,"endOffset":60730,"count":0}],"isBlockCoverage":true}]},{"scriptId":"11","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3929,"endOffset":3981,"count":1831}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4048,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4198,"endOffset":4236,"count":6}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4243,"endOffset":4676,"count":1},{"startOffset":4303,"endOffset":4594,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8190,"endOffset":8356,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":8461,"endOffset":8665,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12923,"endOffset":12961,"count":1196}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13867,"endOffset":13904,"count":1223}],"isBlockCoverage":true}]},{"scriptId":"12","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4504,"endOffset":4531,"count":1}],"isBlockCoverage":true},{"functionName":"initAsyncResource","ranges":[{"startOffset":5702,"endOffset":5986,"count":129}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":6096,"endOffset":7172,"count":90},{"startOffset":6220,"endOffset":6243,"count":88},{"startOffset":6246,"endOffset":6606,"count":2},{"startOffset":6280,"endOffset":6530,"count":0},{"startOffset":6974,"endOffset":6981,"count":1},{"startOffset":6982,"endOffset":6988,"count":89},{"startOffset":7047,"endOffset":7061,"count":49}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":7466,"endOffset":7582,"count":75},{"startOffset":7508,"endOffset":7521,"count":0}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":7588,"endOffset":7734,"count":2}],"isBlockCoverage":true},{"functionName":"TimersList","ranges":[{"startOffset":7960,"endOffset":8273,"count":40}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":8871,"endOffset":9060,"count":39},{"startOffset":8915,"endOffset":8993,"count":0}],"isBlockCoverage":true},{"functionName":"incRefCount","ranges":[{"startOffset":9707,"endOffset":9878,"count":49},{"startOffset":9763,"endOffset":9875,"count":7}],"isBlockCoverage":true},{"functionName":"decRefCount","ranges":[{"startOffset":9882,"endOffset":10054,"count":35},{"startOffset":9938,"endOffset":10051,"count":6}],"isBlockCoverage":true},{"functionName":"unrefActive","ranges":[{"startOffset":10348,"endOffset":10410,"count":75}],"isBlockCoverage":true},{"functionName":"insertGuarded","ranges":[{"startOffset":10637,"endOffset":11176,"count":75},{"startOffset":10735,"endOffset":10757,"count":1},{"startOffset":10764,"endOffset":10771,"count":74},{"startOffset":10771,"endOffset":10891,"count":1},{"startOffset":10893,"endOffset":10970,"count":0},{"startOffset":10970,"endOffset":10993,"count":1},{"startOffset":10993,"endOffset":11037,"count":0},{"startOffset":11037,"endOffset":11148,"count":1},{"startOffset":11072,"endOffset":11148,"count":0},{"startOffset":11148,"endOffset":11175,"count":1}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":11247,"endOffset":12007,"count":91},{"startOffset":11585,"endOffset":11977,"count":40},{"startOffset":11826,"endOffset":11972,"count":5}],"isBlockCoverage":true},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":12011,"endOffset":12277,"count":41}],"isBlockCoverage":true},{"functionName":"getTimerDuration","ranges":[{"startOffset":12347,"endOffset":12890,"count":76},{"startOffset":12464,"endOffset":12548,"count":0},{"startOffset":12626,"endOffset":12868,"count":0}],"isBlockCoverage":true},{"functionName":"compareTimersLists","ranges":[{"startOffset":12894,"endOffset":13108,"count":78},{"startOffset":12998,"endOffset":13083,"count":0}],"isBlockCoverage":true},{"functionName":"setPosition","ranges":[{"startOffset":13112,"endOffset":13185,"count":82}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":13507,"endOffset":15503,"count":39},{"startOffset":13587,"endOffset":13612,"count":0},{"startOffset":14063,"endOffset":14078,"count":0},{"startOffset":14402,"endOffset":14501,"count":0},{"startOffset":15057,"endOffset":15082,"count":0},{"startOffset":15428,"endOffset":15457,"count":0}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":15511,"endOffset":16019,"count":19},{"startOffset":15717,"endOffset":15999,"count":38},{"startOffset":15749,"endOffset":15857,"count":19},{"startOffset":15821,"endOffset":15833,"count":18},{"startOffset":15834,"endOffset":15847,"count":1},{"startOffset":15857,"endOffset":15897,"count":19},{"startOffset":15897,"endOffset":15912,"count":0},{"startOffset":15912,"endOffset":15999,"count":19},{"startOffset":15999,"endOffset":16018,"count":0}],"isBlockCoverage":true},{"functionName":"listOnTimeout","ranges":[{"startOffset":16025,"endOffset":18687,"count":19},{"startOffset":16235,"endOffset":18127,"count":31},{"startOffset":16461,"endOffset":16695,"count":13},{"startOffset":16695,"endOffset":16738,"count":18},{"startOffset":16738,"endOffset":16753,"count":0},{"startOffset":16753,"endOffset":16964,"count":18},{"startOffset":16964,"endOffset":17210,"count":0},{"startOffset":17210,"endOffset":17326,"count":18},{"startOffset":17326,"endOffset":17451,"count":0},{"startOffset":17451,"endOffset":17570,"count":18},{"startOffset":17570,"endOffset":17640,"count":0},{"startOffset":17650,"endOffset":18091,"count":18},{"startOffset":17687,"endOffset":17715,"count":0},{"startOffset":17717,"endOffset":17829,"count":0},{"startOffset":17856,"endOffset":17875,"count":17},{"startOffset":17876,"endOffset":17896,"count":17},{"startOffset":17898,"endOffset":18082,"count":17},{"startOffset":17981,"endOffset":17998,"count":14},{"startOffset":18091,"endOffset":18127,"count":18},{"startOffset":18127,"endOffset":18682,"count":6}],"isBlockCoverage":true},{"functionName":"Immediate","ranges":[{"startOffset":18778,"endOffset":19114,"count":39}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":19120,"endOffset":19396,"count":39}],"isBlockCoverage":true}]},{"scriptId":"13","url":"node:internal/async_hooks","functions":[{"functionName":"lookupPublicResource","ranges":[{"startOffset":7013,"endOffset":7370,"count":11013},{"startOffset":7113,"endOffset":7129,"count":0},{"startOffset":7325,"endOffset":7347,"count":0}],"isBlockCoverage":true},{"functionName":"emitInitNative","ranges":[{"startOffset":7568,"endOffset":8730,"count":11013},{"startOffset":8277,"endOffset":8313,"count":0},{"startOffset":8694,"endOffset":8727,"count":0}],"isBlockCoverage":true},{"functionName":"emitHook","ranges":[{"startOffset":8835,"endOffset":9850,"count":10651},{"startOffset":9397,"endOffset":9433,"count":0},{"startOffset":9814,"endOffset":9847,"count":0}],"isBlockCoverage":true},{"functionName":"getHookArrays","ranges":[{"startOffset":10160,"endOffset":10660,"count":2},{"startOffset":10277,"endOffset":10659,"count":0}],"isBlockCoverage":true},{"functionName":"trackPromise","ranges":[{"startOffset":11582,"endOffset":12024,"count":26572},{"startOffset":11656,"endOffset":11675,"count":17669},{"startOffset":11675,"endOffset":11861,"count":8903},{"startOffset":11861,"endOffset":11886,"count":4623},{"startOffset":11887,"endOffset":11920,"count":4280}],"isBlockCoverage":true},{"functionName":"promiseInitHook","ranges":[{"startOffset":12028,"endOffset":12277,"count":8903}],"isBlockCoverage":true},{"functionName":"promiseInitHookWithDestroyTracking","ranges":[{"startOffset":12281,"endOffset":12420,"count":8903}],"isBlockCoverage":true},{"functionName":"destroyTracking","ranges":[{"startOffset":12424,"endOffset":12591,"count":8903}],"isBlockCoverage":true},{"functionName":"promiseBeforeHook","ranges":[{"startOffset":12595,"endOffset":12811,"count":4383}],"isBlockCoverage":true},{"functionName":"promiseAfterHook","ranges":[{"startOffset":12815,"endOffset":13396,"count":4383},{"startOffset":12948,"endOffset":12985,"count":0}],"isBlockCoverage":true},{"functionName":"enableHooks","ranges":[{"startOffset":13584,"endOffset":13694,"count":1}],"isBlockCoverage":true},{"functionName":"updatePromiseHookMode","ranges":[{"startOffset":13720,"endOffset":14316,"count":1},{"startOffset":13899,"endOffset":13923,"count":0},{"startOffset":13929,"endOffset":13999,"count":0},{"startOffset":14024,"endOffset":14042,"count":0},{"startOffset":14273,"endOffset":14293,"count":0}],"isBlockCoverage":true},{"functionName":"disableHooks","ranges":[{"startOffset":14320,"endOffset":14633,"count":1}],"isBlockCoverage":true},{"functionName":"disablePromiseHookIfNecessary","ranges":[{"startOffset":14637,"endOffset":14757,"count":1}],"isBlockCoverage":true},{"functionName":"newAsyncId","ranges":[{"startOffset":14965,"endOffset":15037,"count":11030}],"isBlockCoverage":true},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":15041,"endOffset":15237,"count":4625},{"startOffset":15182,"endOffset":15236,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15426,"endOffset":15722,"count":6407},{"startOffset":15644,"endOffset":15686,"count":6399},{"startOffset":15686,"endOffset":15721,"count":8}],"isBlockCoverage":true},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":16055,"endOffset":16561,"count":14},{"startOffset":16167,"endOffset":16198,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16565,"endOffset":16630,"count":36772}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16634,"endOffset":16695,"count":6610}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16699,"endOffset":16756,"count":2128}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16823,"endOffset":16886,"count":2025}],"isBlockCoverage":true},{"functionName":"promiseResolveHooksExist","ranges":[{"startOffset":16890,"endOffset":16967,"count":1}],"isBlockCoverage":true},{"functionName":"emitInitScript","ranges":[{"startOffset":16973,"endOffset":17392,"count":10967},{"startOffset":17229,"endOffset":17236,"count":0},{"startOffset":17271,"endOffset":17327,"count":0}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":17398,"endOffset":17579,"count":6438},{"startOffset":17550,"endOffset":17576,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17585,"endOffset":17710,"count":2055},{"startOffset":17651,"endOffset":17676,"count":0}],"isBlockCoverage":true},{"functionName":"emitDestroyScript","ranges":[{"startOffset":17716,"endOffset":17931,"count":1992},{"startOffset":17877,"endOffset":17884,"count":0}],"isBlockCoverage":true},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":17937,"endOffset":18002,"count":173}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":18072,"endOffset":18652,"count":6438},{"startOffset":18296,"endOffset":18346,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18721,"endOffset":19347,"count":6438},{"startOffset":18839,"endOffset":18852,"count":0},{"startOffset":18933,"endOffset":19042,"count":0}],"isBlockCoverage":true},{"functionName":"executionAsyncId","ranges":[{"startOffset":19353,"endOffset":19431,"count":4421}],"isBlockCoverage":true}]},{"scriptId":"14","url":"node:internal/validators","functions":[{"functionName":"isUint32","ranges":[{"startOffset":996,"endOffset":1060,"count":649}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2278,"endOffset":2666,"count":17},{"startOffset":2400,"endOffset":2454,"count":0},{"startOffset":2496,"endOffset":2550,"count":0},{"startOffset":2595,"endOffset":2661,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2924,"endOffset":3398,"count":27},{"startOffset":3098,"endOffset":3168,"count":0},{"startOffset":3203,"endOffset":3273,"count":0},{"startOffset":3311,"endOffset":3393,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3648,"endOffset":4093,"count":1112},{"startOffset":3719,"endOffset":3785,"count":0},{"startOffset":3818,"endOffset":3884,"count":0},{"startOffset":3909,"endOffset":3912,"count":0},{"startOffset":4012,"endOffset":4090,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":4256,"endOffset":4391,"count":8496}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4604,"endOffset":5083,"count":1311},{"startOffset":4704,"endOffset":4758,"count":0},{"startOffset":4781,"endOffset":4795,"count":325},{"startOffset":4813,"endOffset":4827,"count":258},{"startOffset":4853,"endOffset":4867,"count":986},{"startOffset":4869,"endOffset":4890,"count":325},{"startOffset":4893,"endOffset":5080,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5280,"endOffset":5622,"count":20},{"startOffset":5352,"endOffset":5619,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5427,"endOffset":5489,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":5788,"endOffset":5926,"count":562},{"startOffset":5868,"endOffset":5923,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnPropertyValueOrDefault","ranges":[{"startOffset":6046,"endOffset":6231,"count":648},{"startOffset":6140,"endOffset":6187,"count":429},{"startOffset":6188,"endOffset":6207,"count":376},{"startOffset":6208,"endOffset":6227,"count":272}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6511,"endOffset":7077,"count":216},{"startOffset":6820,"endOffset":6837,"count":182},{"startOffset":6864,"endOffset":6886,"count":90},{"startOffset":6927,"endOffset":6999,"count":0},{"startOffset":7002,"endOffset":7072,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8061,"endOffset":8347,"count":1129},{"startOffset":8124,"endOffset":8189,"count":0},{"startOffset":8223,"endOffset":8344,"count":0}],"isBlockCoverage":true},{"functionName":"validateStringArray","ranges":[{"startOffset":8522,"endOffset":8696,"count":556},{"startOffset":8639,"endOffset":8693,"count":2780}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":10626,"endOffset":10968,"count":30},{"startOffset":10798,"endOffset":10817,"count":0},{"startOffset":10819,"endOffset":10965,"count":0}],"isBlockCoverage":true},{"functionName":"validatePort","ranges":[{"startOffset":11240,"endOffset":11628,"count":5},{"startOffset":11336,"endOffset":11363,"count":2},{"startOffset":11401,"endOffset":11442,"count":2},{"startOffset":11524,"endOffset":11537,"count":1},{"startOffset":11540,"endOffset":11605,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11805,"endOffset":12029,"count":198},{"startOffset":11853,"endOffset":11952,"count":0},{"startOffset":11954,"endOffset":12026,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12239,"endOffset":12358,"count":3694}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12583,"endOffset":12728,"count":3},{"startOffset":12669,"endOffset":12725,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14157,"endOffset":14371,"count":58},{"startOffset":14298,"endOffset":14368,"count":0}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/util","functions":[{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2790,"endOffset":3460,"count":33}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2891,"endOffset":2901,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2941,"endOffset":3456,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":4233,"endOffset":5265,"count":33}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4673,"endOffset":4865,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5549,"endOffset":5626,"count":3},{"startOffset":5597,"endOffset":5623,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5810,"endOffset":5944,"count":1471},{"startOffset":5881,"endOffset":5899,"count":155},{"startOffset":5901,"endOffset":5915,"count":1316},{"startOffset":5915,"endOffset":5943,"count":155}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":5948,"endOffset":7751,"count":155},{"startOffset":6004,"endOffset":6254,"count":0},{"startOffset":6260,"endOffset":6394,"count":0},{"startOffset":6400,"endOffset":6814,"count":6},{"startOffset":6436,"endOffset":6451,"count":2},{"startOffset":6451,"endOffset":6480,"count":4},{"startOffset":6480,"endOffset":6497,"count":0},{"startOffset":6497,"endOffset":6526,"count":4},{"startOffset":6526,"endOffset":6540,"count":0},{"startOffset":6540,"endOffset":6569,"count":4},{"startOffset":6569,"endOffset":6584,"count":0},{"startOffset":6584,"endOffset":6613,"count":4},{"startOffset":6613,"endOffset":6630,"count":0},{"startOffset":6630,"endOffset":6696,"count":4},{"startOffset":6696,"endOffset":6710,"count":0},{"startOffset":6710,"endOffset":6739,"count":4},{"startOffset":6739,"endOffset":6754,"count":0},{"startOffset":6754,"endOffset":6783,"count":4},{"startOffset":6783,"endOffset":6800,"count":0},{"startOffset":6800,"endOffset":6814,"count":4},{"startOffset":6820,"endOffset":7214,"count":149},{"startOffset":6857,"endOffset":6873,"count":0},{"startOffset":6902,"endOffset":6921,"count":30},{"startOffset":6923,"endOffset":6939,"count":119},{"startOffset":6939,"endOffset":6969,"count":30},{"startOffset":6969,"endOffset":6985,"count":0},{"startOffset":6985,"endOffset":7033,"count":30},{"startOffset":7035,"endOffset":7051,"count":0},{"startOffset":7051,"endOffset":7118,"count":30},{"startOffset":7118,"endOffset":7134,"count":0},{"startOffset":7134,"endOffset":7182,"count":30},{"startOffset":7184,"endOffset":7200,"count":0},{"startOffset":7200,"endOffset":7214,"count":30},{"startOffset":7220,"endOffset":7370,"count":0},{"startOffset":7376,"endOffset":7527,"count":0},{"startOffset":7533,"endOffset":7691,"count":0},{"startOffset":7697,"endOffset":7743,"count":0}],"isBlockCoverage":true},{"functionName":"cachedResult","ranges":[{"startOffset":8385,"endOffset":8548,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8438,"endOffset":8544,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":10634,"endOffset":12551,"count":9},{"startOffset":10757,"endOffset":10813,"count":1},{"startOffset":10904,"endOffset":11190,"count":0},{"startOffset":12331,"endOffset":12497,"count":22}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":11396,"endOffset":11932,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11443,"endOffset":11925,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11498,"endOffset":11873,"count":4},{"startOffset":11538,"endOffset":11581,"count":0},{"startOffset":11623,"endOffset":11643,"count":0},{"startOffset":11645,"endOffset":11815,"count":0}],"isBlockCoverage":true},{"functionName":"spliceOne","ranges":[{"startOffset":13130,"endOffset":13261,"count":75},{"startOffset":13213,"endOffset":13243,"count":7}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":14623,"endOffset":14803,"count":75}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14682,"endOffset":14799,"count":75},{"startOffset":14719,"endOffset":14726,"count":0}],"isBlockCoverage":true},{"functionName":"createDeferredPromise","ranges":[{"startOffset":15056,"endOffset":15259,"count":829}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15153,"endOffset":15212,"count":829}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":15322,"endOffset":15531,"count":1}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":15586,"endOffset":15814,"count":2}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":16336,"endOffset":17307,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16561,"endOffset":16710,"count":18}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":16818,"endOffset":17021,"count":18}],"isBlockCoverage":true},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":17311,"endOffset":18252,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17530,"endOffset":17776,"count":23},{"startOffset":17579,"endOffset":17634,"count":0},{"startOffset":17660,"endOffset":17693,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":17888,"endOffset":17962,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":18256,"endOffset":18358,"count":1}],"isBlockCoverage":false},{"functionName":"lazyDOMExceptionClass","ranges":[{"startOffset":18412,"endOffset":18511,"count":1}],"isBlockCoverage":true},{"functionName":"setOwnProperty","ranges":[{"startOffset":19340,"endOffset":19538,"count":1126}],"isBlockCoverage":true},{"functionName":"getInternalGlobal","ranges":[{"startOffset":19563,"endOffset":19845,"count":565},{"startOffset":19625,"endOffset":19816,"count":1}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeExec","ranges":[{"startOffset":19849,"endOffset":20065,"count":562}],"isBlockCoverage":true},{"functionName":"getCrossRelmRegex","ranges":[{"startOffset":20114,"endOffset":20922,"count":107},{"startOffset":20212,"endOffset":20226,"count":104},{"startOffset":20226,"endOffset":20297,"count":3},{"startOffset":20297,"endOffset":20315,"count":0},{"startOffset":20315,"endOffset":20419,"count":3},{"startOffset":20419,"endOffset":20437,"count":0},{"startOffset":20437,"endOffset":20481,"count":3},{"startOffset":20481,"endOffset":20499,"count":2},{"startOffset":20499,"endOffset":20540,"count":3},{"startOffset":20540,"endOffset":20558,"count":0},{"startOffset":20558,"endOffset":20600,"count":3},{"startOffset":20600,"endOffset":20618,"count":0},{"startOffset":20618,"endOffset":20659,"count":3},{"startOffset":20659,"endOffset":20677,"count":0},{"startOffset":20677,"endOffset":20921,"count":3}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeSymbolReplace","ranges":[{"startOffset":20926,"endOffset":21082,"count":107}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21703,"endOffset":21837,"count":3757},{"startOffset":21748,"endOffset":21813,"count":3}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":21970,"endOffset":22664,"count":1},{"startOffset":22450,"endOffset":22632,"count":0}],"isBlockCoverage":true},{"functionName":"guessHandleType","ranges":[{"startOffset":22741,"endOffset":22841,"count":6}],"isBlockCoverage":true}]},{"scriptId":"16","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":481,"endOffset":620,"count":1426},{"startOffset":539,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"getAliasesFromBinding","ranges":[{"startOffset":624,"endOffset":760,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":764,"endOffset":913,"count":4},{"startOffset":821,"endOffset":883,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":917,"endOffset":1001,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":1005,"endOffset":1278,"count":1425},{"startOffset":1129,"endOffset":1233,"count":8},{"startOffset":1233,"endOffset":1274,"count":1417}],"isBlockCoverage":true},{"functionName":"get options","ranges":[{"startOffset":1785,"endOffset":1845,"count":1}],"isBlockCoverage":true},{"functionName":"get aliases","ranges":[{"startOffset":1850,"endOffset":1907,"count":1}],"isBlockCoverage":true}]},{"scriptId":"17","url":"node:internal/util/types","functions":[{"functionName":"isTypedArray","ranges":[{"startOffset":139,"endOffset":244,"count":13}],"isBlockCoverage":true},{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":1837}],"isBlockCoverage":true}]},{"scriptId":"18","url":"node:internal/linkedlist","functions":[{"functionName":"peek","ranges":[{"startOffset":142,"endOffset":237,"count":37},{"startOffset":196,"endOffset":208,"count":6},{"startOffset":208,"endOffset":236,"count":31}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":275,"endOffset":513,"count":181}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":572,"endOffset":1037,"count":91},{"startOffset":624,"endOffset":641,"count":1},{"startOffset":643,"endOffset":668,"count":90}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":1041,"endOffset":1103,"count":33}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":717,"endOffset":909,"count":40},{"startOffset":857,"endOffset":874,"count":0}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":915,"endOffset":955,"count":38}],"isBlockCoverage":true},{"functionName":"percolateDown","ranges":[{"startOffset":961,"endOffset":1647,"count":22},{"startOffset":1182,"endOffset":1552,"count":23},{"startOffset":1250,"endOffset":1297,"count":11},{"startOffset":1308,"endOffset":1329,"count":21},{"startOffset":1416,"endOffset":1422,"count":15},{"startOffset":1422,"endOffset":1552,"count":8}],"isBlockCoverage":true},{"functionName":"percolateUp","ranges":[{"startOffset":1653,"endOffset":2159,"count":40},{"startOffset":1834,"endOffset":2064,"count":44},{"startOffset":1925,"endOffset":1931,"count":32},{"startOffset":1931,"endOffset":2064,"count":12}],"isBlockCoverage":true},{"functionName":"removeAt","ranges":[{"startOffset":2165,"endOffset":2507,"count":39},{"startOffset":2345,"endOffset":2502,"count":9},{"startOffset":2366,"endOffset":2416,"count":0},{"startOffset":2427,"endOffset":2449,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":2513,"endOffset":2676,"count":6},{"startOffset":2618,"endOffset":2625,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"node:internal/util/inspect","functions":[{"functionName":"format","ranges":[{"startOffset":74637,"endOffset":74720,"count":107}],"isBlockCoverage":true},{"functionName":"formatWithOptions","ranges":[{"startOffset":74724,"endOffset":74914,"count":28}],"isBlockCoverage":true},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":75302,"endOffset":79450,"count":135},{"startOffset":75502,"endOffset":75531,"count":106},{"startOffset":75531,"endOffset":75622,"count":29},{"startOffset":75622,"endOffset":79074,"count":129},{"startOffset":75679,"endOffset":79067,"count":54},{"startOffset":75944,"endOffset":76035,"count":0},{"startOffset":76074,"endOffset":76165,"count":0},{"startOffset":76203,"endOffset":76248,"count":0},{"startOffset":76249,"endOffset":76306,"count":0},{"startOffset":76370,"endOffset":76593,"count":0},{"startOffset":76644,"endOffset":76732,"count":0},{"startOffset":76746,"endOffset":77179,"count":0},{"startOffset":77193,"endOffset":77291,"count":0},{"startOffset":77305,"endOffset":77540,"count":0},{"startOffset":77554,"endOffset":78035,"count":0},{"startOffset":78049,"endOffset":78388,"count":0},{"startOffset":78402,"endOffset":78491,"count":0},{"startOffset":78505,"endOffset":78640,"count":0},{"startOffset":78654,"endOffset":78739,"count":0},{"startOffset":78787,"endOffset":78866,"count":28},{"startOffset":78932,"endOffset":79058,"count":0},{"startOffset":79074,"endOffset":79099,"count":29},{"startOffset":79099,"endOffset":79238,"count":28},{"startOffset":79167,"endOffset":79231,"count":0},{"startOffset":79243,"endOffset":79273,"count":29},{"startOffset":79273,"endOffset":79432,"count":2},{"startOffset":79359,"endOffset":79391,"count":0},{"startOffset":79432,"endOffset":79449,"count":29}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":167,"endOffset":322,"count":3830},{"startOffset":216,"endOffset":319,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":523,"endOffset":1008,"count":1},{"startOffset":617,"endOffset":961,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":898,"endOffset":955,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":988,"endOffset":999,"count":9}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1449,"endOffset":1457,"count":13278}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1586,"endOffset":2160,"count":9},{"startOffset":1662,"endOffset":2130,"count":6},{"startOffset":1682,"endOffset":2080,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1774,"endOffset":2072,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2386,"endOffset":3452,"count":13}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2418,"endOffset":2517,"count":9}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2533,"endOffset":2939,"count":9},{"startOffset":2788,"endOffset":2818,"count":4},{"startOffset":2826,"endOffset":2865,"count":2},{"startOffset":2873,"endOffset":2927,"count":3}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2971,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":3064,"endOffset":3265,"count":9},{"startOffset":3114,"endOffset":3144,"count":4},{"startOffset":3152,"endOffset":3191,"count":2},{"startOffset":3199,"endOffset":3253,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3339,"endOffset":3375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"23","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":3120,"endOffset":6541,"count":7},{"startOffset":3211,"endOffset":6501,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3682,"endOffset":3789,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3852,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4346,"endOffset":4885,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":5029,"endOffset":5406,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5472,"endOffset":5664,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5729,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5989,"endOffset":6198,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":6293,"endOffset":6486,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6682,"endOffset":6753,"count":232}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7253,"endOffset":7311,"count":7}],"isBlockCoverage":true},{"functionName":"checkListener","ranges":[{"startOffset":8257,"endOffset":8337,"count":1110}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8450,"endOffset":8500,"count":224}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":10200,"endOffset":10817,"count":232}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":10822,"endOffset":11401,"count":1},{"startOffset":10912,"endOffset":11344,"count":0},{"startOffset":11350,"endOffset":11398,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11121,"endOffset":11335,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12240,"endOffset":12359,"count":67}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12364,"endOffset":12517,"count":135},{"startOffset":12484,"endOffset":12516,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":13716,"endOffset":16098,"count":2196}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":16103,"endOffset":18052,"count":728}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":18238,"endOffset":18332,"count":726}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":18631,"endOffset":18736,"count":2}],"isBlockCoverage":true},{"functionName":"onceWrapper","ranges":[{"startOffset":18741,"endOffset":19013,"count":10},{"startOffset":18909,"endOffset":18948,"count":8},{"startOffset":18948,"endOffset":19010,"count":2}],"isBlockCoverage":true},{"functionName":"_onceWrap","ranges":[{"startOffset":19017,"endOffset":19264,"count":15}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":19463,"endOffset":19594,"count":15}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":20228,"endOffset":21571,"count":367},{"startOffset":20382,"endOffset":20394,"count":0},{"startOffset":20471,"endOffset":20483,"count":10},{"startOffset":20483,"endOffset":20515,"count":357},{"startOffset":20515,"endOffset":20544,"count":117},{"startOffset":20546,"endOffset":20815,"count":242},{"startOffset":20599,"endOffset":20634,"count":73},{"startOffset":20634,"endOffset":20806,"count":169},{"startOffset":20734,"endOffset":20795,"count":2},{"startOffset":20815,"endOffset":21542,"count":115},{"startOffset":20853,"endOffset":21542,"count":87},{"startOffset":20937,"endOffset":21081,"count":116},{"startOffset":20975,"endOffset":21007,"count":37},{"startOffset":21009,"endOffset":21070,"count":81},{"startOffset":21122,"endOffset":21134,"count":6},{"startOffset":21134,"endOffset":21177,"count":81},{"startOffset":21177,"endOffset":21190,"count":6},{"startOffset":21190,"endOffset":21356,"count":75},{"startOffset":21260,"endOffset":21307,"count":1},{"startOffset":21356,"endOffset":21402,"count":81},{"startOffset":21402,"endOffset":21425,"count":72},{"startOffset":21425,"endOffset":21489,"count":81},{"startOffset":21489,"endOffset":21533,"count":0},{"startOffset":21542,"endOffset":21570,"count":351}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":21903,"endOffset":23275,"count":11},{"startOffset":22017,"endOffset":22029,"count":0},{"startOffset":22179,"endOffset":22272,"count":0},{"startOffset":22310,"endOffset":22463,"count":0},{"startOffset":22494,"endOffset":23274,"count":0}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":24932,"endOffset":25667,"count":496},{"startOffset":25121,"endOffset":25273,"count":419},{"startOffset":25152,"endOffset":25247,"count":0},{"startOffset":25273,"endOffset":25644,"count":77},{"startOffset":25309,"endOffset":25644,"count":0},{"startOffset":25649,"endOffset":25666,"count":77}],"isBlockCoverage":true},{"functionName":"arrayClone","ranges":[{"startOffset":25930,"endOffset":26414,"count":13},{"startOffset":26106,"endOffset":26138,"count":10},{"startOffset":26144,"endOffset":26184,"count":2},{"startOffset":26190,"endOffset":26238,"count":1},{"startOffset":26244,"endOffset":26300,"count":0},{"startOffset":26306,"endOffset":26370,"count":0},{"startOffset":26375,"endOffset":26413,"count":0}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":28557,"endOffset":30316,"count":39},{"startOffset":28716,"endOffset":28725,"count":0},{"startOffset":28732,"endOffset":28791,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28814,"endOffset":30311,"count":39},{"startOffset":29677,"endOffset":29876,"count":0},{"startOffset":30152,"endOffset":30306,"count":0}],"isBlockCoverage":true},{"functionName":"errorListener","ranges":[{"startOffset":28864,"endOffset":29062,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":29086,"endOffset":29368,"count":0}],"isBlockCoverage":false},{"functionName":"abortListener","ranges":[{"startOffset":29882,"endOffset":30126,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticAddListener","ranges":[{"startOffset":30906,"endOffset":31350,"count":39},{"startOffset":31021,"endOffset":31144,"count":0},{"startOffset":31262,"endOffset":31347,"count":0}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:buffer","functions":[{"functionName":"validateOffset","ranges":[{"startOffset":3375,"endOffset":3460,"count":17}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":4225,"endOffset":4389,"count":4}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4408,"endOffset":4536,"count":682}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5548,"endOffset":5774,"count":104},{"startOffset":5728,"endOffset":5742,"count":0},{"startOffset":5749,"endOffset":5773,"count":0}],"isBlockCoverage":true},{"functionName":"_copy","ranges":[{"startOffset":5778,"endOffset":6944,"count":104},{"startOffset":5883,"endOffset":5958,"count":0},{"startOffset":5994,"endOffset":6069,"count":0},{"startOffset":6106,"endOffset":6134,"count":0},{"startOffset":6221,"endOffset":6284,"count":0},{"startOffset":6354,"endOffset":6563,"count":0},{"startOffset":6636,"endOffset":6781,"count":0},{"startOffset":6820,"endOffset":6847,"count":102},{"startOffset":6854,"endOffset":6863,"count":5},{"startOffset":6863,"endOffset":6943,"count":99}],"isBlockCoverage":true},{"functionName":"_copyActual","ranges":[{"startOffset":6948,"endOffset":7494,"count":116},{"startOffset":7091,"endOffset":7145,"count":0},{"startOffset":7263,"endOffset":7278,"count":0},{"startOffset":7341,"endOffset":7417,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8543,"endOffset":8571,"count":1}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":8840,"endOffset":9837,"count":493}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11847,"endOffset":11909,"count":258}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":12018,"endOffset":12270,"count":36},{"startOffset":12104,"endOffset":12117,"count":0},{"startOffset":12118,"endOffset":12129,"count":0},{"startOffset":12131,"endOffset":12235,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":12455,"endOffset":12533,"count":222}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":13185,"endOffset":13530,"count":222},{"startOffset":13229,"endOffset":13265,"count":0},{"startOffset":13355,"endOffset":13368,"count":1},{"startOffset":13491,"endOffset":13529,"count":0}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":13534,"endOffset":14097,"count":455}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":14101,"endOffset":14569,"count":461}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":14573,"endOffset":15299,"count":26},{"startOffset":14721,"endOffset":14821,"count":0},{"startOffset":14903,"endOffset":14948,"count":0},{"startOffset":15011,"endOffset":15243,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayLike","ranges":[{"startOffset":15303,"endOffset":15710,"count":6},{"startOffset":15362,"endOffset":15386,"count":0},{"startOffset":15488,"endOffset":15501,"count":0},{"startOffset":15676,"endOffset":15709,"count":0}],"isBlockCoverage":true},{"functionName":"fromObject","ranges":[{"startOffset":15714,"endOffset":16031,"count":6},{"startOffset":15773,"endOffset":15804,"count":0},{"startOffset":15849,"endOffset":15889,"count":0},{"startOffset":15926,"endOffset":15983,"count":0},{"startOffset":15985,"endOffset":16028,"count":0}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":16074,"endOffset":16130,"count":683}],"isBlockCoverage":true},{"functionName":"isEncoding","ranges":[{"startOffset":16516,"endOffset":16670,"count":1410}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":16739,"endOffset":17925,"count":17},{"startOffset":16836,"endOffset":16860,"count":0},{"startOffset":16892,"endOffset":17040,"count":0},{"startOffset":17254,"endOffset":17491,"count":0},{"startOffset":17648,"endOffset":17902,"count":0}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":17930,"endOffset":18207,"count":40},{"startOffset":18055,"endOffset":18063,"count":1},{"startOffset":18141,"endOffset":18149,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18349,"endOffset":18413,"count":379}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18427,"endOffset":18473,"count":463}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19458,"endOffset":19483,"count":17}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19497,"endOffset":19563,"count":17}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":19577,"endOffset":19625,"count":642}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19839,"endOffset":19864,"count":3}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19878,"endOffset":19943,"count":3}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":19957,"endOffset":20004,"count":2}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":20339,"endOffset":20390,"count":40}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":20404,"endOffset":20470,"count":39}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":20484,"endOffset":20532,"count":26}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":21418,"endOffset":21449,"count":16}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":21463,"endOffset":21526,"count":16}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":21540,"endOffset":21585,"count":11}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":21827,"endOffset":23699,"count":1479},{"startOffset":21917,"endOffset":22222,"count":722},{"startOffset":21981,"endOffset":22222,"count":0},{"startOffset":22228,"endOffset":22655,"count":5},{"startOffset":22269,"endOffset":22293,"count":0},{"startOffset":22352,"endOffset":22655,"count":0},{"startOffset":22661,"endOffset":22819,"count":0},{"startOffset":22825,"endOffset":22985,"count":0},{"startOffset":22991,"endOffset":23380,"count":725},{"startOffset":23032,"endOffset":23056,"count":105},{"startOffset":23067,"endOffset":23093,"count":659},{"startOffset":23093,"endOffset":23154,"count":66},{"startOffset":23154,"endOffset":23268,"count":0},{"startOffset":23279,"endOffset":23380,"count":0},{"startOffset":23386,"endOffset":23521,"count":27},{"startOffset":23424,"endOffset":23473,"count":0},{"startOffset":23507,"endOffset":23521,"count":0},{"startOffset":23527,"endOffset":23691,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":23703,"endOffset":24231,"count":56},{"startOffset":23778,"endOffset":23999,"count":28},{"startOffset":23815,"endOffset":23842,"count":0},{"startOffset":23885,"endOffset":23999,"count":0},{"startOffset":23999,"endOffset":24055,"count":28},{"startOffset":24055,"endOffset":24064,"count":0},{"startOffset":24064,"endOffset":24084,"count":28},{"startOffset":24084,"endOffset":24194,"count":0},{"startOffset":24194,"endOffset":24230,"count":28}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":24398,"endOffset":24496,"count":2},{"startOffset":24449,"endOffset":24466,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":24599,"endOffset":24701,"count":2},{"startOffset":24650,"endOffset":24667,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":24738,"endOffset":24873,"count":104}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":25160,"endOffset":25769,"count":1464},{"startOffset":25233,"endOffset":25283,"count":313},{"startOffset":25283,"endOffset":25340,"count":1151},{"startOffset":25340,"endOffset":25350,"count":0},{"startOffset":25350,"endOffset":25417,"count":1151},{"startOffset":25382,"endOffset":25392,"count":2},{"startOffset":25392,"endOffset":25417,"count":1149},{"startOffset":25417,"endOffset":25445,"count":1149},{"startOffset":25445,"endOffset":25457,"count":457},{"startOffset":25464,"endOffset":25474,"count":692},{"startOffset":25474,"endOffset":25497,"count":457},{"startOffset":25497,"endOffset":25526,"count":1149},{"startOffset":25526,"endOffset":25536,"count":5},{"startOffset":25536,"endOffset":25575,"count":1144},{"startOffset":25575,"endOffset":25609,"count":0},{"startOffset":25609,"endOffset":25684,"count":1144},{"startOffset":25684,"endOffset":25725,"count":0},{"startOffset":25725,"endOffset":25768,"count":1144}],"isBlockCoverage":true},{"functionName":"adjustOffset","ranges":[{"startOffset":34662,"endOffset":35111,"count":52},{"startOffset":34906,"endOffset":34927,"count":10},{"startOffset":34927,"endOffset":34947,"count":42},{"startOffset":34947,"endOffset":35013,"count":0},{"startOffset":35013,"endOffset":35038,"count":42},{"startOffset":35038,"endOffset":35064,"count":34},{"startOffset":35064,"endOffset":35095,"count":8},{"startOffset":35095,"endOffset":35098,"count":0},{"startOffset":35099,"endOffset":35107,"count":8}],"isBlockCoverage":true},{"functionName":"subarray","ranges":[{"startOffset":35143,"endOffset":35452,"count":26},{"startOffset":35310,"endOffset":35321,"count":0},{"startOffset":35370,"endOffset":35373,"count":0}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":35482,"endOffset":35550,"count":26}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":42301,"endOffset":42336,"count":10}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:internal/buffer","functions":[{"functionName":"checkBounds","ranges":[{"startOffset":1229,"endOffset":1449,"count":59},{"startOffset":1395,"endOffset":1446,"count":0}],"isBlockCoverage":true},{"functionName":"checkInt","ranges":[{"startOffset":1453,"endOffset":2092,"count":57},{"startOffset":1550,"endOffset":2048,"count":0}],"isBlockCoverage":true},{"functionName":"readUInt32LE","ranges":[{"startOffset":5956,"endOffset":6293,"count":156},{"startOffset":6149,"endOffset":6186,"count":0}],"isBlockCoverage":true},{"functionName":"readUInt16LE","ranges":[{"startOffset":6597,"endOffset":6865,"count":325},{"startOffset":6790,"endOffset":6827,"count":0}],"isBlockCoverage":true},{"functionName":"readInt16LE","ranges":[{"startOffset":11429,"endOffset":11744,"count":21},{"startOffset":11621,"endOffset":11658,"count":0}],"isBlockCoverage":true},{"functionName":"writeU_Int32LE","ranges":[{"startOffset":19496,"endOffset":19815,"count":16}],"isBlockCoverage":true},{"functionName":"writeUInt32LE","ranges":[{"startOffset":19819,"endOffset":19927,"count":16}],"isBlockCoverage":true},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":20204,"endOffset":20407,"count":41}],"isBlockCoverage":true},{"functionName":"writeUInt16LE","ranges":[{"startOffset":20411,"endOffset":20515,"count":41}],"isBlockCoverage":true},{"functionName":"writeU_Int8","ranges":[{"startOffset":20519,"endOffset":20943,"count":327},{"startOffset":20734,"endOffset":20816,"count":0},{"startOffset":20856,"endOffset":20892,"count":0}],"isBlockCoverage":true},{"functionName":"writeUInt8","ranges":[{"startOffset":20947,"endOffset":21043,"count":327}],"isBlockCoverage":true},{"functionName":"writeDoubleForwards","ranges":[{"startOffset":25482,"endOffset":25962,"count":2}],"isBlockCoverage":true},{"functionName":"FastBuffer","ranges":[{"startOffset":27324,"endOffset":27426,"count":1382}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":30813,"endOffset":31066,"count":4}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":31351,"endOffset":31494,"count":4}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":31755,"endOffset":31829,"count":1}],"isBlockCoverage":true}]},{"scriptId":"26","url":"node:internal/worker/js_transferable","functions":[{"functionName":"makeTransferable","ranges":[{"startOffset":1354,"endOffset":2023,"count":178},{"startOffset":1485,"endOffset":1496,"count":0},{"startOffset":1735,"endOffset":1901,"count":0}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/process/per_thread","functions":[{"functionName":"refreshHrtimeBuffer","ranges":[{"startOffset":1451,"endOffset":1927,"count":1}],"isBlockCoverage":false},{"functionName":"hrtime","ranges":[{"startOffset":1981,"endOffset":2502,"count":59},{"startOffset":2055,"endOffset":2415,"count":0}],"isBlockCoverage":true},{"functionName":"hrtimeBigInt","ranges":[{"startOffset":2506,"endOffset":2590,"count":79}],"isBlockCoverage":true},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":7966,"endOffset":12193,"count":1},{"startOffset":8262,"endOffset":8561,"count":157},{"startOffset":8315,"endOffset":8556,"count":124},{"startOffset":8414,"endOffset":8549,"count":62},{"startOffset":9041,"endOffset":9472,"count":23},{"startOffset":9096,"endOffset":9467,"count":11},{"startOffset":9188,"endOffset":9257,"count":2},{"startOffset":9324,"endOffset":9393,"count":0}],"isBlockCoverage":true},{"functionName":"isAccepted","ranges":[{"startOffset":8567,"endOffset":8988,"count":29},{"startOffset":8638,"endOffset":8652,"count":28},{"startOffset":8654,"endOffset":8666,"count":2},{"startOffset":8666,"endOffset":8745,"count":27},{"startOffset":8745,"endOffset":8918,"count":2},{"startOffset":8797,"endOffset":8844,"count":1},{"startOffset":8918,"endOffset":8987,"count":25}],"isBlockCoverage":true},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9509,"endOffset":9571,"count":197}],"isBlockCoverage":true},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":9889,"endOffset":9968,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":9976,"endOffset":10048,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":10056,"endOffset":10132,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10140,"endOffset":10194,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":10202,"endOffset":11034,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":11042,"endOffset":11211,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":11219,"endOffset":11401,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":11409,"endOffset":11472,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11480,"endOffset":11647,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12389,"endOffset":12729,"count":1},{"startOffset":12470,"endOffset":12651,"count":0},{"startOffset":12683,"endOffset":12726,"count":0}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1109,"endOffset":1197,"count":674},{"startOffset":1186,"endOffset":1189,"count":514},{"startOffset":1190,"endOffset":1193,"count":160}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1511,"endOffset":2522,"count":160},{"startOffset":1569,"endOffset":2399,"count":418},{"startOffset":1616,"endOffset":2372,"count":1825},{"startOffset":1823,"endOffset":1858,"count":191},{"startOffset":1858,"endOffset":2241,"count":1634},{"startOffset":1948,"endOffset":1981,"count":781},{"startOffset":1995,"endOffset":2037,"count":814},{"startOffset":2051,"endOffset":2102,"count":39},{"startOffset":2116,"endOffset":2176,"count":0},{"startOffset":2190,"endOffset":2217,"count":0},{"startOffset":2306,"endOffset":2327,"count":1760}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2670,"endOffset":3575,"count":1825},{"startOffset":2775,"endOffset":2782,"count":0},{"startOffset":2834,"endOffset":2848,"count":191},{"startOffset":2854,"endOffset":2891,"count":781},{"startOffset":2897,"endOffset":2948,"count":814},{"startOffset":2954,"endOffset":3019,"count":39},{"startOffset":3025,"endOffset":3172,"count":0},{"startOffset":3204,"endOffset":3230,"count":514},{"startOffset":3485,"endOffset":3545,"count":1763}],"isBlockCoverage":true},{"functionName":"runMicrotask","ranges":[{"startOffset":3579,"endOffset":3764,"count":103}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3629,"endOffset":3759,"count":103}],"isBlockCoverage":true},{"functionName":"queueMicrotask","ranges":[{"startOffset":3840,"endOffset":4139,"count":103}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2232,"endOffset":2324,"count":241},{"startOffset":2313,"endOffset":2316,"count":81},{"startOffset":2317,"endOffset":2320,"count":160}],"isBlockCoverage":true},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":2557,"endOffset":3106,"count":1},{"startOffset":2716,"endOffset":2770,"count":0},{"startOffset":2776,"endOffset":2834,"count":0},{"startOffset":2840,"endOffset":2896,"count":0},{"startOffset":2902,"endOffset":2956,"count":0},{"startOffset":2962,"endOffset":3043,"count":0}],"isBlockCoverage":true},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":3110,"endOffset":3697,"count":162},{"startOffset":3211,"endOffset":3278,"count":1},{"startOffset":3303,"endOffset":3394,"count":81},{"startOffset":3400,"endOffset":3485,"count":81},{"startOffset":3491,"endOffset":3588,"count":0},{"startOffset":3594,"endOffset":3689,"count":0}],"isBlockCoverage":true},{"functionName":"unhandledRejection","ranges":[{"startOffset":4141,"endOffset":4719,"count":81}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":4204,"endOffset":4403,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":4723,"endOffset":5573,"count":81},{"startOffset":4930,"endOffset":5449,"count":0},{"startOffset":5496,"endOffset":5534,"count":0},{"startOffset":5541,"endOffset":5570,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6892,"endOffset":10162,"count":160},{"startOffset":7053,"endOffset":7237,"count":0},{"startOffset":7305,"endOffset":10063,"count":81},{"startOffset":7500,"endOffset":8791,"count":0},{"startOffset":8801,"endOffset":8911,"count":0},{"startOffset":8921,"endOffset":9090,"count":0},{"startOffset":9100,"endOffset":9545,"count":0},{"startOffset":9555,"endOffset":9840,"count":0},{"startOffset":9857,"endOffset":10063,"count":0}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3143,"endOffset":3197,"count":4486}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3203,"endOffset":3272,"count":1825}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3278,"endOffset":3368,"count":1825}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3374,"endOffset":3596,"count":2243},{"startOffset":3470,"endOffset":3482,"count":418},{"startOffset":3482,"endOffset":3595,"count":1825}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3724,"endOffset":3773,"count":2243}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3779,"endOffset":4050,"count":1825},{"startOffset":3821,"endOffset":4018,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":4056,"endOffset":4320,"count":2243},{"startOffset":4151,"endOffset":4172,"count":932},{"startOffset":4174,"endOffset":4297,"count":0}],"isBlockCoverage":true}]},{"scriptId":"31","url":"node:async_hooks","functions":[{"functionName":"AsyncHook","ranges":[{"startOffset":1612,"endOffset":2463,"count":1}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":2469,"endOffset":3745,"count":1},{"startOffset":2912,"endOffset":2924,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3751,"endOffset":4557,"count":1},{"startOffset":3921,"endOffset":3933,"count":0}],"isBlockCoverage":true},{"functionName":"createHook","ranges":[{"startOffset":4566,"endOffset":4625,"count":1}],"isBlockCoverage":false},{"functionName":"AsyncResource","ranges":[{"startOffset":4726,"endOffset":5958,"count":173},{"startOffset":5008,"endOffset":5029,"count":0},{"startOffset":5267,"endOffset":5348,"count":0},{"startOffset":5506,"endOffset":5675,"count":172},{"startOffset":5561,"endOffset":5612,"count":0},{"startOffset":5709,"endOffset":5731,"count":70},{"startOffset":5733,"endOffset":5953,"count":69}],"isBlockCoverage":true},{"functionName":"runInAsyncScope","ranges":[{"startOffset":5964,"endOffset":6293,"count":173}],"isBlockCoverage":true},{"functionName":"emitDestroy","ranges":[{"startOffset":6299,"endOffset":6480,"count":103},{"startOffset":6361,"endOffset":6416,"count":0}],"isBlockCoverage":true}]},{"scriptId":"32","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1877,"endOffset":1904,"count":1}],"isBlockCoverage":true},{"functionName":"unenroll","ranges":[{"startOffset":2420,"endOffset":3639,"count":73},{"startOffset":2475,"endOffset":2482,"count":0},{"startOffset":2547,"endOffset":2593,"count":0},{"startOffset":3170,"endOffset":3528,"count":33}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":4368,"endOffset":5053,"count":48},{"startOffset":4541,"endOffset":4548,"count":0},{"startOffset":4554,"endOffset":4575,"count":46},{"startOffset":4581,"endOffset":4624,"count":0},{"startOffset":4630,"endOffset":4679,"count":0},{"startOffset":4685,"endOffset":4912,"count":2},{"startOffset":4774,"endOffset":4898,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":5390,"endOffset":5769,"count":123},{"startOffset":5434,"endOffset":5453,"count":112},{"startOffset":5455,"endOffset":5526,"count":73},{"startOffset":5526,"endOffset":5588,"count":50},{"startOffset":5590,"endOffset":5766,"count":0}],"isBlockCoverage":true},{"functionName":"setInterval","ranges":[{"startOffset":6018,"endOffset":6705,"count":1},{"startOffset":6193,"endOffset":6200,"count":0},{"startOffset":6233,"endOffset":6276,"count":0},{"startOffset":6282,"endOffset":6331,"count":0},{"startOffset":6337,"endOffset":6564,"count":0}],"isBlockCoverage":true},{"functionName":"clearInterval","ranges":[{"startOffset":6809,"endOffset":7112,"count":1}],"isBlockCoverage":true},{"functionName":"setImmediate","ranges":[{"startOffset":7786,"endOffset":8363,"count":39},{"startOffset":7954,"endOffset":7975,"count":0},{"startOffset":8030,"endOffset":8079,"count":0},{"startOffset":8085,"endOffset":8312,"count":0}],"isBlockCoverage":true},{"functionName":"clearImmediate","ranges":[{"startOffset":8695,"endOffset":9265,"count":8},{"startOffset":8750,"endOffset":8773,"count":0},{"startOffset":8787,"endOffset":8912,"count":0},{"startOffset":8914,"endOffset":9133,"count":0},{"startOffset":9135,"endOffset":9264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":713,"endOffset":1052,"count":1},{"startOffset":777,"endOffset":1049,"count":0}],"isBlockCoverage":true}]},{"scriptId":"34","url":"node:path","functions":[{"functionName":"isPathSeparator","ranges":[{"startOffset":1770,"endOffset":1876,"count":1062400},{"startOffset":1841,"endOffset":1872,"count":1059809}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1963,"endOffset":2136,"count":28045},{"startOffset":2036,"endOffset":2063,"count":26116},{"startOffset":2065,"endOffset":2132,"count":6687},{"startOffset":2104,"endOffset":2131,"count":4758}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2202,"endOffset":4212,"count":13074},{"startOffset":2425,"endOffset":4194,"count":986763},{"startOffset":2460,"endOffset":2502,"count":973689},{"startOffset":2502,"endOffset":2597,"count":13074},{"startOffset":2547,"endOffset":2553,"count":12476},{"startOffset":2553,"endOffset":2597,"count":598},{"startOffset":2597,"endOffset":2632,"count":974287},{"startOffset":2632,"endOffset":4090,"count":120288},{"startOffset":2665,"endOffset":2678,"count":116492},{"startOffset":2680,"endOffset":2707,"count":4769},{"startOffset":2707,"endOffset":4044,"count":115519},{"startOffset":2729,"endOffset":3793,"count":320},{"startOffset":2759,"endOffset":2785,"count":191},{"startOffset":2786,"endOffset":2861,"count":30},{"startOffset":2862,"endOffset":2937,"count":30},{"startOffset":2939,"endOffset":3648,"count":290},{"startOffset":2972,"endOffset":3462,"count":161},{"startOffset":3094,"endOffset":3173,"count":0},{"startOffset":3462,"endOffset":3637,"count":129},{"startOffset":3490,"endOffset":3637,"count":0},{"startOffset":3648,"endOffset":3784,"count":159},{"startOffset":3713,"endOffset":3731,"count":30},{"startOffset":3732,"endOffset":3738,"count":129},{"startOffset":3793,"endOffset":4044,"count":115199},{"startOffset":3841,"endOffset":3910,"count":102817},{"startOffset":3910,"endOffset":3987,"count":12382},{"startOffset":4044,"endOffset":4090,"count":120127},{"startOffset":4090,"endOffset":4189,"count":853999},{"startOffset":4118,"endOffset":4132,"count":9870},{"startOffset":4134,"endOffset":4157,"count":1620},{"startOffset":4157,"endOffset":4189,"count":852379}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4964,"endOffset":9889,"count":12475},{"startOffset":5127,"endOffset":9422,"count":17634},{"startOffset":5165,"endOffset":5345,"count":17630},{"startOffset":5303,"endOffset":5336,"count":0},{"startOffset":5345,"endOffset":6310,"count":4},{"startOffset":5425,"endOffset":6310,"count":0},{"startOffset":6534,"endOffset":6699,"count":0},{"startOffset":6732,"endOffset":8254,"count":0},{"startOffset":8290,"endOffset":8361,"count":16995},{"startOffset":8363,"endOffset":8719,"count":12475},{"startOffset":8752,"endOffset":9080,"count":12475},{"startOffset":8794,"endOffset":9017,"count":0},{"startOffset":9112,"endOffset":9180,"count":0},{"startOffset":9346,"endOffset":9374,"count":12475},{"startOffset":9376,"endOffset":9406,"count":12475},{"startOffset":9833,"endOffset":9883,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":9961,"endOffset":13124,"count":599},{"startOffset":10071,"endOffset":10082,"count":0},{"startOffset":10255,"endOffset":10412,"count":0},{"startOffset":10445,"endOffset":12177,"count":0},{"startOffset":12213,"endOffset":12281,"count":6},{"startOffset":12283,"endOffset":12619,"count":6},{"startOffset":12773,"endOffset":12784,"count":0},{"startOffset":12813,"endOffset":12827,"count":1},{"startOffset":12836,"endOffset":12847,"count":1},{"startOffset":12951,"endOffset":12964,"count":1},{"startOffset":12996,"endOffset":13051,"count":593},{"startOffset":13023,"endOffset":13036,"count":0},{"startOffset":13051,"endOffset":13097,"count":6},{"startOffset":13098,"endOffset":13118,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":13197,"endOffset":13626,"count":1036},{"startOffset":13308,"endOffset":13321,"count":0},{"startOffset":13462,"endOffset":13497,"count":1029},{"startOffset":13498,"endOffset":13557,"count":332},{"startOffset":13558,"endOffset":13619,"count":94}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":13701,"endOffset":15911,"count":6},{"startOffset":13752,"endOffset":13763,"count":0},{"startOffset":13846,"endOffset":14075,"count":12},{"startOffset":13987,"endOffset":14059,"count":6},{"startOffset":14116,"endOffset":14127,"count":0},{"startOffset":15016,"endOffset":15479,"count":0},{"startOffset":15690,"endOffset":15723,"count":0},{"startOffset":15803,"endOffset":15860,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":20173,"endOffset":21304,"count":5842},{"startOffset":20313,"endOffset":20325,"count":0},{"startOffset":20419,"endOffset":20431,"count":0},{"startOffset":20511,"endOffset":20930,"count":0},{"startOffset":21279,"endOffset":21303,"count":0}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":21376,"endOffset":24011,"count":2378},{"startOffset":21484,"endOffset":21495,"count":0},{"startOffset":21616,"endOffset":21780,"count":0},{"startOffset":21843,"endOffset":23263,"count":0},{"startOffset":23464,"endOffset":23467,"count":0},{"startOffset":23597,"endOffset":23854,"count":30453},{"startOffset":23663,"endOffset":23752,"count":2378},{"startOffset":23752,"endOffset":23847,"count":28075},{"startOffset":23878,"endOffset":23958,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":24114,"endOffset":26969,"count":563},{"startOffset":24177,"endOffset":24207,"count":0},{"startOffset":24705,"endOffset":24725,"count":0},{"startOffset":24726,"endOffset":24757,"count":0},{"startOffset":24759,"endOffset":26325,"count":0},{"startOffset":26378,"endOffset":26871,"count":7375},{"startOffset":26444,"endOffset":26675,"count":563},{"startOffset":26675,"endOffset":26864,"count":6812},{"startOffset":26697,"endOffset":26864,"count":563},{"startOffset":26902,"endOffset":26912,"count":0}],"isBlockCoverage":true}]},{"scriptId":"37","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":371,"endOffset":398,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1643,"endOffset":1708,"count":86}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1712,"endOffset":2272,"count":1},{"startOffset":1824,"endOffset":1984,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2276,"endOffset":2892,"count":86},{"startOffset":2583,"endOffset":2618,"count":0},{"startOffset":2674,"endOffset":2812,"count":0},{"startOffset":2814,"endOffset":2891,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3355,"endOffset":5189,"count":86},{"startOffset":3559,"endOffset":3579,"count":0},{"startOffset":3582,"endOffset":3589,"count":0},{"startOffset":3727,"endOffset":3855,"count":0},{"startOffset":3893,"endOffset":3961,"count":0},{"startOffset":4053,"endOffset":4072,"count":0},{"startOffset":4252,"endOffset":4266,"count":0},{"startOffset":4294,"endOffset":4488,"count":0},{"startOffset":4517,"endOffset":4795,"count":0},{"startOffset":5125,"endOffset":5181,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5740,"endOffset":6276,"count":86},{"startOffset":5881,"endOffset":5957,"count":0},{"startOffset":5965,"endOffset":6047,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6471,"endOffset":6823,"count":86}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6777,"endOffset":6818,"count":16864}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":6827,"endOffset":7117,"count":86},{"startOffset":7061,"endOffset":7114,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8095,"endOffset":8431,"count":86}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8174,"endOffset":8283,"count":86}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3623,"endOffset":4453,"count":527}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4221,"endOffset":4288,"count":134}],"isBlockCoverage":true},{"functionName":"get hasSearch","ranges":[{"startOffset":4294,"endOffset":4371,"count":235}],"isBlockCoverage":true},{"functionName":"get hasHash","ranges":[{"startOffset":4377,"endOffset":4450,"count":196}],"isBlockCoverage":true},{"functionName":"isURL","ranges":[{"startOffset":22012,"endOffset":22112,"count":1467},{"startOffset":22064,"endOffset":22080,"count":19},{"startOffset":22081,"endOffset":22107,"count":19}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":22116,"endOffset":30176,"count":527}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":22183,"endOffset":22590,"count":527},{"startOffset":22255,"endOffset":22305,"count":0},{"startOffset":22399,"endOffset":22432,"count":210},{"startOffset":22502,"endOffset":22551,"count":86},{"startOffset":22551,"endOffset":22589,"count":441}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22596,"endOffset":23341,"count":0}],"isBlockCoverage":false},{"functionName":"#updateContext","ranges":[{"startOffset":23347,"endOffset":24286,"count":546},{"startOffset":24088,"endOffset":24281,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":24292,"endOffset":24341,"count":57}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":24347,"endOffset":24396,"count":277}],"isBlockCoverage":true},{"functionName":"set href","ranges":[{"startOffset":24402,"endOffset":24616,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":24637,"endOffset":25535,"count":166},{"startOffset":24928,"endOffset":24962,"count":0},{"startOffset":25012,"endOffset":25534,"count":0}],"isBlockCoverage":true},{"functionName":"get protocol","ranges":[{"startOffset":25541,"endOffset":25647,"count":381}],"isBlockCoverage":true},{"functionName":"set protocol","ranges":[{"startOffset":25653,"endOffset":25831,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":25837,"endOffset":26069,"count":39},{"startOffset":25924,"endOffset":26048,"count":0}],"isBlockCoverage":true},{"functionName":"set username","ranges":[{"startOffset":26075,"endOffset":26253,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":26259,"endOffset":26487,"count":39},{"startOffset":26344,"endOffset":26466,"count":0}],"isBlockCoverage":true},{"functionName":"set password","ranges":[{"startOffset":26493,"endOffset":26671,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":26677,"endOffset":27119,"count":168},{"startOffset":26783,"endOffset":26810,"count":0},{"startOffset":26994,"endOffset":27020,"count":0}],"isBlockCoverage":true},{"functionName":"set host","ranges":[{"startOffset":27125,"endOffset":27295,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":27301,"endOffset":27590,"count":194},{"startOffset":27470,"endOffset":27497,"count":0}],"isBlockCoverage":true},{"functionName":"set hostname","ranges":[{"startOffset":27596,"endOffset":27774,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":27780,"endOffset":27893,"count":134},{"startOffset":27872,"endOffset":27892,"count":0}],"isBlockCoverage":true},{"functionName":"set port","ranges":[{"startOffset":27899,"endOffset":28069,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":28075,"endOffset":28375,"count":192},{"startOffset":28143,"endOffset":28195,"count":0},{"startOffset":28228,"endOffset":28278,"count":0}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":28381,"endOffset":28559,"count":105}],"isBlockCoverage":true},{"functionName":"get search","ranges":[{"startOffset":28565,"endOffset":28906,"count":43},{"startOffset":28629,"endOffset":28905,"count":0}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":28912,"endOffset":29094,"count":0}],"isBlockCoverage":false},{"functionName":"get searchParams","ranges":[{"startOffset":29115,"endOffset":29421,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":29427,"endOffset":29647,"count":4},{"startOffset":29472,"endOffset":29534,"count":0},{"startOffset":29562,"endOffset":29646,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":29653,"endOffset":29823,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":29829,"endOffset":29876,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":29889,"endOffset":30173,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":38047,"endOffset":39577,"count":105},{"startOffset":38194,"endOffset":38573,"count":10492},{"startOffset":38226,"endOffset":38568,"count":0},{"startOffset":38731,"endOffset":39177,"count":0},{"startOffset":39461,"endOffset":39529,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":40122,"endOffset":40469,"count":105},{"startOffset":40191,"endOffset":40212,"count":86},{"startOffset":40212,"endOffset":40308,"count":19},{"startOffset":40244,"endOffset":40308,"count":0},{"startOffset":40348,"endOffset":40389,"count":0},{"startOffset":40438,"endOffset":40465,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":41248,"endOffset":42007,"count":105},{"startOffset":41337,"endOffset":41408,"count":0},{"startOffset":41484,"endOffset":41526,"count":0},{"startOffset":41533,"endOffset":41606,"count":0},{"startOffset":41660,"endOffset":41731,"count":0},{"startOffset":41785,"endOffset":41863,"count":0},{"startOffset":41917,"endOffset":41984,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":42011,"endOffset":43410,"count":105},{"startOffset":42149,"endOffset":42885,"count":0},{"startOffset":43255,"endOffset":43309,"count":0},{"startOffset":43318,"endOffset":43334,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":43414,"endOffset":43555,"count":1448},{"startOffset":43512,"endOffset":43554,"count":0}],"isBlockCoverage":true}]},{"scriptId":"41","url":"node:internal/bootstrap/web/exposed-wildcard","functions":[{"functionName":"","ranges":[{"startOffset":932,"endOffset":1165,"count":1}],"isBlockCoverage":true}]},{"scriptId":"43","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1957,"endOffset":2060,"count":28}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":6036,"endOffset":6706,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6253,"endOffset":6351,"count":84},{"startOffset":6287,"endOffset":6310,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6364,"endOffset":6394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6530,"endOffset":6632,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6645,"endOffset":6675,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6803,"endOffset":8247,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":8344,"endOffset":9834,"count":28},{"startOffset":8575,"endOffset":8589,"count":0},{"startOffset":8665,"endOffset":8691,"count":0},{"startOffset":8732,"endOffset":8932,"count":0},{"startOffset":8993,"endOffset":9021,"count":0},{"startOffset":9387,"endOffset":9414,"count":0},{"startOffset":9471,"endOffset":9761,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":9934,"endOffset":10359,"count":28},{"startOffset":10155,"endOffset":10281,"count":0},{"startOffset":10327,"endOffset":10351,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10457,"endOffset":10641,"count":28}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":11018,"endOffset":11925,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11087,"endOffset":11921,"count":28},{"startOffset":11362,"endOffset":11380,"count":0},{"startOffset":11404,"endOffset":11442,"count":0},{"startOffset":11444,"endOffset":11916,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":11957,"endOffset":12046,"count":28}],"isBlockCoverage":true},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":21114,"endOffset":22184,"count":1},{"startOffset":21495,"endOffset":22183,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22074,"endOffset":22179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"45","url":"node:internal/event_target","functions":[{"functionName":"isEvent","ranges":[{"startOffset":2271,"endOffset":2345,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2349,"endOffset":7273,"count":1}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":2681,"endOffset":3179,"count":1},{"startOffset":2765,"endOffset":2800,"count":0}],"isBlockCoverage":true},{"functionName":"initEvent","ranges":[{"startOffset":3295,"endOffset":3591,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3597,"endOffset":4129,"count":0}],"isBlockCoverage":false},{"functionName":"stopImmediatePropagation","ranges":[{"startOffset":4135,"endOffset":4262,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":4268,"endOffset":4396,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":4442,"endOffset":4557,"count":0}],"isBlockCoverage":false},{"functionName":"get currentTarget","ranges":[{"startOffset":4603,"endOffset":4725,"count":0}],"isBlockCoverage":false},{"functionName":"get srcElement","ranges":[{"startOffset":4771,"endOffset":4890,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":4931,"endOffset":5042,"count":1},{"startOffset":4976,"endOffset":5012,"count":0}],"isBlockCoverage":true},{"functionName":"get cancelable","ranges":[{"startOffset":5084,"endOffset":5206,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultPrevented","ranges":[{"startOffset":5248,"endOffset":5402,"count":1},{"startOffset":5305,"endOffset":5341,"count":0},{"startOffset":5371,"endOffset":5396,"count":0}],"isBlockCoverage":true},{"functionName":"get timeStamp","ranges":[{"startOffset":5443,"endOffset":5563,"count":0}],"isBlockCoverage":false},{"functionName":"composedPath","ranges":[{"startOffset":5790,"endOffset":5941,"count":0}],"isBlockCoverage":false},{"functionName":"get returnValue","ranges":[{"startOffset":5983,"endOffset":6134,"count":0}],"isBlockCoverage":false},{"functionName":"get bubbles","ranges":[{"startOffset":6176,"endOffset":6292,"count":0}],"isBlockCoverage":false},{"functionName":"get composed","ranges":[{"startOffset":6334,"endOffset":6452,"count":0}],"isBlockCoverage":false},{"functionName":"get eventPhase","ranges":[{"startOffset":6493,"endOffset":6654,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelBubble","ranges":[{"startOffset":6696,"endOffset":6828,"count":0}],"isBlockCoverage":false},{"functionName":"set cancelBubble","ranges":[{"startOffset":6870,"endOffset":7025,"count":0}],"isBlockCoverage":false},{"functionName":"stopPropagation","ranges":[{"startOffset":7031,"endOffset":7162,"count":0}],"isBlockCoverage":false},{"functionName":"Listener","ranges":[{"startOffset":10770,"endOffset":12058,"count":78},{"startOffset":11136,"endOffset":11158,"count":0},{"startOffset":11184,"endOffset":11206,"count":0},{"startOffset":11244,"endOffset":11268,"count":0},{"startOffset":11291,"endOffset":11310,"count":0},{"startOffset":11350,"endOffset":11386,"count":39},{"startOffset":11463,"endOffset":11732,"count":0},{"startOffset":11848,"endOffset":12053,"count":0}],"isBlockCoverage":true},{"functionName":"Listener.callback","ranges":[{"startOffset":11879,"endOffset":12012,"count":0}],"isBlockCoverage":false},{"functionName":"get weak","ranges":[{"startOffset":12360,"endOffset":12422,"count":78}],"isBlockCoverage":true},{"functionName":"set removed","ranges":[{"startOffset":12598,"endOffset":12720,"count":78},{"startOffset":12642,"endOffset":12669,"count":0}],"isBlockCoverage":true},{"functionName":"initEventTarget","ranges":[{"startOffset":13174,"endOffset":13398,"count":81}],"isBlockCoverage":true},{"functionName":"EventTarget","ranges":[{"startOffset":13649,"endOffset":13697,"count":80}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13703,"endOffset":14525,"count":78},{"startOffset":13866,"endOffset":13915,"count":0},{"startOffset":13917,"endOffset":14520,"count":0}],"isBlockCoverage":true},{"functionName":"addEventListener","ranges":[{"startOffset":14990,"endOffset":17766,"count":78},{"startOffset":15087,"endOffset":15129,"count":0},{"startOffset":15168,"endOffset":15215,"count":0},{"startOffset":15623,"endOffset":16087,"count":0},{"startOffset":16154,"endOffset":16547,"count":0},{"startOffset":17117,"endOffset":17313,"count":0},{"startOffset":17315,"endOffset":17765,"count":0}],"isBlockCoverage":true},{"functionName":"signal.addEventListener.__proto__","ranges":[{"startOffset":16375,"endOffset":16451,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchEvent","ranges":[{"startOffset":18848,"endOffset":19324,"count":1},{"startOffset":18909,"endOffset":18951,"count":0},{"startOffset":18990,"endOffset":19026,"count":0},{"startOffset":19072,"endOffset":19128,"count":0},{"startOffset":19174,"endOffset":19216,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19330,"endOffset":21702,"count":1},{"startOffset":19791,"endOffset":19817,"count":0},{"startOffset":19923,"endOffset":21697,"count":0}],"isBlockCoverage":true},{"functionName":"createEvent","ranges":[{"startOffset":19399,"endOffset":19606,"count":0}],"isBlockCoverage":false},{"functionName":"iterationCondition","ranges":[{"startOffset":20005,"endOffset":20175,"count":0}],"isBlockCoverage":false},{"functionName":"validateEventListener","ranges":[{"startOffset":26784,"endOffset":27171,"count":78},{"startOffset":26865,"endOffset":26918,"count":0},{"startOffset":26944,"endOffset":27170,"count":0}],"isBlockCoverage":true},{"functionName":"validateEventListenerOptions","ranges":[{"startOffset":27175,"endOffset":27772,"count":78},{"startOffset":27266,"endOffset":27294,"count":0},{"startOffset":27327,"endOffset":27347,"count":0},{"startOffset":27688,"endOffset":27696,"count":39}],"isBlockCoverage":true},{"functionName":"isEventTarget","ranges":[{"startOffset":28084,"endOffset":28162,"count":79}],"isBlockCoverage":true},{"functionName":"defineEventHandler","ranges":[{"startOffset":29094,"endOffset":30605,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":29257,"endOffset":29396,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29501,"endOffset":30359,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":30635,"endOffset":31343,"count":1},{"startOffset":31077,"endOffset":31243,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":30706,"endOffset":30851,"count":0}],"isBlockCoverage":false}]},{"scriptId":"46","url":"node:util","functions":[{"functionName":"lazyAbortController","ranges":[{"startOffset":2451,"endOffset":2574,"count":78}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":6148,"endOffset":6805,"count":53},{"startOffset":6236,"endOffset":6293,"count":0},{"startOffset":6355,"endOffset":6422,"count":0},{"startOffset":6467,"endOffset":6600,"count":0}],"isBlockCoverage":true},{"functionName":"get transferableAbortSignal","ranges":[{"startOffset":10728,"endOffset":10823,"count":26}],"isBlockCoverage":true},{"functionName":"get transferableAbortController","ranges":[{"startOffset":10828,"endOffset":10931,"count":26}],"isBlockCoverage":true},{"functionName":"get aborted","ranges":[{"startOffset":10936,"endOffset":10999,"count":26}],"isBlockCoverage":true}]},{"scriptId":"47","url":"node:internal/webidl","functions":[{"functionName":"DOMString","ranges":[{"startOffset":4605,"endOffset":4741,"count":78},{"startOffset":4659,"endOffset":4715,"count":0}],"isBlockCoverage":true}]},{"scriptId":"48","url":"node:internal/perf/utils","functions":[{"functionName":"now","ranges":[{"startOffset":255,"endOffset":359,"count":59}],"isBlockCoverage":true},{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":523,"endOffset":589,"count":1}],"isBlockCoverage":true}]},{"scriptId":"50","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1470,"endOffset":3134,"count":2},{"startOffset":1626,"endOffset":1765,"count":0},{"startOffset":1773,"endOffset":1972,"count":0},{"startOffset":2288,"endOffset":2316,"count":0},{"startOffset":2318,"endOffset":2546,"count":0},{"startOffset":2741,"endOffset":3004,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2936,"endOffset":2985,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3780,"endOffset":3875,"count":3},{"startOffset":3835,"endOffset":3872,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3879,"endOffset":4591,"count":10},{"startOffset":3917,"endOffset":3931,"count":9},{"startOffset":3931,"endOffset":4171,"count":1},{"startOffset":4171,"endOffset":4231,"count":0},{"startOffset":4231,"endOffset":4590,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4248,"endOffset":4431,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4595,"endOffset":5305,"count":19},{"startOffset":4633,"endOffset":4647,"count":18},{"startOffset":4647,"endOffset":4887,"count":1},{"startOffset":4887,"endOffset":4947,"count":0},{"startOffset":4947,"endOffset":5304,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4962,"endOffset":5145,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":5309,"endOffset":7890,"count":6},{"startOffset":5345,"endOffset":5358,"count":5},{"startOffset":5358,"endOffset":5417,"count":1},{"startOffset":5417,"endOffset":5525,"count":0},{"startOffset":5533,"endOffset":5671,"count":0},{"startOffset":5679,"endOffset":5691,"count":1},{"startOffset":5697,"endOffset":6504,"count":1},{"startOffset":6015,"endOffset":6043,"count":0},{"startOffset":6045,"endOffset":6223,"count":0},{"startOffset":6512,"endOffset":6742,"count":0},{"startOffset":6747,"endOffset":7020,"count":1},{"startOffset":7022,"endOffset":7889,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":6697,"endOffset":6706,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7339,"endOffset":7383,"count":0}],"isBlockCoverage":false},{"functionName":"onpause","ranges":[{"startOffset":7391,"endOffset":7639,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupStdin","ranges":[{"startOffset":7656,"endOffset":7732,"count":0}],"isBlockCoverage":false}]},{"scriptId":"51","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":453,"endOffset":526,"count":277}],"isBlockCoverage":true},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":869,"endOffset":1047,"count":1},{"startOffset":949,"endOffset":1044,"count":0}],"isBlockCoverage":true}]},{"scriptId":"52","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":254,"endOffset":352,"count":4}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":419,"endOffset":944,"count":4}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":948,"endOffset":1149,"count":2},{"startOffset":1052,"endOffset":1088,"count":0},{"startOffset":1090,"endOffset":1146,"count":0}],"isBlockCoverage":true}]},{"scriptId":"53","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5319,"endOffset":5586,"count":10585},{"startOffset":5523,"endOffset":5543,"count":749}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":12176,"endOffset":13920,"count":649},{"startOffset":12449,"endOffset":12480,"count":0},{"startOffset":12619,"endOffset":12651,"count":0},{"startOffset":12652,"endOffset":12692,"count":0},{"startOffset":12783,"endOffset":12793,"count":0},{"startOffset":12794,"endOffset":12797,"count":0},{"startOffset":12932,"endOffset":13919,"count":0}],"isBlockCoverage":true},{"functionName":"readdirSync","ranges":[{"startOffset":41190,"endOffset":41810,"count":1},{"startOffset":41330,"endOffset":41398,"count":0},{"startOffset":41427,"endOffset":41482,"count":0},{"startOffset":41771,"endOffset":41797,"count":0}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":71549,"endOffset":71647,"count":562}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":71898,"endOffset":72193,"count":562},{"startOffset":71984,"endOffset":72014,"count":0},{"startOffset":72035,"endOffset":72192,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":72321,"endOffset":72589,"count":5667},{"startOffset":72378,"endOffset":72568,"count":46945},{"startOffset":72513,"endOffset":72541,"count":41840},{"startOffset":72552,"endOffset":72561,"count":5105},{"startOffset":72568,"endOffset":72588,"count":562}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":72875,"endOffset":76900,"count":798},{"startOffset":73002,"endOffset":73022,"count":0},{"startOffset":73189,"endOffset":73226,"count":236},{"startOffset":73226,"endOffset":74127,"count":562},{"startOffset":74127,"endOffset":76823,"count":5667},{"startOffset":74243,"endOffset":74379,"count":562},{"startOffset":74379,"endOffset":74541,"count":5105},{"startOffset":74661,"endOffset":74804,"count":4918},{"startOffset":74754,"endOffset":74780,"count":0},{"startOffset":74804,"endOffset":74873,"count":749},{"startOffset":74911,"endOffset":74962,"count":0},{"startOffset":74962,"endOffset":76304,"count":749},{"startOffset":75415,"endOffset":76222,"count":0},{"startOffset":76267,"endOffset":76297,"count":0},{"startOffset":76304,"endOffset":76629,"count":0},{"startOffset":76631,"endOffset":76818,"count":0},{"startOffset":76823,"endOffset":76839,"count":562}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":85944,"endOffset":86141,"count":49},{"startOffset":85993,"endOffset":86138,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":88498,"endOffset":88569,"count":13}],"isBlockCoverage":true},{"functionName":"get WriteStream","ranges":[{"startOffset":88632,"endOffset":88705,"count":12}],"isBlockCoverage":true},{"functionName":"get FileReadStream","ranges":[{"startOffset":88905,"endOffset":88984,"count":12}],"isBlockCoverage":true},{"functionName":"get FileWriteStream","ranges":[{"startOffset":89055,"endOffset":89136,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":89862,"endOffset":89961,"count":12}],"isBlockCoverage":true}]},{"scriptId":"55","url":"node:internal/encoding","functions":[{"functionName":"validateEncoder","ranges":[{"startOffset":1310,"endOffset":1438,"count":28},{"startOffset":1393,"endOffset":1435,"count":0}],"isBlockCoverage":true},{"functionName":"validateDecoder","ranges":[{"startOffset":1442,"endOffset":1570,"count":17},{"startOffset":1525,"endOffset":1567,"count":0}],"isBlockCoverage":true},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":9062,"endOffset":9245,"count":17},{"startOffset":9175,"endOffset":9244,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":9272,"endOffset":9320,"count":30}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9402,"endOffset":9497,"count":28}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10867,"endOffset":11834,"count":17},{"startOffset":11187,"endOffset":11234,"count":0},{"startOffset":11322,"endOffset":11345,"count":0},{"startOffset":11387,"endOffset":11415,"count":0},{"startOffset":11782,"endOffset":11827,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":12121,"endOffset":12728,"count":17},{"startOffset":12363,"endOffset":12727,"count":0}],"isBlockCoverage":true}]},{"scriptId":"57","url":"node:internal/webstreams/util","functions":[{"functionName":"extractHighWaterMark","ranges":[{"startOffset":1071,"endOffset":1372,"count":215},{"startOffset":1150,"endOffset":1168,"count":102},{"startOffset":1168,"endOffset":1249,"count":113},{"startOffset":1250,"endOffset":1269,"count":113},{"startOffset":1276,"endOffset":1352,"count":0},{"startOffset":1352,"endOffset":1371,"count":113}],"isBlockCoverage":true},{"functionName":"extractSizeAlgorithm","ranges":[{"startOffset":1376,"endOffset":1519,"count":215},{"startOffset":1441,"endOffset":1456,"count":28},{"startOffset":1456,"endOffset":1518,"count":187}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1448,"endOffset":1455,"count":28}],"isBlockCoverage":true},{"functionName":"isBrandCheck","ranges":[{"startOffset":2629,"endOffset":2799,"count":10}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2670,"endOffset":2795,"count":491}],"isBlockCoverage":true},{"functionName":"dequeueValue","ranges":[{"startOffset":3214,"endOffset":3610,"count":62}],"isBlockCoverage":true},{"functionName":"peekQueueValue","ranges":[{"startOffset":3841,"endOffset":4081,"count":54}],"isBlockCoverage":true},{"functionName":"enqueueValueWithSize","ranges":[{"startOffset":4085,"endOffset":4562,"count":82},{"startOffset":4378,"endOffset":4447,"count":0}],"isBlockCoverage":true},{"functionName":"ensureIsPromise","ranges":[{"startOffset":4566,"endOffset":4812,"count":204},{"startOffset":4717,"endOffset":4724,"count":170},{"startOffset":4725,"endOffset":4748,"count":34},{"startOffset":4755,"endOffset":4809,"count":0}],"isBlockCoverage":true},{"functionName":"isPromisePending","ranges":[{"startOffset":4816,"endOffset":4983,"count":34},{"startOffset":4883,"endOffset":4896,"count":0}],"isBlockCoverage":true},{"functionName":"setPromiseHandled","ranges":[{"startOffset":4987,"endOffset":5272,"count":190}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5249,"endOffset":5257,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5259,"endOffset":5267,"count":79}],"isBlockCoverage":true}]},{"scriptId":"58","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3747,"endOffset":3952,"count":1447},{"startOffset":3799,"endOffset":3830,"count":649},{"startOffset":3832,"endOffset":3949,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":7762,"endOffset":8409,"count":1448},{"startOffset":7847,"endOffset":7879,"count":1447},{"startOffset":7881,"endOffset":7915,"count":1},{"startOffset":7915,"endOffset":7954,"count":1447},{"startOffset":7954,"endOffset":8076,"count":648},{"startOffset":8076,"endOffset":8200,"count":799},{"startOffset":8115,"endOffset":8200,"count":0},{"startOffset":8200,"endOffset":8319,"count":1447},{"startOffset":8319,"endOffset":8385,"count":0},{"startOffset":8385,"endOffset":8408,"count":1447}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":8472,"endOffset":9014,"count":1312},{"startOffset":8543,"endOffset":8682,"count":0},{"startOffset":8715,"endOffset":9011,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9159,"endOffset":9769,"count":1448},{"startOffset":9394,"endOffset":9414,"count":0},{"startOffset":9485,"endOffset":9554,"count":0},{"startOffset":9575,"endOffset":9768,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":16362,"endOffset":17658,"count":649},{"startOffset":16444,"endOffset":16502,"count":0},{"startOffset":16527,"endOffset":16555,"count":1},{"startOffset":16555,"endOffset":16610,"count":648},{"startOffset":16616,"endOffset":16627,"count":0},{"startOffset":16650,"endOffset":16687,"count":0},{"startOffset":16693,"endOffset":16719,"count":0},{"startOffset":16725,"endOffset":16737,"count":0},{"startOffset":16760,"endOffset":16796,"count":0},{"startOffset":16804,"endOffset":16851,"count":0},{"startOffset":16857,"endOffset":16868,"count":0},{"startOffset":16891,"endOffset":16948,"count":0},{"startOffset":16956,"endOffset":17002,"count":0},{"startOffset":17008,"endOffset":17019,"count":0},{"startOffset":17042,"endOffset":17097,"count":0},{"startOffset":17105,"endOffset":17153,"count":0},{"startOffset":17159,"endOffset":17170,"count":0},{"startOffset":17193,"endOffset":17251,"count":0},{"startOffset":17257,"endOffset":17268,"count":0},{"startOffset":17291,"endOffset":17349,"count":0},{"startOffset":17357,"endOffset":17404,"count":0},{"startOffset":17410,"endOffset":17421,"count":0},{"startOffset":17444,"endOffset":17500,"count":0},{"startOffset":17506,"endOffset":17517,"count":0},{"startOffset":17540,"endOffset":17596,"count":0},{"startOffset":17601,"endOffset":17657,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19593,"endOffset":19873,"count":1448},{"startOffset":19656,"endOffset":19678,"count":0},{"startOffset":19680,"endOffset":19768,"count":0},{"startOffset":19848,"endOffset":19870,"count":0}],"isBlockCoverage":true},{"functionName":"possiblyTransformPath","ranges":[{"startOffset":20083,"endOffset":20367,"count":650},{"startOffset":20153,"endOffset":20348,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20412,"endOffset":20574,"count":650}],"isBlockCoverage":true}]},{"scriptId":"59","url":"node:internal/process/permission","functions":[{"functionName":"isEnabled","ranges":[{"startOffset":330,"endOffset":580,"count":3231},{"startOffset":391,"endOffset":539,"count":1}],"isBlockCoverage":true}]},{"scriptId":"60","url":"node:internal/fs/read/utf8","functions":[{"functionName":"readFileSyncUtf8","ranges":[{"startOffset":208,"endOffset":473,"count":649},{"startOffset":369,"endOffset":472,"count":0}],"isBlockCoverage":true}]},{"scriptId":"61","url":"node:url","functions":[{"functionName":"Url","ranges":[{"startOffset":2201,"endOffset":2490,"count":39}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2309,"endOffset":2378,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3590,"endOffset":3681,"count":1},{"startOffset":3637,"endOffset":3673,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3732,"endOffset":3775,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3819,"endOffset":3873,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":5108,"endOffset":5530,"count":3631},{"startOffset":5208,"endOffset":5305,"count":3540},{"startOffset":5286,"endOffset":5300,"count":1049},{"startOffset":5305,"endOffset":5380,"count":2582},{"startOffset":5380,"endOffset":5394,"count":2491},{"startOffset":5396,"endOffset":5509,"count":679},{"startOffset":5509,"endOffset":5529,"count":2582}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":5776,"endOffset":5976,"count":1261},{"startOffset":5849,"endOffset":5859,"count":1260},{"startOffset":5877,"endOffset":5930,"count":1260},{"startOffset":5887,"endOffset":5929,"count":699},{"startOffset":5937,"endOffset":5973,"count":1252}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":5980,"endOffset":6140,"count":1952},{"startOffset":6062,"endOffset":6077,"count":0},{"startOffset":6079,"endOffset":6137,"count":0}],"isBlockCoverage":true},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":6144,"endOffset":6387,"count":119},{"startOffset":6246,"endOffset":6261,"count":0},{"startOffset":6263,"endOffset":6384,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6332,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":6437,"endOffset":7214,"count":562},{"startOffset":6760,"endOffset":6770,"count":0},{"startOffset":6789,"endOffset":7160,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8790,"endOffset":8817,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":9517,"endOffset":10031,"count":1}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":10342,"endOffset":10457,"count":3745}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":10759,"endOffset":11573,"count":1505},{"startOffset":10950,"endOffset":11508,"count":3233},{"startOffset":11204,"endOffset":11250,"count":0},{"startOffset":11252,"endOffset":11281,"count":0},{"startOffset":11356,"endOffset":11369,"count":0},{"startOffset":11443,"endOffset":11503,"count":1505},{"startOffset":11508,"endOffset":11572,"count":0}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":11577,"endOffset":12891,"count":196},{"startOffset":11702,"endOffset":11785,"count":99},{"startOffset":11785,"endOffset":11882,"count":97},{"startOffset":11882,"endOffset":11927,"count":13},{"startOffset":11928,"endOffset":11996,"count":1},{"startOffset":12023,"endOffset":12870,"count":0},{"startOffset":12870,"endOffset":12890,"count":97}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":13247,"endOffset":13486,"count":1658},{"startOffset":13338,"endOffset":13345,"count":958},{"startOffset":13345,"endOffset":13391,"count":700},{"startOffset":13391,"endOffset":13401,"count":0},{"startOffset":13403,"endOffset":13448,"count":0},{"startOffset":13448,"endOffset":13485,"count":700}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":13490,"endOffset":13626,"count":798}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":13704,"endOffset":13919,"count":912},{"startOffset":13787,"endOffset":13899,"count":1542},{"startOffset":13862,"endOffset":13894,"count":597},{"startOffset":13899,"endOffset":13918,"count":315}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":14012,"endOffset":14492,"count":562},{"startOffset":14241,"endOffset":14472,"count":564},{"startOffset":14294,"endOffset":14303,"count":0},{"startOffset":14443,"endOffset":14467,"count":562},{"startOffset":14472,"endOffset":14491,"count":0}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":14496,"endOffset":14797,"count":949},{"startOffset":14549,"endOffset":14562,"count":1},{"startOffset":14562,"endOffset":14624,"count":948},{"startOffset":14624,"endOffset":14794,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":14801,"endOffset":15726,"count":949},{"startOffset":14861,"endOffset":14874,"count":1},{"startOffset":14874,"endOffset":14981,"count":948},{"startOffset":14982,"endOffset":15007,"count":373},{"startOffset":15009,"endOffset":15034,"count":575},{"startOffset":15034,"endOffset":15084,"count":373},{"startOffset":15084,"endOffset":15112,"count":0},{"startOffset":15112,"endOffset":15282,"count":373},{"startOffset":15174,"endOffset":15251,"count":0},{"startOffset":15282,"endOffset":15723,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":15893,"endOffset":16721,"count":909},{"startOffset":16103,"endOffset":16118,"count":593},{"startOffset":16139,"endOffset":16146,"count":593},{"startOffset":16146,"endOffset":16250,"count":316},{"startOffset":16250,"endOffset":16272,"count":197},{"startOffset":16274,"endOffset":16718,"count":19},{"startOffset":16560,"endOffset":16713,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":16997,"endOffset":21172,"count":950},{"startOffset":17109,"endOffset":17134,"count":8},{"startOffset":17134,"endOffset":17199,"count":942},{"startOffset":17174,"endOffset":17199,"count":0},{"startOffset":17341,"endOffset":17354,"count":152},{"startOffset":17354,"endOffset":17951,"count":798},{"startOffset":17501,"endOffset":17950,"count":797},{"startOffset":17581,"endOffset":17943,"count":0},{"startOffset":18028,"endOffset":18493,"count":593},{"startOffset":18137,"endOffset":18223,"count":127},{"startOffset":18224,"endOffset":18486,"count":127},{"startOffset":18396,"endOffset":18484,"count":0},{"startOffset":18540,"endOffset":18699,"count":593},{"startOffset":18659,"endOffset":18694,"count":129},{"startOffset":18699,"endOffset":18764,"count":798},{"startOffset":18764,"endOffset":21150,"count":1212},{"startOffset":18909,"endOffset":18919,"count":1083},{"startOffset":18920,"endOffset":19017,"count":1076},{"startOffset":18955,"endOffset":18993,"count":0},{"startOffset":19025,"endOffset":19050,"count":296},{"startOffset":19050,"endOffset":19080,"count":916},{"startOffset":19080,"endOffset":19214,"count":909},{"startOffset":19184,"endOffset":19207,"count":19},{"startOffset":19214,"endOffset":19350,"count":897},{"startOffset":19350,"endOffset":20608,"count":896},{"startOffset":19373,"endOffset":20377,"count":97},{"startOffset":19407,"endOffset":19602,"count":96},{"startOffset":19463,"endOffset":19525,"count":0},{"startOffset":19602,"endOffset":20368,"count":1},{"startOffset":19656,"endOffset":20306,"count":0},{"startOffset":20402,"endOffset":20601,"count":799},{"startOffset":20495,"endOffset":20533,"count":689},{"startOffset":20608,"endOffset":20630,"count":897},{"startOffset":20630,"endOffset":20641,"count":315},{"startOffset":20643,"endOffset":20864,"count":196},{"startOffset":20756,"endOffset":20794,"count":1},{"startOffset":20864,"endOffset":20886,"count":897},{"startOffset":20886,"endOffset":20965,"count":778},{"startOffset":20965,"endOffset":21150,"count":119},{"startOffset":21150,"endOffset":21171,"count":1}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":21423,"endOffset":22983,"count":562},{"startOffset":21928,"endOffset":22003,"count":0},{"startOffset":22012,"endOffset":22043,"count":0},{"startOffset":22144,"endOffset":22957,"count":41265},{"startOffset":22538,"endOffset":22579,"count":36160},{"startOffset":22580,"endOffset":22613,"count":36160},{"startOffset":22615,"endOffset":22820,"count":5667},{"startOffset":22654,"endOffset":22776,"count":5118},{"startOffset":22820,"endOffset":22950,"count":35598},{"startOffset":22840,"endOffset":22950,"count":12560},{"startOffset":22876,"endOffset":22904,"count":7442},{"startOffset":22904,"endOffset":22941,"count":5118}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":24290,"endOffset":25589,"count":949},{"startOffset":24371,"endOffset":24440,"count":0},{"startOffset":24528,"endOffset":24731,"count":698},{"startOffset":24610,"endOffset":24661,"count":492},{"startOffset":24662,"endOffset":24730,"count":0},{"startOffset":24733,"endOffset":25044,"count":251},{"startOffset":24768,"endOffset":24783,"count":250},{"startOffset":24785,"endOffset":24898,"count":250},{"startOffset":24898,"endOffset":24940,"count":1},{"startOffset":25032,"endOffset":25038,"count":0},{"startOffset":25044,"endOffset":25115,"count":698},{"startOffset":25116,"endOffset":25135,"count":698},{"startOffset":25137,"endOffset":25393,"count":0},{"startOffset":25393,"endOffset":25588,"count":698}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":26003,"endOffset":26382,"count":6},{"startOffset":26269,"endOffset":26293,"count":0},{"startOffset":26315,"endOffset":26381,"count":0}],"isBlockCoverage":true},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":26645,"endOffset":27304,"count":10},{"startOffset":26817,"endOffset":27115,"count":1},{"startOffset":27117,"endOffset":27273,"count":1}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":27726,"endOffset":30952,"count":1391},{"startOffset":27811,"endOffset":28645,"count":1390},{"startOffset":28278,"endOffset":28640,"count":313},{"startOffset":28473,"endOffset":28523,"count":7},{"startOffset":28523,"endOffset":28570,"count":306},{"startOffset":28570,"endOffset":28640,"count":0},{"startOffset":28645,"endOffset":28700,"count":1078},{"startOffset":28700,"endOffset":28982,"count":7},{"startOffset":28833,"endOffset":28895,"count":0},{"startOffset":28982,"endOffset":29139,"count":1071},{"startOffset":29139,"endOffset":29509,"count":386},{"startOffset":29221,"endOffset":29454,"count":3},{"startOffset":29319,"endOffset":29346,"count":0},{"startOffset":29407,"endOffset":29454,"count":0},{"startOffset":29454,"endOffset":29504,"count":383},{"startOffset":29509,"endOffset":29571,"count":684},{"startOffset":29571,"endOffset":29657,"count":122},{"startOffset":29657,"endOffset":29790,"count":562},{"startOffset":29809,"endOffset":29954,"count":1},{"startOffset":29954,"endOffset":30921,"count":562},{"startOffset":30246,"endOffset":30661,"count":0},{"startOffset":30686,"endOffset":30729,"count":561},{"startOffset":30730,"endOffset":30844,"count":561},{"startOffset":30846,"endOffset":30916,"count":1},{"startOffset":30921,"endOffset":30951,"count":562}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":30983,"endOffset":34157,"count":1071},{"startOffset":31081,"endOffset":31108,"count":122},{"startOffset":31108,"endOffset":31162,"count":949},{"startOffset":31162,"endOffset":31181,"count":0},{"startOffset":31183,"endOffset":32290,"count":0},{"startOffset":32290,"endOffset":32389,"count":949},{"startOffset":32389,"endOffset":32437,"count":0},{"startOffset":32439,"endOffset":33067,"count":0},{"startOffset":33067,"endOffset":33233,"count":949},{"startOffset":33233,"endOffset":33434,"count":0},{"startOffset":33434,"endOffset":33578,"count":949},{"startOffset":33578,"endOffset":33594,"count":948},{"startOffset":33594,"endOffset":33710,"count":1},{"startOffset":33710,"endOffset":33785,"count":19},{"startOffset":33766,"endOffset":33778,"count":0},{"startOffset":33785,"endOffset":34156,"count":1}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":34162,"endOffset":34743,"count":19},{"startOffset":34367,"endOffset":34487,"count":0},{"startOffset":34604,"endOffset":34742,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":35137,"endOffset":35997,"count":562},{"startOffset":35481,"endOffset":35511,"count":0},{"startOffset":35518,"endOffset":35560,"count":0},{"startOffset":35849,"endOffset":35898,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":36201,"endOffset":36512,"count":1390},{"startOffset":36263,"endOffset":36384,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":36709,"endOffset":38443,"count":556},{"startOffset":36783,"endOffset":37542,"count":0},{"startOffset":38093,"endOffset":38193,"count":86},{"startOffset":38230,"endOffset":38440,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":37018,"endOffset":37261,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":37737,"endOffset":37994,"count":0}],"isBlockCoverage":false},{"functionName":"Module._compile","ranges":[{"startOffset":38649,"endOffset":40519,"count":556},{"startOffset":38743,"endOffset":38753,"count":0},{"startOffset":38772,"endOffset":38929,"count":0},{"startOffset":39067,"endOffset":39091,"count":0},{"startOffset":39093,"endOffset":39850,"count":0},{"startOffset":40080,"endOffset":40106,"count":1},{"startOffset":40132,"endOffset":40274,"count":0},{"startOffset":40481,"endOffset":40498,"count":1}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":40581,"endOffset":42409,"count":556},{"startOffset":40746,"endOffset":40754,"count":0},{"startOffset":40756,"endOffset":40824,"count":0},{"startOffset":40982,"endOffset":41004,"count":0},{"startOffset":41102,"endOffset":42362,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":42477,"endOffset":42898,"count":6},{"startOffset":42590,"endOffset":42600,"count":0},{"startOffset":42619,"endOffset":42724,"count":0},{"startOffset":42811,"endOffset":42895,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":44538,"endOffset":45531,"count":1},{"startOffset":44606,"endOffset":44626,"count":0},{"startOffset":44682,"endOffset":44707,"count":0},{"startOffset":44937,"endOffset":44986,"count":0},{"startOffset":45245,"endOffset":45392,"count":0}],"isBlockCoverage":true}]},{"scriptId":"64","url":"node:internal/vm","functions":[{"functionName":"isContext","ranges":[{"startOffset":443,"endOffset":582,"count":3}],"isBlockCoverage":true},{"functionName":"internalCompileFunction","ranges":[{"startOffset":586,"endOffset":2988,"count":556},{"startOffset":1202,"endOffset":1251,"count":0},{"startOffset":1357,"endOffset":1631,"count":0},{"startOffset":2129,"endOffset":2204,"count":0},{"startOffset":2233,"endOffset":2292,"count":0},{"startOffset":2350,"endOffset":2425,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1742,"endOffset":1894,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2917,"endOffset":2950,"count":0}],"isBlockCoverage":false}]},{"scriptId":"65","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":958,"endOffset":985,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":1011,"endOffset":1414,"count":1},{"startOffset":1193,"endOffset":1197,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":1418,"endOffset":1550,"count":19},{"startOffset":1484,"endOffset":1522,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":1554,"endOffset":1892,"count":129},{"startOffset":1656,"endOffset":1675,"count":0}],"isBlockCoverage":true},{"functionName":"lazyModule","ranges":[{"startOffset":1917,"endOffset":2033,"count":556},{"startOffset":1962,"endOffset":2010,"count":1}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":2288,"endOffset":4573,"count":556},{"startOffset":2430,"endOffset":2495,"count":0},{"startOffset":2532,"endOffset":3840,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":2679,"endOffset":3834,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":3863,"endOffset":4006,"count":1389}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4018,"endOffset":4167,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":4205,"endOffset":4330,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":4765,"endOffset":4925,"count":6},{"startOffset":4848,"endOffset":4903,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":7021,"endOffset":7214,"count":86},{"startOffset":7177,"endOffset":7213,"count":0}],"isBlockCoverage":true}]},{"scriptId":"66","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"read","ranges":[{"startOffset":974,"endOffset":3810,"count":3745},{"startOffset":1071,"endOffset":1110,"count":3495},{"startOffset":1110,"endOffset":1811,"count":250},{"startOffset":1811,"endOffset":1820,"count":0},{"startOffset":1821,"endOffset":1835,"count":0},{"startOffset":1836,"endOffset":1858,"count":250},{"startOffset":1884,"endOffset":3757,"count":101},{"startOffset":1956,"endOffset":2566,"count":0},{"startOffset":2729,"endOffset":2763,"count":99},{"startOffset":2765,"endOffset":2807,"count":99},{"startOffset":2865,"endOffset":2899,"count":59},{"startOffset":2901,"endOffset":2943,"count":59},{"startOffset":3005,"endOffset":3053,"count":10},{"startOffset":3115,"endOffset":3163,"count":0},{"startOffset":3277,"endOffset":3336,"count":4},{"startOffset":3308,"endOffset":3335,"count":1},{"startOffset":3338,"endOffset":3380,"count":4},{"startOffset":3416,"endOffset":3617,"count":1},{"startOffset":3539,"endOffset":3593,"count":0},{"startOffset":3646,"endOffset":3752,"count":0},{"startOffset":3757,"endOffset":3809,"count":250}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/modules/esm/utils","functions":[{"functionName":"setCallbackForWrap","ranges":[{"startOffset":691,"endOffset":767,"count":556}],"isBlockCoverage":true},{"functionName":"getDefaultConditions","ranges":[{"startOffset":795,"endOffset":904,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1136,"endOffset":1530,"count":1},{"startOffset":1322,"endOffset":1326,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":2829,"endOffset":3212,"count":1}],"isBlockCoverage":true},{"functionName":"isLoaderWorker","ranges":[{"startOffset":3216,"endOffset":3273,"count":1}],"isBlockCoverage":true}]},{"scriptId":"68","url":"node:internal/vm/module","functions":[{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":11921,"endOffset":12415,"count":556}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyWrapper","ranges":[{"startOffset":12027,"endOffset":12369,"count":0}],"isBlockCoverage":false}]},{"scriptId":"70","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":164,"endOffset":689,"count":1},{"startOffset":511,"endOffset":518,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":693,"endOffset":1604,"count":1},{"startOffset":1221,"endOffset":1233,"count":0},{"startOffset":1419,"endOffset":1431,"count":0},{"startOffset":1500,"endOffset":1513,"count":0}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2456,"endOffset":2864,"count":1},{"startOffset":2639,"endOffset":2684,"count":0}],"isBlockCoverage":true}]},{"scriptId":"71","url":"node:internal/dns/utils","functions":[{"functionName":"lazyBinding","ranges":[{"startOffset":530,"endOffset":622,"count":3}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":1002,"endOffset":1153,"count":1}],"isBlockCoverage":true},{"functionName":"validateTries","ranges":[{"startOffset":1157,"endOffset":1296,"count":1}],"isBlockCoverage":true},{"functionName":"ResolverBase","ranges":[{"startOffset":1701,"endOffset":2059,"count":1},{"startOffset":1949,"endOffset":2008,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2065,"endOffset":2204,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDns","ranges":[{"startOffset":5628,"endOffset":6030,"count":1},{"startOffset":5775,"endOffset":5888,"count":0},{"startOffset":5940,"endOffset":6029,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5967,"endOffset":6025,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolver","ranges":[{"startOffset":6311,"endOffset":6599,"count":1}],"isBlockCoverage":true},{"functionName":"bindDefaultResolver","ranges":[{"startOffset":6680,"endOffset":6907,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6815,"endOffset":6902,"count":15}],"isBlockCoverage":true},{"functionName":"validateHints","ranges":[{"startOffset":6911,"endOffset":7135,"count":2},{"startOffset":7072,"endOffset":7132,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultVerbatim","ranges":[{"startOffset":7551,"endOffset":7621,"count":2}],"isBlockCoverage":true},{"functionName":"createResolverClass","ranges":[{"startOffset":7817,"endOffset":8948,"count":1}],"isBlockCoverage":true}]},{"scriptId":"72","url":"node:internal/net","functions":[{"functionName":"isIPv4","ranges":[{"startOffset":1027,"endOffset":1305,"count":14}],"isBlockCoverage":true},{"functionName":"isIPv6","ranges":[{"startOffset":1309,"endOffset":1587,"count":8}],"isBlockCoverage":true},{"functionName":"isIP","ranges":[{"startOffset":1591,"endOffset":1681,"count":14},{"startOffset":1628,"endOffset":1637,"count":6},{"startOffset":1637,"endOffset":1656,"count":8},{"startOffset":1656,"endOffset":1680,"count":4}],"isBlockCoverage":true},{"functionName":"makeSyncWrite","ranges":[{"startOffset":1685,"endOffset":2115,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1724,"endOffset":2111,"count":189},{"startOffset":1785,"endOffset":1817,"count":28},{"startOffset":1993,"endOffset":2095,"count":0}],"isBlockCoverage":true}]},{"scriptId":"73","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":962,"endOffset":1145,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":1358,"endOffset":3600,"count":1},{"startOffset":2357,"endOffset":2464,"count":0},{"startOffset":3371,"endOffset":3537,"count":0}],"isBlockCoverage":true},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":3604,"endOffset":4362,"count":1}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":4366,"endOffset":4699,"count":1}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":4703,"endOffset":4761,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":4765,"endOffset":6926,"count":1},{"startOffset":5569,"endOffset":5623,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":6930,"endOffset":7222,"count":13},{"startOffset":7053,"endOffset":7219,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":7226,"endOffset":7764,"count":1},{"startOffset":7612,"endOffset":7756,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7642,"endOffset":7747,"count":0}],"isBlockCoverage":false},{"functionName":"setupFetch","ranges":[{"startOffset":7803,"endOffset":8989,"count":1},{"startOffset":7925,"endOffset":7944,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUndici","ranges":[{"startOffset":7965,"endOffset":8117,"count":39},{"startOffset":8006,"endOffset":8036,"count":38},{"startOffset":8036,"endOffset":8116,"count":1}],"isBlockCoverage":true},{"functionName":"fetch","ranges":[{"startOffset":8123,"endOffset":8220,"count":39}],"isBlockCoverage":true},{"functionName":"lazyInterface","ranges":[{"startOffset":8276,"endOffset":8528,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8381,"endOffset":8433,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8442,"endOffset":8514,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8871,"endOffset":8984,"count":0}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":9097,"endOffset":10080,"count":1},{"startOffset":9234,"endOffset":9253,"count":0},{"startOffset":9760,"endOffset":10077,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":9435,"endOffset":9615,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":9925,"endOffset":10026,"count":0}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":10084,"endOffset":10616,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":10726,"endOffset":11010,"count":1},{"startOffset":10867,"endOffset":10886,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":11014,"endOffset":11247,"count":1},{"startOffset":11119,"endOffset":11246,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":11251,"endOffset":11510,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11401,"endOffset":11499,"count":6}],"isBlockCoverage":true},{"functionName":"setupDebugEnv","ranges":[{"startOffset":11514,"endOffset":11750,"count":1},{"startOffset":11667,"endOffset":11747,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":11815,"endOffset":12008,"count":1},{"startOffset":11904,"endOffset":12005,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":12012,"endOffset":12614,"count":1},{"startOffset":12151,"endOffset":12611,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":12269,"endOffset":12332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12530,"endOffset":12604,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":12618,"endOffset":12881,"count":1}],"isBlockCoverage":true},{"functionName":"setupPerfHooks","ranges":[{"startOffset":12885,"endOffset":12970,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":12974,"endOffset":13569,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":13769,"endOffset":15780,"count":1},{"startOffset":14506,"endOffset":14816,"count":16},{"startOffset":14552,"endOffset":14789,"count":0},{"startOffset":15140,"endOffset":15345,"count":0},{"startOffset":15375,"endOffset":15777,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":15784,"endOffset":16366,"count":1},{"startOffset":15861,"endOffset":16363,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":16370,"endOffset":16647,"count":1},{"startOffset":16458,"endOffset":16644,"count":0}],"isBlockCoverage":true},{"functionName":"initializePermission","ranges":[{"startOffset":16651,"endOffset":18000,"count":1},{"startOffset":16795,"endOffset":17641,"count":0}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":16820,"endOffset":16909,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17860,"endOffset":17990,"count":4},{"startOffset":17905,"endOffset":17983,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":18004,"endOffset":19877,"count":1},{"startOffset":18134,"endOffset":19874,"count":0}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":19881,"endOffset":20005,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":20009,"endOffset":20599,"count":1},{"startOffset":20343,"endOffset":20596,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":20603,"endOffset":20806,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":20810,"endOffset":21073,"count":1},{"startOffset":20896,"endOffset":21070,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":21077,"endOffset":21436,"count":1},{"startOffset":21274,"endOffset":21433,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":21440,"endOffset":21536,"count":1}],"isBlockCoverage":true}]},{"scriptId":"74","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3453,"endOffset":3560,"count":9},{"startOffset":3507,"endOffset":3536,"count":1}],"isBlockCoverage":true}]},{"scriptId":"400","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":816,"count":1}],"isBlockCoverage":false}]},{"scriptId":"401","url":"node:vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10935,"count":1}],"isBlockCoverage":false},{"functionName":"Script","ranges":[{"startOffset":2023,"endOffset":3783,"count":1},{"startOffset":2128,"endOffset":2176,"count":0},{"startOffset":2687,"endOffset":2752,"count":0},{"startOffset":3240,"endOffset":3311,"count":0},{"startOffset":3362,"endOffset":3778,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":3789,"endOffset":4090,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4096,"endOffset":4491,"count":1},{"startOffset":4314,"endOffset":4352,"count":0},{"startOffset":4354,"endOffset":4428,"count":0}],"isBlockCoverage":true},{"functionName":"runInNewContext","ranges":[{"startOffset":4497,"endOffset":4671,"count":1}],"isBlockCoverage":true},{"functionName":"validateContext","ranges":[{"startOffset":4678,"endOffset":4902,"count":1},{"startOffset":4764,"endOffset":4899,"count":0}],"isBlockCoverage":true},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":4906,"endOffset":5614,"count":1},{"startOffset":5111,"endOffset":5178,"count":0}],"isBlockCoverage":true},{"functionName":"getContextOptions","ranges":[{"startOffset":5618,"endOffset":6712,"count":2},{"startOffset":5678,"endOffset":5688,"count":0},{"startOffset":6022,"endOffset":6085,"count":0},{"startOffset":6138,"endOffset":6570,"count":0},{"startOffset":6620,"endOffset":6683,"count":0}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":6750,"endOffset":7884,"count":2},{"startOffset":6852,"endOffset":7142,"count":1},{"startOffset":7142,"endOffset":7183,"count":0},{"startOffset":7183,"endOffset":7226,"count":1},{"startOffset":7226,"endOffset":7283,"count":0},{"startOffset":7283,"endOffset":7366,"count":1},{"startOffset":7366,"endOffset":7553,"count":0},{"startOffset":7553,"endOffset":7738,"count":1},{"startOffset":7738,"endOffset":7765,"count":0},{"startOffset":7766,"endOffset":7777,"count":1}],"isBlockCoverage":true},{"functionName":"createScript","ranges":[{"startOffset":7888,"endOffset":7966,"count":1}],"isBlockCoverage":true},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8124,"endOffset":8599,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":8603,"endOffset":9013,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9017,"endOffset":9376,"count":1},{"startOffset":9110,"endOffset":9154,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":9380,"endOffset":9571,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":9575,"endOffset":9709,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":9998,"endOffset":10582,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"evalmachine.<anonymous>","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"403","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/test/usuario.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19144,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":240,"endOffset":18804,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":309,"endOffset":701,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":444,"endOffset":694,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":500,"endOffset":685,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":715,"endOffset":744,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":778,"endOffset":1841,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":860,"endOffset":1206,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1267,"endOffset":1834,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1879,"endOffset":3970,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1961,"endOffset":2309,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2387,"endOffset":2852,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2911,"endOffset":3963,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4005,"endOffset":7815,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4096,"endOffset":4478,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4582,"endOffset":5062,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5159,"endOffset":5940,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6027,"endOffset":6819,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6882,"endOffset":7808,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7856,"endOffset":11406,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7953,"endOffset":8433,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8517,"endOffset":9005,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9072,"endOffset":9550,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9615,"endOffset":10103,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10188,"endOffset":10748,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10831,"endOffset":11399,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11452,"endOffset":13082,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11528,"endOffset":11886,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11969,"endOffset":12419,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12497,"endOffset":13075,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13120,"endOffset":17137,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13196,"endOffset":13596,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13676,"endOffset":14339,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14426,"endOffset":14962,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15067,"endOffset":15664,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15759,"endOffset":16369,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16449,"endOffset":17130,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17178,"endOffset":18799,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17254,"endOffset":17605,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17692,"endOffset":18179,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18248,"endOffset":18792,"count":1}],"isBlockCoverage":true},{"functionName":"getToken","ranges":[{"startOffset":18810,"endOffset":19142,"count":11}],"isBlockCoverage":true}]},{"scriptId":"404","url":"node:test","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":726,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":527,"endOffset":718,"count":2},{"startOffset":568,"endOffset":689,"count":1}],"isBlockCoverage":true}]},{"scriptId":"405","url":"node:internal/test_runner/harness","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6855,"count":1}],"isBlockCoverage":false},{"functionName":"createTestTree","ranges":[{"startOffset":675,"endOffset":803,"count":1}],"isBlockCoverage":true},{"functionName":"createProcessEventHandler","ranges":[{"startOffset":807,"endOffset":2245,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":875,"endOffset":2241,"count":0}],"isBlockCoverage":false},{"functionName":"configureCoverage","ranges":[{"startOffset":2249,"endOffset":2647,"count":1},{"startOffset":2359,"endOffset":2644,"count":0}],"isBlockCoverage":true},{"functionName":"collectCoverage","ranges":[{"startOffset":2651,"endOffset":3076,"count":1},{"startOffset":2740,"endOffset":3075,"count":0}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":3080,"endOffset":5318,"count":1},{"startOffset":3135,"endOffset":3159,"count":0},{"startOffset":4779,"endOffset":4880,"count":0}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3403,"endOffset":3719,"count":11013},{"startOffset":3488,"endOffset":3562,"count":38},{"startOffset":3562,"endOffset":3657,"count":10975},{"startOffset":3657,"endOffset":3712,"count":8342}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":3726,"endOffset":3789,"count":10651}],"isBlockCoverage":true},{"functionName":"exitHandler","ranges":[{"startOffset":4078,"endOffset":4413,"count":1}],"isBlockCoverage":true},{"functionName":"terminationHandler","ranges":[{"startOffset":4447,"endOffset":4512,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalRoot","ranges":[{"startOffset":5360,"endOffset":5633,"count":2},{"startOffset":5407,"endOffset":5608,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5488,"endOffset":5547,"count":0}],"isBlockCoverage":false},{"functionName":"startSubtest","ranges":[{"startOffset":5637,"endOffset":5782,"count":1}],"isBlockCoverage":true},{"functionName":"runInParentContext","ranges":[{"startOffset":5786,"endOffset":6396,"count":3}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":5828,"endOffset":6150,"count":36},{"startOffset":5931,"endOffset":5949,"count":1},{"startOffset":6070,"endOffset":6115,"count":1},{"startOffset":6115,"endOffset":6149,"count":35}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":6169,"endOffset":6214,"count":36}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6267,"endOffset":6375,"count":9}],"isBlockCoverage":true},{"functionName":"test.<computed>","ranges":[{"startOffset":6303,"endOffset":6369,"count":0}],"isBlockCoverage":false},{"functionName":"hook","ranges":[{"startOffset":6400,"endOffset":6580,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6432,"endOffset":6576,"count":2},{"startOffset":6509,"endOffset":6527,"count":0}],"isBlockCoverage":true}]},{"scriptId":"406","url":"node:internal/test_runner/test","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24071,"count":1}],"isBlockCoverage":false},{"functionName":"stopTest","ranges":[{"startOffset":2319,"endOffset":2646,"count":39},{"startOffset":2433,"endOffset":2645,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2516,"endOffset":2641,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2650,"endOffset":3730,"count":29}],"isBlockCoverage":false},{"functionName":"TestContext","ranges":[{"startOffset":2685,"endOffset":2733,"count":29}],"isBlockCoverage":true},{"functionName":"get signal","ranges":[{"startOffset":2739,"endOffset":2789,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":2795,"endOffset":2841,"count":0}],"isBlockCoverage":false},{"functionName":"diagnostic","ranges":[{"startOffset":2847,"endOffset":2910,"count":0}],"isBlockCoverage":false},{"functionName":"get mock","ranges":[{"startOffset":2916,"endOffset":3006,"count":0}],"isBlockCoverage":false},{"functionName":"runOnly","ranges":[{"startOffset":3012,"endOffset":3076,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":3082,"endOffset":3133,"count":0}],"isBlockCoverage":false},{"functionName":"todo","ranges":[{"startOffset":3139,"endOffset":3190,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":3196,"endOffset":3383,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":3389,"endOffset":3466,"count":0}],"isBlockCoverage":false},{"functionName":"after","ranges":[{"startOffset":3472,"endOffset":3547,"count":0}],"isBlockCoverage":false},{"functionName":"beforeEach","ranges":[{"startOffset":3553,"endOffset":3638,"count":0}],"isBlockCoverage":false},{"functionName":"afterEach","ranges":[{"startOffset":3644,"endOffset":3727,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3734,"endOffset":3935,"count":16}],"isBlockCoverage":false},{"functionName":"SuiteContext","ranges":[{"startOffset":3771,"endOffset":3822,"count":16}],"isBlockCoverage":true},{"functionName":"get signal","ranges":[{"startOffset":3828,"endOffset":3879,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":3885,"endOffset":3932,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3939,"endOffset":21600,"count":39}],"isBlockCoverage":false},{"functionName":"Test","ranges":[{"startOffset":4038,"endOffset":7902,"count":39},{"startOffset":4234,"endOffset":4260,"count":1},{"startOffset":4297,"endOffset":4311,"count":37},{"startOffset":4313,"endOffset":4361,"count":2},{"startOffset":4400,"endOffset":4430,"count":3},{"startOffset":4459,"endOffset":4877,"count":3},{"startOffset":4877,"endOffset":5552,"count":36},{"startOffset":4931,"endOffset":4947,"count":1},{"startOffset":4948,"endOffset":4977,"count":35},{"startOffset":5597,"endOffset":5732,"count":0},{"startOffset":5742,"endOffset":5975,"count":0},{"startOffset":6039,"endOffset":6129,"count":0},{"startOffset":6164,"endOffset":6187,"count":0},{"startOffset":6189,"endOffset":6295,"count":0},{"startOffset":6385,"endOffset":6419,"count":0},{"startOffset":6421,"endOffset":6479,"count":0},{"startOffset":6504,"endOffset":6517,"count":0},{"startOffset":6519,"endOffset":6568,"count":0},{"startOffset":6586,"endOffset":6612,"count":0},{"startOffset":6820,"endOffset":6919,"count":0},{"startOffset":6944,"endOffset":6962,"count":0},{"startOffset":7458,"endOffset":7464,"count":0},{"startOffset":7499,"endOffset":7505,"count":0},{"startOffset":7755,"endOffset":7897,"count":0}],"isBlockCoverage":true},{"functionName":"matchesTestNamePatterns","ranges":[{"startOffset":7908,"endOffset":8092,"count":0}],"isBlockCoverage":false},{"functionName":"hasConcurrency","ranges":[{"startOffset":8098,"endOffset":8173,"count":75}],"isBlockCoverage":true},{"functionName":"addPendingSubtest","ranges":[{"startOffset":8179,"endOffset":8270,"count":27}],"isBlockCoverage":true},{"functionName":"processPendingSubtests","ranges":[{"startOffset":8276,"endOffset":8612,"count":36},{"startOffset":8353,"endOffset":8377,"count":39},{"startOffset":8379,"endOffset":8607,"count":27}],"isBlockCoverage":true},{"functionName":"addReadySubtest","ranges":[{"startOffset":8618,"endOffset":8707,"count":36}],"isBlockCoverage":true},{"functionName":"processReadySubtestRange","ranges":[{"startOffset":8713,"endOffset":9757,"count":72},{"startOffset":8875,"endOffset":9752,"count":36},{"startOffset":9142,"endOffset":9169,"count":0},{"startOffset":9491,"endOffset":9518,"count":0},{"startOffset":9540,"endOffset":9563,"count":9},{"startOffset":9565,"endOffset":9606,"count":8}],"isBlockCoverage":true},{"functionName":"createSubtest","ranges":[{"startOffset":9763,"endOffset":11037,"count":36},{"startOffset":9855,"endOffset":9881,"count":0},{"startOffset":9934,"endOffset":9986,"count":0},{"startOffset":10420,"endOffset":10510,"count":0},{"startOffset":10644,"endOffset":10695,"count":9},{"startOffset":10730,"endOffset":10964,"count":0}],"isBlockCoverage":true},{"functionName":"#abortHandler","ranges":[{"startOffset":11059,"endOffset":11220,"count":0}],"isBlockCoverage":false},{"functionName":"#cancel","ranges":[{"startOffset":11227,"endOffset":11659,"count":0}],"isBlockCoverage":false},{"functionName":"createHook","ranges":[{"startOffset":11665,"endOffset":12012,"count":2},{"startOffset":11874,"endOffset":11893,"count":1}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":12018,"endOffset":12169,"count":0}],"isBlockCoverage":false},{"functionName":"pass","ranges":[{"startOffset":12175,"endOffset":12301,"count":39},{"startOffset":12216,"endOffset":12239,"count":0}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":12307,"endOffset":12382,"count":0}],"isBlockCoverage":false},{"functionName":"todo","ranges":[{"startOffset":12388,"endOffset":12462,"count":0}],"isBlockCoverage":false},{"functionName":"diagnostic","ranges":[{"startOffset":12468,"endOffset":12546,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":12552,"endOffset":13119,"count":36},{"startOffset":12856,"endOffset":13024,"count":27},{"startOffset":13024,"endOffset":13118,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13125,"endOffset":13302,"count":70},{"startOffset":13174,"endOffset":13202,"count":0},{"startOffset":13229,"endOffset":13238,"count":0},{"startOffset":13240,"endOffset":13297,"count":0}],"isBlockCoverage":true},{"functionName":"getRunArgs","ranges":[{"startOffset":13308,"endOffset":13401,"count":29}],"isBlockCoverage":true},{"functionName":"runHook","ranges":[{"startOffset":13407,"endOffset":13925,"count":16},{"startOffset":13728,"endOffset":13920,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13549,"endOffset":13700,"count":2},{"startOffset":13650,"endOffset":13691,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":13931,"endOffset":16645,"count":31},{"startOffset":13996,"endOffset":14041,"count":28},{"startOffset":14107,"endOffset":14153,"count":0},{"startOffset":14563,"endOffset":14570,"count":28},{"startOffset":14590,"endOffset":14672,"count":0},{"startOffset":14695,"endOffset":14702,"count":28},{"startOffset":14726,"endOffset":14801,"count":0},{"startOffset":15021,"endOffset":15626,"count":0},{"startOffset":15882,"endOffset":15934,"count":0},{"startOffset":16012,"endOffset":16460,"count":0}],"isBlockCoverage":true},{"functionName":"after","ranges":[{"startOffset":14221,"endOffset":14345,"count":31},{"startOffset":14275,"endOffset":14338,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14378,"endOffset":14525,"count":31},{"startOffset":14414,"endOffset":14421,"count":28},{"startOffset":14444,"endOffset":14518,"count":0}],"isBlockCoverage":true},{"functionName":"postRun","ranges":[{"startOffset":16651,"endOffset":19319,"count":37},{"startOffset":16860,"endOffset":16900,"count":0},{"startOffset":17180,"endOffset":17426,"count":36},{"startOffset":17255,"endOffset":17361,"count":0},{"startOffset":17390,"endOffset":17419,"count":0},{"startOffset":17451,"endOffset":17474,"count":0},{"startOffset":17491,"endOffset":17683,"count":0},{"startOffset":17708,"endOffset":17729,"count":0},{"startOffset":17774,"endOffset":17781,"count":0},{"startOffset":17818,"endOffset":18002,"count":36},{"startOffset":18002,"endOffset":19314,"count":1},{"startOffset":18207,"endOffset":18298,"count":0},{"startOffset":19199,"endOffset":19277,"count":0}],"isBlockCoverage":true},{"functionName":"isClearToSend","ranges":[{"startOffset":19325,"endOffset":19484,"count":99},{"startOffset":19376,"endOffset":19478,"count":63}],"isBlockCoverage":true},{"functionName":"finalize","ranges":[{"startOffset":19490,"endOffset":20194,"count":36}],"isBlockCoverage":true},{"functionName":"#duration","ranges":[{"startOffset":20200,"endOffset":20358,"count":37}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":20364,"endOffset":21358,"count":36},{"startOffset":20441,"endOffset":20535,"count":8},{"startOffset":20535,"endOffset":20578,"count":28},{"startOffset":20697,"endOffset":20761,"count":0},{"startOffset":20784,"endOffset":20848,"count":0},{"startOffset":20879,"endOffset":20928,"count":8},{"startOffset":21059,"endOffset":21208,"count":0},{"startOffset":21266,"endOffset":21353,"count":0}],"isBlockCoverage":true},{"functionName":"reportStarted","ranges":[{"startOffset":21364,"endOffset":21597,"count":72},{"startOffset":21413,"endOffset":21436,"count":37},{"startOffset":21438,"endOffset":21596,"count":36}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":21604,"endOffset":22065,"count":2}],"isBlockCoverage":false},{"functionName":"TestHook","ranges":[{"startOffset":21647,"endOffset":21872,"count":2}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":21876,"endOffset":21941,"count":2}],"isBlockCoverage":true},{"functionName":"getRunArgs","ranges":[{"startOffset":21945,"endOffset":21988,"count":2}],"isBlockCoverage":true},{"functionName":"matchesTestNamePatterns","ranges":[{"startOffset":21992,"endOffset":22042,"count":0}],"isBlockCoverage":false},{"functionName":"postRun","ranges":[{"startOffset":22046,"endOffset":22062,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":22069,"endOffset":23905,"count":8}],"isBlockCoverage":false},{"functionName":"Suite","ranges":[{"startOffset":22126,"endOffset":22909,"count":8},{"startOffset":22207,"endOffset":22223,"count":0},{"startOffset":22224,"endOffset":22240,"count":0},{"startOffset":22242,"endOffset":22319,"count":0},{"startOffset":22759,"endOffset":22842,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22661,"endOffset":22749,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.fn","ranges":[{"startOffset":22858,"endOffset":22866,"count":0}],"isBlockCoverage":false},{"functionName":"getRunArgs","ranges":[{"startOffset":22915,"endOffset":23009,"count":16}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":23015,"endOffset":23902,"count":8},{"startOffset":23219,"endOffset":23300,"count":0},{"startOffset":23467,"endOffset":23471,"count":0},{"startOffset":23701,"endOffset":23874,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23537,"endOffset":23567,"count":35}],"isBlockCoverage":true}]},{"scriptId":"407","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12877,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1647,"endOffset":1783,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1787,"endOffset":1949,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2433,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2705,"endOffset":2833,"count":271},{"startOffset":2788,"endOffset":2830,"count":0}],"isBlockCoverage":true},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3425,"endOffset":3839,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3886,"endOffset":3948,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":3990,"endOffset":4076,"count":271}],"isBlockCoverage":true},{"functionName":"get reason","ranges":[{"startOffset":4114,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":4202,"endOffset":4323,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4329,"endOffset":4462,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4546,"endOffset":4693,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4777,"endOffset":5047,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":5140,"endOffset":6513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6519,"endOffset":7301,"count":78},{"startOffset":6750,"endOffset":6779,"count":0},{"startOffset":6826,"endOffset":6854,"count":0},{"startOffset":6855,"endOffset":6880,"count":0},{"startOffset":6881,"endOffset":6898,"count":0},{"startOffset":6899,"endOffset":6921,"count":0},{"startOffset":6923,"endOffset":7296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7307,"endOffset":7667,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7673,"endOffset":8303,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8309,"endOffset":8573,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8579,"endOffset":9042,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":9049,"endOffset":9135,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":9181,"endOffset":9189,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":9692,"endOffset":10118,"count":80},{"startOffset":10075,"endOffset":10105,"count":0}],"isBlockCoverage":true},{"functionName":"abortSignal","ranges":[{"startOffset":10122,"endOffset":10496,"count":1},{"startOffset":10186,"endOffset":10193,"count":0},{"startOffset":10382,"endOffset":10391,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10392,"endOffset":10491,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10500,"endOffset":11185,"count":117}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":10581,"endOffset":10669,"count":80}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":10717,"endOffset":10864,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10870,"endOffset":11001,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11014,"endOffset":11182,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":11340,"endOffset":11536,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":11613,"endOffset":11704,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":11805,"endOffset":12405,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"node:internal/test_runner/mock/mock","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9565,"count":1}],"isBlockCoverage":false},{"functionName":"kDefaultFunction","ranges":[{"startOffset":654,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":688,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2569,"endOffset":8879,"count":1}],"isBlockCoverage":false},{"functionName":"get timers","ranges":[{"startOffset":2622,"endOffset":2707,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2713,"endOffset":3486,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":3492,"endOffset":5724,"count":0}],"isBlockCoverage":false},{"functionName":"getter","ranges":[{"startOffset":5730,"endOffset":6352,"count":0}],"isBlockCoverage":false},{"functionName":"setter","ranges":[{"startOffset":6358,"endOffset":6980,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":6986,"endOffset":7075,"count":0}],"isBlockCoverage":false},{"functionName":"restoreAll","ranges":[{"startOffset":7081,"endOffset":7214,"count":0}],"isBlockCoverage":false},{"functionName":"#setupMock","ranges":[{"startOffset":7220,"endOffset":8876,"count":0}],"isBlockCoverage":false},{"functionName":"validateStringOrSymbol","ranges":[{"startOffset":8883,"endOffset":9074,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimes","ranges":[{"startOffset":9078,"endOffset":9203,"count":0}],"isBlockCoverage":false},{"functionName":"findMethodOnPrototypeChain","ranges":[{"startOffset":9207,"endOffset":9526,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"node:internal/test_runner/mock/mock_timers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9432,"count":1}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":769,"endOffset":855,"count":0}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":859,"endOffset":932,"count":0}],"isBlockCoverage":false},{"functionName":"abortIt","ranges":[{"startOffset":936,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1091,"endOffset":9394,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"node:timers/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6610,"count":1}],"isBlockCoverage":false},{"functionName":"cancelListenerHandler","ranges":[{"startOffset":734,"endOffset":909,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":913,"endOffset":2342,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":2346,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"setInterval","ranges":[{"startOffset":3741,"endOffset":5266,"count":0}],"isBlockCoverage":false},{"functionName":"Scheduler","ranges":[{"startOffset":5821,"endOffset":5883,"count":0}],"isBlockCoverage":true},{"functionName":"yield","ranges":[{"startOffset":5934,"endOffset":6052,"count":0}],"isBlockCoverage":false},{"functionName":"wait","ranges":[{"startOffset":6261,"endOffset":6435,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6540,"endOffset":6587,"count":1}],"isBlockCoverage":true}]},{"scriptId":"411","url":"node:internal/test_runner/tests_stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2523,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":204,"endOffset":2470,"count":3}],"isBlockCoverage":false},{"functionName":"TestsStream","ranges":[{"startOffset":271,"endOffset":376,"count":3}],"isBlockCoverage":true},{"functionName":"_read","ranges":[{"startOffset":382,"endOffset":587,"count":30},{"startOffset":458,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":593,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":778,"endOffset":955,"count":36}],"isBlockCoverage":true},{"functionName":"plan","ranges":[{"startOffset":961,"endOffset":1075,"count":9}],"isBlockCoverage":true},{"functionName":"getSkip","ranges":[{"startOffset":1081,"endOffset":1170,"count":0}],"isBlockCoverage":false},{"functionName":"getTodo","ranges":[{"startOffset":1176,"endOffset":1265,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":1271,"endOffset":1389,"count":36}],"isBlockCoverage":true},{"functionName":"dequeue","ranges":[{"startOffset":1395,"endOffset":1513,"count":36}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":1519,"endOffset":1633,"count":36}],"isBlockCoverage":true},{"functionName":"diagnostic","ranges":[{"startOffset":1639,"endOffset":1769,"count":8}],"isBlockCoverage":true},{"functionName":"stderr","ranges":[{"startOffset":1775,"endOffset":1879,"count":0}],"isBlockCoverage":false},{"functionName":"stdout","ranges":[{"startOffset":1885,"endOffset":1989,"count":0}],"isBlockCoverage":false},{"functionName":"coverage","ranges":[{"startOffset":1995,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2127,"endOffset":2165,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2171,"endOffset":2268,"count":161}],"isBlockCoverage":true},{"functionName":"#tryPush","ranges":[{"startOffset":2274,"endOffset":2467,"count":162},{"startOffset":2369,"endOffset":2433,"count":0}],"isBlockCoverage":true}]},{"scriptId":"412","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43549,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1849,"endOffset":1876,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2698,"endOffset":2706,"count":57}],"isBlockCoverage":true},{"functionName":"ReadableState","ranges":[{"startOffset":2754,"endOffset":6800,"count":92},{"startOffset":3160,"endOffset":3203,"count":0},{"startOffset":3410,"endOffset":3496,"count":11},{"startOffset":3444,"endOffset":3495,"count":10},{"startOffset":3749,"endOffset":3786,"count":0},{"startOffset":6158,"endOffset":6321,"count":0},{"startOffset":6695,"endOffset":6797,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6806,"endOffset":7725,"count":92},{"startOffset":6876,"endOffset":6905,"count":0},{"startOffset":7238,"endOffset":7264,"count":39},{"startOffset":7322,"endOffset":7354,"count":1},{"startOffset":7414,"endOffset":7450,"count":0},{"startOffset":7477,"endOffset":7489,"count":0},{"startOffset":7498,"endOffset":7535,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7607,"endOffset":7720,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":7866,"endOffset":7900,"count":38}],"isBlockCoverage":true},{"functionName":"Readable.<computed>","ranges":[{"startOffset":7953,"endOffset":7993,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":8039,"endOffset":8302,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":8537,"endOffset":8625,"count":713}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":8724,"endOffset":8811,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":8816,"endOffset":11225,"count":713},{"startOffset":8998,"endOffset":9835,"count":227},{"startOffset":9036,"endOffset":9512,"count":0},{"startOffset":9547,"endOffset":9577,"count":145},{"startOffset":9577,"endOffset":9830,"count":82},{"startOffset":9616,"endOffset":9696,"count":0},{"startOffset":9721,"endOffset":9830,"count":0},{"startOffset":9850,"endOffset":9890,"count":0},{"startOffset":9916,"endOffset":9982,"count":85},{"startOffset":9982,"endOffset":10934,"count":628},{"startOffset":10009,"endOffset":10039,"count":145},{"startOffset":10064,"endOffset":10308,"count":0},{"startOffset":10331,"endOffset":10403,"count":0},{"startOffset":10447,"endOffset":10476,"count":0},{"startOffset":10539,"endOffset":10551,"count":0},{"startOffset":10553,"endOffset":10766,"count":0},{"startOffset":10842,"endOffset":10934,"count":0},{"startOffset":11155,"endOffset":11221,"count":628},{"startOffset":11199,"endOffset":11220,"count":161}],"isBlockCoverage":true},{"functionName":"addChunk","ranges":[{"startOffset":11229,"endOffset":11985,"count":628},{"startOffset":11304,"endOffset":11325,"count":261},{"startOffset":11326,"endOffset":11340,"count":260},{"startOffset":11341,"endOffset":11383,"count":231},{"startOffset":11385,"endOffset":11687,"count":231},{"startOffset":11515,"endOffset":11563,"count":0},{"startOffset":11687,"endOffset":11949,"count":397},{"startOffset":11765,"endOffset":11768,"count":293},{"startOffset":11769,"endOffset":11783,"count":104},{"startOffset":11813,"endOffset":11841,"count":0},{"startOffset":11923,"endOffset":11944,"count":230}],"isBlockCoverage":true},{"functionName":"Readable.isPaused","ranges":[{"startOffset":12019,"endOffset":12134,"count":4}],"isBlockCoverage":true},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":12201,"endOffset":12779,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":12844,"endOffset":13210,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":13327,"endOffset":13735,"count":1193},{"startOffset":13376,"endOffset":13414,"count":890},{"startOffset":13399,"endOffset":13413,"count":493},{"startOffset":13421,"endOffset":13430,"count":372},{"startOffset":13430,"endOffset":13461,"count":821},{"startOffset":13461,"endOffset":13470,"count":646},{"startOffset":13470,"endOffset":13649,"count":175},{"startOffset":13559,"endOffset":13574,"count":60},{"startOffset":13583,"endOffset":13618,"count":28},{"startOffset":13618,"endOffset":13649,"count":147},{"startOffset":13649,"endOffset":13727,"count":0},{"startOffset":13728,"endOffset":13731,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":13835,"endOffset":18464,"count":1193},{"startOffset":14023,"endOffset":14043,"count":890},{"startOffset":14043,"endOffset":14112,"count":303},{"startOffset":14074,"endOffset":14112,"count":0},{"startOffset":14283,"endOffset":14332,"count":0},{"startOffset":14356,"endOffset":14386,"count":890},{"startOffset":14577,"endOffset":14605,"count":303},{"startOffset":14606,"endOffset":14743,"count":205},{"startOffset":14691,"endOffset":14718,"count":0},{"startOffset":14745,"endOffset":14937,"count":0},{"startOffset":15051,"endOffset":15065,"count":443},{"startOffset":15067,"endOffset":15146,"count":103},{"startOffset":15105,"endOffset":15123,"count":95},{"startOffset":15146,"endOffset":16451,"count":1090},{"startOffset":16451,"endOffset":16492,"count":454},{"startOffset":16494,"endOffset":16804,"count":1090},{"startOffset":16804,"endOffset":16820,"count":1045},{"startOffset":16821,"endOffset":16839,"count":468},{"startOffset":16840,"endOffset":16856,"count":468},{"startOffset":16857,"endOffset":16885,"count":468},{"startOffset":16887,"endOffset":16968,"count":622},{"startOffset":16968,"endOffset":17594,"count":468},{"startOffset":17172,"endOffset":17198,"count":210},{"startOffset":17293,"endOffset":17347,"count":0},{"startOffset":17557,"endOffset":17589,"count":0},{"startOffset":17594,"endOffset":17628,"count":1090},{"startOffset":17628,"endOffset":17653,"count":750},{"startOffset":17653,"endOffset":17678,"count":340},{"startOffset":17678,"endOffset":17702,"count":1090},{"startOffset":17702,"endOffset":17783,"count":693},{"startOffset":17783,"endOffset":17953,"count":397},{"startOffset":17847,"endOffset":17895,"count":0},{"startOffset":17953,"endOffset":17983,"count":1090},{"startOffset":17983,"endOffset":18308,"count":931},{"startOffset":18136,"endOffset":18162,"count":893},{"startOffset":18262,"endOffset":18276,"count":719},{"startOffset":18285,"endOffset":18303,"count":38},{"startOffset":18308,"endOffset":18331,"count":1090},{"startOffset":18331,"endOffset":18353,"count":397},{"startOffset":18354,"endOffset":18376,"count":397},{"startOffset":18378,"endOffset":18444,"count":397},{"startOffset":18444,"endOffset":18463,"count":1090}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":18469,"endOffset":19314,"count":85},{"startOffset":18550,"endOffset":18557,"count":0},{"startOffset":18580,"endOffset":18760,"count":0},{"startOffset":18805,"endOffset":19012,"count":50},{"startOffset":19012,"endOffset":19311,"count":35}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":19520,"endOffset":19856,"count":317}],"isBlockCoverage":true},{"functionName":"emitReadable_","ranges":[{"startOffset":19860,"endOffset":20533,"count":352},{"startOffset":20063,"endOffset":20077,"count":84},{"startOffset":20448,"endOffset":20468,"count":313},{"startOffset":20469,"endOffset":20512,"count":228}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":20892,"endOffset":21074,"count":628},{"startOffset":20958,"endOffset":20978,"count":470},{"startOffset":20980,"endOffset":21071,"count":470}],"isBlockCoverage":true},{"functionName":"maybeReadMore_","ranges":[{"startOffset":21078,"endOffset":22905,"count":470},{"startOffset":22568,"endOffset":22583,"count":268},{"startOffset":22584,"endOffset":22685,"count":230},{"startOffset":22633,"endOffset":22684,"count":0},{"startOffset":22687,"endOffset":22872,"count":230}],"isBlockCoverage":true},{"functionName":"Readable._read","ranges":[{"startOffset":23182,"endOffset":23250,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":23281,"endOffset":27884,"count":2},{"startOffset":23402,"endOffset":23610,"count":0},{"startOffset":23735,"endOffset":23760,"count":1},{"startOffset":23762,"endOffset":23803,"count":1},{"startOffset":23804,"endOffset":23845,"count":0},{"startOffset":23872,"endOffset":23879,"count":0},{"startOffset":23920,"endOffset":23944,"count":0},{"startOffset":27765,"endOffset":27785,"count":0},{"startOffset":27811,"endOffset":27863,"count":0}],"isBlockCoverage":true},{"functionName":"onunpipe","ranges":[{"startOffset":24019,"endOffset":24253,"count":2}],"isBlockCoverage":true},{"functionName":"onend","ranges":[{"startOffset":24259,"endOffset":24320,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":24370,"endOffset":25286,"count":2},{"startOffset":24578,"endOffset":24632,"count":1},{"startOffset":25168,"endOffset":25194,"count":1},{"startOffset":25195,"endOffset":25262,"count":1},{"startOffset":25271,"endOffset":25281,"count":1}],"isBlockCoverage":true},{"functionName":"pause","ranges":[{"startOffset":25292,"endOffset":26313,"count":161},{"startOffset":25762,"endOffset":25957,"count":0},{"startOffset":26004,"endOffset":26308,"count":1}],"isBlockCoverage":true},{"functionName":"ondata","ranges":[{"startOffset":26346,"endOffset":26513,"count":322},{"startOffset":26484,"endOffset":26508,"count":161}],"isBlockCoverage":true},{"functionName":"onerror","ranges":[{"startOffset":26639,"endOffset":27063,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":27249,"endOffset":27335,"count":0}],"isBlockCoverage":false},{"functionName":"onfinish","ranges":[{"startOffset":27371,"endOffset":27480,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":27520,"endOffset":27589,"count":2}],"isBlockCoverage":true},{"functionName":"pipeOnDrain","ranges":[{"startOffset":27889,"endOffset":28554,"count":1}],"isBlockCoverage":true},{"functionName":"pipeOnDrainFunctionResult","ranges":[{"startOffset":27933,"endOffset":28550,"count":161},{"startOffset":28257,"endOffset":28402,"count":0},{"startOffset":28440,"endOffset":28477,"count":0},{"startOffset":28516,"endOffset":28545,"count":160}],"isBlockCoverage":true},{"functionName":"Readable.unpipe","ranges":[{"startOffset":28588,"endOffset":29320,"count":2},{"startOffset":28781,"endOffset":28793,"count":0},{"startOffset":28810,"endOffset":29035,"count":0},{"startOffset":29156,"endOffset":29168,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.on","ranges":[{"startOffset":29450,"endOffset":30384,"count":568},{"startOffset":29586,"endOffset":29926,"count":37},{"startOffset":29926,"endOffset":30364,"count":531},{"startOffset":29955,"endOffset":30364,"count":40},{"startOffset":30226,"endOffset":30265,"count":37},{"startOffset":30265,"endOffset":30352,"count":3},{"startOffset":30291,"endOffset":30352,"count":1}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":30482,"endOffset":31062,"count":321},{"startOffset":30648,"endOffset":31042,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":31168,"endOffset":31777,"count":11},{"startOffset":31363,"endOffset":31757,"count":0}],"isBlockCoverage":true},{"functionName":"updateReadableListening","ranges":[{"startOffset":31782,"endOffset":32307,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":32311,"endOffset":32402,"count":1}],"isBlockCoverage":true},{"functionName":"Readable.resume","ranges":[{"startOffset":32560,"endOffset":32897,"count":275},{"startOffset":32634,"endOffset":32851,"count":205}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":32902,"endOffset":33057,"count":205}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":33061,"endOffset":33323,"count":205},{"startOffset":33153,"endOffset":33180,"count":51},{"startOffset":33281,"endOffset":33298,"count":73},{"startOffset":33305,"endOffset":33320,"count":11}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":33354,"endOffset":33630,"count":163},{"startOffset":33477,"endOffset":33571,"count":162}],"isBlockCoverage":true},{"functionName":"flow","ranges":[{"startOffset":33635,"endOffset":33786,"count":557},{"startOffset":33756,"endOffset":33781,"count":271},{"startOffset":33782,"endOffset":33783,"count":160}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":33975,"endOffset":35043,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":35090,"endOffset":35144,"count":39}],"isBlockCoverage":true},{"functionName":"Readable.iterator","ranges":[{"startOffset":35179,"endOffset":35327,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":35332,"endOffset":35589,"count":39},{"startOffset":35424,"endOffset":35489,"count":0}],"isBlockCoverage":true},{"functionName":"createAsyncIterator","ranges":[{"startOffset":35593,"endOffset":36717,"count":39},{"startOffset":36069,"endOffset":36351,"count":71},{"startOffset":36109,"endOffset":36115,"count":17},{"startOffset":36116,"endOffset":36131,"count":54},{"startOffset":36160,"endOffset":36192,"count":37},{"startOffset":36183,"endOffset":36192,"count":17},{"startOffset":36192,"endOffset":36344,"count":34},{"startOffset":36209,"endOffset":36241,"count":0},{"startOffset":36267,"endOffset":36344,"count":17},{"startOffset":36357,"endOffset":36439,"count":0},{"startOffset":36439,"endOffset":36714,"count":17},{"startOffset":36483,"endOffset":36500,"count":0},{"startOffset":36640,"endOffset":36709,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":35676,"endOffset":35823,"count":54},{"startOffset":35727,"endOffset":35777,"count":37},{"startOffset":35777,"endOffset":35818,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35926,"endOffset":36037,"count":37},{"startOffset":35954,"endOffset":35986,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":36944,"endOffset":37341,"count":175}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":37348,"endOffset":37483,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37571,"endOffset":37637,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37725,"endOffset":37939,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38033,"endOffset":38101,"count":39}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":38188,"endOffset":38272,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38360,"endOffset":38422,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":38434,"endOffset":38547,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38629,"endOffset":38685,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38771,"endOffset":38861,"count":1},{"startOffset":38846,"endOffset":38853,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":38945,"endOffset":39032,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39107,"endOffset":39193,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39243,"endOffset":39329,"count":82},{"startOffset":39314,"endOffset":39321,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":39406,"endOffset":39495,"count":130},{"startOffset":39480,"endOffset":39487,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":39502,"endOffset":39801,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39882,"endOffset":39972,"count":86},{"startOffset":39957,"endOffset":39964,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":40122,"endOffset":40169,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":40255,"endOffset":40308,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":40315,"endOffset":40366,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":40683,"endOffset":41268,"count":750},{"startOffset":40769,"endOffset":40781,"count":353},{"startOffset":40781,"endOffset":40826,"count":397},{"startOffset":40826,"endOffset":40853,"count":293},{"startOffset":40853,"endOffset":41248,"count":104},{"startOffset":40964,"endOffset":40992,"count":0},{"startOffset":41068,"endOffset":41126,"count":0},{"startOffset":41158,"endOffset":41248,"count":0},{"startOffset":41248,"endOffset":41267,"count":397}],"isBlockCoverage":true},{"functionName":"endReadable","ranges":[{"startOffset":41272,"endOffset":41501,"count":133}],"isBlockCoverage":true},{"functionName":"endReadableNT","ranges":[{"startOffset":41505,"endOffset":42452,"count":133},{"startOffset":41677,"endOffset":41699,"count":131},{"startOffset":41700,"endOffset":41727,"count":131},{"startOffset":41728,"endOffset":41749,"count":83},{"startOffset":41751,"endOffset":42449,"count":83},{"startOffset":41835,"endOffset":41868,"count":2},{"startOffset":41870,"endOffset":41926,"count":2},{"startOffset":41926,"endOffset":42444,"count":81},{"startOffset":42162,"endOffset":42372,"count":4},{"startOffset":42334,"endOffset":42362,"count":3},{"startOffset":42400,"endOffset":42437,"count":78}],"isBlockCoverage":true},{"functionName":"endWritableNT","ranges":[{"startOffset":42456,"endOffset":42622,"count":2}],"isBlockCoverage":true},{"functionName":"Readable.from","ranges":[{"startOffset":42642,"endOffset":42713,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":42783,"endOffset":42951,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":42974,"endOffset":43112,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":43134,"endOffset":43272,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":43293,"endOffset":43546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3048,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":121,"endOffset":171,"count":142}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":289,"endOffset":2169,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2174,"endOffset":2997,"count":2},{"startOffset":2437,"endOffset":2806,"count":0},{"startOffset":2813,"endOffset":2994,"count":0}],"isBlockCoverage":true}]},{"scriptId":"414","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1763,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":581,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":782,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1146,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8754,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":795,"endOffset":1224,"count":136},{"startOffset":910,"endOffset":946,"count":135},{"startOffset":947,"endOffset":1058,"count":135},{"startOffset":972,"endOffset":1051,"count":0},{"startOffset":1059,"endOffset":1130,"count":135},{"startOffset":1088,"endOffset":1129,"count":12},{"startOffset":1131,"endOffset":1192,"count":135},{"startOffset":1170,"endOffset":1191,"count":12}],"isBlockCoverage":true},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":1228,"endOffset":1455,"count":87},{"startOffset":1328,"endOffset":1364,"count":8},{"startOffset":1365,"endOffset":1436,"count":8}],"isBlockCoverage":true},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1459,"endOffset":1665,"count":1},{"startOffset":1557,"endOffset":1578,"count":0},{"startOffset":1580,"endOffset":1616,"count":0},{"startOffset":1617,"endOffset":1656,"count":0}],"isBlockCoverage":true},{"functionName":"isNodeStream","ranges":[{"startOffset":1669,"endOffset":1950,"count":323},{"startOffset":1755,"endOffset":1783,"count":3},{"startOffset":1784,"endOffset":1859,"count":3},{"startOffset":1827,"endOffset":1858,"count":0},{"startOffset":1860,"endOffset":1934,"count":3},{"startOffset":1902,"endOffset":1933,"count":0}],"isBlockCoverage":true},{"functionName":"isReadableStream","ranges":[{"startOffset":1954,"endOffset":2176,"count":42},{"startOffset":2037,"endOffset":2082,"count":1},{"startOffset":2083,"endOffset":2126,"count":0},{"startOffset":2127,"endOffset":2167,"count":0}],"isBlockCoverage":true},{"functionName":"isWritableStream","ranges":[{"startOffset":2180,"endOffset":2355,"count":43},{"startOffset":2263,"endOffset":2306,"count":1},{"startOffset":2307,"endOffset":2346,"count":0}],"isBlockCoverage":true},{"functionName":"isTransformStream","ranges":[{"startOffset":2359,"endOffset":2533,"count":1},{"startOffset":2443,"endOffset":2483,"count":0},{"startOffset":2484,"endOffset":2524,"count":0}],"isBlockCoverage":true},{"functionName":"isWebStream","ranges":[{"startOffset":2537,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2655,"endOffset":2991,"count":2},{"startOffset":2711,"endOffset":2724,"count":0},{"startOffset":2750,"endOffset":2804,"count":0},{"startOffset":2831,"endOffset":2880,"count":0},{"startOffset":2938,"endOffset":2987,"count":0}],"isBlockCoverage":true},{"functionName":"isDestroyed","ranges":[{"startOffset":2995,"endOffset":3264,"count":28},{"startOffset":3056,"endOffset":3068,"count":0},{"startOffset":3175,"endOffset":3184,"count":20},{"startOffset":3216,"endOffset":3239,"count":10},{"startOffset":3240,"endOffset":3259,"count":10}],"isBlockCoverage":true},{"functionName":"isWritableEnded","ranges":[{"startOffset":3291,"endOffset":3589,"count":3},{"startOffset":3364,"endOffset":3376,"count":0},{"startOffset":3415,"endOffset":3427,"count":0},{"startOffset":3493,"endOffset":3506,"count":0},{"startOffset":3550,"endOffset":3562,"count":0}],"isBlockCoverage":true},{"functionName":"isWritableFinished","ranges":[{"startOffset":3620,"endOffset":4027,"count":41},{"startOffset":3704,"endOffset":3716,"count":39},{"startOffset":3716,"endOffset":3758,"count":2},{"startOffset":3758,"endOffset":3770,"count":0},{"startOffset":3770,"endOffset":3834,"count":2},{"startOffset":3836,"endOffset":3849,"count":0},{"startOffset":3849,"endOffset":3880,"count":2},{"startOffset":3896,"endOffset":3908,"count":0},{"startOffset":3908,"endOffset":4018,"count":2},{"startOffset":3995,"endOffset":4017,"count":0}],"isBlockCoverage":true},{"functionName":"isReadableEnded","ranges":[{"startOffset":4059,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":4395,"endOffset":4752,"count":49},{"startOffset":4479,"endOffset":4491,"count":0},{"startOffset":4557,"endOffset":4570,"count":0},{"startOffset":4619,"endOffset":4631,"count":0},{"startOffset":4695,"endOffset":4719,"count":41},{"startOffset":4720,"endOffset":4742,"count":37}],"isBlockCoverage":true},{"functionName":"isReadable","ranges":[{"startOffset":4756,"endOffset":5063,"count":7},{"startOffset":4832,"endOffset":4859,"count":0},{"startOffset":4906,"endOffset":4918,"count":0},{"startOffset":4947,"endOffset":4960,"count":0}],"isBlockCoverage":true},{"functionName":"isWritable","ranges":[{"startOffset":5067,"endOffset":5371,"count":43},{"startOffset":5143,"endOffset":5170,"count":0},{"startOffset":5217,"endOffset":5229,"count":40},{"startOffset":5229,"endOffset":5258,"count":3},{"startOffset":5258,"endOffset":5271,"count":0},{"startOffset":5271,"endOffset":5334,"count":3},{"startOffset":5335,"endOffset":5367,"count":3}],"isBlockCoverage":true},{"functionName":"isFinished","ranges":[{"startOffset":5375,"endOffset":5707,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":5711,"endOffset":5933,"count":39},{"startOffset":5778,"endOffset":5802,"count":0},{"startOffset":5836,"endOffset":5878,"count":0},{"startOffset":5912,"endOffset":5921,"count":0}],"isBlockCoverage":true},{"functionName":"isReadableErrored","ranges":[{"startOffset":5937,"endOffset":6159,"count":39},{"startOffset":6004,"endOffset":6028,"count":0},{"startOffset":6062,"endOffset":6104,"count":0}],"isBlockCoverage":true},{"functionName":"isClosed","ranges":[{"startOffset":6163,"endOffset":6692,"count":41},{"startOffset":6221,"endOffset":6245,"count":0},{"startOffset":6324,"endOffset":6445,"count":0},{"startOffset":6460,"endOffset":6503,"count":0},{"startOffset":6509,"endOffset":6635,"count":0},{"startOffset":6637,"endOffset":6691,"count":0}],"isBlockCoverage":true},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":6696,"endOffset":6955,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":6959,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":7095,"endOffset":7289,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":7293,"endOffset":7644,"count":41},{"startOffset":7356,"endOffset":7368,"count":0},{"startOffset":7477,"endOffset":7486,"count":39},{"startOffset":7508,"endOffset":7535,"count":0}],"isBlockCoverage":true},{"functionName":"isDisturbed","ranges":[{"startOffset":7648,"endOffset":7798,"count":17},{"startOffset":7730,"endOffset":7788,"count":0}],"isBlockCoverage":true},{"functionName":"isErrored","ranges":[{"startOffset":7802,"endOffset":8117,"count":37},{"startOffset":7880,"endOffset":7910,"count":0},{"startOffset":7911,"endOffset":7941,"count":0},{"startOffset":7942,"endOffset":7985,"count":0},{"startOffset":7986,"endOffset":8029,"count":0},{"startOffset":8030,"endOffset":8068,"count":0},{"startOffset":8069,"endOffset":8107,"count":0}],"isBlockCoverage":true}]},{"scriptId":"416","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8687,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":939,"endOffset":1036,"count":41},{"startOffset":995,"endOffset":1032,"count":0}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":1052,"endOffset":1060,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1065,"endOffset":7220,"count":41},{"startOffset":1138,"endOffset":1198,"count":0},{"startOffset":1225,"endOffset":1260,"count":0},{"startOffset":1510,"endOffset":1563,"count":0},{"startOffset":1596,"endOffset":1705,"count":0},{"startOffset":1745,"endOffset":1776,"count":37},{"startOffset":1815,"endOffset":1846,"count":0},{"startOffset":2301,"endOffset":2350,"count":39},{"startOffset":4589,"endOffset":4807,"count":0},{"startOffset":4826,"endOffset":4836,"count":2},{"startOffset":4838,"endOffset":4942,"count":0},{"startOffset":5024,"endOffset":5062,"count":2},{"startOffset":5064,"endOffset":5106,"count":0},{"startOffset":5293,"endOffset":5331,"count":0},{"startOffset":5347,"endOffset":5361,"count":2},{"startOffset":5387,"endOffset":5462,"count":0},{"startOffset":5488,"endOffset":5534,"count":2},{"startOffset":5512,"endOffset":5533,"count":0},{"startOffset":5535,"endOffset":5593,"count":2},{"startOffset":5599,"endOffset":5638,"count":0},{"startOffset":5664,"endOffset":5710,"count":39},{"startOffset":5711,"endOffset":5769,"count":0},{"startOffset":5775,"endOffset":5814,"count":0},{"startOffset":5846,"endOffset":5863,"count":0},{"startOffset":5866,"endOffset":5905,"count":0},{"startOffset":6534,"endOffset":6544,"count":0},{"startOffset":6546,"endOffset":7196,"count":0}],"isBlockCoverage":true},{"functionName":"onlegacyfinish","ranges":[{"startOffset":1960,"endOffset":2027,"count":0}],"isBlockCoverage":false},{"functionName":"onfinish","ranges":[{"startOffset":2440,"endOffset":2876,"count":2},{"startOffset":2668,"endOffset":2706,"count":0},{"startOffset":2732,"endOffset":2765,"count":0},{"startOffset":2767,"endOffset":2790,"count":0},{"startOffset":2812,"endOffset":2831,"count":0}],"isBlockCoverage":true},{"functionName":"onend","ranges":[{"startOffset":2958,"endOffset":3394,"count":41},{"startOffset":3186,"endOffset":3224,"count":0},{"startOffset":3250,"endOffset":3283,"count":39},{"startOffset":3271,"endOffset":3282,"count":0},{"startOffset":3285,"endOffset":3308,"count":39},{"startOffset":3308,"endOffset":3349,"count":2},{"startOffset":3351,"endOffset":3389,"count":0}],"isBlockCoverage":true},{"functionName":"onerror","ranges":[{"startOffset":3417,"endOffset":3465,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":3524,"endOffset":4210,"count":39},{"startOffset":3650,"endOffset":3681,"count":0},{"startOffset":3683,"endOffset":3737,"count":0},{"startOffset":3779,"endOffset":3816,"count":0},{"startOffset":3818,"endOffset":3976,"count":0},{"startOffset":3995,"endOffset":4015,"count":0},{"startOffset":4017,"endOffset":4175,"count":0}],"isBlockCoverage":true},{"functionName":"onclosed","ranges":[{"startOffset":4234,"endOffset":4482,"count":0}],"isBlockCoverage":false},{"functionName":"onrequest","ranges":[{"startOffset":4507,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":5927,"endOffset":6508,"count":2},{"startOffset":6171,"endOffset":6217,"count":0}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":6567,"endOffset":6795,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7074,"endOffset":7182,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7224,"endOffset":8140,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":8144,"endOffset":8623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"node:internal/streams/buffer_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4241,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":267,"endOffset":355,"count":92}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":361,"endOffset":556,"count":397},{"startOffset":448,"endOffset":471,"count":102},{"startOffset":471,"endOffset":507,"count":295}],"isBlockCoverage":true},{"functionName":"unshift","ranges":[{"startOffset":562,"endOffset":726,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":732,"endOffset":969,"count":293},{"startOffset":777,"endOffset":784,"count":0},{"startOffset":853,"endOffset":882,"count":191},{"startOffset":882,"endOffset":927,"count":102}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":975,"endOffset":1046,"count":104}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":1052,"endOffset":1242,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1248,"endOffset":1543,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1630,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":2104,"endOffset":2146,"count":132}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":2152,"endOffset":2252,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2330,"endOffset":2996,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":3069,"endOffset":3947,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":4031,"endOffset":4235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7166,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":382,"endOffset":705,"count":170},{"startOffset":427,"endOffset":702,"count":4},{"startOffset":606,"endOffset":638,"count":2},{"startOffset":665,"endOffset":697,"count":2}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":819,"endOffset":1642,"count":85},{"startOffset":992,"endOffset":996,"count":77},{"startOffset":1008,"endOffset":1019,"count":8},{"startOffset":1037,"endOffset":1120,"count":0},{"startOffset":1312,"endOffset":1343,"count":8},{"startOffset":1468,"endOffset":1579,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1495,"endOffset":1572,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1646,"endOffset":2296,"count":85},{"startOffset":2228,"endOffset":2235,"count":83},{"startOffset":2254,"endOffset":2293,"count":0}],"isBlockCoverage":true},{"functionName":"onDestroy","ranges":[{"startOffset":1709,"endOffset":2195,"count":85},{"startOffset":1752,"endOffset":1775,"count":0},{"startOffset":1914,"endOffset":1946,"count":8},{"startOffset":2029,"endOffset":2053,"count":0},{"startOffset":2070,"endOffset":2132,"count":2},{"startOffset":2132,"endOffset":2190,"count":83}],"isBlockCoverage":true},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2300,"endOffset":2390,"count":2}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":2394,"endOffset":2656,"count":85},{"startOffset":2503,"endOffset":2537,"count":8},{"startOffset":2593,"endOffset":2604,"count":8},{"startOffset":2605,"endOffset":2620,"count":83},{"startOffset":2622,"endOffset":2653,"count":79}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":2660,"endOffset":2951,"count":2},{"startOffset":2807,"endOffset":2826,"count":0}],"isBlockCoverage":true},{"functionName":"undestroy","ranges":[{"startOffset":2955,"endOffset":3674,"count":13}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":3678,"endOffset":4629,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":4633,"endOffset":5062,"count":103},{"startOffset":4733,"endOffset":5061,"count":0}],"isBlockCoverage":true},{"functionName":"constructNT","ranges":[{"startOffset":5066,"endOffset":5850,"count":0}],"isBlockCoverage":false},{"functionName":"emitConstructNT","ranges":[{"startOffset":5854,"endOffset":5919,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":5923,"endOffset":6021,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6025,"endOffset":6087,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6091,"endOffset":6214,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6252,"endOffset":7065,"count":18},{"startOffset":6344,"endOffset":6381,"count":0},{"startOffset":6383,"endOffset":7062,"count":0}],"isBlockCoverage":true}]},{"scriptId":"419","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1382,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":300,"endOffset":470,"count":103},{"startOffset":399,"endOffset":422,"count":45},{"startOffset":423,"endOffset":466,"count":58},{"startOffset":439,"endOffset":459,"count":16},{"startOffset":460,"endOffset":466,"count":42}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":474,"endOffset":606,"count":55},{"startOffset":542,"endOffset":574,"count":4},{"startOffset":575,"endOffset":602,"count":51}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":610,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":832,"endOffset":1277,"count":103},{"startOffset":981,"endOffset":1199,"count":49},{"startOffset":1026,"endOffset":1166,"count":0},{"startOffset":1199,"endOffset":1276,"count":54}],"isBlockCoverage":true}]},{"scriptId":"420","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5380,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2190,"endOffset":2460,"count":31},{"startOffset":2304,"endOffset":2441,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2786,"endOffset":2989,"count":31}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3321,"endOffset":3717,"count":28},{"startOffset":3380,"endOffset":3391,"count":0},{"startOffset":3429,"endOffset":3582,"count":0},{"startOffset":3613,"endOffset":3669,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":4003,"endOffset":4201,"count":31},{"startOffset":4071,"endOffset":4093,"count":0},{"startOffset":4148,"endOffset":4183,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":4421,"endOffset":4582,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4727,"endOffset":4944,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5042,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5206,"endOffset":5324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2727,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":255,"endOffset":2699,"count":1},{"startOffset":381,"endOffset":546,"count":0},{"startOffset":691,"endOffset":896,"count":0}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":458,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"readable._read","ranges":[{"startOffset":1191,"endOffset":1274,"count":162}],"isBlockCoverage":true},{"functionName":"readable._destroy","ranges":[{"startOffset":1301,"endOffset":1511,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1378,"endOffset":1411,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1458,"endOffset":1497,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1518,"endOffset":1969,"count":1},{"startOffset":1691,"endOffset":1702,"count":0},{"startOffset":1704,"endOffset":1837,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":1975,"endOffset":2676,"count":162},{"startOffset":2104,"endOffset":2132,"count":0},{"startOffset":2155,"endOffset":2199,"count":1},{"startOffset":2199,"endOffset":2586,"count":161},{"startOffset":2287,"endOffset":2314,"count":0},{"startOffset":2365,"endOffset":2458,"count":0},{"startOffset":2488,"endOffset":2525,"count":0},{"startOffset":2596,"endOffset":2650,"count":0}],"isBlockCoverage":true}]},{"scriptId":"422","url":"node:internal/test_runner/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13583,"count":1}],"isBlockCoverage":false},{"functionName":"doesPathMatchFilter","ranges":[{"startOffset":1283,"endOffset":1390,"count":0}],"isBlockCoverage":false},{"functionName":"isSupportedFileType","ranges":[{"startOffset":1394,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"createDeferredCallback","ranges":[{"startOffset":1503,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"isTestFailureError","ranges":[{"startOffset":2131,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"convertStringToRegExp","ranges":[{"startOffset":2239,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"tryBuiltinReporter","ranges":[{"startOffset":3083,"endOffset":3263,"count":1},{"startOffset":3207,"endOffset":3226,"count":0}],"isBlockCoverage":true},{"functionName":"getReportersMap","ranges":[{"startOffset":3267,"endOffset":4452,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3386,"endOffset":4447,"count":1},{"startOffset":3474,"endOffset":3511,"count":0},{"startOffset":3732,"endOffset":4049,"count":0},{"startOffset":4080,"endOffset":4124,"count":0},{"startOffset":4226,"endOffset":4268,"count":0},{"startOffset":4291,"endOffset":4384,"count":0}],"isBlockCoverage":true},{"functionName":"setupTestReporters","ranges":[{"startOffset":4458,"endOffset":4820,"count":1}],"isBlockCoverage":true},{"functionName":"parseCommandLine","ranges":[{"startOffset":4850,"endOffset":6849,"count":3},{"startOffset":4906,"endOffset":4943,"count":2},{"startOffset":4943,"endOffset":5496,"count":1},{"startOffset":5496,"endOffset":6229,"count":0},{"startOffset":6229,"endOffset":6253,"count":1},{"startOffset":6253,"endOffset":6316,"count":0},{"startOffset":6316,"endOffset":6649,"count":1},{"startOffset":6503,"endOffset":6636,"count":0},{"startOffset":6649,"endOffset":6848,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6570,"endOffset":6626,"count":0}],"isBlockCoverage":false},{"functionName":"countCompletedTest","ranges":[{"startOffset":6853,"endOffset":7487,"count":36},{"startOffset":6945,"endOffset":6985,"count":1},{"startOffset":7024,"endOffset":7075,"count":8},{"startOffset":7075,"endOffset":7186,"count":28},{"startOffset":7186,"endOffset":7225,"count":0},{"startOffset":7225,"endOffset":7457,"count":28},{"startOffset":7248,"endOffset":7284,"count":0},{"startOffset":7310,"endOffset":7351,"count":0},{"startOffset":7375,"endOffset":7413,"count":0},{"startOffset":7457,"endOffset":7486,"count":28}],"isBlockCoverage":true},{"functionName":"addTableLine","ranges":[{"startOffset":7522,"endOffset":7775,"count":0}],"isBlockCoverage":false},{"functionName":"truncateStart","ranges":[{"startOffset":7818,"endOffset":7987,"count":0}],"isBlockCoverage":false},{"functionName":"truncateEnd","ranges":[{"startOffset":7991,"endOffset":8145,"count":0}],"isBlockCoverage":false},{"functionName":"formatLinesToRanges","ranges":[{"startOffset":8149,"endOffset":8512,"count":0}],"isBlockCoverage":false},{"functionName":"formatUncoveredLines","ranges":[{"startOffset":8516,"endOffset":8681,"count":0}],"isBlockCoverage":false},{"functionName":"getCoverageReport","ranges":[{"startOffset":8863,"endOffset":13342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1162,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":35,"endOffset":133,"count":29}],"isBlockCoverage":true},{"functionName":"shouldColorize","ranges":[{"startOffset":260,"endOffset":527,"count":29},{"startOffset":394,"endOffset":420,"count":0},{"startOffset":421,"endOffset":521,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":532,"endOffset":1126,"count":1},{"startOffset":575,"endOffset":1121,"count":0}],"isBlockCoverage":true}]},{"scriptId":"424","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68315,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1656,"endOffset":1683,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":4174,"endOffset":4182,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4606,"endOffset":4702,"count":1},{"startOffset":4664,"endOffset":4694,"count":0}],"isBlockCoverage":true},{"functionName":"createHandle","ranges":[{"startOffset":4706,"endOffset":5105,"count":3},{"startOffset":4878,"endOffset":4900,"count":0},{"startOffset":4937,"endOffset":5104,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5111,"endOffset":5252,"count":12},{"startOffset":5207,"endOffset":5226,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5258,"endOffset":5343,"count":2},{"startOffset":5315,"endOffset":5339,"count":0}],"isBlockCoverage":true},{"functionName":"createServer","ranges":[{"startOffset":5556,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":5900,"endOffset":6317,"count":4},{"startOffset":6134,"endOffset":6202,"count":0},{"startOffset":6227,"endOffset":6274,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6321,"endOffset":6398,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6402,"endOffset":6521,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6525,"endOffset":6630,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6634,"endOffset":6829,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7335,"endOffset":8094,"count":5},{"startOffset":7406,"endOffset":7491,"count":1},{"startOffset":7491,"endOffset":7572,"count":4},{"startOffset":7572,"endOffset":7588,"count":2},{"startOffset":7590,"endOffset":7903,"count":2},{"startOffset":7674,"endOffset":7732,"count":0},{"startOffset":7903,"endOffset":8003,"count":4},{"startOffset":8003,"endOffset":8037,"count":0},{"startOffset":8037,"endOffset":8093,"count":4}],"isBlockCoverage":true},{"functionName":"initSocketHandle","ranges":[{"startOffset":8170,"endOffset":8795,"count":13},{"startOffset":8342,"endOffset":8792,"count":9},{"startOffset":8537,"endOffset":8787,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8799,"endOffset":9151,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8920,"endOffset":9141,"count":6},{"startOffset":9025,"endOffset":9134,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":9411,"endOffset":14177,"count":9},{"startOffset":9472,"endOffset":9499,"count":0},{"startOffset":9528,"endOffset":9663,"count":0},{"startOffset":9733,"endOffset":9989,"count":0},{"startOffset":10052,"endOffset":10256,"count":0},{"startOffset":10837,"endOffset":10863,"count":0},{"startOffset":11282,"endOffset":11393,"count":2},{"startOffset":11393,"endOffset":12669,"count":7},{"startOffset":11429,"endOffset":12669,"count":3},{"startOffset":11936,"endOffset":11970,"count":0},{"startOffset":12050,"endOffset":12061,"count":2},{"startOffset":12063,"endOffset":12105,"count":2},{"startOffset":12106,"endOffset":12118,"count":2},{"startOffset":12120,"endOffset":12664,"count":2},{"startOffset":12245,"endOffset":12286,"count":0},{"startOffset":12759,"endOffset":12837,"count":0},{"startOffset":12838,"endOffset":12885,"count":0},{"startOffset":12887,"endOffset":13110,"count":0},{"startOffset":13630,"endOffset":13659,"count":5},{"startOffset":13661,"endOffset":13935,"count":3},{"startOffset":13695,"endOffset":13869,"count":0},{"startOffset":13901,"endOffset":13930,"count":2},{"startOffset":13961,"endOffset":14015,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":14355,"endOffset":14490,"count":252},{"startOffset":14460,"endOffset":14482,"count":74}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":14615,"endOffset":15253,"count":2},{"startOffset":14731,"endOffset":14835,"count":0},{"startOffset":14865,"endOffset":14877,"count":0},{"startOffset":15166,"endOffset":15178,"count":0},{"startOffset":15207,"endOffset":15250,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14807,"endOffset":14828,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":15258,"endOffset":15410,"count":2}],"isBlockCoverage":true},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15622,"endOffset":16150,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":16237,"endOffset":16756,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16793,"endOffset":17185,"count":4},{"startOffset":16921,"endOffset":16927,"count":0},{"startOffset":16963,"endOffset":17020,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":17224,"endOffset":17856,"count":4},{"startOffset":17369,"endOffset":17481,"count":0},{"startOffset":17519,"endOffset":17543,"count":0},{"startOffset":17584,"endOffset":17681,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.address","ranges":[{"startOffset":17890,"endOffset":17936,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18027,"endOffset":18073,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18158,"endOffset":18216,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":18334,"endOffset":18660,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18755,"endOffset":18839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18932,"endOffset":18979,"count":84}],"isBlockCoverage":true},{"functionName":"tryReadStart","ranges":[{"startOffset":18991,"endOffset":19244,"count":6},{"startOffset":19197,"endOffset":19241,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._read","ranges":[{"startOffset":19339,"endOffset":19671,"count":88},{"startOffset":19491,"endOffset":19507,"count":86},{"startOffset":19509,"endOffset":19604,"count":2},{"startOffset":19604,"endOffset":19668,"count":86},{"startOffset":19637,"endOffset":19668,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19578,"endOffset":19597,"count":2}],"isBlockCoverage":true},{"functionName":"Socket.end","ranges":[{"startOffset":19701,"endOffset":19861,"count":2}],"isBlockCoverage":true},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":19901,"endOffset":20265,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":20295,"endOffset":20640,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":20673,"endOffset":20863,"count":71},{"startOffset":20707,"endOffset":20726,"count":0},{"startOffset":20727,"endOffset":20742,"count":0},{"startOffset":20743,"endOffset":20774,"count":0},{"startOffset":20776,"endOffset":20807,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.read","ranges":[{"startOffset":20894,"endOffset":21086,"count":139},{"startOffset":20929,"endOffset":20948,"count":0},{"startOffset":20949,"endOffset":20964,"count":0},{"startOffset":20965,"endOffset":20996,"count":0},{"startOffset":20998,"endOffset":21029,"count":0}],"isBlockCoverage":true},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":21137,"endOffset":21240,"count":4}],"isBlockCoverage":true},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":21277,"endOffset":21432,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":21467,"endOffset":23029,"count":6},{"startOffset":21777,"endOffset":21783,"count":2},{"startOffset":21784,"endOffset":21791,"count":4},{"startOffset":22008,"endOffset":22257,"count":0},{"startOffset":22298,"endOffset":22538,"count":0},{"startOffset":22767,"endOffset":22841,"count":0},{"startOffset":22865,"endOffset":23026,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22085,"endOffset":22173,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22481,"endOffset":22529,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":23060,"endOffset":23163,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":23200,"endOffset":23507,"count":6},{"startOffset":23283,"endOffset":23323,"count":0},{"startOffset":23350,"endOffset":23478,"count":2},{"startOffset":23435,"endOffset":23446,"count":0}],"isBlockCoverage":true},{"functionName":"protoGetter","ranges":[{"startOffset":23512,"endOffset":23701,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23730,"endOffset":23823,"count":2},{"startOffset":23801,"endOffset":23819,"count":0}],"isBlockCoverage":true},{"functionName":"remoteAddress","ranges":[{"startOffset":23858,"endOffset":23926,"count":2}],"isBlockCoverage":true},{"functionName":"remoteFamily","ranges":[{"startOffset":23960,"endOffset":24026,"count":2}],"isBlockCoverage":true},{"functionName":"remotePort","ranges":[{"startOffset":24058,"endOffset":24120,"count":2}],"isBlockCoverage":true},{"functionName":"Socket._getsockname","ranges":[{"startOffset":24160,"endOffset":24445,"count":4},{"startOffset":24224,"endOffset":24246,"count":0},{"startOffset":24273,"endOffset":24416,"count":2}],"isBlockCoverage":true},{"functionName":"localAddress","ranges":[{"startOffset":24480,"endOffset":24547,"count":2}],"isBlockCoverage":true},{"functionName":"localPort","ranges":[{"startOffset":24580,"endOffset":24641,"count":2}],"isBlockCoverage":true},{"functionName":"localFamily","ranges":[{"startOffset":24674,"endOffset":24739,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":24782,"endOffset":24831,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":24869,"endOffset":25815,"count":119},{"startOffset":25095,"endOffset":25451,"count":0},{"startOffset":25536,"endOffset":25595,"count":0},{"startOffset":25655,"endOffset":25691,"count":65},{"startOffset":25691,"endOffset":25750,"count":54},{"startOffset":25774,"endOffset":25812,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":25193,"endOffset":25310,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":25318,"endOffset":25399,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":25849,"endOffset":25919,"count":65}],"isBlockCoverage":true},{"functionName":"Socket._write","ranges":[{"startOffset":25952,"endOffset":26035,"count":54}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":26233,"endOffset":26339,"count":2},{"startOffset":26314,"endOffset":26335,"count":0}],"isBlockCoverage":true},{"functionName":"bytesWritten","ranges":[{"startOffset":26373,"endOffset":27336,"count":2},{"startOffset":26593,"endOffset":26610,"count":0},{"startOffset":26649,"endOffset":26772,"count":0},{"startOffset":26802,"endOffset":27119,"count":0},{"startOffset":27135,"endOffset":27314,"count":0}],"isBlockCoverage":true},{"functionName":"checkBindError","ranges":[{"startOffset":27344,"endOffset":28161,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":28167,"endOffset":30225,"count":2},{"startOffset":28431,"endOffset":29083,"count":0},{"startOffset":29515,"endOffset":29581,"count":0},{"startOffset":29586,"endOffset":29751,"count":0},{"startOffset":29766,"endOffset":30024,"count":0},{"startOffset":30098,"endOffset":30222,"count":0}],"isBlockCoverage":true},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":30231,"endOffset":33056,"count":2},{"startOffset":30431,"endOffset":30450,"count":0},{"startOffset":30592,"endOffset":30785,"count":0},{"startOffset":30878,"endOffset":30946,"count":0},{"startOffset":31121,"endOffset":31793,"count":0},{"startOffset":32265,"endOffset":32324,"count":0},{"startOffset":32405,"endOffset":32717,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.connect","ranges":[{"startOffset":33087,"endOffset":34743,"count":4},{"startOffset":33504,"endOffset":33555,"count":0},{"startOffset":33641,"endOffset":33678,"count":0},{"startOffset":33776,"endOffset":33802,"count":0},{"startOffset":33804,"endOffset":33828,"count":0},{"startOffset":33916,"endOffset":33939,"count":0},{"startOffset":33946,"endOffset":34002,"count":0},{"startOffset":34056,"endOffset":34092,"count":0},{"startOffset":34118,"endOffset":34206,"count":0},{"startOffset":34343,"endOffset":34382,"count":0},{"startOffset":34525,"endOffset":34674,"count":0}],"isBlockCoverage":true},{"functionName":"reinitializeHandle","ranges":[{"startOffset":34788,"endOffset":34949,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":34954,"endOffset":35109,"count":2},{"startOffset":35017,"endOffset":35046,"count":0},{"startOffset":35052,"endOffset":35081,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndConnect","ranges":[{"startOffset":35113,"endOffset":39172,"count":4},{"startOffset":35233,"endOffset":35247,"count":0},{"startOffset":35348,"endOffset":35370,"count":0},{"startOffset":35372,"endOffset":35431,"count":0},{"startOffset":35452,"endOffset":35511,"count":0},{"startOffset":35586,"endOffset":35613,"count":2},{"startOffset":35615,"endOffset":35744,"count":0},{"startOffset":35826,"endOffset":35900,"count":0},{"startOffset":36011,"endOffset":36215,"count":0},{"startOffset":36411,"endOffset":36765,"count":2},{"startOffset":36765,"endOffset":36816,"count":0},{"startOffset":36816,"endOffset":36845,"count":2},{"startOffset":36845,"endOffset":36866,"count":1},{"startOffset":36866,"endOffset":36966,"count":2},{"startOffset":36994,"endOffset":37024,"count":0},{"startOffset":37025,"endOffset":37055,"count":0},{"startOffset":37056,"endOffset":37085,"count":0},{"startOffset":37087,"endOffset":37130,"count":0},{"startOffset":37130,"endOffset":37282,"count":2},{"startOffset":37314,"endOffset":37337,"count":2},{"startOffset":37338,"endOffset":37354,"count":2},{"startOffset":37355,"endOffset":37374,"count":2},{"startOffset":37376,"endOffset":37790,"count":2},{"startOffset":37790,"endOffset":39171,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36486,"endOffset":36706,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37498,"endOffset":37768,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37846,"endOffset":39167,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":39176,"endOffset":43262,"count":2}],"isBlockCoverage":true},{"functionName":"emitLookup","ranges":[{"startOffset":39367,"endOffset":43257,"count":2}],"isBlockCoverage":true},{"functionName":"emitLookup","ranges":[{"startOffset":39418,"endOffset":43250,"count":2},{"startOffset":39648,"endOffset":39675,"count":0},{"startOffset":39690,"endOffset":40072,"count":0},{"startOffset":40448,"endOffset":41140,"count":4},{"startOffset":40656,"endOffset":40676,"count":2},{"startOffset":40711,"endOffset":40806,"count":2},{"startOffset":40776,"endOffset":40792,"count":0},{"startOffset":41255,"endOffset":41283,"count":0},{"startOffset":41285,"endOffset":41865,"count":0},{"startOffset":42319,"endOffset":42775,"count":0}],"isBlockCoverage":true},{"functionName":"connectErrorNT","ranges":[{"startOffset":43266,"endOffset":43327,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":43356,"endOffset":43554,"count":37},{"startOffset":43391,"endOffset":43452,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.unref","ranges":[{"startOffset":43586,"endOffset":43790,"count":38},{"startOffset":43621,"endOffset":43684,"count":0}],"isBlockCoverage":true},{"functionName":"afterConnect","ranges":[{"startOffset":43797,"endOffset":45436,"count":4},{"startOffset":43971,"endOffset":43990,"count":0},{"startOffset":44165,"endOffset":44217,"count":0},{"startOffset":44255,"endOffset":44282,"count":0},{"startOffset":44443,"endOffset":44471,"count":2},{"startOffset":44473,"endOffset":44554,"count":2},{"startOffset":44833,"endOffset":44854,"count":0},{"startOffset":44856,"endOffset":44916,"count":0},{"startOffset":44921,"endOffset":45433,"count":0}],"isBlockCoverage":true},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":45440,"endOffset":45880,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":45884,"endOffset":46403,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":46407,"endOffset":47582,"count":2},{"startOffset":46861,"endOffset":47010,"count":0},{"startOffset":47125,"endOffset":47316,"count":0},{"startOffset":47346,"endOffset":47513,"count":0}],"isBlockCoverage":true},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":47586,"endOffset":47904,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":47908,"endOffset":48366,"count":1},{"startOffset":48018,"endOffset":48363,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":48129,"endOffset":48160,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":48370,"endOffset":50009,"count":1},{"startOffset":48456,"endOffset":48503,"count":0},{"startOffset":48574,"endOffset":48692,"count":0},{"startOffset":48836,"endOffset":48894,"count":0},{"startOffset":48899,"endOffset":48978,"count":0},{"startOffset":49040,"endOffset":49243,"count":0},{"startOffset":49297,"endOffset":49492,"count":0},{"startOffset":49704,"endOffset":49712,"count":0}],"isBlockCoverage":true},{"functionName":"toNumber","ranges":[{"startOffset":50125,"endOffset":50190,"count":2},{"startOffset":50180,"endOffset":50187,"count":0}],"isBlockCoverage":true},{"functionName":"createServerHandle","ranges":[{"startOffset":50261,"endOffset":51769,"count":1},{"startOffset":50483,"endOffset":50493,"count":0},{"startOffset":50495,"endOffset":50820,"count":0},{"startOffset":50842,"endOffset":50863,"count":0},{"startOffset":50865,"endOffset":51123,"count":0},{"startOffset":51216,"endOffset":51223,"count":0},{"startOffset":51224,"endOffset":51232,"count":0},{"startOffset":51266,"endOffset":51274,"count":0},{"startOffset":51296,"endOffset":51541,"count":0},{"startOffset":51627,"endOffset":51682,"count":0},{"startOffset":51702,"endOffset":51746,"count":0}],"isBlockCoverage":true},{"functionName":"setupListenHandle","ranges":[{"startOffset":51773,"endOffset":54193,"count":1},{"startOffset":52083,"endOffset":52145,"count":0},{"startOffset":52466,"endOffset":52562,"count":0},{"startOffset":52683,"endOffset":52748,"count":0},{"startOffset":52786,"endOffset":52937,"count":0},{"startOffset":53385,"endOffset":53753,"count":0},{"startOffset":53990,"endOffset":54003,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":54264,"endOffset":54328,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":54334,"endOffset":54453,"count":1}],"isBlockCoverage":true},{"functionName":"listenInCluster","ranges":[{"startOffset":54459,"endOffset":55759,"count":1},{"startOffset":54705,"endOffset":54717,"count":0},{"startOffset":54969,"endOffset":55758,"count":0}],"isBlockCoverage":true},{"functionName":"listenOnPrimaryHandle","ranges":[{"startOffset":55258,"endOffset":55756,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":55791,"endOffset":59730,"count":1},{"startOffset":55938,"endOffset":55988,"count":0},{"startOffset":56011,"endOffset":56050,"count":0},{"startOffset":56172,"endOffset":56182,"count":0},{"startOffset":56217,"endOffset":56227,"count":0},{"startOffset":56465,"endOffset":56633,"count":0},{"startOffset":56786,"endOffset":56804,"count":0},{"startOffset":56806,"endOffset":56905,"count":0},{"startOffset":57190,"endOffset":57222,"count":0},{"startOffset":57223,"endOffset":57291,"count":0},{"startOffset":57292,"endOffset":57323,"count":0},{"startOffset":57583,"endOffset":57618,"count":0},{"startOffset":57793,"endOffset":57921,"count":0},{"startOffset":58201,"endOffset":58373,"count":0},{"startOffset":58375,"endOffset":59522,"count":0},{"startOffset":59525,"endOffset":59729,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndListen","ranges":[{"startOffset":59735,"endOffset":60158,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":60244,"endOffset":60289,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":60370,"endOffset":60671,"count":1},{"startOffset":60517,"endOffset":60570,"count":0},{"startOffset":60592,"endOffset":60670,"count":0}],"isBlockCoverage":true},{"functionName":"onconnection","ranges":[{"startOffset":60676,"endOffset":62640,"count":2},{"startOffset":60823,"endOffset":60898,"count":0},{"startOffset":60928,"endOffset":60971,"count":0},{"startOffset":60973,"endOffset":61768,"count":0},{"startOffset":62203,"endOffset":62231,"count":0},{"startOffset":62233,"endOffset":62409,"count":0},{"startOffset":62569,"endOffset":62637,"count":0}],"isBlockCoverage":true},{"functionName":"Server.getConnections","ranges":[{"startOffset":62797,"endOffset":63585,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":63617,"endOffset":64521,"count":1},{"startOffset":63665,"endOffset":63848,"count":0},{"startOffset":63961,"endOffset":64455,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":63719,"endOffset":63789,"count":0}],"isBlockCoverage":false},{"functionName":"onWorkerClose","ranges":[{"startOffset":64028,"endOffset":64142,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":64565,"endOffset":64690,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":64734,"endOffset":65133,"count":3},{"startOffset":64809,"endOffset":64829,"count":1},{"startOffset":64831,"endOffset":64947,"count":2},{"startOffset":64947,"endOffset":65132,"count":1}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":65140,"endOffset":65226,"count":1}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":65288,"endOffset":65460,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":65689,"endOffset":65725,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":65730,"endOffset":65771,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":65856,"endOffset":65887,"count":1010}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":65892,"endOffset":65928,"count":15}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":65970,"endOffset":66218,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":66246,"endOffset":66351,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":66381,"endOffset":66487,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":66637,"endOffset":67326,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":67367,"endOffset":67615,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":67751,"endOffset":67856,"count":3}],"isBlockCoverage":true},{"functionName":"get SocketAddress","ranges":[{"startOffset":67861,"endOffset":67986,"count":3}],"isBlockCoverage":true}]},{"scriptId":"425","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4929,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2466,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3065,"endOffset":3204,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4220,"endOffset":4254,"count":13}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4358,"endOffset":4401,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4500,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4715,"endOffset":4926,"count":28}],"isBlockCoverage":true}]},{"scriptId":"426","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10610,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1043,"endOffset":1646,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1650,"endOffset":4301,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4305,"endOffset":4795,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":4799,"endOffset":4952,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":4956,"endOffset":5293,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5297,"endOffset":5444,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5448,"endOffset":5829,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5833,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6393,"endOffset":6510,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6517,"endOffset":8005,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8009,"endOffset":8454,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8458,"endOffset":8659,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8663,"endOffset":8996,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9000,"endOffset":9570,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9574,"endOffset":10271,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5703,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":566,"endOffset":5700,"count":1},{"startOffset":626,"endOffset":676,"count":0},{"startOffset":708,"endOffset":751,"count":0},{"startOffset":833,"endOffset":882,"count":0},{"startOffset":1080,"endOffset":1854,"count":2},{"startOffset":1117,"endOffset":1144,"count":0},{"startOffset":1146,"endOffset":1222,"count":0},{"startOffset":1263,"endOffset":1399,"count":1},{"startOffset":1308,"endOffset":1348,"count":0},{"startOffset":1349,"endOffset":1390,"count":0},{"startOffset":1407,"endOffset":1544,"count":0},{"startOffset":1568,"endOffset":1704,"count":1},{"startOffset":1613,"endOffset":1653,"count":0},{"startOffset":1654,"endOffset":1695,"count":0},{"startOffset":1712,"endOffset":1849,"count":0},{"startOffset":2406,"endOffset":2436,"count":0},{"startOffset":2437,"endOffset":2468,"count":0},{"startOffset":2842,"endOffset":4196,"count":0},{"startOffset":4776,"endOffset":5309,"count":0}],"isBlockCoverage":true},{"functionName":"onfinished","ranges":[{"startOffset":1940,"endOffset":2165,"count":1},{"startOffset":2052,"endOffset":2160,"count":0}],"isBlockCoverage":true},{"functionName":"d._write","ranges":[{"startOffset":2893,"endOffset":3066,"count":0}],"isBlockCoverage":false},{"functionName":"d._final","ranges":[{"startOffset":3088,"endOffset":3168,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3196,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"d._write","ranges":[{"startOffset":3503,"endOffset":3734,"count":0}],"isBlockCoverage":false},{"functionName":"d._final","ranges":[{"startOffset":3756,"endOffset":3974,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4072,"endOffset":4189,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4276,"endOffset":4416,"count":162}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4443,"endOffset":4487,"count":1}],"isBlockCoverage":true},{"functionName":"d._read","ranges":[{"startOffset":4509,"endOffset":4768,"count":324},{"startOffset":4544,"endOffset":4759,"count":485},{"startOffset":4611,"endOffset":4681,"count":324},{"startOffset":4681,"endOffset":4713,"count":161},{"startOffset":4713,"endOffset":4748,"count":0}],"isBlockCoverage":true},{"functionName":"d._read","ranges":[{"startOffset":4940,"endOffset":5301,"count":0}],"isBlockCoverage":false},{"functionName":"d._destroy","ranges":[{"startOffset":5333,"endOffset":5681,"count":1},{"startOffset":5532,"endOffset":5562,"count":0}],"isBlockCoverage":true}]},{"scriptId":"428","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12793,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1107,"endOffset":1554,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1201,"endOffset":1235,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1313,"endOffset":1350,"count":2}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":1381,"endOffset":1530,"count":2},{"startOffset":1420,"endOffset":1521,"count":0}],"isBlockCoverage":true},{"functionName":"popCallback","ranges":[{"startOffset":1558,"endOffset":1892,"count":1}],"isBlockCoverage":true},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1896,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2195,"endOffset":2375,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2379,"endOffset":3479,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3483,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":4112,"endOffset":4207,"count":1}],"isBlockCoverage":true},{"functionName":"pipelineImpl","ranges":[{"startOffset":4211,"endOffset":10885,"count":1},{"startOffset":4380,"endOffset":4430,"count":0},{"startOffset":4526,"endOffset":4534,"count":0},{"startOffset":4908,"endOffset":4970,"count":0},{"startOffset":5667,"endOffset":10778,"count":2},{"startOffset":5799,"endOffset":5821,"count":1},{"startOffset":5806,"endOffset":5811,"count":0},{"startOffset":6087,"endOffset":6143,"count":1},{"startOffset":6523,"endOffset":6638,"count":1},{"startOffset":6666,"endOffset":7094,"count":1},{"startOffset":6709,"endOffset":6911,"count":0},{"startOffset":6940,"endOffset":6971,"count":0},{"startOffset":6972,"endOffset":7000,"count":0},{"startOffset":7035,"endOffset":7087,"count":0},{"startOffset":7094,"endOffset":10773,"count":1},{"startOffset":7134,"endOffset":9330,"count":0},{"startOffset":9606,"endOffset":10071,"count":0},{"startOffset":10099,"endOffset":10773,"count":0},{"startOffset":10778,"endOffset":10794,"count":2},{"startOffset":10818,"endOffset":10827,"count":0},{"startOffset":10829,"endOffset":10865,"count":0}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":4748,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":5056,"endOffset":5126,"count":2}],"isBlockCoverage":true},{"functionName":"finishImpl","ranges":[{"startOffset":5132,"endOffset":5608,"count":2},{"startOffset":5179,"endOffset":5237,"count":0},{"startOffset":5239,"endOffset":5267,"count":0},{"startOffset":5297,"endOffset":5352,"count":1},{"startOffset":5392,"endOffset":5410,"count":1},{"startOffset":5410,"endOffset":5427,"count":0},{"startOffset":5466,"endOffset":5603,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5524,"endOffset":5536,"count":3}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":6234,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6557,"endOffset":6627,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8190,"endOffset":8509,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8511,"endOffset":8638,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10889,"endOffset":12743,"count":1},{"startOffset":11556,"endOffset":11652,"count":0},{"startOffset":11702,"endOffset":11729,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10973,"endOffset":11136,"count":1},{"startOffset":10998,"endOffset":11131,"count":0}],"isBlockCoverage":true},{"functionName":"endFn","ranges":[{"startOffset":11455,"endOffset":11519,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11781,"endOffset":12673,"count":1},{"startOffset":11853,"endOffset":11904,"count":0},{"startOffset":11905,"endOffset":11982,"count":0},{"startOffset":11990,"endOffset":12634,"count":0}],"isBlockCoverage":true}]},{"scriptId":"429","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5085,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2049,"endOffset":2741,"count":11},{"startOffset":2115,"endOffset":2142,"count":0},{"startOffset":2329,"endOffset":2469,"count":2},{"startOffset":2509,"endOffset":2689,"count":2},{"startOffset":2694,"endOffset":2738,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3913,"endOffset":4131,"count":1226},{"startOffset":4013,"endOffset":4046,"count":0},{"startOffset":4091,"endOffset":4123,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4138,"endOffset":4406,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":4487,"endOffset":4655,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":4676,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":4818,"endOffset":4909,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":4946,"endOffset":5082,"count":1}],"isBlockCoverage":true}]},{"scriptId":"430","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27212,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2461,"endOffset":2478,"count":398}],"isBlockCoverage":true},{"functionName":"WritableState","ranges":[{"startOffset":2528,"endOffset":7391,"count":11},{"startOffset":2930,"endOffset":2973,"count":0},{"startOffset":3189,"endOffset":3240,"count":10},{"startOffset":3538,"endOffset":3575,"count":0},{"startOffset":4545,"endOffset":4708,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":7395,"endOffset":7532,"count":78}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":7572,"endOffset":7663,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7763,"endOffset":7830,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7840,"endOffset":9417,"count":11},{"startOffset":8494,"endOffset":8548,"count":0},{"startOffset":8555,"endOffset":8584,"count":0},{"startOffset":8729,"endOffset":8757,"count":1},{"startOffset":8814,"endOffset":8844,"count":0},{"startOffset":8902,"endOffset":8934,"count":1},{"startOffset":8990,"endOffset":9018,"count":1},{"startOffset":9078,"endOffset":9114,"count":0},{"startOffset":9149,"endOffset":9186,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9258,"endOffset":9412,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9503,"endOffset":9712,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":9817,"endOffset":9887,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":9892,"endOffset":11284,"count":571},{"startOffset":10020,"endOffset":10085,"count":69},{"startOffset":10085,"endOffset":10328,"count":502},{"startOffset":10120,"endOffset":10153,"count":387},{"startOffset":10153,"endOffset":10271,"count":115},{"startOffset":10230,"endOffset":10271,"count":0},{"startOffset":10314,"endOffset":10323,"count":426},{"startOffset":10354,"endOffset":10401,"count":0},{"startOffset":10430,"endOffset":10922,"count":410},{"startOffset":10468,"endOffset":10606,"count":143},{"startOffset":10512,"endOffset":10599,"count":0},{"startOffset":10606,"endOffset":10917,"count":267},{"startOffset":10641,"endOffset":10677,"count":239},{"startOffset":10677,"endOffset":10917,"count":28},{"startOffset":10802,"endOffset":10917,"count":0},{"startOffset":10958,"endOffset":11009,"count":0},{"startOffset":11036,"endOffset":11088,"count":0},{"startOffset":11103,"endOffset":11198,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":11315,"endOffset":11403,"count":571}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":11434,"endOffset":11482,"count":104}],"isBlockCoverage":true},{"functionName":"Writable.uncork","ranges":[{"startOffset":11515,"endOffset":11679,"count":104}],"isBlockCoverage":true},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11724,"endOffset":12057,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":12252,"endOffset":13296,"count":571},{"startOffset":12351,"endOffset":12354,"count":161},{"startOffset":12355,"endOffset":12369,"count":410},{"startOffset":12581,"endOffset":12604,"count":161},{"startOffset":12644,"endOffset":12660,"count":402},{"startOffset":12661,"endOffset":12682,"count":402},{"startOffset":12684,"endOffset":12924,"count":169},{"startOffset":12769,"endOffset":12793,"count":67},{"startOffset":12795,"endOffset":12836,"count":67},{"startOffset":12860,"endOffset":12879,"count":132},{"startOffset":12881,"endOffset":12919,"count":39},{"startOffset":12924,"endOffset":13122,"count":402},{"startOffset":13255,"endOffset":13272,"count":410},{"startOffset":13273,"endOffset":13292,"count":410}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":13300,"endOffset":13690,"count":67},{"startOffset":13492,"endOffset":13541,"count":0},{"startOffset":13567,"endOffset":13604,"count":65},{"startOffset":13604,"endOffset":13664,"count":2}],"isBlockCoverage":true},{"functionName":"onwriteError","ranges":[{"startOffset":13694,"endOffset":14090,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":14094,"endOffset":15788,"count":469},{"startOffset":14257,"endOffset":14334,"count":0},{"startOffset":14459,"endOffset":15034,"count":0},{"startOffset":15096,"endOffset":15139,"count":67},{"startOffset":15157,"endOffset":15725,"count":308},{"startOffset":15461,"endOffset":15509,"count":0},{"startOffset":15511,"endOffset":15564,"count":0},{"startOffset":15725,"endOffset":15780,"count":161}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":15792,"endOffset":15934,"count":308}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":15938,"endOffset":16335,"count":469},{"startOffset":16021,"endOffset":16041,"count":468},{"startOffset":16042,"endOffset":16063,"count":468},{"startOffset":16064,"endOffset":16087,"count":468},{"startOffset":16107,"endOffset":16170,"count":160},{"startOffset":16268,"endOffset":16299,"count":0}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":16410,"endOffset":16985,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":17054,"endOffset":18601,"count":171},{"startOffset":17112,"endOffset":17144,"count":134},{"startOffset":17145,"endOffset":17170,"count":67},{"startOffset":17171,"endOffset":17199,"count":67},{"startOffset":17201,"endOffset":17220,"count":104},{"startOffset":17220,"endOffset":17366,"count":67},{"startOffset":17366,"endOffset":17385,"count":0},{"startOffset":17385,"endOffset":17476,"count":67},{"startOffset":17476,"endOffset":17493,"count":65},{"startOffset":17495,"endOffset":18075,"count":65},{"startOffset":17579,"endOffset":17584,"count":28},{"startOffset":17585,"endOffset":17700,"count":37},{"startOffset":17863,"endOffset":17873,"count":28},{"startOffset":17874,"endOffset":17891,"count":28},{"startOffset":17892,"endOffset":17926,"count":37},{"startOffset":18075,"endOffset":18563,"count":2},{"startOffset":18210,"endOffset":18213,"count":0},{"startOffset":18334,"endOffset":18351,"count":0},{"startOffset":18423,"endOffset":18558,"count":0},{"startOffset":18563,"endOffset":18600,"count":67}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":17587,"endOffset":17700,"count":37},{"startOffset":17647,"endOffset":17693,"count":111}],"isBlockCoverage":true},{"functionName":"Writable._write","ranges":[{"startOffset":18633,"endOffset":18808,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":18876,"endOffset":20317,"count":3},{"startOffset":18984,"endOffset":19048,"count":0},{"startOffset":19090,"endOffset":19138,"count":0},{"startOffset":19201,"endOffset":19313,"count":0},{"startOffset":19365,"endOffset":19414,"count":0},{"startOffset":19429,"endOffset":19457,"count":0},{"startOffset":19918,"endOffset":20078,"count":0},{"startOffset":20114,"endOffset":20296,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":20322,"endOffset":20673,"count":475},{"startOffset":20375,"endOffset":20405,"count":7},{"startOffset":20406,"endOffset":20437,"count":7},{"startOffset":20438,"endOffset":20470,"count":7},{"startOffset":20471,"endOffset":20499,"count":6},{"startOffset":20500,"endOffset":20541,"count":6},{"startOffset":20542,"endOffset":20571,"count":6},{"startOffset":20572,"endOffset":20600,"count":6},{"startOffset":20601,"endOffset":20634,"count":6},{"startOffset":20635,"endOffset":20668,"count":6}],"isBlockCoverage":true},{"functionName":"callFinal","ranges":[{"startOffset":20677,"endOffset":21661,"count":3},{"startOffset":21595,"endOffset":21633,"count":0}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":20741,"endOffset":21502,"count":3},{"startOffset":20783,"endOffset":20869,"count":0},{"startOffset":20930,"endOffset":21154,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":21665,"endOffset":21980,"count":3},{"startOffset":21892,"endOffset":21972,"count":0}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":21984,"endOffset":22502,"count":472},{"startOffset":22054,"endOffset":22499,"count":3},{"startOffset":22119,"endOffset":22494,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22194,"endOffset":22362,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":22506,"endOffset":23261,"count":3},{"startOffset":22702,"endOffset":22741,"count":0},{"startOffset":23160,"endOffset":23188,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":23352,"endOffset":23438,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23491,"endOffset":23580,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":23587,"endOffset":23774,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23826,"endOffset":24226,"count":133},{"startOffset":24155,"endOffset":24170,"count":132},{"startOffset":24171,"endOffset":24184,"count":130},{"startOffset":24185,"endOffset":24206,"count":130},{"startOffset":24207,"endOffset":24218,"count":129}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":24233,"endOffset":24372,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24432,"endOffset":24520,"count":2},{"startOffset":24505,"endOffset":24512,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":24582,"endOffset":24672,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24730,"endOffset":24814,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":24871,"endOffset":24957,"count":5},{"startOffset":24942,"endOffset":24949,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":25018,"endOffset":25180,"count":2},{"startOffset":25089,"endOffset":25102,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":25245,"endOffset":25331,"count":152}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":25389,"endOffset":25471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25529,"endOffset":25608,"count":37}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":25683,"endOffset":25769,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25857,"endOffset":26069,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":26152,"endOffset":26461,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":26552,"endOffset":26586,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":26639,"endOffset":26679,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":26749,"endOffset":26917,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":26940,"endOffset":27078,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":27100,"endOffset":27209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":336,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7379,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4001,"endOffset":5874,"count":0}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5878,"endOffset":6348,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6352,"endOffset":6437,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6513,"endOffset":6610,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6644,"endOffset":7212,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7245,"endOffset":7376,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1809,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1566,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1752,"endOffset":1806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7321,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1047,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1198,"endOffset":2086,"count":54},{"startOffset":1302,"endOffset":1475,"count":41},{"startOffset":1431,"endOffset":1449,"count":0},{"startOffset":1481,"endOffset":1495,"count":13},{"startOffset":1501,"endOffset":1566,"count":13},{"startOffset":1572,"endOffset":1584,"count":0},{"startOffset":1590,"endOffset":1652,"count":0},{"startOffset":1658,"endOffset":1721,"count":0},{"startOffset":1727,"endOffset":1739,"count":0},{"startOffset":1745,"endOffset":1758,"count":0},{"startOffset":1764,"endOffset":1779,"count":0},{"startOffset":1785,"endOffset":1850,"count":0},{"startOffset":1856,"endOffset":2078,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2090,"endOffset":2802,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2806,"endOffset":3055,"count":119}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":3059,"endOffset":3721,"count":65},{"startOffset":3224,"endOffset":3325,"count":0},{"startOffset":3419,"endOffset":3536,"count":167}],"isBlockCoverage":true},{"functionName":"writeGeneric","ranges":[{"startOffset":3725,"endOffset":3936,"count":54}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3940,"endOffset":4253,"count":119},{"startOffset":4112,"endOffset":4163,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4257,"endOffset":6256,"count":84},{"startOffset":4459,"endOffset":4479,"count":80},{"startOffset":4481,"endOffset":5244,"count":80},{"startOffset":4570,"endOffset":4837,"count":0},{"startOffset":5026,"endOffset":5220,"count":0},{"startOffset":5244,"endOffset":5267,"count":4},{"startOffset":5267,"endOffset":5286,"count":0},{"startOffset":5286,"endOffset":5625,"count":4},{"startOffset":5625,"endOffset":5819,"count":0},{"startOffset":5819,"endOffset":5907,"count":4},{"startOffset":5907,"endOffset":5977,"count":0},{"startOffset":5977,"endOffset":6253,"count":4},{"startOffset":6024,"endOffset":6064,"count":0}],"isBlockCoverage":true},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6260,"endOffset":7098,"count":76},{"startOffset":6333,"endOffset":6345,"count":0},{"startOffset":6662,"endOffset":6806,"count":37},{"startOffset":6697,"endOffset":6801,"count":0},{"startOffset":6806,"endOffset":7079,"count":39},{"startOffset":6913,"endOffset":6944,"count":0},{"startOffset":6980,"endOffset":7074,"count":0}],"isBlockCoverage":true}]},{"scriptId":"435","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10196,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":767,"endOffset":1197,"count":1}],"isBlockCoverage":false},{"functionName":"#finalizers","ranges":[{"startOffset":848,"endOffset":886,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":894,"endOffset":1014,"count":18}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1020,"endOffset":1070,"count":18},{"startOffset":1057,"endOffset":1062,"count":0}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":1076,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":1138,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"markActive","ranges":[{"startOffset":1201,"endOffset":1411,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMarkInactive","ranges":[{"startOffset":1415,"endOffset":1791,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransform","ranges":[{"startOffset":1795,"endOffset":1847,"count":0}],"isBlockCoverage":false},{"functionName":"wrapStoreRun","ranges":[{"startOffset":1851,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":2279,"endOffset":2453,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2459,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":2752,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":2930,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":3146,"endOffset":3191,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":3197,"endOffset":3509,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":3515,"endOffset":3867,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3893,"endOffset":4040,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4053,"endOffset":4242,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":4248,"endOffset":4336,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4342,"endOffset":4381,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":4387,"endOffset":4483,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":4489,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4534,"endOffset":4580,"count":283}],"isBlockCoverage":true},{"functionName":"publish","ranges":[{"startOffset":4586,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":4604,"endOffset":4693,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4738,"endOffset":5013,"count":18},{"startOffset":4818,"endOffset":4833,"count":0},{"startOffset":4868,"endOffset":4895,"count":0},{"startOffset":4897,"endOffset":4979,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":5017,"endOffset":5109,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":5113,"endOffset":5209,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":5213,"endOffset":5353,"count":0}],"isBlockCoverage":false},{"functionName":"assertChannel","ranges":[{"startOffset":5452,"endOffset":5598,"count":0}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":5628,"endOffset":6801,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":6807,"endOffset":6965,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":6971,"endOffset":7216,"count":0}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":7222,"endOffset":7664,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7670,"endOffset":8807,"count":0}],"isBlockCoverage":false},{"functionName":"traceCallback","ranges":[{"startOffset":8813,"endOffset":9979,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9986,"endOffset":10076,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17356,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2742,"endOffset":3013,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":3017,"endOffset":3365,"count":45},{"startOffset":3074,"endOffset":3123,"count":0},{"startOffset":3129,"endOffset":3184,"count":0},{"startOffset":3190,"endOffset":3243,"count":39},{"startOffset":3249,"endOffset":3300,"count":4},{"startOffset":3306,"endOffset":3357,"count":2}],"isBlockCoverage":true},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3369,"endOffset":3804,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3808,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4205,"endOffset":4267,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4273,"endOffset":4415,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4421,"endOffset":4734,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":4740,"endOffset":5247,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5253,"endOffset":5510,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceObserverEntryList","ranges":[{"startOffset":5877,"endOffset":6173,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6177,"endOffset":9877,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10378,"endOffset":10587,"count":19},{"startOffset":10444,"endOffset":10511,"count":0},{"startOffset":10547,"endOffset":10584,"count":0}],"isBlockCoverage":true},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10653,"endOffset":11708,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":12005,"endOffset":13301,"count":19},{"startOffset":12221,"endOffset":13300,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12330,"endOffset":13228,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":13392,"endOffset":13669,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13673,"endOffset":13740,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13744,"endOffset":14359,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":14363,"endOffset":15277,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":15281,"endOffset":16433,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":16474,"endOffset":16596,"count":45}],"isBlockCoverage":true},{"functionName":"startPerf","ranges":[{"startOffset":16602,"endOffset":16717,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16721,"endOffset":17050,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3409,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":682,"endOffset":757,"count":19}],"isBlockCoverage":true},{"functionName":"PerformanceEntry","ranges":[{"startOffset":789,"endOffset":851,"count":0}],"isBlockCoverage":true},{"functionName":"get name","ranges":[{"startOffset":857,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":966,"endOffset":1084,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1090,"endOffset":1208,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1214,"endOffset":1329,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1335,"endOffset":1588,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1594,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"initPerformanceEntry","ranges":[{"startOffset":2056,"endOffset":2241,"count":19}],"isBlockCoverage":true},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2245,"endOffset":2458,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2581,"endOffset":2694,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2700,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":2967,"endOffset":3229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10190,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2088,"endOffset":2338,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2148,"endOffset":2333,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2737,"endOffset":2750,"count":2}],"isBlockCoverage":true},{"functionName":"getOSType","ranges":[{"startOffset":2803,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2869,"endOffset":2882,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2936,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2999,"endOffset":3030,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":3065,"endOffset":3083,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3119,"endOffset":3138,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3175,"endOffset":3195,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3229,"endOffset":3246,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3283,"endOffset":3303,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3338,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3397,"endOffset":3421,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3457,"endOffset":3476,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3510,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3674,"endOffset":3777,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":4074,"endOffset":4522,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4558,"endOffset":4602,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4630,"endOffset":4648,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4685,"endOffset":4737,"count":0}],"isBlockCoverage":false},{"functionName":"platform.<computed>","ranges":[{"startOffset":4769,"endOffset":4791,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4828,"endOffset":5452,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5482,"endOffset":5496,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5538,"endOffset":5587,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5621,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5730,"endOffset":5988,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5992,"endOffset":6980,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":7204,"endOffset":7925,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":8016,"endOffset":8318,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8382,"endOffset":8650,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8968,"endOffset":9272,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"node:internal/test_runner/runner","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18311,"count":1}],"isBlockCoverage":false},{"functionName":"processPath","ranges":[{"startOffset":2875,"endOffset":3836,"count":0}],"isBlockCoverage":false},{"functionName":"createTestFileList","ranges":[{"startOffset":3840,"endOffset":4514,"count":0}],"isBlockCoverage":false},{"functionName":"filterExecArgv","ranges":[{"startOffset":4518,"endOffset":4748,"count":0}],"isBlockCoverage":false},{"functionName":"getRunArgs","ranges":[{"startOffset":4752,"endOffset":5207,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5448,"endOffset":11695,"count":0}],"isBlockCoverage":false},{"functionName":"runTestFile","ranges":[{"startOffset":11699,"endOffset":14270,"count":0}],"isBlockCoverage":false},{"functionName":"watchFiles","ranges":[{"startOffset":14274,"endOffset":15685,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":15689,"endOffset":18235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28083,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1993,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":3546,"endOffset":5254,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5258,"endOffset":5759,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5763,"endOffset":6278,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6840,"endOffset":7092,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":7130,"endOffset":7510,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7152,"endOffset":7506,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7655,"endOffset":8591,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":9225,"endOffset":14170,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":14322,"endOffset":14528,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":14532,"endOffset":19947,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":19951,"endOffset":20217,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":20790,"endOffset":22036,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":22822,"endOffset":24354,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":24360,"endOffset":24759,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":25288,"endOffset":25769,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":26282,"endOffset":26673,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":26679,"endOffset":26906,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":26912,"endOffset":27078,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":27084,"endOffset":27276,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":27282,"endOffset":27561,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":27567,"endOffset":27938,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32916,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2594,"endOffset":2655,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2664,"endOffset":2720,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2788,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2866,"endOffset":3012,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":3046,"endOffset":4646,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4655,"endOffset":5417,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5426,"endOffset":5901,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5972,"endOffset":6033,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6042,"endOffset":6098,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":6169,"endOffset":6293,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6302,"endOffset":6467,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6482,"endOffset":6912,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6916,"endOffset":8462,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":8590,"endOffset":9083,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":9089,"endOffset":9181,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":9187,"endOffset":9423,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9427,"endOffset":9543,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9580,"endOffset":13272,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":13279,"endOffset":13342,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":13348,"endOffset":13400,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":13436,"endOffset":14126,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":14171,"endOffset":14232,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":14268,"endOffset":14324,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":14362,"endOffset":14420,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14425,"endOffset":15463,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15617,"endOffset":28126,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":28164,"endOffset":28481,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":28519,"endOffset":31545,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":31551,"endOffset":31875,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":31881,"endOffset":32088,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":32092,"endOffset":32780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29334,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2917,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3133,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4731,"endOffset":4811,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4817,"endOffset":5276,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5280,"endOffset":5861,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5865,"endOffset":6167,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":6238,"endOffset":6666,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6694,"endOffset":10276,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":10308,"endOffset":11131,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":11138,"endOffset":11498,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11504,"endOffset":12172,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":12208,"endOffset":12525,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12634,"endOffset":13087,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":13094,"endOffset":13877,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13883,"endOffset":14281,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":14287,"endOffset":14725,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14731,"endOffset":14872,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14878,"endOffset":15005,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":15011,"endOffset":15216,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15804,"endOffset":18796,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18801,"endOffset":19983,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19987,"endOffset":20172,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":20201,"endOffset":20791,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":20835,"endOffset":20973,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":20980,"endOffset":21036,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":21069,"endOffset":21269,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":21307,"endOffset":21630,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":21669,"endOffset":21822,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":21855,"endOffset":22038,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":22080,"endOffset":22281,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":22328,"endOffset":22535,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":22583,"endOffset":22853,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":22891,"endOffset":23278,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":23319,"endOffset":23709,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":23761,"endOffset":24383,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":24438,"endOffset":25066,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":25073,"endOffset":25241,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":25247,"endOffset":25419,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":25425,"endOffset":25686,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":25692,"endOffset":25810,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":25839,"endOffset":25953,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":25985,"endOffset":26101,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":26145,"endOffset":26204,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":26248,"endOffset":26307,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":26351,"endOffset":26410,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":26454,"endOffset":26513,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":26554,"endOffset":26625,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":26667,"endOffset":26739,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26863,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26993,"endOffset":27051,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27210,"endOffset":27269,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27346,"endOffset":27407,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27569,"endOffset":27628,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27705,"endOffset":27766,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27924,"endOffset":27979,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28052,"endOffset":28109,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28267,"endOffset":28326,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28403,"endOffset":28464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28575,"endOffset":28612,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28724,"endOffset":28763,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29055,"endOffset":29091,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29096,"endOffset":29137,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1943,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":500,"endOffset":603,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":609,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":710,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1389,"endOffset":1858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2817,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":243,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":395,"endOffset":1071,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1077,"endOffset":1233,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1239,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1603,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2503,"endOffset":2753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"node:v8","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13745,"count":1}],"isBlockCoverage":false},{"functionName":"writeHeapSnapshot","ranges":[{"startOffset":2360,"endOffset":2646,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":2889,"endOffset":3101,"count":0}],"isBlockCoverage":false},{"functionName":"setFlagsFromString","ranges":[{"startOffset":4578,"endOffset":4683,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapStatistics","ranges":[{"startOffset":5151,"endOffset":6117,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSpaceStatistics","ranges":[{"startOffset":6359,"endOffset":6933,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapCodeStatistics","ranges":[{"startOffset":7183,"endOffset":7603,"count":0}],"isBlockCoverage":false},{"functionName":"setHeapSnapshotNearHeapLimit","ranges":[{"startOffset":7660,"endOffset":7972,"count":0}],"isBlockCoverage":false},{"functionName":"readRawBytes","ranges":[{"startOffset":8255,"endOffset":8578,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferViewTypeToIndex","ranges":[{"startOffset":8583,"endOffset":9331,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferViewIndexToType","ranges":[{"startOffset":9335,"endOffset":9930,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultSerializer","ranges":[{"startOffset":9982,"endOffset":10074,"count":2}],"isBlockCoverage":true},{"functionName":"_writeHostObject","ranges":[{"startOffset":10252,"endOffset":11307,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":11507,"endOffset":12345,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":12478,"endOffset":12627,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":12811,"endOffset":12940,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12944,"endOffset":13279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"node:internal/heap_utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1438,"count":1}],"isBlockCoverage":false},{"functionName":"getHeapSnapshotOptions","ranges":[{"startOffset":434,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"HeapSnapshotStream","ranges":[{"startOffset":879,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":1044,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1122,"endOffset":1307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1313,"endOffset":1357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"node:internal/promise_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3200,"count":1}],"isBlockCoverage":false},{"functionName":"initAll","ranges":[{"startOffset":499,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"makeRunHook","ranges":[{"startOffset":1019,"endOffset":1575,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1058,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"maybeFastPath","ranges":[{"startOffset":1719,"endOffset":1806,"count":24},{"startOffset":1784,"endOffset":1792,"count":0}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":1810,"endOffset":2108,"count":6}],"isBlockCoverage":true},{"functionName":"stop","ranges":[{"startOffset":2112,"endOffset":2278,"count":3}],"isBlockCoverage":true},{"functionName":"makeUseHook","ranges":[{"startOffset":2282,"endOffset":2530,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2350,"endOffset":2526,"count":3}],"isBlockCoverage":true},{"functionName":"createHook","ranges":[{"startOffset":2696,"endOffset":3107,"count":1},{"startOffset":2977,"endOffset":3023,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3036,"endOffset":3103,"count":1},{"startOffset":3075,"endOffset":3098,"count":3}],"isBlockCoverage":true}]},{"scriptId":"448","url":"node:readline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13300,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":2691,"endOffset":3456,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":3787,"endOffset":4584,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":4636,"endOffset":5427,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":5984,"endOffset":6110,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6310,"endOffset":6356,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6407,"endOffset":6449,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6507,"endOffset":6556,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6611,"endOffset":6657,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6713,"endOffset":6760,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6816,"endOffset":6863,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6920,"endOffset":6968,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7024,"endOffset":7071,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7124,"endOffset":7168,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7222,"endOffset":7267,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7322,"endOffset":7368,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7424,"endOffset":7471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7530,"endOffset":7580,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7640,"endOffset":7691,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7750,"endOffset":7800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7860,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7960,"endOffset":8000,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8056,"endOffset":8103,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8159,"endOffset":8206,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8264,"endOffset":8313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8368,"endOffset":8414,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8467,"endOffset":8511,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8657,"endOffset":8701,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8708,"endOffset":8758,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8812,"endOffset":8860,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8867,"endOffset":8921,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8973,"endOffset":9019,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9026,"endOffset":9078,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9132,"endOffset":9180,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9187,"endOffset":9241,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9290,"endOffset":9333,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9340,"endOffset":9389,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9448,"endOffset":9501,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9508,"endOffset":9567,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9621,"endOffset":9669,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9676,"endOffset":9730,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9784,"endOffset":9832,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9839,"endOffset":9893,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._tabComplete","ranges":[{"startOffset":10501,"endOffset":10997,"count":0}],"isBlockCoverage":false},{"functionName":"_ttyWriteDumb","ranges":[{"startOffset":12080,"endOffset":13140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2886,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":492,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1270,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1963,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2462,"endOffset":2796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12295,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":403,"endOffset":605,"count":4},{"startOffset":567,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":996,"endOffset":1267,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1271,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2298,"endOffset":11710,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":11743,"endOffset":12172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"node:internal/readline/emitKeypressEvents","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2762,"count":1}],"isBlockCoverage":false},{"functionName":"emitKeypressEvents","ranges":[{"startOffset":677,"endOffset":2720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40434,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3912,"endOffset":9623,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9871,"endOffset":9973,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9977,"endOffset":10092,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":10208,"endOffset":10261,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10361,"endOffset":10406,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10412,"endOffset":10611,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10757,"endOffset":11019,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11025,"endOffset":11344,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11350,"endOffset":11601,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11607,"endOffset":11696,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11702,"endOffset":11876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11882,"endOffset":12085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12091,"endOffset":13303,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13309,"endOffset":14352,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14442,"endOffset":14621,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14708,"endOffset":14845,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14943,"endOffset":15085,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15370,"endOffset":15536,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15542,"endOffset":17321,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17327,"endOffset":18020,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18026,"endOffset":18438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18444,"endOffset":20720,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20726,"endOffset":21199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21205,"endOffset":21469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21475,"endOffset":21969,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21975,"endOffset":22470,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22476,"endOffset":23258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23264,"endOffset":23701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23707,"endOffset":23992,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23998,"endOffset":24262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24268,"endOffset":24534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24540,"endOffset":24700,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24706,"endOffset":25400,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":25406,"endOffset":25561,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25567,"endOffset":25727,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25733,"endOffset":25925,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25931,"endOffset":26252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26258,"endOffset":26579,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27023,"endOffset":27678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27684,"endOffset":28413,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28491,"endOffset":29462,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":29649,"endOffset":29822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29945,"endOffset":30525,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30565,"endOffset":39103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39422,"endOffset":39813,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"node:readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1704,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":560,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":666,"endOffset":1496,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":1503,"endOffset":1629,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"node:internal/readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3651,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":472,"endOffset":3610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"node:internal/error_serdes","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5914,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":1084,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":2224,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":2687,"endOffset":2810,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2840,"endOffset":3015,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":3035,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"fromBuffer","ranges":[{"startOffset":4371,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":4618,"endOffset":5854,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"node:internal/watch_mode/files_watcher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4867,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":638,"endOffset":4827,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32949,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2787,"endOffset":2975,"count":1}],"isBlockCoverage":true},{"functionName":"escapeFn","ranges":[{"startOffset":3572,"endOffset":3620,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":4192,"endOffset":4312,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":4482,"endOffset":5501,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":5624,"endOffset":6589,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":6593,"endOffset":8273,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":8277,"endOffset":9732,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9736,"endOffset":12921,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":12925,"endOffset":13557,"count":1115},{"startOffset":12987,"endOffset":13554,"count":0}],"isBlockCoverage":true},{"functionName":"ok","ranges":[{"startOffset":13698,"endOffset":13761,"count":1115}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":14031,"endOffset":14417,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":14646,"endOffset":15036,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":15245,"endOffset":15624,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":15839,"endOffset":16226,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":16480,"endOffset":16883,"count":1},{"startOffset":16563,"endOffset":16624,"count":0},{"startOffset":16726,"endOffset":16880,"count":0}],"isBlockCoverage":true},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":17143,"endOffset":17554,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":17768,"endOffset":18094,"count":913},{"startOffset":17847,"endOffset":17908,"count":0},{"startOffset":17945,"endOffset":18091,"count":0}],"isBlockCoverage":true},{"functionName":"notStrictEqual","ranges":[{"startOffset":18315,"endOffset":18649,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":18676,"endOffset":19071,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":19078,"endOffset":19823,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19827,"endOffset":23335,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":23339,"endOffset":23487,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":23491,"endOffset":23863,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23867,"endOffset":24604,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":24608,"endOffset":26275,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":26279,"endOffset":26915,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26919,"endOffset":27593,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":27759,"endOffset":27855,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":28042,"endOffset":28156,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":28326,"endOffset":28422,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":28596,"endOffset":28710,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":28845,"endOffset":30687,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":30692,"endOffset":31808,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":32013,"endOffset":32107,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":32324,"endOffset":32432,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":32632,"endOffset":32703,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17596,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1496,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1802,"endOffset":2429,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2433,"endOffset":11401,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11405,"endOffset":11717,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11761,"endOffset":16588,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16594,"endOffset":16671,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16677,"endOffset":17555,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3605,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":489,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1568,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/server/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":539,"count":1}],"isBlockCoverage":true}]},{"scriptId":"461","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true}]},{"scriptId":"462","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/express.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2409,"count":1}],"isBlockCoverage":true},{"functionName":"createApplication","ranges":[{"startOffset":696,"endOffset":1263,"count":4}],"isBlockCoverage":true},{"functionName":"app","ranges":[{"startOffset":739,"endOffset":801,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2096,"endOffset":2406,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2164,"endOffset":2374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/body-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2681,"count":1}],"isBlockCoverage":true},{"functionName":"bodyParser","ranges":[{"startOffset":1413,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"createParserGetter","ranges":[{"startOffset":1950,"endOffset":2047,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1996,"endOffset":2045,"count":4}],"isBlockCoverage":true},{"functionName":"loadParser","ranges":[{"startOffset":2095,"endOffset":2680,"count":4},{"startOffset":2194,"endOffset":2217,"count":0},{"startOffset":2299,"endOffset":2366,"count":1},{"startOffset":2371,"endOffset":2436,"count":1},{"startOffset":2441,"endOffset":2508,"count":1},{"startOffset":2513,"endOffset":2592,"count":1}],"isBlockCoverage":true}]},{"scriptId":"464","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/depd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10932,"count":1}],"isBlockCoverage":true},{"functionName":"containsNamespace","ranges":[{"startOffset":347,"endOffset":666,"count":18},{"startOffset":573,"endOffset":617,"count":0},{"startOffset":619,"endOffset":644,"count":0}],"isBlockCoverage":true},{"functionName":"convertDataDescriptorToAccessor","ranges":[{"startOffset":730,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"createArgumentsString","ranges":[{"startOffset":1224,"endOffset":1369,"count":15}],"isBlockCoverage":true},{"functionName":"createStackString","ranges":[{"startOffset":1415,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"depd","ranges":[{"startOffset":1730,"endOffset":2308,"count":9},{"startOffset":1776,"endOffset":1839,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":1930,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"eehaslisteners","ranges":[{"startOffset":2624,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"isignored","ranges":[{"startOffset":2865,"endOffset":3095,"count":9},{"startOffset":2927,"endOffset":2980,"count":0}],"isBlockCoverage":true},{"functionName":"istraced","ranges":[{"startOffset":3143,"endOffset":3380,"count":9},{"startOffset":3207,"endOffset":3263,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":3423,"endOffset":5120,"count":0}],"isBlockCoverage":false},{"functionName":"callSiteLocation","ranges":[{"startOffset":5167,"endOffset":5537,"count":24},{"startOffset":5242,"endOffset":5258,"count":0},{"startOffset":5363,"endOffset":5418,"count":0}],"isBlockCoverage":true},{"functionName":"defaultMessage","ranges":[{"startOffset":5593,"endOffset":6176,"count":0}],"isBlockCoverage":false},{"functionName":"formatPlain","ranges":[{"startOffset":6232,"endOffset":6668,"count":0}],"isBlockCoverage":false},{"functionName":"formatColor","ranges":[{"startOffset":6721,"endOffset":7264,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":7305,"endOffset":7432,"count":0}],"isBlockCoverage":false},{"functionName":"getStack","ranges":[{"startOffset":7484,"endOffset":7903,"count":24}],"isBlockCoverage":true},{"functionName":"prepareObjectStackTrace","ranges":[{"startOffset":7950,"endOffset":8014,"count":24}],"isBlockCoverage":true},{"functionName":"wrapfunction","ranges":[{"startOffset":8080,"endOffset":8686,"count":15},{"startOffset":8150,"endOffset":8213,"count":0}],"isBlockCoverage":true},{"functionName":"wrapproperty","ranges":[{"startOffset":8740,"endOffset":9901,"count":0}],"isBlockCoverage":false},{"functionName":"DeprecationError","ranges":[{"startOffset":9955,"endOffset":10931,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1452,"count":1}],"isBlockCoverage":false},{"functionName":"get esmLoader","ranges":[{"startOffset":443,"endOffset":517,"count":1}],"isBlockCoverage":true},{"functionName":"loadESM","ranges":[{"startOffset":522,"endOffset":1445,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12962,"count":1}],"isBlockCoverage":false},{"functionName":"newModuleMap","ranges":[{"startOffset":633,"endOffset":753,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":757,"endOffset":882,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1595,"endOffset":9200,"count":1}],"isBlockCoverage":false},{"functionName":"DefaultModuleLoader","ranges":[{"startOffset":2304,"endOffset":2443,"count":1},{"startOffset":2379,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":2449,"endOffset":3462,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":4203,"endOffset":4429,"count":0}],"isBlockCoverage":false},{"functionName":"getJobFromResolveResult","ranges":[{"startOffset":4435,"endOffset":5024,"count":0}],"isBlockCoverage":false},{"functionName":"#createModuleJob","ranges":[{"startOffset":5675,"endOffset":6776,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":7249,"endOffset":7472,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7942,"endOffset":8286,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":8578,"endOffset":8806,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoadResult","ranges":[{"startOffset":8812,"endOffset":8967,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":8973,"endOffset":9197,"count":0}],"isBlockCoverage":false},{"functionName":"CustomizedModuleLoader","ranges":[{"startOffset":9421,"endOffset":9787,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":10257,"endOffset":10418,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleJob","ranges":[{"startOffset":10424,"endOffset":10691,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":10695,"endOffset":11177,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":11469,"endOffset":11650,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":12195,"endOffset":12887,"count":1},{"startOffset":12637,"endOffset":12840,"count":0}],"isBlockCoverage":true}]},{"scriptId":"467","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1477,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":191,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleMap","ranges":[{"startOffset":443,"endOffset":471,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":521,"endOffset":668,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":672,"endOffset":1278,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1282,"endOffset":1443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4148,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1365,"endOffset":1403,"count":5}],"isBlockCoverage":true},{"functionName":"validateAssertions","ranges":[{"startOffset":1836,"endOffset":3407,"count":0}],"isBlockCoverage":false},{"functionName":"handleInvalidType","ranges":[{"startOffset":3646,"endOffset":4071,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11011,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":402,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":928,"endOffset":955,"count":0}],"isBlockCoverage":false},{"functionName":"initCJSParse","ranges":[{"startOffset":1450,"endOffset":1861,"count":0}],"isBlockCoverage":false},{"functionName":"assertBufferSource","ranges":[{"startOffset":2002,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":2441,"endOffset":2721,"count":0}],"isBlockCoverage":false},{"functionName":"errPath","ranges":[{"startOffset":2725,"endOffset":2876,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2880,"endOffset":3020,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":3105,"endOffset":3629,"count":0}],"isBlockCoverage":false},{"functionName":"enrichCJSError","ranges":[{"startOffset":3803,"endOffset":4353,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":4488,"endOffset":5872,"count":0}],"isBlockCoverage":false},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":5878,"endOffset":7454,"count":0}],"isBlockCoverage":false},{"functionName":"builtinStrategy","ranges":[{"startOffset":7582,"endOffset":7975,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStrategy","ranges":[{"startOffset":8042,"endOffset":9973,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10042,"endOffset":11007,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/merge-descriptors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1215,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":612,"endOffset":1214,"count":8},{"startOffset":663,"endOffset":721,"count":0},{"startOffset":735,"endOffset":792,"count":0},{"startOffset":824,"endOffset":872,"count":0}],"isBlockCoverage":true},{"functionName":"forEachOwnPropertyName","ranges":[{"startOffset":916,"endOffset":1196,"count":284},{"startOffset":1010,"endOffset":1054,"count":0}],"isBlockCoverage":true}]},{"scriptId":"472","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/application.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14593,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1425,"endOffset":1538,"count":4}],"isBlockCoverage":true},{"functionName":"defaultConfiguration","ranges":[{"startOffset":1630,"endOffset":3237,"count":4},{"startOffset":1697,"endOffset":1713,"count":0},{"startOffset":2984,"endOffset":3020,"count":0}],"isBlockCoverage":true},{"functionName":"onmount","ranges":[{"startOffset":2137,"endOffset":2636,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3073,"endOffset":3229,"count":0}],"isBlockCoverage":false},{"functionName":"lazyrouter","ranges":[{"startOffset":3477,"endOffset":3779,"count":21},{"startOffset":3522,"endOffset":3777,"count":4}],"isBlockCoverage":true},{"functionName":"handle","ranges":[{"startOffset":4028,"endOffset":4365,"count":78},{"startOffset":4137,"endOffset":4228,"count":39},{"startOffset":4261,"endOffset":4329,"count":0}],"isBlockCoverage":true},{"functionName":"use","ranges":[{"startOffset":4609,"endOffset":5784,"count":4},{"startOffset":4754,"endOffset":4965,"count":0},{"startOffset":5044,"endOffset":5117,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5202,"endOffset":5758,"count":6},{"startOffset":5267,"endOffset":5277,"count":3},{"startOffset":5279,"endOffset":5757,"count":3}],"isBlockCoverage":true},{"functionName":"mounted_app","ranges":[{"startOffset":5474,"endOffset":5701,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5565,"endOffset":5693,"count":0}],"isBlockCoverage":false},{"functionName":"route","ranges":[{"startOffset":6012,"endOffset":6092,"count":0}],"isBlockCoverage":false},{"functionName":"engine","ranges":[{"startOffset":7349,"endOffset":7618,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":7899,"endOffset":8130,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8439,"endOffset":9387,"count":333},{"startOffset":8498,"endOffset":8788,"count":285},{"startOffset":8578,"endOffset":8610,"count":527},{"startOffset":8612,"endOffset":8762,"count":402},{"startOffset":8664,"endOffset":8706,"count":160},{"startOffset":8706,"endOffset":8762,"count":242},{"startOffset":8762,"endOffset":8788,"count":125},{"startOffset":8788,"endOffset":8935,"count":48},{"startOffset":8935,"endOffset":9005,"count":4},{"startOffset":9010,"endOffset":9103,"count":4},{"startOffset":9108,"endOffset":9365,"count":4},{"startOffset":9369,"endOffset":9386,"count":48}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":9687,"endOffset":9779,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":10025,"endOffset":10091,"count":86}],"isBlockCoverage":true},{"functionName":"disabled","ranges":[{"startOffset":10332,"endOffset":10391,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":10508,"endOffset":10570,"count":4}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":10689,"endOffset":10753,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10835,"endOffset":11148,"count":34}],"isBlockCoverage":true},{"functionName":"app.<computed>","ranges":[{"startOffset":10869,"endOffset":11145,"count":216},{"startOffset":10910,"endOffset":10935,"count":207},{"startOffset":10937,"endOffset":10999,"count":199},{"startOffset":10999,"endOffset":11144,"count":17}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":11380,"endOffset":11611,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":12081,"endOffset":13530,"count":0}],"isBlockCoverage":false},{"functionName":"listen","ranges":[{"startOffset":14086,"endOffset":14196,"count":1}],"isBlockCoverage":true},{"functionName":"logerror","ranges":[{"startOffset":14279,"endOffset":14412,"count":0}],"isBlockCoverage":false},{"functionName":"tryRender","ranges":[{"startOffset":14460,"endOffset":14592,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/finalhandler/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6689,"count":1},{"startOffset":617,"endOffset":683,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":619,"endOffset":683,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":810,"endOffset":1209,"count":0}],"isBlockCoverage":false},{"functionName":"finalhandler","ranges":[{"startOffset":1455,"endOffset":2786,"count":39},{"startOffset":1520,"endOffset":1525,"count":0},{"startOffset":1569,"endOffset":1592,"count":0},{"startOffset":1593,"endOffset":1609,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1674,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorHeaders","ranges":[{"startOffset":2888,"endOffset":3202,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":3381,"endOffset":3730,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorStatusCode","ranges":[{"startOffset":3836,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"getResourceName","ranges":[{"startOffset":4419,"endOffset":4546,"count":0}],"isBlockCoverage":false},{"functionName":"getResponseStatusCode","ranges":[{"startOffset":4658,"endOffset":4890,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":5014,"endOffset":5139,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5327,"endOffset":6352,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":6477,"endOffset":6688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":165,"endOffset":212,"count":0}],"isBlockCoverage":true}]},{"scriptId":"475","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6015,"count":1},{"startOffset":1443,"endOffset":1650,"count":0},{"startOffset":1674,"endOffset":1690,"count":0},{"startOffset":1732,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":710,"count":90}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":719,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1847,"endOffset":1976,"count":11},{"startOffset":1915,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2063,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2345,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2522,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3056,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3222,"endOffset":3498,"count":1},{"startOffset":3449,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3615,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":3866,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5710,"endOffset":5918,"count":11},{"startOffset":5848,"endOffset":5916,"count":0}],"isBlockCoverage":true}]},{"scriptId":"476","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5222,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1576,"endOffset":1685,"count":17}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1689,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2333,"endOffset":2559,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2564,"endOffset":3567,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3869,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4379,"endOffset":4522,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4560,"endOffset":4709,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4746,"endOffset":4888,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4931,"endOffset":5069,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":5110,"endOffset":5162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6722,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2629,"endOffset":3102,"count":29},{"startOffset":2689,"endOffset":2696,"count":0},{"startOffset":2766,"endOffset":2795,"count":0},{"startOffset":2831,"endOffset":2919,"count":0},{"startOffset":2942,"endOffset":3099,"count":0}],"isBlockCoverage":true},{"functionName":"getColorDepth","ranges":[{"startOffset":3265,"endOffset":6375,"count":29},{"startOffset":3513,"endOffset":3521,"count":0},{"startOffset":3632,"endOffset":3708,"count":0},{"startOffset":3716,"endOffset":3792,"count":0},{"startOffset":3800,"endOffset":3834,"count":0},{"startOffset":3846,"endOffset":3966,"count":0},{"startOffset":3967,"endOffset":4193,"count":0},{"startOffset":4195,"endOffset":5599,"count":0},{"startOffset":5605,"endOffset":5622,"count":0},{"startOffset":5628,"endOffset":5669,"count":0},{"startOffset":5675,"endOffset":5723,"count":0},{"startOffset":5728,"endOffset":5796,"count":0},{"startOffset":5798,"endOffset":6374,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5068,"endOffset":5089,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6158,"endOffset":6211,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6379,"endOffset":6662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"node:internal/util/parse_args/parse_args","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13310,"count":1}],"isBlockCoverage":false},{"functionName":"getMainArgs","ranges":[{"startOffset":1192,"endOffset":1800,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionLikeValue","ranges":[{"startOffset":1951,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionUsage","ranges":[{"startOffset":2753,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"storeOption","ranges":[{"startOffset":3893,"endOffset":4739,"count":0}],"isBlockCoverage":false},{"functionName":"storeDefaultOption","ranges":[{"startOffset":5075,"endOffset":5250,"count":0}],"isBlockCoverage":false},{"functionName":"argsToTokens","ranges":[{"startOffset":5535,"endOffset":9630,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":9652,"endOffset":13267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"node:internal/util/parse_args/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6422,"count":1}],"isBlockCoverage":false},{"functionName":"objectGetOwn","ranges":[{"startOffset":718,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"optionsGetOwn","ranges":[{"startOffset":898,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionValue","ranges":[{"startOffset":1323,"endOffset":1554,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionLikeValue","ranges":[{"startOffset":1778,"endOffset":1925,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneShortOption","ranges":[{"startOffset":2005,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneLongOption","ranges":[{"startOffset":2419,"endOffset":2571,"count":0}],"isBlockCoverage":false},{"functionName":"isLongOptionAndValue","ranges":[{"startOffset":2776,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionGroup","ranges":[{"startOffset":3847,"endOffset":4240,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionAndValue","ranges":[{"startOffset":4560,"endOffset":4999,"count":0}],"isBlockCoverage":false},{"functionName":"findLongOptionForShort","ranges":[{"startOffset":5333,"endOffset":5642,"count":0}],"isBlockCoverage":false},{"functionName":"useDefaultValueOption","ranges":[{"startOffset":5976,"endOffset":6149,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10936,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":611,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":904,"endOffset":2604,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2726,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3165,"endOffset":3384,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3403,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3653,"endOffset":8806,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9284,"endOffset":10720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":818,"endOffset":1071,"count":11},{"startOffset":895,"endOffset":1003,"count":170}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1200,"endOffset":2957,"count":11}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1237,"endOffset":2646,"count":701},{"startOffset":1304,"endOffset":1422,"count":0},{"startOffset":1649,"endOffset":2583,"count":0},{"startOffset":2584,"endOffset":2612,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":2445,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3117,"endOffset":3657,"count":1},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3392,"endOffset":3651,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3711,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":3897,"endOffset":4206,"count":11},{"startOffset":3992,"endOffset":4062,"count":0},{"startOffset":4119,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4294,"endOffset":4393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":407,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":907,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2008,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2382,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2582,"endOffset":2763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/encodeurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1586,"count":1}],"isBlockCoverage":true},{"functionName":"encodeUrl","ranges":[{"startOffset":1411,"endOffset":1585,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/escape-html/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1362,"count":1}],"isBlockCoverage":true},{"functionName":"escapeHtml","ranges":[{"startOffset":493,"endOffset":1361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/on-finished/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4430,"count":1},{"startOffset":489,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":491,"endOffset":555,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":752,"endOffset":969,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":1083,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"attachFinishedListener","ranges":[{"startOffset":1604,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"attachListener","ranges":[{"startOffset":2577,"endOffset":2875,"count":0}],"isBlockCoverage":false},{"functionName":"createListener","ranges":[{"startOffset":2977,"endOffset":3314,"count":0}],"isBlockCoverage":false},{"functionName":"patchAssignSocket","ranges":[{"startOffset":3508,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":3861,"endOffset":3973,"count":1},{"startOffset":3942,"endOffset":3971,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":4095,"endOffset":4429,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/ee-first/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1684,"count":1}],"isBlockCoverage":true},{"functionName":"first","ranges":[{"startOffset":288,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"listener","ranges":[{"startOffset":1327,"endOffset":1683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/parseurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2809,"count":1}],"isBlockCoverage":true},{"functionName":"parseurl","ranges":[{"startOffset":467,"endOffset":806,"count":390},{"startOffset":539,"endOffset":589,"count":0},{"startOffset":648,"endOffset":702,"count":351},{"startOffset":702,"endOffset":805,"count":39}],"isBlockCoverage":true},{"functionName":"originalurl","ranges":[{"startOffset":945,"endOffset":1313,"count":0}],"isBlockCoverage":false},{"functionName":"fastparse","ranges":[{"startOffset":1432,"endOffset":2477,"count":39},{"startOffset":1528,"endOffset":1555,"count":0},{"startOffset":1809,"endOffset":2268,"count":474},{"startOffset":1850,"endOffset":2040,"count":0},{"startOffset":2047,"endOffset":2057,"count":0},{"startOffset":2073,"endOffset":2083,"count":0},{"startOffset":2099,"endOffset":2109,"count":0},{"startOffset":2125,"endOffset":2135,"count":0},{"startOffset":2151,"endOffset":2161,"count":0},{"startOffset":2177,"endOffset":2187,"count":0},{"startOffset":2203,"endOffset":2213,"count":0},{"startOffset":2220,"endOffset":2258,"count":0},{"startOffset":2320,"endOffset":2324,"count":0},{"startOffset":2410,"endOffset":2461,"count":0}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":2623,"endOffset":2808,"count":390},{"startOffset":2696,"endOffset":2721,"count":351},{"startOffset":2722,"endOffset":2776,"count":351},{"startOffset":2777,"endOffset":2806,"count":351}],"isBlockCoverage":true}]},{"scriptId":"488","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/statuses/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2610,"count":1}],"isBlockCoverage":true},{"functionName":"createMessageToStatusCodeMap","ranges":[{"startOffset":906,"endOffset":1170,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":999,"endOffset":1153,"count":63}],"isBlockCoverage":true},{"functionName":"createStatusCodeList","ranges":[{"startOffset":1231,"endOffset":1359,"count":1}],"isBlockCoverage":true},{"functionName":"mapCode","ranges":[{"startOffset":1303,"endOffset":1356,"count":63}],"isBlockCoverage":true},{"functionName":"getStatusCode","ranges":[{"startOffset":1424,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"getStatusMessage","ranges":[{"startOffset":1721,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"status","ranges":[{"startOffset":2288,"endOffset":2609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/unpipe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1118,"count":1}],"isBlockCoverage":true},{"functionName":"hasPipeDataListeners","ranges":[{"startOffset":242,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":553,"endOffset":1117,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/router/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15124,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":923,"endOffset":1317,"count":4},{"startOffset":964,"endOffset":969,"count":0}],"isBlockCoverage":true},{"functionName":"router","ranges":[{"startOffset":974,"endOffset":1046,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":2470,"endOffset":3281,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":3360,"endOffset":8106,"count":78},{"startOffset":4076,"endOffset":4234,"count":0},{"startOffset":4327,"endOffset":4337,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4100,"endOffset":4228,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4353,"endOffset":6867,"count":351},{"startOffset":4417,"endOffset":4423,"count":0},{"startOffset":4484,"endOffset":4550,"count":0},{"startOffset":4613,"endOffset":4741,"count":0},{"startOffset":4805,"endOffset":4856,"count":0},{"startOffset":4918,"endOffset":4977,"count":0},{"startOffset":5023,"endOffset":5067,"count":0},{"startOffset":5156,"endOffset":5194,"count":0},{"startOffset":5300,"endOffset":5321,"count":475},{"startOffset":5323,"endOffset":6182,"count":475},{"startOffset":5458,"endOffset":5542,"count":0},{"startOffset":5570,"endOffset":5597,"count":87},{"startOffset":5597,"endOffset":5617,"count":388},{"startOffset":5617,"endOffset":5691,"count":312},{"startOffset":5691,"endOffset":5715,"count":76},{"startOffset":5715,"endOffset":5817,"count":0},{"startOffset":5817,"endOffset":5972,"count":76},{"startOffset":5972,"endOffset":5995,"count":37},{"startOffset":5997,"endOffset":6056,"count":0},{"startOffset":6056,"endOffset":6122,"count":76},{"startOffset":6122,"endOffset":6142,"count":37},{"startOffset":6144,"endOffset":6176,"count":37},{"startOffset":6224,"endOffset":6262,"count":0},{"startOffset":6321,"endOffset":6353,"count":39},{"startOffset":6432,"endOffset":6473,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6624,"endOffset":6861,"count":351},{"startOffset":6656,"endOffset":6697,"count":0},{"startOffset":6714,"endOffset":6768,"count":39},{"startOffset":6768,"endOffset":6839,"count":312}],"isBlockCoverage":true},{"functionName":"trim_prefix","ranges":[{"startOffset":6871,"endOffset":8104,"count":312},{"startOffset":6962,"endOffset":7894,"count":0},{"startOffset":7982,"endOffset":8043,"count":0}],"isBlockCoverage":true},{"functionName":"process_params","ranges":[{"startOffset":8194,"endOffset":9887,"count":351},{"startOffset":8413,"endOffset":8437,"count":339},{"startOffset":8437,"endOffset":9886,"count":12}],"isBlockCoverage":true},{"functionName":"param","ranges":[{"startOffset":8620,"endOffset":9441,"count":24},{"startOffset":8655,"endOffset":8686,"count":0},{"startOffset":8715,"endOffset":8957,"count":12},{"startOffset":8959,"endOffset":8988,"count":12},{"startOffset":8988,"endOffset":9172,"count":0},{"startOffset":9174,"endOffset":9440,"count":0}],"isBlockCoverage":true},{"functionName":"paramCallback","ranges":[{"startOffset":9473,"endOffset":9873,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":10433,"endOffset":11460,"count":14},{"startOffset":10581,"endOffset":10792,"count":6},{"startOffset":10632,"endOffset":10651,"count":0},{"startOffset":10653,"endOffset":10680,"count":0},{"startOffset":10883,"endOffset":10959,"count":0},{"startOffset":11070,"endOffset":11175,"count":0},{"startOffset":11240,"endOffset":11256,"count":1}],"isBlockCoverage":true},{"functionName":"route","ranges":[{"startOffset":11756,"endOffset":12019,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12084,"endOffset":12250,"count":35}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":12120,"endOffset":12247,"count":0}],"isBlockCoverage":false},{"functionName":"appendMethods","ranges":[{"startOffset":12293,"endOffset":12485,"count":0}],"isBlockCoverage":false},{"functionName":"getPathname","ranges":[{"startOffset":12514,"endOffset":12630,"count":351},{"startOffset":12589,"endOffset":12628,"count":0}],"isBlockCoverage":true},{"functionName":"getProtohost","ranges":[{"startOffset":12669,"endOffset":13063,"count":78},{"startOffset":12793,"endOffset":12887,"count":0},{"startOffset":12892,"endOffset":12904,"count":0},{"startOffset":12994,"endOffset":13045,"count":0},{"startOffset":13050,"endOffset":13061,"count":0}],"isBlockCoverage":true},{"functionName":"gettype","ranges":[{"startOffset":13095,"endOffset":13292,"count":0}],"isBlockCoverage":false},{"functionName":"matchLayer","ranges":[{"startOffset":13392,"endOffset":13504,"count":475},{"startOffset":13469,"endOffset":13502,"count":0}],"isBlockCoverage":true},{"functionName":"mergeParams","ranges":[{"startOffset":13541,"endOffset":14199,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":14237,"endOffset":14639,"count":78},{"startOffset":14400,"endOffset":14467,"count":234}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14478,"endOffset":14636,"count":0}],"isBlockCoverage":false},{"functionName":"sendOptionsResponse","ranges":[{"startOffset":14669,"endOffset":14848,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":14869,"endOffset":15123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/router/route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4281,"count":1}],"isBlockCoverage":true},{"functionName":"Route","ranges":[{"startOffset":663,"endOffset":818,"count":17}],"isBlockCoverage":true},{"functionName":"_handles_method","ranges":[{"startOffset":925,"endOffset":1157,"count":76},{"startOffset":985,"endOffset":1007,"count":0},{"startOffset":1067,"endOffset":1091,"count":0},{"startOffset":1093,"endOffset":1116,"count":0}],"isBlockCoverage":true},{"functionName":"_options","ranges":[{"startOffset":1250,"endOffset":1557,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":1645,"endOffset":2554,"count":39},{"startOffset":1764,"endOffset":1788,"count":0},{"startOffset":1855,"endOffset":1879,"count":0},{"startOffset":1881,"endOffset":1906,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":1942,"endOffset":2552,"count":39},{"startOffset":2003,"endOffset":2021,"count":0},{"startOffset":2023,"endOffset":2051,"count":0},{"startOffset":2094,"endOffset":2113,"count":0},{"startOffset":2115,"endOffset":2145,"count":0},{"startOffset":2191,"endOffset":2235,"count":0},{"startOffset":2304,"endOffset":2334,"count":0},{"startOffset":2385,"endOffset":2408,"count":0},{"startOffset":2423,"endOffset":2477,"count":0}],"isBlockCoverage":true},{"functionName":"all","ranges":[{"startOffset":3163,"endOffset":3650,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3669,"endOffset":4278,"count":34}],"isBlockCoverage":true},{"functionName":"Route.<computed>","ranges":[{"startOffset":3715,"endOffset":4275,"count":17},{"startOffset":3897,"endOffset":4068,"count":0}],"isBlockCoverage":true}]},{"scriptId":"492","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/array-flatten/array-flatten.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1195,"count":1}],"isBlockCoverage":true},{"functionName":"flattenWithDepth","ranges":[{"startOffset":230,"endOffset":510,"count":0}],"isBlockCoverage":false},{"functionName":"flattenForever","ranges":[{"startOffset":659,"endOffset":904,"count":35},{"startOffset":742,"endOffset":885,"count":37},{"startOffset":800,"endOffset":843,"count":0}],"isBlockCoverage":true},{"functionName":"arrayFlatten","ranges":[{"startOffset":1045,"endOffset":1194,"count":35},{"startOffset":1147,"endOffset":1193,"count":0}],"isBlockCoverage":true}]},{"scriptId":"493","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/router/layer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3296,"count":1}],"isBlockCoverage":true},{"functionName":"Layer","ranges":[{"startOffset":486,"endOffset":951,"count":65},{"startOffset":554,"endOffset":600,"count":17},{"startOffset":600,"endOffset":647,"count":48},{"startOffset":647,"endOffset":652,"count":0},{"startOffset":697,"endOffset":713,"count":1},{"startOffset":928,"endOffset":949,"count":31}],"isBlockCoverage":true},{"functionName":"handle_error","ranges":[{"startOffset":1146,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":1561,"endOffset":1775,"count":390},{"startOffset":1641,"endOffset":1703,"count":0},{"startOffset":1741,"endOffset":1773,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":1943,"endOffset":2872,"count":475},{"startOffset":2092,"endOffset":2161,"count":312},{"startOffset":2161,"endOffset":2249,"count":163},{"startOffset":2249,"endOffset":2343,"count":0},{"startOffset":2343,"endOffset":2421,"count":163},{"startOffset":2421,"endOffset":2500,"count":87},{"startOffset":2500,"endOffset":2658,"count":76},{"startOffset":2658,"endOffset":2854,"count":44},{"startOffset":2776,"endOffset":2815,"count":0},{"startOffset":2854,"endOffset":2871,"count":76}],"isBlockCoverage":true},{"functionName":"decode_param","ranges":[{"startOffset":2965,"endOffset":3295,"count":44},{"startOffset":3045,"endOffset":3066,"count":0},{"startOffset":3116,"endOffset":3293,"count":0}],"isBlockCoverage":true}]},{"scriptId":"494","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/path-to-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3328,"count":1}],"isBlockCoverage":true},{"functionName":"pathtoRegexp","ranges":[{"startOffset":520,"endOffset":3326,"count":48},{"startOffset":585,"endOffset":590,"count":0},{"startOffset":606,"endOffset":611,"count":0},{"startOffset":711,"endOffset":715,"count":0},{"startOffset":847,"endOffset":1033,"count":0},{"startOffset":1062,"endOffset":1447,"count":0},{"startOffset":1480,"endOffset":1484,"count":0},{"startOffset":1517,"endOffset":1522,"count":31},{"startOffset":1523,"endOffset":1529,"count":17},{"startOffset":2645,"endOffset":3148,"count":7},{"startOffset":2740,"endOffset":2768,"count":0},{"startOffset":2845,"endOffset":2868,"count":0},{"startOffset":2951,"endOffset":3134,"count":0},{"startOffset":3229,"endOffset":3234,"count":34},{"startOffset":3235,"endOffset":3287,"count":14},{"startOffset":3268,"endOffset":3272,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1300,"endOffset":1380,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1654,"endOffset":2280,"count":7},{"startOffset":1746,"endOffset":1751,"count":0},{"startOffset":2028,"endOffset":2032,"count":0},{"startOffset":2087,"endOffset":2094,"count":0},{"startOffset":2127,"endOffset":2160,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2302,"endOffset":2530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/methods/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1040,"count":1},{"startOffset":299,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentNodeMethods","ranges":[{"startOffset":383,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"lowerCaseMethod","ranges":[{"startOffset":460,"endOffset":531,"count":34}],"isBlockCoverage":true},{"functionName":"getBasicNodeMethods","ranges":[{"startOffset":624,"endOffset":1039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"node:http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5680,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":2221,"endOffset":2315,"count":1}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":4300,"endOffset":4386,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4560,"endOffset":4666,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxIdleHTTPParsers","ranges":[{"startOffset":4994,"endOffset":5088,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5220,"endOffset":5436,"count":5},{"startOffset":5266,"endOffset":5402,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5567,"endOffset":5614,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5619,"endOffset":5672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"node:_http_agent","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17543,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1749,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"ReusedHandle","ranges":[{"startOffset":2758,"endOffset":2840,"count":0}],"isBlockCoverage":false},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2847,"endOffset":3031,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":3035,"endOffset":6367,"count":1},{"startOffset":3099,"endOffset":3125,"count":0},{"startOffset":3694,"endOffset":3702,"count":0},{"startOffset":3883,"endOffset":3892,"count":0},{"startOffset":4094,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4237,"endOffset":6246,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":6479,"endOffset":7018,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":7198,"endOffset":7716,"count":0}],"isBlockCoverage":false},{"functionName":"addRequest","ranges":[{"startOffset":7750,"endOffset":9982,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":10018,"endOffset":11146,"count":0}],"isBlockCoverage":false},{"functionName":"calculateServerName","ranges":[{"startOffset":11151,"endOffset":11997,"count":0}],"isBlockCoverage":false},{"functionName":"installListeners","ranges":[{"startOffset":12001,"endOffset":13537,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":13572,"endOffset":15429,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":15468,"endOffset":16162,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":16197,"endOffset":16370,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":16401,"endOffset":16762,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":16767,"endOffset":17015,"count":0}],"isBlockCoverage":false},{"functionName":"asyncResetHandle","ranges":[{"startOffset":17019,"endOffset":17422,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"node:_http_client","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29244,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3170,"endOffset":3197,"count":0}],"isBlockCoverage":false},{"functionName":"validateHost","ranges":[{"startOffset":3452,"endOffset":3752,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":3791,"endOffset":3864,"count":0}],"isBlockCoverage":false},{"functionName":"ClientRequest","ranges":[{"startOffset":3871,"endOffset":11529,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":11697,"endOffset":12445,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":12492,"endOffset":12710,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":12747,"endOffset":12892,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":12931,"endOffset":13222,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":13227,"endOffset":13279,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":13283,"endOffset":13449,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":13453,"endOffset":14663,"count":0}],"isBlockCoverage":false},{"functionName":"socketErrorListener","ranges":[{"startOffset":14667,"endOffset":15330,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":15334,"endOffset":15836,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":15840,"endOffset":18290,"count":0}],"isBlockCoverage":false},{"functionName":"statusIsInformational","ranges":[{"startOffset":18294,"endOffset":18535,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":18550,"endOffset":21662,"count":0}],"isBlockCoverage":false},{"functionName":"responseKeepAlive","ranges":[{"startOffset":21677,"endOffset":22775,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnEnd","ranges":[{"startOffset":22779,"endOffset":23968,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnTimeout","ranges":[{"startOffset":23972,"endOffset":24129,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnFinish","ranges":[{"startOffset":24275,"endOffset":24400,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":24404,"endOffset":24534,"count":0}],"isBlockCoverage":false},{"functionName":"tickOnSocket","ranges":[{"startOffset":24538,"endOffset":25755,"count":0}],"isBlockCoverage":false},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":25759,"endOffset":25872,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":25876,"endOffset":26281,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":26320,"endOffset":26495,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketNT","ranges":[{"startOffset":26500,"endOffset":27328,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":27392,"endOffset":28169,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":28210,"endOffset":28591,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":28596,"endOffset":28790,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":28831,"endOffset":28914,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":28969,"endOffset":29096,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":29140,"endOffset":29197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"node:_http_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8532,"count":1}],"isBlockCoverage":false},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2356,"endOffset":2610,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2829,"endOffset":4411,"count":39},{"startOffset":3121,"endOffset":3186,"count":0},{"startOffset":3215,"endOffset":3268,"count":0},{"startOffset":3440,"endOffset":3492,"count":0},{"startOffset":4234,"endOffset":4350,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnBody","ranges":[{"startOffset":4415,"endOffset":4745,"count":28},{"startOffset":4566,"endOffset":4573,"count":0},{"startOffset":4715,"endOffset":4737,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":4749,"endOffset":5256,"count":39},{"startOffset":5000,"endOffset":5118,"count":0}],"isBlockCoverage":true},{"functionName":"parsersCb","ranges":[{"startOffset":5308,"endOffset":5607,"count":2}],"isBlockCoverage":true},{"functionName":"closeParserInstance","ranges":[{"startOffset":5613,"endOffset":5669,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":6001,"endOffset":6648,"count":2},{"startOffset":6204,"endOffset":6386,"count":0},{"startOffset":6566,"endOffset":6596,"count":0}],"isBlockCoverage":true},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":6868,"endOffset":6961,"count":273}],"isBlockCoverage":true},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":7232,"endOffset":7335,"count":312}],"isBlockCoverage":true},{"functionName":"cleanParser","ranges":[{"startOffset":7339,"endOffset":7734,"count":4}],"isBlockCoverage":true},{"functionName":"prepareError","ranges":[{"startOffset":7738,"endOffset":7935,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":7969,"endOffset":8160,"count":2},{"startOffset":8018,"endOffset":8035,"count":0},{"startOffset":8037,"endOffset":8127,"count":0}],"isBlockCoverage":true}]},{"scriptId":"500","url":"node:internal/freelist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":83,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":212,"endOffset":335,"count":2},{"startOffset":255,"endOffset":279,"count":0}],"isBlockCoverage":true},{"functionName":"free","ranges":[{"startOffset":341,"endOffset":471,"count":2},{"startOffset":447,"endOffset":470,"count":0}],"isBlockCoverage":true}]},{"scriptId":"501","url":"node:_http_incoming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15359,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1689,"endOffset":1795,"count":67}],"isBlockCoverage":true},{"functionName":"readStop","ranges":[{"startOffset":1799,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1934,"endOffset":2960,"count":39}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3176,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3228,"endOffset":3272,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3371,"endOffset":3680,"count":669},{"startOffset":3410,"endOffset":3647,"count":39},{"startOffset":3571,"endOffset":3640,"count":355}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3690,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3844,"endOffset":4193,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4203,"endOffset":4258,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4358,"endOffset":4673,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4683,"endOffset":4731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4839,"endOffset":5194,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5204,"endOffset":5260,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":5309,"endOffset":5452,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5941,"endOffset":6329,"count":28}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":6577,"endOffset":7396,"count":39},{"startOffset":6652,"endOffset":6711,"count":0},{"startOffset":7081,"endOffset":7334,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7157,"endOffset":7327,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":7463,"endOffset":7941,"count":39},{"startOffset":7577,"endOffset":7684,"count":0},{"startOffset":7812,"endOffset":7933,"count":0}],"isBlockCoverage":true},{"functionName":"matchKnownFields","ranges":[{"startOffset":8676,"endOffset":12665,"count":394},{"startOffset":8755,"endOffset":8837,"count":0},{"startOffset":8843,"endOffset":9196,"count":39},{"startOffset":8914,"endOffset":8962,"count":0},{"startOffset":8964,"endOffset":9026,"count":0},{"startOffset":9028,"endOffset":9090,"count":0},{"startOffset":9092,"endOffset":9160,"count":0},{"startOffset":9162,"endOffset":9196,"count":0},{"startOffset":9202,"endOffset":9597,"count":39},{"startOffset":9263,"endOffset":9279,"count":0},{"startOffset":9333,"endOffset":9355,"count":0},{"startOffset":9409,"endOffset":9431,"count":0},{"startOffset":9485,"endOffset":9507,"count":0},{"startOffset":9583,"endOffset":9597,"count":0},{"startOffset":9603,"endOffset":9849,"count":0},{"startOffset":9855,"endOffset":10052,"count":0},{"startOffset":10058,"endOffset":10355,"count":78},{"startOffset":10137,"endOffset":10217,"count":39},{"startOffset":10228,"endOffset":10244,"count":0},{"startOffset":10244,"endOffset":10304,"count":39},{"startOffset":10315,"endOffset":10341,"count":39},{"startOffset":10341,"endOffset":10355,"count":0},{"startOffset":10361,"endOffset":10477,"count":0},{"startOffset":10483,"endOffset":10699,"count":39},{"startOffset":10528,"endOffset":10555,"count":0},{"startOffset":10588,"endOffset":10652,"count":0},{"startOffset":10663,"endOffset":10699,"count":0},{"startOffset":10705,"endOffset":11139,"count":12},{"startOffset":10813,"endOffset":10879,"count":0},{"startOffset":10890,"endOffset":10979,"count":0},{"startOffset":10990,"endOffset":11085,"count":0},{"startOffset":11096,"endOffset":11139,"count":0},{"startOffset":11145,"endOffset":11270,"count":109},{"startOffset":11232,"endOffset":11256,"count":31},{"startOffset":11256,"endOffset":11270,"count":78},{"startOffset":11276,"endOffset":11634,"count":78},{"startOffset":11365,"endOffset":11466,"count":39},{"startOffset":11477,"endOffset":11508,"count":39},{"startOffset":11508,"endOffset":11578,"count":0},{"startOffset":11589,"endOffset":11634,"count":0},{"startOffset":11640,"endOffset":11892,"count":0},{"startOffset":11898,"endOffset":12268,"count":0},{"startOffset":12274,"endOffset":12532,"count":0},{"startOffset":12537,"endOffset":12557,"count":78},{"startOffset":12557,"endOffset":12664,"count":39}],"isBlockCoverage":true},{"functionName":"_addHeaderLine","ranges":[{"startOffset":13287,"endOffset":14367,"count":355},{"startOffset":13440,"endOffset":13453,"count":160},{"startOffset":13455,"endOffset":13687,"count":195},{"startOffset":13574,"endOffset":13640,"count":0},{"startOffset":13687,"endOffset":14364,"count":160},{"startOffset":13709,"endOffset":13911,"count":0},{"startOffset":13948,"endOffset":14271,"count":0}],"isBlockCoverage":true},{"functionName":"_addHeaderLineDistinct","ranges":[{"startOffset":14447,"endOffset":14647,"count":0}],"isBlockCoverage":false},{"functionName":"_dump","ranges":[{"startOffset":14775,"endOffset":15024,"count":11}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":15029,"endOffset":15284,"count":39},{"startOffset":15253,"endOffset":15281,"count":0}],"isBlockCoverage":true}]},{"scriptId":"502","url":"node:_http_outgoing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35639,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2826,"endOffset":2853,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":3171,"endOffset":3179,"count":37}],"isBlockCoverage":true},{"functionName":"isCookieField","ranges":[{"startOffset":3429,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"isContentDispositionField","ranges":[{"startOffset":3535,"endOffset":3663,"count":191},{"startOffset":3601,"endOffset":3659,"count":0}],"isBlockCoverage":true},{"functionName":"OutgoingMessage","ranges":[{"startOffset":3667,"endOffset":5241,"count":39},{"startOffset":5122,"endOffset":5150,"count":0},{"startOffset":5229,"endOffset":5237,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5445,"endOffset":5485,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5578,"endOffset":5616,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5719,"endOffset":5867,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5972,"endOffset":6003,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6104,"endOffset":6194,"count":37},{"startOffset":6184,"endOffset":6187,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6302,"endOffset":6398,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6499,"endOffset":6613,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6736,"endOffset":6784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6881,"endOffset":7380,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7546,"endOffset":7588,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7598,"endOffset":7642,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7769,"endOffset":8241,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8342,"endOffset":8806,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":8929,"endOffset":9451,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":9489,"endOffset":9590,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":9630,"endOffset":9752,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":9796,"endOffset":10104,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":10353,"endOffset":10682,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":10796,"endOffset":11770,"count":76},{"startOffset":11079,"endOffset":11103,"count":39},{"startOffset":11105,"endOffset":11703,"count":39},{"startOffset":11297,"endOffset":11368,"count":2},{"startOffset":11355,"endOffset":11367,"count":0},{"startOffset":11370,"endOffset":11413,"count":2},{"startOffset":11413,"endOffset":11668,"count":37}],"isBlockCoverage":true},{"functionName":"_writeRaw","ranges":[{"startOffset":11825,"endOffset":12701,"count":76},{"startOffset":11938,"endOffset":12089,"count":0},{"startOffset":12131,"endOffset":12185,"count":0},{"startOffset":12346,"endOffset":12386,"count":37},{"startOffset":12475,"endOffset":12700,"count":0}],"isBlockCoverage":true},{"functionName":"_storeHeader","ranges":[{"startOffset":12763,"endOffset":17816,"count":39},{"startOffset":13205,"endOffset":13316,"count":191},{"startOffset":13323,"endOffset":14066,"count":0},{"startOffset":14817,"endOffset":14904,"count":0},{"startOffset":14906,"endOffset":15094,"count":0},{"startOffset":15152,"endOffset":15355,"count":0},{"startOffset":15467,"endOffset":15502,"count":2},{"startOffset":15503,"endOffset":15516,"count":0},{"startOffset":15588,"endOffset":15638,"count":0},{"startOffset":15925,"endOffset":15993,"count":0},{"startOffset":16079,"endOffset":16161,"count":0},{"startOffset":16191,"endOffset":16203,"count":2},{"startOffset":16205,"endOffset":17214,"count":2},{"startOffset":16351,"endOffset":17209,"count":0},{"startOffset":17541,"endOffset":17590,"count":0},{"startOffset":17798,"endOffset":17813,"count":0}],"isBlockCoverage":true},{"functionName":"processHeader","ranges":[{"startOffset":17820,"endOffset":18789,"count":191},{"startOffset":17902,"endOffset":17926,"count":0},{"startOffset":18175,"endOffset":18197,"count":0},{"startOffset":18199,"endOffset":18248,"count":0},{"startOffset":18279,"endOffset":18735,"count":0}],"isBlockCoverage":true},{"functionName":"storeHeader","ranges":[{"startOffset":18793,"endOffset":18997,"count":191},{"startOffset":18873,"endOffset":18905,"count":0}],"isBlockCoverage":true},{"functionName":"matchHeader","ranges":[{"startOffset":19001,"endOffset":19958,"count":191},{"startOffset":19102,"endOffset":19109,"count":39},{"startOffset":19109,"endOffset":19181,"count":152},{"startOffset":19181,"endOffset":19426,"count":0},{"startOffset":19432,"endOffset":19628,"count":0},{"startOffset":19634,"endOffset":19772,"count":37},{"startOffset":19778,"endOffset":19790,"count":0},{"startOffset":19796,"endOffset":19810,"count":0},{"startOffset":19816,"endOffset":19873,"count":0},{"startOffset":19879,"endOffset":19950,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20005,"endOffset":20171,"count":273},{"startOffset":20093,"endOffset":20168,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20221,"endOffset":20499,"count":273},{"startOffset":20268,"endOffset":20333,"count":0},{"startOffset":20372,"endOffset":20496,"count":0}],"isBlockCoverage":true},{"functionName":"parseUniqueHeadersOption","ranges":[{"startOffset":20505,"endOffset":20787,"count":1},{"startOffset":20605,"endOffset":20786,"count":0}],"isBlockCoverage":true},{"functionName":"setHeader","ranges":[{"startOffset":20829,"endOffset":21203,"count":273},{"startOffset":20884,"endOffset":20935,"count":0},{"startOffset":21070,"endOffset":21120,"count":39}],"isBlockCoverage":true},{"functionName":"setHeaders","ranges":[{"startOffset":21247,"endOffset":21691,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":21737,"endOffset":22501,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":22546,"endOffset":22777,"count":160},{"startOffset":22676,"endOffset":22683,"count":0},{"startOffset":22762,"endOffset":22773,"count":80}],"isBlockCoverage":true},{"functionName":"getHeaderNames","ranges":[{"startOffset":22894,"endOffset":22999,"count":0}],"isBlockCoverage":false},{"functionName":"getRawHeaderNames","ranges":[{"startOffset":23123,"endOffset":23537,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":23643,"endOffset":24067,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":24112,"endOffset":24274,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":24322,"endOffset":24914,"count":6},{"startOffset":24408,"endOffset":24462,"count":0},{"startOffset":24539,"endOffset":24610,"count":0},{"startOffset":24616,"endOffset":24688,"count":2},{"startOffset":24694,"endOffset":24764,"count":2},{"startOffset":24770,"endOffset":24826,"count":0}],"isBlockCoverage":true},{"functionName":"_implicitHeader","ranges":[{"startOffset":24965,"endOffset":25058,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25200,"endOffset":25237,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25342,"endOffset":25378,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25487,"endOffset":25571,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":25654,"endOffset":25917,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":25922,"endOffset":26291,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNt","ranges":[{"startOffset":26295,"endOffset":26449,"count":0}],"isBlockCoverage":false},{"functionName":"strictContentLength","ranges":[{"startOffset":26453,"endOffset":26696,"count":39},{"startOffset":26530,"endOffset":26564,"count":0},{"startOffset":26565,"endOffset":26585,"count":0},{"startOffset":26586,"endOffset":26614,"count":0},{"startOffset":26615,"endOffset":26643,"count":0},{"startOffset":26644,"endOffset":26687,"count":0}],"isBlockCoverage":true},{"functionName":"write_","ranges":[{"startOffset":26700,"endOffset":28985,"count":37},{"startOffset":26844,"endOffset":26891,"count":0},{"startOffset":26952,"endOffset":27055,"count":0},{"startOffset":27091,"endOffset":27142,"count":0},{"startOffset":27167,"endOffset":27219,"count":0},{"startOffset":27234,"endOffset":27383,"count":0},{"startOffset":27432,"endOffset":27843,"count":0},{"startOffset":27930,"endOffset":27966,"count":0},{"startOffset":28084,"endOffset":28357,"count":0},{"startOffset":28376,"endOffset":28389,"count":0},{"startOffset":28390,"endOffset":28419,"count":0},{"startOffset":28421,"endOffset":28504,"count":0},{"startOffset":28546,"endOffset":28567,"count":0},{"startOffset":28569,"endOffset":28867,"count":0}],"isBlockCoverage":true},{"functionName":"connectionCorkNT","ranges":[{"startOffset":28991,"endOffset":29045,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":29089,"endOffset":30567,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":30572,"endOffset":30695,"count":39},{"startOffset":30659,"endOffset":30666,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":30731,"endOffset":32770,"count":39},{"startOffset":30809,"endOffset":30879,"count":0},{"startOffset":30921,"endOffset":30975,"count":0},{"startOffset":30992,"endOffset":31296,"count":37},{"startOffset":31018,"endOffset":31181,"count":0},{"startOffset":31296,"endOffset":31704,"count":2},{"startOffset":31321,"endOffset":31554,"count":0},{"startOffset":31751,"endOffset":31781,"count":0},{"startOffset":31817,"endOffset":31863,"count":0},{"startOffset":31865,"endOffset":31962,"count":0},{"startOffset":32038,"endOffset":32061,"count":37},{"startOffset":32063,"endOffset":32138,"count":0},{"startOffset":32166,"endOffset":32188,"count":37},{"startOffset":32189,"endOffset":32197,"count":0},{"startOffset":32244,"endOffset":32287,"count":0}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":32949,"endOffset":33023,"count":39}],"isBlockCoverage":true},{"functionName":"_flush","ranges":[{"startOffset":33839,"endOffset":34284,"count":39},{"startOffset":34065,"endOffset":34173,"count":0},{"startOffset":34187,"endOffset":34206,"count":0},{"startOffset":34208,"endOffset":34276,"count":0}],"isBlockCoverage":true},{"functionName":"_flushOutput","ranges":[{"startOffset":34330,"endOffset":34999,"count":76},{"startOffset":34387,"endOffset":34435,"count":0},{"startOffset":34517,"endOffset":34534,"count":39},{"startOffset":34534,"endOffset":34998,"count":37}],"isBlockCoverage":true},{"functionName":"flushHeaders","ranges":[{"startOffset":35047,"endOffset":35185,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":35223,"endOffset":35368,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":35429,"endOffset":35476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"node:internal/http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1257,"count":1}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":367,"endOffset":437,"count":39},{"startOffset":406,"endOffset":414,"count":2}],"isBlockCoverage":true},{"functionName":"cache","ranges":[{"startOffset":441,"endOffset":602,"count":2}],"isBlockCoverage":true},{"functionName":"resetCache","ranges":[{"startOffset":606,"endOffset":657,"count":2}],"isBlockCoverage":true},{"functionName":"getNextTraceEventId","ranges":[{"startOffset":686,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceHTTPEnabled","ranges":[{"startOffset":751,"endOffset":832,"count":78}],"isBlockCoverage":true},{"functionName":"traceBegin","ranges":[{"startOffset":884,"endOffset":974,"count":0}],"isBlockCoverage":false},{"functionName":"traceEnd","ranges":[{"startOffset":978,"endOffset":1066,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"node:_http_server","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39453,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2854,"endOffset":2881,"count":1}],"isBlockCoverage":true},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":7281,"endOffset":7363,"count":2}],"isBlockCoverage":true},{"functionName":"ServerResponse","ranges":[{"startOffset":7370,"endOffset":8322,"count":39},{"startOffset":7482,"endOffset":7504,"count":0},{"startOffset":7674,"endOffset":7878,"count":0},{"startOffset":7909,"endOffset":8167,"count":0},{"startOffset":8197,"endOffset":8319,"count":0}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":8493,"endOffset":9158,"count":39},{"startOffset":8553,"endOffset":8575,"count":0},{"startOffset":8577,"endOffset":8866,"count":0},{"startOffset":8944,"endOffset":8985,"count":0},{"startOffset":8987,"endOffset":9155,"count":0}],"isBlockCoverage":true},{"functionName":"onServerResponseClose","ranges":[{"startOffset":9264,"endOffset":10276,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":10320,"endOffset":10584,"count":39},{"startOffset":10380,"endOffset":10429,"count":0}],"isBlockCoverage":true},{"functionName":"detachSocket","ranges":[{"startOffset":10629,"endOffset":10816,"count":39}],"isBlockCoverage":true},{"functionName":"writeContinue","ranges":[{"startOffset":10862,"endOffset":10983,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":11031,"endOffset":11131,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":11179,"endOffset":11715,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":11763,"endOffset":11830,"count":39}],"isBlockCoverage":true},{"functionName":"writeHead","ranges":[{"startOffset":11884,"endOffset":14540,"count":39},{"startOffset":11953,"endOffset":12006,"count":0},{"startOffset":12118,"endOffset":12189,"count":0},{"startOffset":12229,"endOffset":12324,"count":0},{"startOffset":12456,"endOffset":12468,"count":0},{"startOffset":12685,"endOffset":12927,"count":0},{"startOffset":12942,"endOffset":13220,"count":0},{"startOffset":13296,"endOffset":13360,"count":0},{"startOffset":13419,"endOffset":13463,"count":0},{"startOffset":13568,"endOffset":13589,"count":37},{"startOffset":13590,"endOffset":13640,"count":37},{"startOffset":13642,"endOffset":14237,"count":2},{"startOffset":14414,"endOffset":14431,"count":0},{"startOffset":14433,"endOffset":14474,"count":0}],"isBlockCoverage":true},{"functionName":"storeHTTPOptions","ranges":[{"startOffset":14656,"endOffset":17534,"count":1},{"startOffset":14925,"endOffset":14976,"count":0},{"startOffset":15122,"endOffset":15188,"count":0},{"startOffset":15327,"endOffset":15435,"count":0},{"startOffset":15586,"endOffset":15694,"count":0},{"startOffset":15926,"endOffset":16026,"count":0},{"startOffset":16122,"endOffset":16238,"count":0},{"startOffset":16429,"endOffset":16589,"count":0},{"startOffset":16762,"endOffset":16887,"count":0},{"startOffset":17043,"endOffset":17125,"count":0},{"startOffset":17307,"endOffset":17472,"count":0}],"isBlockCoverage":true},{"functionName":"setupConnectionsTracking","ranges":[{"startOffset":17538,"endOffset":17996,"count":1}],"isBlockCoverage":true},{"functionName":"httpServerPreClose","ranges":[{"startOffset":18000,"endOffset":18130,"count":1}],"isBlockCoverage":true},{"functionName":"Server","ranges":[{"startOffset":18134,"endOffset":19347,"count":1},{"startOffset":18212,"endOffset":18256,"count":0},{"startOffset":18364,"endOffset":18479,"count":0}],"isBlockCoverage":true},{"functionName":"Server.close","ranges":[{"startOffset":19482,"endOffset":19588,"count":1}],"isBlockCoverage":true},{"functionName":"Server.<computed>","ranges":[{"startOffset":19632,"endOffset":19715,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeAllConnections","ranges":[{"startOffset":19759,"endOffset":19925,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeIdleConnections","ranges":[{"startOffset":19970,"endOffset":20258,"count":1},{"startOffset":20090,"endOffset":20255,"count":2},{"startOffset":20136,"endOffset":20183,"count":0},{"startOffset":20185,"endOffset":20210,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":20293,"endOffset":20427,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":20478,"endOffset":21067,"count":0}],"isBlockCoverage":false},{"functionName":"checkConnections","ranges":[{"startOffset":21072,"endOffset":21431,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":21435,"endOffset":21584,"count":2}],"isBlockCoverage":true},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":21588,"endOffset":25104,"count":2},{"startOffset":22020,"endOffset":22062,"count":0},{"startOffset":22069,"endOffset":22103,"count":0},{"startOffset":22263,"endOffset":22290,"count":0},{"startOffset":22605,"endOffset":22618,"count":0},{"startOffset":22836,"endOffset":22900,"count":0}],"isBlockCoverage":true},{"functionName":"socketSetEncoding","ranges":[{"startOffset":25108,"endOffset":25182,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":25186,"endOffset":25305,"count":74}],"isBlockCoverage":true},{"functionName":"socketOnDrain","ranges":[{"startOffset":25309,"endOffset":25779,"count":74},{"startOffset":25502,"endOffset":25515,"count":0},{"startOffset":25517,"endOffset":25629,"count":0},{"startOffset":25716,"endOffset":25776,"count":0}],"isBlockCoverage":true},{"functionName":"socketOnTimeout","ranges":[{"startOffset":25783,"endOffset":26165,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":26169,"endOffset":26322,"count":2}],"isBlockCoverage":true},{"functionName":"abortIncoming","ranges":[{"startOffset":26326,"endOffset":26515,"count":2},{"startOffset":26388,"endOffset":26478,"count":0}],"isBlockCoverage":true},{"functionName":"socketOnEnd","ranges":[{"startOffset":26519,"endOffset":27057,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":27061,"endOffset":27296,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestTimeout","ranges":[{"startOffset":27300,"endOffset":27477,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":27481,"endOffset":27988,"count":39}],"isBlockCoverage":true},{"functionName":"onParserTimeout","ranges":[{"startOffset":27992,"endOffset":28142,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":28159,"endOffset":28167,"count":0}],"isBlockCoverage":false},{"functionName":"warnUnclosedSocket","ranges":[{"startOffset":28586,"endOffset":28910,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":28914,"endOffset":29930,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":29934,"endOffset":31603,"count":39},{"startOffset":30083,"endOffset":30194,"count":0},{"startOffset":30248,"endOffset":31292,"count":0},{"startOffset":31355,"endOffset":31422,"count":0},{"startOffset":31447,"endOffset":31463,"count":0},{"startOffset":31465,"endOffset":31600,"count":0}],"isBlockCoverage":true},{"functionName":"clearIncoming","ranges":[{"startOffset":31607,"endOffset":31956,"count":47},{"startOffset":31650,"endOffset":31657,"count":8},{"startOffset":31858,"endOffset":31897,"count":39},{"startOffset":31897,"endOffset":31948,"count":8}],"isBlockCoverage":true},{"functionName":"resOnFinish","ranges":[{"startOffset":31960,"endOffset":33329,"count":39},{"startOffset":32063,"endOffset":32190,"count":0},{"startOffset":32660,"endOffset":32698,"count":11},{"startOffset":32705,"endOffset":32717,"count":11},{"startOffset":32831,"endOffset":32961,"count":0},{"startOffset":33184,"endOffset":33326,"count":0}],"isBlockCoverage":true},{"functionName":"emitCloseNT","ranges":[{"startOffset":33333,"endOffset":33472,"count":39}],"isBlockCoverage":true},{"functionName":"parserOnIncoming","ranges":[{"startOffset":33643,"endOffset":37488,"count":39},{"startOffset":33778,"endOffset":33926,"count":0},{"startOffset":34272,"endOffset":34499,"count":0},{"startOffset":35216,"endOffset":35341,"count":0},{"startOffset":35372,"endOffset":35465,"count":0},{"startOffset":36137,"endOffset":36232,"count":0},{"startOffset":36405,"endOffset":36551,"count":0},{"startOffset":36582,"endOffset":36643,"count":0},{"startOffset":36645,"endOffset":36769,"count":0},{"startOffset":36813,"endOffset":37374,"count":0}],"isBlockCoverage":true},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":37492,"endOffset":37678,"count":78},{"startOffset":37585,"endOffset":37592,"count":41},{"startOffset":37592,"endOffset":37635,"count":37}],"isBlockCoverage":true},{"functionName":"onSocketResume","ranges":[{"startOffset":37682,"endOffset":38220,"count":2},{"startOffset":38059,"endOffset":38097,"count":0},{"startOffset":38146,"endOffset":38217,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketPause","ranges":[{"startOffset":38224,"endOffset":38370,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":38374,"endOffset":38634,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":38638,"endOffset":39208,"count":6}],"isBlockCoverage":true},{"functionName":"socketListenerWrap","ranges":[{"startOffset":38705,"endOffset":39204,"count":39},{"startOffset":38899,"endOffset":39096,"count":0},{"startOffset":39151,"endOffset":39180,"count":0}],"isBlockCoverage":true}]},{"scriptId":"505","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/utils-merge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":276,"endOffset":379,"count":4},{"startOffset":331,"endOffset":361,"count":0}],"isBlockCoverage":true}]},{"scriptId":"506","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/setprototypeof/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1},{"startOffset":77,"endOffset":147,"count":0}],"isBlockCoverage":true},{"functionName":"setProtoOf","ranges":[{"startOffset":149,"endOffset":222,"count":0}],"isBlockCoverage":false},{"functionName":"mixinProperties","ranges":[{"startOffset":224,"endOffset":406,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/middleware/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"exports.init","ranges":[{"startOffset":502,"endOffset":850,"count":4}],"isBlockCoverage":true},{"functionName":"expressInit","ranges":[{"startOffset":526,"endOffset":847,"count":78},{"startOffset":807,"endOffset":829,"count":39}],"isBlockCoverage":true}]},{"scriptId":"508","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/middleware/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":885,"count":1}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":400,"endOffset":883,"count":4},{"startOffset":605,"endOffset":642,"count":0},{"startOffset":644,"endOffset":715,"count":0}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":726,"endOffset":880,"count":78},{"startOffset":778,"endOffset":863,"count":39}],"isBlockCoverage":true}]},{"scriptId":"509","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/qs/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"510","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/qs/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10356,"count":1}],"isBlockCoverage":true},{"functionName":"brackets","ranges":[{"startOffset":217,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"indices","ranges":[{"startOffset":315,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":407,"endOffset":461,"count":0}],"isBlockCoverage":false},{"functionName":"pushToArray","ranges":[{"startOffset":582,"endOffset":690,"count":0}],"isBlockCoverage":false},{"functionName":"serializeDate","ranges":[{"startOffset":1118,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullishPrimitive","ranges":[{"startOffset":1273,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1516,"endOffset":5632,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStringifyOptions","ranges":[{"startOffset":5667,"endOffset":7889,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":7909,"endOffset":10354,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37512,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2354,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":2999,"endOffset":3706,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":3863,"endOffset":5023,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":6159,"endOffset":6936,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":7125,"endOffset":8456,"count":0}],"isBlockCoverage":false},{"functionName":"importNotDefined","ranges":[{"startOffset":8575,"endOffset":8790,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":8907,"endOffset":9106,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":9283,"endOffset":9672,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":9676,"endOffset":10064,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":10807,"endOffset":13620,"count":19},{"startOffset":10988,"endOffset":10999,"count":0},{"startOffset":11000,"endOffset":11036,"count":0},{"startOffset":11043,"endOffset":11117,"count":0},{"startOffset":11169,"endOffset":11739,"count":0},{"startOffset":11833,"endOffset":12457,"count":0},{"startOffset":12687,"endOffset":12761,"count":0},{"startOffset":12803,"endOffset":13619,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11507,"endOffset":11520,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12046,"endOffset":12059,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12195,"endOffset":12208,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12941,"endOffset":12954,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13185,"endOffset":13198,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13549,"endOffset":13562,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":13681,"endOffset":13825,"count":52},{"startOffset":13775,"endOffset":13821,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":14104,"endOffset":16418,"count":48},{"startOffset":14299,"endOffset":14457,"count":19},{"startOffset":14457,"endOffset":16298,"count":29},{"startOffset":14489,"endOffset":15359,"count":5},{"startOffset":14521,"endOffset":14549,"count":0},{"startOffset":14879,"endOffset":15033,"count":0},{"startOffset":15074,"endOffset":15103,"count":0},{"startOffset":15139,"endOffset":15199,"count":0},{"startOffset":15235,"endOffset":15298,"count":0},{"startOffset":15307,"endOffset":15359,"count":0},{"startOffset":15359,"endOffset":16298,"count":24},{"startOffset":15514,"endOffset":15749,"count":52},{"startOffset":15574,"endOffset":15742,"count":0},{"startOffset":15793,"endOffset":16219,"count":43},{"startOffset":15852,"endOffset":15874,"count":35},{"startOffset":15876,"endOffset":16212,"count":24},{"startOffset":16163,"endOffset":16172,"count":0},{"startOffset":16219,"endOffset":16298,"count":0},{"startOffset":16298,"endOffset":16417,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":16612,"endOffset":17568,"count":19},{"startOffset":16745,"endOffset":16757,"count":0},{"startOffset":16814,"endOffset":16827,"count":0},{"startOffset":16972,"endOffset":17535,"count":58},{"startOffset":17085,"endOffset":17144,"count":19},{"startOffset":17144,"endOffset":17530,"count":39},{"startOffset":17200,"endOffset":17530,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":17788,"endOffset":20420,"count":19},{"startOffset":18004,"endOffset":18031,"count":0},{"startOffset":18444,"endOffset":18520,"count":0},{"startOffset":18554,"endOffset":20419,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":20424,"endOffset":20967,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":21104,"endOffset":23619,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":23730,"endOffset":23846,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":24015,"endOffset":25098,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":25268,"endOffset":27390,"count":0}],"isBlockCoverage":false},{"functionName":"isBareSpecifier","ranges":[{"startOffset":27457,"endOffset":27569,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":27573,"endOffset":27852,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":27856,"endOffset":28043,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":28245,"endOffset":29059,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":29213,"endOffset":30708,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":30773,"endOffset":32186,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":32266,"endOffset":32546,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":32552,"endOffset":36689,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":37101,"endOffset":37506,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1466,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":281,"endOffset":1410,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4664,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":928,"endOffset":959,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1031,"endOffset":1254,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1541,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":2044,"endOffset":3274,"count":0}],"isBlockCoverage":false},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":3417,"endOffset":3772,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":3924,"endOffset":4165,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":4317,"endOffset":4546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":895,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":493,"endOffset":827,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/side-channel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3391,"count":1}],"isBlockCoverage":true},{"functionName":"listGetNode","ranges":[{"startOffset":948,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"listGet","ranges":[{"startOffset":1266,"endOffset":1360,"count":0}],"isBlockCoverage":false},{"functionName":"listSet","ranges":[{"startOffset":1376,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"listHas","ranges":[{"startOffset":1685,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"getSideChannel","ranges":[{"startOffset":1769,"endOffset":3389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/get-intrinsic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13323,"count":1},{"startOffset":420,"endOffset":491,"count":0},{"startOffset":993,"endOffset":1009,"count":0},{"startOffset":1132,"endOffset":1230,"count":0},{"startOffset":1318,"endOffset":1329,"count":0},{"startOffset":1433,"endOffset":1444,"count":0},{"startOffset":1535,"endOffset":1546,"count":0},{"startOffset":1648,"endOffset":1659,"count":0},{"startOffset":1897,"endOffset":1908,"count":0},{"startOffset":1963,"endOffset":1974,"count":0},{"startOffset":2042,"endOffset":2053,"count":0},{"startOffset":2130,"endOffset":2141,"count":0},{"startOffset":2230,"endOffset":2241,"count":0},{"startOffset":2564,"endOffset":2575,"count":0},{"startOffset":2647,"endOffset":2658,"count":0},{"startOffset":2746,"endOffset":2757,"count":0},{"startOffset":2892,"endOffset":2903,"count":0},{"startOffset":2968,"endOffset":2979,"count":0},{"startOffset":3045,"endOffset":3056,"count":0},{"startOffset":3206,"endOffset":3217,"count":0},{"startOffset":3262,"endOffset":3273,"count":0},{"startOffset":3312,"endOffset":3323,"count":0},{"startOffset":3413,"endOffset":3424,"count":0},{"startOffset":3625,"endOffset":3636,"count":0},{"startOffset":3689,"endOffset":3700,"count":0},{"startOffset":3821,"endOffset":3832,"count":0},{"startOffset":3902,"endOffset":3913,"count":0},{"startOffset":4003,"endOffset":4014,"count":0},{"startOffset":4122,"endOffset":4133,"count":0},{"startOffset":4263,"endOffset":4274,"count":0},{"startOffset":4309,"endOffset":4320,"count":0},{"startOffset":4499,"endOffset":4510,"count":0},{"startOffset":4590,"endOffset":4601,"count":0},{"startOffset":4676,"endOffset":4687,"count":0},{"startOffset":4756,"endOffset":4767,"count":0},{"startOffset":4853,"endOffset":4864,"count":0},{"startOffset":4921,"endOffset":4932,"count":0},{"startOffset":4989,"endOffset":5000,"count":0}],"isBlockCoverage":true},{"functionName":"getEvalledConstructor","ranges":[{"startOffset":192,"endOffset":332,"count":0}],"isBlockCoverage":false},{"functionName":"throwTypeError","ranges":[{"startOffset":516,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":589,"endOffset":988,"count":1},{"startOffset":929,"endOffset":981,"count":0}],"isBlockCoverage":true},{"functionName":"getProto","ranges":[{"startOffset":1151,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"doEval","ranges":[{"startOffset":5304,"endOffset":5974,"count":0}],"isBlockCoverage":false},{"functionName":"stringToPath","ranges":[{"startOffset":9440,"endOffset":9991,"count":16},{"startOffset":9564,"endOffset":9579,"count":9},{"startOffset":9581,"endOffset":9661,"count":0},{"startOffset":9684,"endOffset":9700,"count":9},{"startOffset":9702,"endOffset":9782,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9831,"endOffset":9971,"count":38},{"startOffset":9908,"endOffset":9949,"count":0}],"isBlockCoverage":true},{"functionName":"getBaseIntrinsic","ranges":[{"startOffset":10038,"endOffset":10714,"count":16},{"startOffset":10169,"endOffset":10254,"count":0},{"startOffset":10366,"endOffset":10405,"count":0},{"startOffset":10441,"endOffset":10457,"count":0},{"startOffset":10459,"endOffset":10567,"count":0},{"startOffset":10644,"endOffset":10713,"count":0}],"isBlockCoverage":true},{"functionName":"GetIntrinsic","ranges":[{"startOffset":10734,"endOffset":13321,"count":16},{"startOffset":10830,"endOffset":10903,"count":0},{"startOffset":10930,"endOffset":10966,"count":11},{"startOffset":10968,"endOffset":11041,"count":0},{"startOffset":11085,"endOffset":11201,"count":0},{"startOffset":11288,"endOffset":11292,"count":0},{"startOffset":11522,"endOffset":11605,"count":0},{"startOffset":11664,"endOffset":13304,"count":22},{"startOffset":11888,"endOffset":11905,"count":0},{"startOffset":11910,"endOffset":11998,"count":0},{"startOffset":12039,"endOffset":12074,"count":0},{"startOffset":12210,"endOffset":12257,"count":5},{"startOffset":12257,"endOffset":13301,"count":17},{"startOffset":12309,"endOffset":12478,"count":0},{"startOffset":12520,"endOffset":13139,"count":13},{"startOffset":13030,"endOffset":13063,"count":0},{"startOffset":13065,"endOffset":13095,"count":0},{"startOffset":13139,"endOffset":13209,"count":4}],"isBlockCoverage":true}]},{"scriptId":"517","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/has-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"hasNativeSymbols","ranges":[{"startOffset":131,"endOffset":418,"count":1},{"startOffset":200,"endOffset":217,"count":0},{"startOffset":253,"endOffset":270,"count":0},{"startOffset":315,"endOffset":332,"count":0},{"startOffset":373,"endOffset":390,"count":0}],"isBlockCoverage":true}]},{"scriptId":"518","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/has-symbols/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1761,"count":1}],"isBlockCoverage":true},{"functionName":"hasSymbols","ranges":[{"startOffset":90,"endOffset":1759,"count":1},{"startOffset":203,"endOffset":220,"count":0},{"startOffset":279,"endOffset":1198,"count":0},{"startOffset":1200,"endOffset":1320,"count":0},{"startOffset":1322,"endOffset":1429,"count":0},{"startOffset":1431,"endOffset":1758,"count":0}],"isBlockCoverage":true}]},{"scriptId":"519","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/has-proto/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"hasProto","ranges":[{"startOffset":81,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"520","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/function-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1},{"startOffset":107,"endOffset":124,"count":0}],"isBlockCoverage":true}]},{"scriptId":"521","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/function-bind/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1463,"count":1}],"isBlockCoverage":true},{"functionName":"bind","ranges":[{"startOffset":247,"endOffset":1461,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/has/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":129,"count":1}],"isBlockCoverage":true}]},{"scriptId":"523","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/call-bind/callBound.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":413,"count":1}],"isBlockCoverage":true},{"functionName":"callBoundIntrinsic","ranges":[{"startOffset":177,"endOffset":411,"count":6},{"startOffset":390,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"524","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/call-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1306,"count":1},{"startOffset":268,"endOffset":295,"count":0},{"startOffset":551,"endOffset":629,"count":0},{"startOffset":1261,"endOffset":1305,"count":0}],"isBlockCoverage":true},{"functionName":"callBind","ranges":[{"startOffset":650,"endOffset":1078,"count":7}],"isBlockCoverage":true},{"functionName":"applyBind","ranges":[{"startOffset":1097,"endOffset":1169,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/object-inspect/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18582,"count":1},{"startOffset":180,"endOffset":186,"count":0},{"startOffset":301,"endOffset":307,"count":0},{"startOffset":539,"endOffset":545,"count":0},{"startOffset":660,"endOffset":666,"count":0},{"startOffset":839,"endOffset":845,"count":0},{"startOffset":968,"endOffset":974,"count":0},{"startOffset":1101,"endOffset":1107,"count":0},{"startOffset":1717,"endOffset":1723,"count":0},{"startOffset":1880,"endOffset":1886,"count":0},{"startOffset":2132,"endOffset":2142,"count":0},{"startOffset":2184,"endOffset":2190,"count":0},{"startOffset":2292,"endOffset":2316,"count":0},{"startOffset":2342,"endOffset":2531,"count":0},{"startOffset":3403,"endOffset":3409,"count":0},{"startOffset":12673,"endOffset":12714,"count":0}],"isBlockCoverage":true},{"functionName":"gPO","ranges":[{"startOffset":2426,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericSeparator","ranges":[{"startOffset":2534,"endOffset":3256,"count":0}],"isBlockCoverage":false},{"functionName":"inspect_","ranges":[{"startOffset":3429,"endOffset":10713,"count":0}],"isBlockCoverage":false},{"functionName":"wrapQuotes","ranges":[{"startOffset":10716,"endOffset":10880,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":10882,"endOffset":10956,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":10958,"endOffset":11093,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":11094,"endOffset":11227,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":11228,"endOffset":11365,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":11366,"endOffset":11501,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":11502,"endOffset":11639,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":11640,"endOffset":11777,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":11778,"endOffset":11917,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":12027,"endOffset":12408,"count":1},{"startOffset":12079,"endOffset":12158,"count":0},{"startOffset":12220,"endOffset":12260,"count":0},{"startOffset":12261,"endOffset":12276,"count":0},{"startOffset":12278,"endOffset":12407,"count":0}],"isBlockCoverage":true},{"functionName":"isBigInt","ranges":[{"startOffset":12410,"endOffset":12626,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":12676,"endOffset":12714,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":12716,"endOffset":12776,"count":0}],"isBlockCoverage":false},{"functionName":"toStr","ranges":[{"startOffset":12778,"endOffset":12838,"count":0}],"isBlockCoverage":false},{"functionName":"nameOf","ranges":[{"startOffset":12840,"endOffset":13017,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":13019,"endOffset":13201,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":13203,"endOffset":13542,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":13544,"endOffset":13924,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakRef","ranges":[{"startOffset":13926,"endOffset":14133,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":14135,"endOffset":14474,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":14476,"endOffset":14856,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":14858,"endOffset":15122,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":15124,"endOffset":15634,"count":0}],"isBlockCoverage":false},{"functionName":"lowbyte","ranges":[{"startOffset":15636,"endOffset":15904,"count":0}],"isBlockCoverage":false},{"functionName":"markBoxed","ranges":[{"startOffset":15906,"endOffset":15967,"count":0}],"isBlockCoverage":false},{"functionName":"weakCollectionOf","ranges":[{"startOffset":15969,"endOffset":16032,"count":0}],"isBlockCoverage":false},{"functionName":"collectionOf","ranges":[{"startOffset":16034,"endOffset":16241,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineValues","ranges":[{"startOffset":16243,"endOffset":16418,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":16420,"endOffset":16806,"count":0}],"isBlockCoverage":false},{"functionName":"indentedJoin","ranges":[{"startOffset":16808,"endOffset":17019,"count":0}],"isBlockCoverage":false},{"functionName":"arrObjKeys","ranges":[{"startOffset":17021,"endOffset":18581,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/object-inspect/util.inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"527","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/qs/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6823,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":141,"endOffset":317,"count":1},{"startOffset":209,"endOffset":296,"count":256},{"startOffset":245,"endOffset":250,"count":16},{"startOffset":251,"endOffset":255,"count":240}],"isBlockCoverage":true},{"functionName":"compactQueue","ranges":[{"startOffset":342,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToObject","ranges":[{"startOffset":803,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1094,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"assignSingleSource","ranges":[{"startOffset":2722,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2913,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3310,"endOffset":5309,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":5326,"endOffset":5934,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":5952,"endOffset":6048,"count":39}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":6066,"endOffset":6257,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":6274,"endOffset":6328,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMap","ranges":[{"startOffset":6346,"endOffset":6571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/qs/lib/formats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"RFC1738","ranges":[{"startOffset":237,"endOffset":327,"count":0}],"isBlockCoverage":false},{"functionName":"RFC3986","ranges":[{"startOffset":346,"endOffset":408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"529","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/qs/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9374,"count":1}],"isBlockCoverage":true},{"functionName":"interpretNumericEntities","ranges":[{"startOffset":567,"endOffset":717,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayValue","ranges":[{"startOffset":742,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringValues","ranges":[{"startOffset":1550,"endOffset":3679,"count":0}],"isBlockCoverage":false},{"functionName":"parseObject","ranges":[{"startOffset":3700,"endOffset":4825,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringKeys","ranges":[{"startOffset":4844,"endOffset":6346,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParseOptions","ranges":[{"startOffset":6377,"endOffset":8598,"count":39},{"startOffset":6431,"endOffset":6463,"count":0},{"startOffset":6525,"endOffset":6562,"count":0},{"startOffset":6564,"endOffset":6633,"count":0},{"startOffset":6679,"endOffset":6706,"count":0},{"startOffset":6707,"endOffset":6739,"count":0},{"startOffset":6741,"endOffset":6846,"count":0},{"startOffset":6920,"endOffset":6934,"count":0},{"startOffset":7028,"endOffset":7046,"count":0},{"startOffset":7138,"endOffset":7164,"count":0},{"startOffset":7225,"endOffset":7243,"count":0},{"startOffset":7324,"endOffset":7341,"count":0},{"startOffset":7458,"endOffset":7480,"count":0},{"startOffset":7556,"endOffset":7568,"count":0},{"startOffset":7639,"endOffset":7653,"count":0},{"startOffset":7762,"endOffset":7778,"count":0},{"startOffset":7947,"endOffset":7960,"count":0},{"startOffset":8124,"endOffset":8155,"count":0},{"startOffset":8257,"endOffset":8278,"count":0},{"startOffset":8416,"endOffset":8435,"count":0},{"startOffset":8534,"endOffset":8559,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":8618,"endOffset":9372,"count":39},{"startOffset":8724,"endOffset":8753,"count":0},{"startOffset":8793,"endOffset":8814,"count":0},{"startOffset":8826,"endOffset":8897,"count":0},{"startOffset":8898,"endOffset":8903,"count":0},{"startOffset":8940,"endOffset":8961,"count":0},{"startOffset":8962,"endOffset":8966,"count":0},{"startOffset":9103,"endOffset":9371,"count":0}],"isBlockCoverage":true}]},{"scriptId":"530","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/view.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3325,"count":1}],"isBlockCoverage":true},{"functionName":"View","ranges":[{"startOffset":854,"endOffset":1853,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":1962,"endOffset":2343,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":2485,"endOffset":2603,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2750,"endOffset":3091,"count":0}],"isBlockCoverage":false},{"functionName":"tryStat","ranges":[{"startOffset":3189,"endOffset":3324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13761,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1063,"endOffset":2001,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2097,"endOffset":3122,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3127,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3317,"endOffset":4338,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4342,"endOffset":6150,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6345,"endOffset":6402,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6407,"endOffset":6466,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6505,"endOffset":6532,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6713,"endOffset":7890,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7927,"endOffset":8500,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8534,"endOffset":8623,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8707,"endOffset":8741,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8774,"endOffset":10632,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10830,"endOffset":10887,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10892,"endOffset":10951,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10991,"endOffset":11018,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":11205,"endOffset":11696,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":11733,"endOffset":12404,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":12442,"endOffset":13015,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":13050,"endOffset":13450,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13639,"endOffset":13673,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31021,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3132,"endOffset":3226,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3292,"endOffset":3377,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3381,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":9812,"endOffset":10194,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":10198,"endOffset":10676,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":10680,"endOffset":10803,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":10807,"endOffset":11982,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":11986,"endOffset":14204,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":14361,"endOffset":14588,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":14592,"endOffset":14866,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":14870,"endOffset":15236,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":15360,"endOffset":15692,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":15696,"endOffset":17118,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":17122,"endOffset":17468,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17472,"endOffset":18756,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":18760,"endOffset":19215,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":19219,"endOffset":19531,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":19535,"endOffset":19671,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":19675,"endOffset":19838,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":19842,"endOffset":20050,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":20054,"endOffset":20438,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":20442,"endOffset":20533,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":20537,"endOffset":20620,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":20624,"endOffset":21115,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":21119,"endOffset":22854,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":22858,"endOffset":23300,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":23304,"endOffset":23548,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":23552,"endOffset":24293,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":24297,"endOffset":24478,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":24482,"endOffset":24757,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":24761,"endOffset":25033,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":25037,"endOffset":25316,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":25320,"endOffset":25649,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":25653,"endOffset":25794,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":25798,"endOffset":25934,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":25938,"endOffset":26128,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":26132,"endOffset":26366,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":26370,"endOffset":26652,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":26656,"endOffset":26857,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":26861,"endOffset":27140,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":27144,"endOffset":27422,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":27426,"endOffset":27629,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":27633,"endOffset":27916,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":27920,"endOffset":28097,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":28101,"endOffset":28356,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":28360,"endOffset":29053,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":29057,"endOffset":29173,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":29177,"endOffset":29423,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":29427,"endOffset":29782,"count":0}],"isBlockCoverage":false},{"functionName":"_watch","ranges":[{"startOffset":29786,"endOffset":30469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7764,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1218,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1702,"endOffset":2589,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2595,"endOffset":3045,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":3051,"endOffset":3360,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3366,"endOffset":4085,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":4091,"endOffset":4298,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4304,"endOffset":5017,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":5023,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5679,"endOffset":7223,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":7229,"endOffset":7700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8514,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1224,"endOffset":2064,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":2070,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2121,"endOffset":2190,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2196,"endOffset":3988,"count":0}],"isBlockCoverage":false},{"functionName":"processReadResult","ranges":[{"startOffset":3994,"endOffset":4287,"count":0}],"isBlockCoverage":false},{"functionName":"readSyncRecursive","ranges":[{"startOffset":4293,"endOffset":4855,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":4861,"endOffset":5874,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5880,"endOffset":6597,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":6603,"endOffset":6994,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":7000,"endOffset":7275,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":7466,"endOffset":8071,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":8075,"endOffset":8450,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11629,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1486,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1540,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1902,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2666,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3755,"endOffset":3763,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":4015,"endOffset":4306,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4398,"endOffset":4840,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4873,"endOffset":5162,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5197,"endOffset":5453,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5460,"endOffset":6456,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":7003,"endOffset":7942,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":8165,"endOffset":8173,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8300,"endOffset":8648,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8679,"endOffset":8751,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8784,"endOffset":8858,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8863,"endOffset":8917,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9147,"endOffset":9183,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9188,"endOffset":9229,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":9270,"endOffset":11487,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7922,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsPromises","ranges":[{"startOffset":847,"endOffset":957,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":961,"endOffset":1050,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":1083,"endOffset":1686,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1690,"endOffset":7862,"count":0}],"isBlockCoverage":false}]},{"scriptId":"537","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5955,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":1107,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeType","ranges":[{"startOffset":1717,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeTypes","ranges":[{"startOffset":1996,"endOffset":2140,"count":0}],"isBlockCoverage":false},{"functionName":"acceptParams","ranges":[{"startOffset":2747,"endOffset":3119,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compileETag","ranges":[{"startOffset":3271,"endOffset":3630,"count":4},{"startOffset":3331,"endOffset":3352,"count":0},{"startOffset":3375,"endOffset":3385,"count":0},{"startOffset":3446,"endOffset":3470,"count":0},{"startOffset":3475,"endOffset":3527,"count":0},{"startOffset":3532,"endOffset":3610,"count":0}],"isBlockCoverage":true},{"functionName":"compileQueryParser","ranges":[{"startOffset":3789,"endOffset":4217,"count":4},{"startOffset":3868,"endOffset":3889,"count":0},{"startOffset":3912,"endOffset":3922,"count":0},{"startOffset":3927,"endOffset":3984,"count":0},{"startOffset":3989,"endOffset":4035,"count":0},{"startOffset":4111,"endOffset":4197,"count":0}],"isBlockCoverage":true},{"functionName":"exports.compileTrust","ranges":[{"startOffset":4390,"endOffset":4852,"count":4},{"startOffset":4439,"endOffset":4450,"count":0},{"startOffset":4472,"endOffset":4547,"count":0},{"startOffset":4580,"endOffset":4664,"count":0},{"startOffset":4697,"endOffset":4810,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4517,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4627,"endOffset":4659,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4773,"endOffset":4805,"count":0}],"isBlockCoverage":false},{"functionName":"setCharset","ranges":[{"startOffset":5025,"endOffset":5280,"count":39},{"startOffset":5087,"endOffset":5109,"count":0}],"isBlockCoverage":true},{"functionName":"createETagGenerator","ranges":[{"startOffset":5438,"endOffset":5651,"count":2}],"isBlockCoverage":true},{"functionName":"generateETag","ranges":[{"startOffset":5488,"endOffset":5649,"count":39},{"startOffset":5572,"endOffset":5601,"count":0}],"isBlockCoverage":true},{"functionName":"parseExtendedQueryString","ranges":[{"startOffset":5740,"endOffset":5839,"count":39}],"isBlockCoverage":true},{"functionName":"newObject","ranges":[{"startOffset":5917,"endOffset":5954,"count":0}],"isBlockCoverage":false}]},{"scriptId":"538","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1670,"count":1},{"startOffset":438,"endOffset":550,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":241,"endOffset":327,"count":1},{"startOffset":296,"endOffset":325,"count":12}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":552,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":796,"endOffset":981,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":1002,"endOffset":1336,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1363,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1526,"endOffset":1669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"node:internal/file","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1902,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":454,"endOffset":1649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/content-disposition/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10594,"count":1}],"isBlockCoverage":true},{"functionName":"contentDisposition","ranges":[{"startOffset":4223,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"createparams","ranges":[{"startOffset":4683,"endOffset":5943,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":6124,"endOffset":6792,"count":0}],"isBlockCoverage":false},{"functionName":"decodefield","ranges":[{"startOffset":6908,"endOffset":7503,"count":0}],"isBlockCoverage":false},{"functionName":"getlatin1","ranges":[{"startOffset":7609,"endOffset":7739,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7854,"endOffset":9380,"count":0}],"isBlockCoverage":false},{"functionName":"pdecode","ranges":[{"startOffset":9510,"endOffset":9589,"count":0}],"isBlockCoverage":false},{"functionName":"pencode","ranges":[{"startOffset":9697,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":9905,"endOffset":10011,"count":0}],"isBlockCoverage":false},{"functionName":"ustring","ranges":[{"startOffset":10128,"endOffset":10331,"count":0}],"isBlockCoverage":false},{"functionName":"ContentDisposition","ranges":[{"startOffset":10493,"endOffset":10593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/content-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5002,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":1786,"endOffset":2478,"count":39},{"startOffset":1849,"endOffset":1906,"count":0},{"startOffset":2005,"endOffset":2050,"count":0},{"startOffset":2321,"endOffset":2384,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2587,"endOffset":3947,"count":70},{"startOffset":2628,"endOffset":2688,"count":0},{"startOffset":2782,"endOffset":2806,"count":31},{"startOffset":2811,"endOffset":2819,"count":39},{"startOffset":2855,"endOffset":2930,"count":0},{"startOffset":2996,"endOffset":3027,"count":39},{"startOffset":3032,"endOffset":3047,"count":31},{"startOffset":3080,"endOffset":3131,"count":0},{"startOffset":3224,"endOffset":3931,"count":39},{"startOffset":3386,"endOffset":3451,"count":0},{"startOffset":3591,"endOffset":3790,"count":0},{"startOffset":3866,"endOffset":3927,"count":0}],"isBlockCoverage":true},{"functionName":"getcontenttype","ranges":[{"startOffset":4054,"endOffset":4457,"count":31},{"startOffset":4143,"endOffset":4207,"count":0},{"startOffset":4363,"endOffset":4438,"count":0}],"isBlockCoverage":true},{"functionName":"qstring","ranges":[{"startOffset":4558,"endOffset":4851,"count":39},{"startOffset":4687,"endOffset":4735,"count":0},{"startOffset":4737,"endOffset":4850,"count":0}],"isBlockCoverage":true},{"functionName":"ContentType","ranges":[{"startOffset":4911,"endOffset":5001,"count":70}],"isBlockCoverage":true}]},{"scriptId":"542","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/send/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23502,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":1552,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"SendStream","ranges":[{"startOffset":1789,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"etag","ranges":[{"startOffset":3773,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"hidden","ranges":[{"startOffset":4074,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"index","ranges":[{"startOffset":4456,"endOffset":4612,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":4774,"endOffset":4880,"count":0}],"isBlockCoverage":false},{"functionName":"maxage","ranges":[{"startOffset":5258,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":5691,"endOffset":6444,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingSlash","ranges":[{"startOffset":6571,"endOffset":6652,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalGET","ranges":[{"startOffset":6790,"endOffset":6993,"count":0}],"isBlockCoverage":false},{"functionName":"isPreconditionFailure","ranges":[{"startOffset":7131,"endOffset":7777,"count":0}],"isBlockCoverage":false},{"functionName":"removeContentHeaderFields","ranges":[{"startOffset":7915,"endOffset":8164,"count":0}],"isBlockCoverage":false},{"functionName":"notModified","ranges":[{"startOffset":8263,"endOffset":8405,"count":0}],"isBlockCoverage":false},{"functionName":"headersAlreadySent","ranges":[{"startOffset":8519,"endOffset":8673,"count":0}],"isBlockCoverage":false},{"functionName":"isCachable","ranges":[{"startOffset":8863,"endOffset":9003,"count":0}],"isBlockCoverage":false},{"functionName":"onStatError","ranges":[{"startOffset":9112,"endOffset":9331,"count":0}],"isBlockCoverage":false},{"functionName":"isFresh","ranges":[{"startOffset":9445,"endOffset":9603,"count":0}],"isBlockCoverage":false},{"functionName":"isRangeFresh","ranges":[{"startOffset":9722,"endOffset":10149,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":10252,"endOffset":10981,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":11102,"endOffset":12769,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":12870,"endOffset":15093,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":15207,"endOffset":16062,"count":0}],"isBlockCoverage":false},{"functionName":"sendIndex","ranges":[{"startOffset":16178,"endOffset":16639,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":16784,"endOffset":17326,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":17481,"endOffset":17821,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":17998,"endOffset":18867,"count":0}],"isBlockCoverage":false},{"functionName":"clearHeaders","ranges":[{"startOffset":18954,"endOffset":19104,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":19204,"endOffset":19386,"count":0}],"isBlockCoverage":false},{"functionName":"containsDotFile","ranges":[{"startOffset":19462,"endOffset":19655,"count":0}],"isBlockCoverage":false},{"functionName":"contentRange","ranges":[{"startOffset":19777,"endOffset":19903,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":20013,"endOffset":20308,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpError","ranges":[{"startOffset":20441,"endOffset":20644,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":20793,"endOffset":20899,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":21014,"endOffset":21162,"count":0}],"isBlockCoverage":false},{"functionName":"hasListeners","ranges":[{"startOffset":21472,"endOffset":21662,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":21786,"endOffset":21911,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeList","ranges":[{"startOffset":22043,"endOffset":22293,"count":0}],"isBlockCoverage":false},{"functionName":"parseHttpDate","ranges":[{"startOffset":22380,"endOffset":22522,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":22599,"endOffset":23204,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":23323,"endOffset":23501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/http-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6391,"count":1}],"isBlockCoverage":true},{"functionName":"codeClass","ranges":[{"startOffset":783,"endOffset":863,"count":63}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":936,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpErrorConstructor","ranges":[{"startOffset":2487,"endOffset":2668,"count":1}],"isBlockCoverage":true},{"functionName":"HttpError","ranges":[{"startOffset":2530,"endOffset":2616,"count":0}],"isBlockCoverage":false},{"functionName":"createClientErrorConstructor","ranges":[{"startOffset":2735,"endOffset":3762,"count":29}],"isBlockCoverage":true},{"functionName":"ClientError","ranges":[{"startOffset":2838,"endOffset":3548,"count":0}],"isBlockCoverage":false},{"functionName":"createIsHttpErrorFunction","ranges":[{"startOffset":3839,"endOffset":4211,"count":1}],"isBlockCoverage":true},{"functionName":"isHttpError","ranges":[{"startOffset":3897,"endOffset":4209,"count":0}],"isBlockCoverage":false},{"functionName":"createServerErrorConstructor","ranges":[{"startOffset":4278,"endOffset":5306,"count":12}],"isBlockCoverage":true},{"functionName":"ServerError","ranges":[{"startOffset":4381,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"nameFunc","ranges":[{"startOffset":5373,"endOffset":5574,"count":41}],"isBlockCoverage":true},{"functionName":"populateConstructorExports","ranges":[{"startOffset":5669,"endOffset":6223,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":5751,"endOffset":6220,"count":63},{"startOffset":5889,"endOffset":5984,"count":29},{"startOffset":5991,"endOffset":6086,"count":12},{"startOffset":6113,"endOffset":6216,"count":41}],"isBlockCoverage":true},{"functionName":"toClassName","ranges":[{"startOffset":6290,"endOffset":6390,"count":41},{"startOffset":6361,"endOffset":6377,"count":40},{"startOffset":6382,"endOffset":6388,"count":1}],"isBlockCoverage":true}]},{"scriptId":"544","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"545","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/toidentifier/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":298,"endOffset":503,"count":63}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":366,"endOffset":452,"count":133}],"isBlockCoverage":true}]},{"scriptId":"546","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/destroy/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4258,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":556,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"destroyReadStream","ranges":[{"startOffset":1004,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"closeZlibStream","ranges":[{"startOffset":1372,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"destroyZlibStream","ranges":[{"startOffset":2143,"endOffset":3053,"count":0}],"isBlockCoverage":false},{"functionName":"hasDestroy","ranges":[{"startOffset":3112,"endOffset":3222,"count":0}],"isBlockCoverage":false},{"functionName":"isEventEmitter","ranges":[{"startOffset":3282,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"isFsReadStream","ranges":[{"startOffset":3423,"endOffset":3497,"count":0}],"isBlockCoverage":false},{"functionName":"isZlibStream","ranges":[{"startOffset":3559,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3903,"endOffset":3922,"count":0}],"isBlockCoverage":false},{"functionName":"onDrainClearBinding","ranges":[{"startOffset":4020,"endOffset":4079,"count":0}],"isBlockCoverage":false},{"functionName":"onOpenClose","ranges":[{"startOffset":4138,"endOffset":4257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"node:zlib","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30492,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3642,"endOffset":4285,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":4289,"endOffset":4631,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4635,"endOffset":4723,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4727,"endOffset":5070,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":5074,"endOffset":5633,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5637,"endOffset":5961,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6192,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6857,"endOffset":7157,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":7405,"endOffset":9518,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9751,"endOffset":9790,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10244,"endOffset":10292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10441,"endOffset":10495,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":10640,"endOffset":10752,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":10902,"endOffset":10976,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._final","ranges":[{"startOffset":11046,"endOffset":11084,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":11699,"endOffset":11776,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":12231,"endOffset":12648,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":12680,"endOffset":12765,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":12800,"endOffset":12863,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":12900,"endOffset":13447,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":13487,"endOffset":13722,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":13727,"endOffset":16097,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":16101,"endOffset":16709,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":16713,"endOffset":19087,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":19091,"endOffset":19288,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":19494,"endOffset":21879,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":22237,"endOffset":22511,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":22539,"endOffset":23017,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":23065,"endOffset":23204,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":23304,"endOffset":23443,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":23543,"endOffset":23670,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":23764,"endOffset":23899,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":23997,"endOffset":24207,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":24313,"endOffset":24464,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":24570,"endOffset":24701,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":24797,"endOffset":25199,"count":18},{"startOffset":24857,"endOffset":25198,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":24871,"endOffset":24974,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":24991,"endOffset":25195,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25288,"endOffset":25377,"count":107},{"startOffset":25346,"endOffset":25367,"count":9},{"startOffset":25368,"endOffset":25376,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":25606,"endOffset":26978,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":27076,"endOffset":27244,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":27362,"endOffset":27536,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":27660,"endOffset":27855,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":27786,"endOffset":27845,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28090,"endOffset":28126,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28131,"endOffset":28172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/etag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2479,"count":1}],"isBlockCoverage":true},{"functionName":"entitytag","ranges":[{"startOffset":459,"endOffset":918,"count":39},{"startOffset":516,"endOffset":589,"count":0},{"startOffset":809,"endOffset":844,"count":0}],"isBlockCoverage":true},{"functionName":"etag","ranges":[{"startOffset":1091,"endOffset":1679,"count":39},{"startOffset":1147,"endOffset":1207,"count":0},{"startOffset":1351,"endOffset":1360,"count":0},{"startOffset":1459,"endOffset":1543,"count":0},{"startOffset":1594,"endOffset":1611,"count":0},{"startOffset":1672,"endOffset":1677,"count":0}],"isBlockCoverage":true},{"functionName":"isstats","ranges":[{"startOffset":1795,"endOffset":2226,"count":39},{"startOffset":1901,"endOffset":1922,"count":0},{"startOffset":2003,"endOffset":2050,"count":0},{"startOffset":2051,"endOffset":2072,"count":0},{"startOffset":2073,"endOffset":2120,"count":0},{"startOffset":2121,"endOffset":2140,"count":0},{"startOffset":2141,"endOffset":2171,"count":0},{"startOffset":2172,"endOffset":2192,"count":0},{"startOffset":2193,"endOffset":2224,"count":0}],"isBlockCoverage":true},{"functionName":"stattag","ranges":[{"startOffset":2326,"endOffset":2478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9218,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3207,"endOffset":3312,"count":34}],"isBlockCoverage":true},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3339,"endOffset":3472,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3618,"endOffset":3702,"count":51}],"isBlockCoverage":true},{"functionName":"createCipher","ranges":[{"startOffset":3706,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3812,"endOffset":3916,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3920,"endOffset":4026,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":4030,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":4142,"endOffset":4300,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4304,"endOffset":4388,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4392,"endOffset":4450,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4454,"endOffset":4538,"count":26}],"isBlockCoverage":true},{"functionName":"createSign","ranges":[{"startOffset":4542,"endOffset":4626,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4630,"endOffset":4718,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5831,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5922,"endOffset":6216,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":6220,"endOffset":6313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6395,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6664,"endOffset":6861,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6915,"endOffset":7789,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7017,"endOffset":7529,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7536,"endOffset":7779,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8565,"endOffset":8605,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8725,"endOffset":8772,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8906,"endOffset":8927,"count":17}],"isBlockCoverage":true}]},{"scriptId":"550","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16859,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1328,"endOffset":1704,"count":8},{"startOffset":1568,"endOffset":1652,"count":0}],"isBlockCoverage":true},{"functionName":"assertSize","ranges":[{"startOffset":1708,"endOffset":2183,"count":12},{"startOffset":1891,"endOffset":2012,"count":0},{"startOffset":2046,"endOffset":2133,"count":0}],"isBlockCoverage":true},{"functionName":"randomBytes","ranges":[{"startOffset":2187,"endOffset":2748,"count":6},{"startOffset":2301,"endOffset":2352,"count":0},{"startOffset":2490,"endOffset":2747,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2597,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2752,"endOffset":3452,"count":8},{"startOffset":2831,"endOffset":2857,"count":2},{"startOffset":2859,"endOffset":2972,"count":0},{"startOffset":3020,"endOffset":3024,"count":6},{"startOffset":3120,"endOffset":3163,"count":2},{"startOffset":3163,"endOffset":3242,"count":6},{"startOffset":3269,"endOffset":3280,"count":0},{"startOffset":3422,"endOffset":3432,"count":0}],"isBlockCoverage":true},{"functionName":"randomFill","ranges":[{"startOffset":3456,"endOffset":4544,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":5109,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7421,"endOffset":8322,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8328,"endOffset":8493,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8732,"endOffset":9366,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9745,"endOffset":10053,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":10057,"endOffset":10806,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10810,"endOffset":11121,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":11125,"endOffset":11369,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11373,"endOffset":11703,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11707,"endOffset":12992,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12996,"endOffset":13472,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13476,"endOffset":13742,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":14024,"endOffset":14068,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":14149,"endOffset":14588,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14592,"endOffset":14897,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14901,"endOffset":15826,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15830,"endOffset":16658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3149,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":503,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1198,"endOffset":1620,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1624,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2152,"endOffset":3074,"count":0}],"isBlockCoverage":false}]},{"scriptId":"552","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15691,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":1694,"endOffset":1748,"count":58}],"isBlockCoverage":true},{"functionName":"toBuf","ranges":[{"startOffset":1928,"endOffset":2114,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2150,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2228,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2305,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2353,"endOffset":2774,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2823,"endOffset":3309,"count":93},{"startOffset":2891,"endOffset":2905,"count":0},{"startOffset":2941,"endOffset":3048,"count":66},{"startOffset":2982,"endOffset":3000,"count":0},{"startOffset":3048,"endOffset":3084,"count":27},{"startOffset":3084,"endOffset":3288,"count":1},{"startOffset":3288,"endOffset":3308,"count":26}],"isBlockCoverage":true},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":6889,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":7341,"endOffset":9849,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":9853,"endOffset":9995,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":9999,"endOffset":10153,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":10157,"endOffset":10311,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":10315,"endOffset":10459,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":10463,"endOffset":10817,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":10821,"endOffset":11023,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11070,"endOffset":11355,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":11361,"endOffset":11600,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":11604,"endOffset":11884,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":12429,"endOffset":12720,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":12724,"endOffset":12969,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":12973,"endOffset":13143,"count":26},{"startOffset":13043,"endOffset":13076,"count":0},{"startOffset":13083,"endOffset":13123,"count":0}],"isBlockCoverage":true},{"functionName":"getUsagesUnion","ranges":[{"startOffset":13147,"endOffset":13366,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":13370,"endOffset":13558,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":13710,"endOffset":14705,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":14709,"endOffset":15101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2604,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1958,"endOffset":2207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3466,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":665,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1358,"endOffset":1776,"count":21},{"startOffset":1730,"endOffset":1740,"count":0},{"startOffset":1740,"endOffset":1775,"count":20}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":1780,"endOffset":3412,"count":21},{"startOffset":1867,"endOffset":1911,"count":0},{"startOffset":2113,"endOffset":2136,"count":20},{"startOffset":2138,"endOffset":3352,"count":0},{"startOffset":3352,"endOffset":3411,"count":20}],"isBlockCoverage":true}]},{"scriptId":"555","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3472,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":866,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1348,"endOffset":1800,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1804,"endOffset":2289,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2293,"endOffset":2646,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2688,"endOffset":3403,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22182,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2430,"endOffset":6706,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2543,"endOffset":3102,"count":26},{"startOffset":2600,"endOffset":2620,"count":0},{"startOffset":2621,"endOffset":2642,"count":0},{"startOffset":2653,"endOffset":2699,"count":0},{"startOffset":2788,"endOffset":2847,"count":0}],"isBlockCoverage":true},{"functionName":"get type","ranges":[{"startOffset":3110,"endOffset":3159,"count":91}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":3174,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3327,"endOffset":3619,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3849,"endOffset":3909,"count":26}],"isBlockCoverage":true},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3917,"endOffset":3999,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":4007,"endOffset":4365,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":4504,"endOffset":4782,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4895,"endOffset":4957,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4965,"endOffset":5120,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":5128,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5586,"endOffset":5646,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5654,"endOffset":5954,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":6023,"endOffset":6084,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":6092,"endOffset":6621,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6712,"endOffset":7107,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":7111,"endOffset":7985,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7989,"endOffset":8113,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":8117,"endOffset":8834,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8838,"endOffset":8979,"count":26},{"startOffset":8905,"endOffset":8940,"count":0},{"startOffset":8941,"endOffset":8975,"count":0}],"isBlockCoverage":true},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8983,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":10586,"endOffset":10724,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10929,"endOffset":11047,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":11051,"endOffset":11648,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11652,"endOffset":12173,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":12177,"endOffset":14834,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14838,"endOffset":16423,"count":26},{"startOffset":14905,"endOffset":15015,"count":0},{"startOffset":15043,"endOffset":15113,"count":0},{"startOffset":15297,"endOffset":16422,"count":0}],"isBlockCoverage":true},{"functionName":"preparePrivateKey","ranges":[{"startOffset":16427,"endOffset":16517,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":16521,"endOffset":16618,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":16622,"endOffset":17341,"count":52},{"startOffset":16705,"endOffset":17069,"count":26},{"startOffset":16779,"endOffset":16844,"count":0},{"startOffset":16879,"endOffset":17064,"count":0},{"startOffset":17069,"endOffset":17134,"count":26},{"startOffset":17135,"endOffset":17167,"count":0},{"startOffset":17169,"endOffset":17284,"count":0},{"startOffset":17284,"endOffset":17340,"count":26}],"isBlockCoverage":true},{"functionName":"createSecretKey","ranges":[{"startOffset":17345,"endOffset":17554,"count":26}],"isBlockCoverage":true},{"functionName":"createPublicKey","ranges":[{"startOffset":17558,"endOffset":17906,"count":13},{"startOffset":17723,"endOffset":17749,"count":0},{"startOffset":17864,"endOffset":17905,"count":0}],"isBlockCoverage":true},{"functionName":"createPrivateKey","ranges":[{"startOffset":17910,"endOffset":18262,"count":13},{"startOffset":18077,"endOffset":18103,"count":0},{"startOffset":18219,"endOffset":18261,"count":0}],"isBlockCoverage":true},{"functionName":"isKeyObject","ranges":[{"startOffset":18266,"endOffset":18350,"count":52}],"isBlockCoverage":true},{"functionName":"CryptoKey","ranges":[{"startOffset":18782,"endOffset":18844,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18850,"endOffset":19214,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":19220,"endOffset":19359,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":19365,"endOffset":19508,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":19514,"endOffset":19653,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":19659,"endOffset":19806,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":20405,"endOffset":20899,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20905,"endOffset":21272,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21278,"endOffset":21487,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":21621,"endOffset":21707,"count":26}],"isBlockCoverage":true}]},{"scriptId":"557","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11121,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1248,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1324,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1488,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2297,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2420,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2817,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":4112,"endOffset":9576,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9611,"endOffset":10167,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":10171,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10386,"endOffset":10872,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10876,"endOffset":11013,"count":0}],"isBlockCoverage":false}]},{"scriptId":"558","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11000,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1324,"endOffset":3310,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3316,"endOffset":3652,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3770,"endOffset":3936,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":4057,"endOffset":4425,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4531,"endOffset":4691,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4809,"endOffset":4985,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":5103,"endOffset":5267,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":5388,"endOffset":5554,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5599,"endOffset":5793,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5840,"endOffset":6036,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":6043,"endOffset":6203,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":6521,"endOffset":6647,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6682,"endOffset":6885,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6908,"endOffset":7266,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":7271,"endOffset":7410,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":7414,"endOffset":7747,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7825,"endOffset":8919,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":9042,"endOffset":10885,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10532,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1297,"endOffset":2062,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1366,"endOffset":2058,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2574,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2954,"endOffset":3196,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3200,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3634,"endOffset":3874,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3878,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4473,"endOffset":4679,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4827,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4977,"endOffset":5123,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":5154,"endOffset":5686,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5718,"endOffset":5971,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":6012,"endOffset":6163,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":6198,"endOffset":6363,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6370,"endOffset":6587,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6617,"endOffset":6966,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":7221,"endOffset":7436,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7440,"endOffset":8043,"count":3},{"startOffset":7842,"endOffset":7917,"count":1},{"startOffset":7917,"endOffset":7981,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8455,"endOffset":8668,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":9084,"endOffset":9306,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9474,"endOffset":10360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1654,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":488,"endOffset":552,"count":77}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":688,"endOffset":1007,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":726,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":1011,"endOffset":1240,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1049,"endOffset":1236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7420,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":945,"endOffset":1212,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1340,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1464,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1842,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1923,"endOffset":2006,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":2010,"endOffset":2373,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2377,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2657,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3346,"endOffset":4616,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4620,"endOffset":4895,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":5131,"endOffset":5789,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5794,"endOffset":7338,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4826,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1035,"endOffset":1569,"count":51},{"startOffset":1108,"endOffset":1144,"count":0},{"startOffset":1274,"endOffset":1293,"count":0},{"startOffset":1294,"endOffset":1321,"count":0},{"startOffset":1369,"endOffset":1416,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":1705,"endOffset":1879,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1912,"endOffset":2020,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2049,"endOffset":2132,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2161,"endOffset":2690,"count":85},{"startOffset":2218,"endOffset":2241,"count":46},{"startOffset":2307,"endOffset":2345,"count":0},{"startOffset":2381,"endOffset":2426,"count":30},{"startOffset":2426,"endOffset":2575,"count":55},{"startOffset":2462,"endOffset":2575,"count":0},{"startOffset":2629,"endOffset":2671,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":2721,"endOffset":3076,"count":51},{"startOffset":2817,"endOffset":2855,"count":0},{"startOffset":2891,"endOffset":2914,"count":12}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":3081,"endOffset":3493,"count":26},{"startOffset":3154,"endOffset":3190,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":3681,"endOffset":4113,"count":26},{"startOffset":3781,"endOffset":3804,"count":0},{"startOffset":3834,"endOffset":3952,"count":0}],"isBlockCoverage":true},{"functionName":"asyncDigest","ranges":[{"startOffset":4275,"endOffset":4764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"563","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10277,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1218,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1307,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2583,"endOffset":2752,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2756,"endOffset":10019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1599,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":401,"endOffset":524,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":528,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":663,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1161,"endOffset":1258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"565","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32106,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1258,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1889,"endOffset":2002,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":2006,"endOffset":4586,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":4590,"endOffset":6195,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":6199,"endOffset":6843,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":6847,"endOffset":9097,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":9101,"endOffset":10116,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":10120,"endOffset":11144,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":11148,"endOffset":12118,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":12122,"endOffset":13734,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":13738,"endOffset":14624,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":14628,"endOffset":16020,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":16024,"endOffset":18861,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":18958,"endOffset":20542,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":20641,"endOffset":22679,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":22683,"endOffset":23820,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":23824,"endOffset":24470,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":24474,"endOffset":25255,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":25259,"endOffset":26706,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":26710,"endOffset":27457,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":27461,"endOffset":28208,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":28370,"endOffset":28432,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28469,"endOffset":28482,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":28524,"endOffset":28586,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":28592,"endOffset":28695,"count":17},{"startOffset":28633,"endOffset":28670,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28732,"endOffset":28745,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":28763,"endOffset":29104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/fresh/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2711,"count":1}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":522,"endOffset":1800,"count":2},{"startOffset":762,"endOffset":1036,"count":0},{"startOffset":1038,"endOffset":1117,"count":0},{"startOffset":1119,"endOffset":1799,"count":0}],"isBlockCoverage":true},{"functionName":"parseHttpDate","ranges":[{"startOffset":1887,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":2175,"endOffset":2710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"567","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mime/mime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2726,"count":1}],"isBlockCoverage":true},{"functionName":"Mime","ranges":[{"startOffset":53,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"Mime.define","ranges":[{"startOffset":562,"endOffset":1094,"count":1},{"startOffset":603,"endOffset":1092,"count":844},{"startOffset":673,"endOffset":953,"count":1069},{"startOffset":708,"endOffset":730,"count":0},{"startOffset":732,"endOffset":912,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.load","ranges":[{"startOffset":1346,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"Mime.lookup","ranges":[{"startOffset":1852,"endOffset":1999,"count":1},{"startOffset":1964,"endOffset":1975,"count":0},{"startOffset":1976,"endOffset":1996,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.extension","ranges":[{"startOffset":2090,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2538,"endOffset":2698,"count":39},{"startOffset":2683,"endOffset":2693,"count":0}],"isBlockCoverage":true}]},{"scriptId":"568","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/send/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/range-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2900,"count":1}],"isBlockCoverage":true},{"functionName":"rangeParser","ranges":[{"startOffset":401,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"combineRanges","ranges":[{"startOffset":1600,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithIndex","ranges":[{"startOffset":2350,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithoutIndex","ranges":[{"startOffset":2540,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeIndex","ranges":[{"startOffset":2699,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeStart","ranges":[{"startOffset":2836,"endOffset":2899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"571","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/proxy-addr/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6000,"count":1}],"isBlockCoverage":true},{"functionName":"alladdrs","ranges":[{"startOffset":879,"endOffset":1227,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":1323,"endOffset":1948,"count":4},{"startOffset":1360,"endOffset":1413,"count":0},{"startOffset":1459,"endOffset":1482,"count":0},{"startOffset":1541,"endOffset":1606,"count":0},{"startOffset":1649,"endOffset":1895,"count":0}],"isBlockCoverage":true},{"functionName":"compileRangeSubnets","ranges":[{"startOffset":2042,"endOffset":2238,"count":4},{"startOffset":2162,"endOffset":2213,"count":0}],"isBlockCoverage":true},{"functionName":"compileTrust","ranges":[{"startOffset":2346,"endOffset":2586,"count":4},{"startOffset":2503,"endOffset":2584,"count":0}],"isBlockCoverage":true},{"functionName":"parseipNotation","ranges":[{"startOffset":2683,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"parseNetmask","ranges":[{"startOffset":3625,"endOffset":3786,"count":0}],"isBlockCoverage":false},{"functionName":"proxyaddr","ranges":[{"startOffset":3919,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"trustNone","ranges":[{"startOffset":4256,"endOffset":4296,"count":0}],"isBlockCoverage":false},{"functionName":"trustMulti","ranges":[{"startOffset":4396,"endOffset":5273,"count":0}],"isBlockCoverage":false},{"functionName":"trustSingle","ranges":[{"startOffset":5370,"endOffset":5999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"572","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/forwarded/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1578,"count":1}],"isBlockCoverage":true},{"functionName":"forwarded","ranges":[{"startOffset":310,"endOffset":625,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketAddr","ranges":[{"startOffset":735,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":942,"endOffset":1577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/ipaddr.js/lib/ipaddr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19333,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":19319,"count":1},{"startOffset":257,"endOffset":297,"count":0}],"isBlockCoverage":true},{"functionName":"matchCIDR","ranges":[{"startOffset":313,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.subnetMatch","ranges":[{"startOffset":828,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1495,"endOffset":4290,"count":1}],"isBlockCoverage":true},{"functionName":"IPv4","ranges":[{"startOffset":1512,"endOffset":1917,"count":15},{"startOffset":1592,"endOffset":1666,"count":0},{"startOffset":1720,"endOffset":1883,"count":60},{"startOffset":1794,"endOffset":1875,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv4.IPv4.kind","ranges":[{"startOffset":1945,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toString","ranges":[{"startOffset":2017,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toNormalizedString","ranges":[{"startOffset":2114,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toByteArray","ranges":[{"startOffset":2198,"endOffset":2251,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.match","ranges":[{"startOffset":2281,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.range","ranges":[{"startOffset":3342,"endOffset":3419,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toIPv4MappedAddress","ranges":[{"startOffset":3463,"endOffset":3544,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.prefixLengthFromSubnetMask","ranges":[{"startOffset":3595,"endOffset":4266,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parser","ranges":[{"startOffset":4545,"endOffset":5637,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5657,"endOffset":11106,"count":1}],"isBlockCoverage":true},{"functionName":"IPv6","ranges":[{"startOffset":5674,"endOffset":6372,"count":11},{"startOffset":5771,"endOffset":5921,"count":0},{"startOffset":5988,"endOffset":6073,"count":0},{"startOffset":6148,"endOffset":6308,"count":88},{"startOffset":6219,"endOffset":6300,"count":0},{"startOffset":6327,"endOffset":6366,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv6.IPv6.kind","ranges":[{"startOffset":6400,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toString","ranges":[{"startOffset":6472,"endOffset":6564,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toRFC5952String","ranges":[{"startOffset":6604,"endOffset":7192,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toByteArray","ranges":[{"startOffset":7228,"endOffset":7491,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toNormalizedString","ranges":[{"startOffset":7534,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toFixedLengthString","ranges":[{"startOffset":8040,"endOffset":8519,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.match","ranges":[{"startOffset":8549,"endOffset":8886,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.range","ranges":[{"startOffset":9656,"endOffset":9733,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.isIPv4MappedAddress","ranges":[{"startOffset":9777,"endOffset":9839,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toIPv4Address","ranges":[{"startOffset":9877,"endOffset":10196,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.prefixLengthFromSubnetMask","ranges":[{"startOffset":10247,"endOffset":11082,"count":0}],"isBlockCoverage":false},{"functionName":"expandIPv6","ranges":[{"startOffset":11548,"endOffset":12889,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parser","ranges":[{"startOffset":12915,"endOffset":13759,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isIPv4.ipaddr.IPv6.isIPv6","ranges":[{"startOffset":13806,"endOffset":13869,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValid","ranges":[{"startOffset":13896,"endOffset":14062,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValidFourPartDecimal","ranges":[{"startOffset":14104,"endOffset":14276,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.isValid","ranges":[{"startOffset":14303,"endOffset":14607,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parse","ranges":[{"startOffset":14632,"endOffset":14836,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parse","ranges":[{"startOffset":14861,"endOffset":15086,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parseCIDR","ranges":[{"startOffset":15115,"endOffset":15620,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.subnetMaskFromPrefixLength","ranges":[{"startOffset":15666,"endOffset":16169,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.broadcastAddressFromCIDR","ranges":[{"startOffset":16213,"endOffset":16814,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.networkAddressFromCIDR","ranges":[{"startOffset":16856,"endOffset":17451,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parseCIDR","ranges":[{"startOffset":17480,"endOffset":17986,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.isValid","ranges":[{"startOffset":18008,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parse","ranges":[{"startOffset":18121,"endOffset":18406,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parseCIDR","ranges":[{"startOffset":18430,"endOffset":18761,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.fromByteArray","ranges":[{"startOffset":18789,"endOffset":19089,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.process","ranges":[{"startOffset":19111,"endOffset":19315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"574","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12505,"count":1}],"isBlockCoverage":true},{"functionName":"header","ranges":[{"startOffset":1150,"endOffset":1565,"count":0}],"isBlockCoverage":false},{"functionName":"req.accepts","ranges":[{"startOffset":2913,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsEncodings","ranges":[{"startOffset":3158,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsCharsets","ranges":[{"startOffset":3585,"endOffset":3679,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsLanguages","ranges":[{"startOffset":4002,"endOffset":4097,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":5220,"endOffset":5351,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":5806,"endOffset":6298,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":6898,"endOffset":7154,"count":0}],"isBlockCoverage":false},{"functionName":"protocol","ranges":[{"startOffset":7546,"endOffset":8029,"count":0}],"isBlockCoverage":false},{"functionName":"secure","ranges":[{"startOffset":8158,"endOffset":8214,"count":0}],"isBlockCoverage":false},{"functionName":"ip","ranges":[{"startOffset":8416,"endOffset":8511,"count":0}],"isBlockCoverage":false},{"functionName":"ips","ranges":[{"startOffset":8860,"endOffset":9086,"count":0}],"isBlockCoverage":false},{"functionName":"subdomains","ranges":[{"startOffset":9633,"endOffset":9894,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":10016,"endOffset":10066,"count":0}],"isBlockCoverage":false},{"functionName":"hostname","ranges":[{"startOffset":10314,"endOffset":10948,"count":0}],"isBlockCoverage":false},{"functionName":"host","ranges":[{"startOffset":11052,"endOffset":11094,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11295,"endOffset":11736,"count":39},{"startOffset":11462,"endOffset":11482,"count":34},{"startOffset":11484,"endOffset":11497,"count":34},{"startOffset":11497,"endOffset":11572,"count":5},{"startOffset":11574,"endOffset":11591,"count":3},{"startOffset":11593,"endOffset":11717,"count":2},{"startOffset":11717,"endOffset":11735,"count":3}],"isBlockCoverage":true},{"functionName":"stale","ranges":[{"startOffset":11921,"endOffset":11962,"count":0}],"isBlockCoverage":false},{"functionName":"xhr","ranges":[{"startOffset":12084,"endOffset":12198,"count":0}],"isBlockCoverage":false},{"functionName":"defineGetter","ranges":[{"startOffset":12355,"endOffset":12504,"count":11}],"isBlockCoverage":true}]},{"scriptId":"577","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/accepts/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5252,"count":1}],"isBlockCoverage":true},{"functionName":"Accepts","ranges":[{"startOffset":411,"endOffset":575,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.type.Accepts.types","ranges":[{"startOffset":1772,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.encoding.Accepts.encodings","ranges":[{"startOffset":2760,"endOffset":3232,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.charset.Accepts.charsets","ranges":[{"startOffset":3591,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.lang.Accepts.langs.Accepts.language.Accepts.languages","ranges":[{"startOffset":4422,"endOffset":4894,"count":0}],"isBlockCoverage":false},{"functionName":"extToMime","ranges":[{"startOffset":4993,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"validMime","ranges":[{"startOffset":5188,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/negotiator/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"Negotiator","ranges":[{"startOffset":593,"endOffset":731,"count":0}],"isBlockCoverage":false},{"functionName":"charset","ranges":[{"startOffset":764,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"charsets","ranges":[{"startOffset":892,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"encoding","ranges":[{"startOffset":1038,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"encodings","ranges":[{"startOffset":1169,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"language","ranges":[{"startOffset":1318,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"languages","ranges":[{"startOffset":1449,"endOffset":1563,"count":0}],"isBlockCoverage":false},{"functionName":"mediaType","ranges":[{"startOffset":1599,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"mediaTypes","ranges":[{"startOffset":1733,"endOffset":1837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/negotiator/lib/charset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3081,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptCharset","ranges":[{"startOffset":471,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"parseCharset","ranges":[{"startOffset":846,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"getCharsetPriority","ranges":[{"startOffset":1339,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1741,"endOffset":1995,"count":0}],"isBlockCoverage":false},{"functionName":"preferredCharsets","ranges":[{"startOffset":2078,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":2762,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"getFullCharset","ranges":[{"startOffset":2916,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3031,"endOffset":3080,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/negotiator/lib/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3506,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptEncoding","ranges":[{"startOffset":476,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"parseEncoding","ranges":[{"startOffset":1309,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingPriority","ranges":[{"startOffset":1810,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2216,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"preferredEncodings","ranges":[{"startOffset":2560,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3184,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"getFullEncoding","ranges":[{"startOffset":3339,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3456,"endOffset":3505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/negotiator/lib/language.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptLanguage","ranges":[{"startOffset":493,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"parseLanguage","ranges":[{"startOffset":875,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguagePriority","ranges":[{"startOffset":1445,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1851,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"preferredLanguages","ranges":[{"startOffset":2400,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3091,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"getFullLanguage","ranges":[{"startOffset":3246,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3359,"endOffset":3408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/negotiator/lib/mediaType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5358,"count":1}],"isBlockCoverage":true},{"functionName":"parseAccept","ranges":[{"startOffset":484,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parseMediaType","ranges":[{"startOffset":861,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"getMediaTypePriority","ranges":[{"startOffset":1754,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2155,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"preferredMediaTypes","ranges":[{"startOffset":2948,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3621,"endOffset":3724,"count":0}],"isBlockCoverage":false},{"functionName":"getFullType","ranges":[{"startOffset":3772,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3902,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"quoteCount","ranges":[{"startOffset":4017,"endOffset":4186,"count":0}],"isBlockCoverage":false},{"functionName":"splitKeyValuePair","ranges":[{"startOffset":4236,"endOffset":4465,"count":0}],"isBlockCoverage":false},{"functionName":"splitMediaTypes","ranges":[{"startOffset":4532,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"splitParameters","ranges":[{"startOffset":4913,"endOffset":5357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mime-types/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3663,"count":1}],"isBlockCoverage":true},{"functionName":"charset","ranges":[{"startOffset":841,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":1366,"endOffset":1822,"count":0}],"isBlockCoverage":false},{"functionName":"extension","ranges":[{"startOffset":1934,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2374,"endOffset":2678,"count":0}],"isBlockCoverage":false},{"functionName":"populateMaps","ranges":[{"startOffset":2744,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"forEachMimeType","ranges":[{"startOffset":2912,"endOffset":3659,"count":2279},{"startOffset":3016,"endOffset":3031,"count":965},{"startOffset":3033,"endOffset":3053,"count":1314},{"startOffset":3053,"endOffset":3177,"count":965},{"startOffset":3177,"endOffset":3655,"count":1220},{"startOffset":3238,"endOffset":3583,"count":40},{"startOffset":3417,"endOffset":3511,"count":34},{"startOffset":3441,"endOffset":3510,"count":19},{"startOffset":3457,"endOffset":3509,"count":11},{"startOffset":3513,"endOffset":3575,"count":23},{"startOffset":3583,"endOffset":3655,"count":1197}],"isBlockCoverage":true}]},{"scriptId":"584","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mime-db/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189,"count":1}],"isBlockCoverage":true}]},{"scriptId":"585","url":"node:internal/blocklist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4046,"count":1}],"isBlockCoverage":false},{"functionName":"BlockList","ranges":[{"startOffset":804,"endOffset":923,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":929,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"addAddress","ranges":[{"startOffset":1201,"endOffset":1532,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":1538,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"addSubnet","ranges":[{"startOffset":2244,"endOffset":2807,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2813,"endOffset":3293,"count":0}],"isBlockCoverage":false},{"functionName":"get rules","ranges":[{"startOffset":3299,"endOffset":3355,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3361,"endOffset":3524,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3530,"endOffset":3633,"count":0}],"isBlockCoverage":false},{"functionName":"InternalBlockList","ranges":[{"startOffset":3692,"endOffset":3828,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"node:internal/socketaddress","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3551,"count":1}],"isBlockCoverage":false},{"functionName":"isSocketAddress","ranges":[{"startOffset":786,"endOffset":859,"count":0}],"isBlockCoverage":false},{"functionName":"SocketAddress","ranges":[{"startOffset":865,"endOffset":1869,"count":0}],"isBlockCoverage":false},{"functionName":"get address","ranges":[{"startOffset":1875,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":1936,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"get family","ranges":[{"startOffset":1991,"endOffset":2074,"count":0}],"isBlockCoverage":false},{"functionName":"get flowlabel","ranges":[{"startOffset":2080,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2197,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2452,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2629,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2849,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSocketAddress","ranges":[{"startOffset":3065,"endOffset":3294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/type-is/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5562,"count":1}],"isBlockCoverage":true},{"functionName":"typeis","ranges":[{"startOffset":798,"endOffset":1524,"count":31},{"startOffset":972,"endOffset":994,"count":0},{"startOffset":1269,"endOffset":1289,"count":0},{"startOffset":1460,"endOffset":1465,"count":0},{"startOffset":1490,"endOffset":1523,"count":0}],"isBlockCoverage":true},{"functionName":"hasbody","ranges":[{"startOffset":1805,"endOffset":1932,"count":70}],"isBlockCoverage":true},{"functionName":"typeofrequest","ranges":[{"startOffset":2796,"endOffset":3211,"count":31},{"startOffset":2891,"endOffset":2912,"count":0},{"startOffset":2975,"endOffset":3109,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":3577,"endOffset":3986,"count":31},{"startOffset":3637,"endOffset":3679,"count":0},{"startOffset":3703,"endOffset":3770,"count":0},{"startOffset":3775,"endOffset":3819,"count":0},{"startOffset":3848,"endOffset":3914,"count":0},{"startOffset":3954,"endOffset":3973,"count":0}],"isBlockCoverage":true},{"functionName":"mimeMatch","ranges":[{"startOffset":4188,"endOffset":4984,"count":31},{"startOffset":4272,"endOffset":4294,"count":0},{"startOffset":4476,"endOffset":4498,"count":0},{"startOffset":4590,"endOffset":4612,"count":0},{"startOffset":4690,"endOffset":4850,"count":0},{"startOffset":4945,"endOffset":4967,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeType","ranges":[{"startOffset":5098,"endOffset":5288,"count":31}],"isBlockCoverage":true},{"functionName":"tryNormalizeType","ranges":[{"startOffset":5409,"endOffset":5561,"count":31},{"startOffset":5459,"endOffset":5480,"count":0},{"startOffset":5526,"endOffset":5559,"count":0}],"isBlockCoverage":true}]},{"scriptId":"588","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/media-typer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6375,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2747,"endOffset":3799,"count":31},{"startOffset":2809,"endOffset":2866,"count":0},{"startOffset":3022,"endOffset":3067,"count":0},{"startOffset":3121,"endOffset":3169,"count":0},{"startOffset":3270,"endOffset":3393,"count":0},{"startOffset":3435,"endOffset":3468,"count":0},{"startOffset":3470,"endOffset":3780,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":3912,"endOffset":5027,"count":31},{"startOffset":3952,"endOffset":4012,"count":0},{"startOffset":4094,"endOffset":4135,"count":0},{"startOffset":4171,"endOffset":4246,"count":0},{"startOffset":4312,"endOffset":4337,"count":0},{"startOffset":4509,"endOffset":4878,"count":0},{"startOffset":4899,"endOffset":4925,"count":0},{"startOffset":4927,"endOffset":4984,"count":0}],"isBlockCoverage":true},{"functionName":"getcontenttype","ranges":[{"startOffset":5138,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":5497,"endOffset":5786,"count":0}],"isBlockCoverage":false},{"functionName":"splitType","ranges":[{"startOffset":5905,"endOffset":6374,"count":31},{"startOffset":6001,"endOffset":6052,"count":0},{"startOffset":6199,"endOffset":6282,"count":0}],"isBlockCoverage":true}]},{"scriptId":"589","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"590","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"591","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express/lib/response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28014,"count":1}],"isBlockCoverage":true},{"functionName":"status","ranges":[{"startOffset":1392,"endOffset":1663,"count":39},{"startOffset":1478,"endOffset":1490,"count":0},{"startOffset":1491,"endOffset":1505,"count":0},{"startOffset":1507,"endOffset":1620,"count":0}],"isBlockCoverage":true},{"functionName":"res.links","ranges":[{"startOffset":1955,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2419,"endOffset":5591,"count":39},{"startOffset":2604,"endOffset":3031,"count":0},{"startOffset":3126,"endOffset":3151,"count":0},{"startOffset":3153,"endOffset":3425,"count":0},{"startOffset":3542,"endOffset":3578,"count":0},{"startOffset":3596,"endOffset":3611,"count":0},{"startOffset":3616,"endOffset":3630,"count":0},{"startOffset":3635,"endOffset":3888,"count":0},{"startOffset":4409,"endOffset":4471,"count":0},{"startOffset":4495,"endOffset":4517,"count":0},{"startOffset":4519,"endOffset":4631,"count":0},{"startOffset":5022,"endOffset":5044,"count":0},{"startOffset":5106,"endOffset":5132,"count":37},{"startOffset":5134,"endOffset":5279,"count":2},{"startOffset":5339,"endOffset":5438,"count":0},{"startOffset":5469,"endOffset":5516,"count":0}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":5771,"endOffset":6598,"count":39},{"startOffset":5865,"endOffset":6250,"count":0}],"isBlockCoverage":true},{"functionName":"jsonp","ranges":[{"startOffset":6809,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"sendStatus","ranges":[{"startOffset":8967,"endOffset":9146,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":10530,"endOffset":11509,"count":0}],"isBlockCoverage":false},{"functionName":"res.sendfile","ranges":[{"startOffset":12893,"endOffset":13504,"count":0}],"isBlockCoverage":false},{"functionName":"download","ranges":[{"startOffset":14257,"endOffset":15493,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":15921,"endOffset":16063,"count":0}],"isBlockCoverage":false},{"functionName":"res.format","ranges":[{"startOffset":17498,"endOffset":18033,"count":0}],"isBlockCoverage":false},{"functionName":"attachment","ranges":[{"startOffset":18210,"endOffset":18381,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":18785,"endOffset":19075,"count":0}],"isBlockCoverage":false},{"functionName":"header","ranges":[{"startOffset":19494,"endOffset":20156,"count":156},{"startOffset":19597,"endOffset":19614,"count":0},{"startOffset":19720,"endOffset":20021,"count":78},{"startOffset":19754,"endOffset":19834,"count":0},{"startOffset":19873,"endOffset":20015,"count":39},{"startOffset":20060,"endOffset":20139,"count":0}],"isBlockCoverage":true},{"functionName":"res.get","ranges":[{"startOffset":20270,"endOffset":20320,"count":160}],"isBlockCoverage":true},{"functionName":"clearCookie","ranges":[{"startOffset":20482,"endOffset":20626,"count":0}],"isBlockCoverage":false},{"functionName":"res.cookie","ranges":[{"startOffset":21257,"endOffset":21983,"count":0}],"isBlockCoverage":false},{"functionName":"location","ranges":[{"startOffset":22359,"endOffset":22581,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":23049,"endOffset":24071,"count":0}],"isBlockCoverage":false},{"functionName":"res.vary","ranges":[{"startOffset":24277,"endOffset":24492,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":24878,"endOffset":25395,"count":0}],"isBlockCoverage":false},{"functionName":"sendfile","ranges":[{"startOffset":25427,"endOffset":27061,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":27342,"endOffset":28013,"count":39},{"startOffset":27550,"endOffset":27591,"count":0},{"startOffset":27635,"endOffset":27662,"count":0},{"startOffset":27664,"endOffset":27996,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27700,"endOffset":27991,"count":0}],"isBlockCoverage":false}]},{"scriptId":"592","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/cookie-signature/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1230,"count":1}],"isBlockCoverage":true},{"functionName":"exports.sign","ranges":[{"startOffset":217,"endOffset":554,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unsign","ranges":[{"startOffset":781,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"sha1","ranges":[{"startOffset":1146,"endOffset":1229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"593","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/cookie/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5224,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":819,"endOffset":1766,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2150,"endOffset":4450,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":4577,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":4754,"endOffset":4812,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":4889,"endOffset":4991,"count":0}],"isBlockCoverage":false},{"functionName":"tryDecode","ranges":[{"startOffset":5120,"endOffset":5223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"594","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/vary/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2930,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":695,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1868,"endOffset":2409,"count":0}],"isBlockCoverage":false},{"functionName":"vary","ranges":[{"startOffset":2540,"endOffset":2929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"595","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":174,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"596","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/body-parser/lib/types/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5012,"count":1}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":1019,"endOffset":3233,"count":1},{"startOffset":1163,"endOffset":1175,"count":0},{"startOffset":1386,"endOffset":1417,"count":0},{"startOffset":1419,"endOffset":1482,"count":0},{"startOffset":1610,"endOffset":1616,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1620,"endOffset":2244,"count":31},{"startOffset":1671,"endOffset":1841,"count":3},{"startOffset":1841,"endOffset":2038,"count":28},{"startOffset":1920,"endOffset":1936,"count":0},{"startOffset":1938,"endOffset":2032,"count":0},{"startOffset":2038,"endOffset":2121,"count":28},{"startOffset":2121,"endOffset":2240,"count":0}],"isBlockCoverage":true},{"functionName":"jsonParser","ranges":[{"startOffset":2255,"endOffset":3231,"count":39},{"startOffset":2313,"endOffset":2381,"count":0},{"startOffset":2480,"endOffset":2544,"count":8},{"startOffset":2544,"endOffset":2677,"count":31},{"startOffset":2677,"endOffset":2738,"count":0},{"startOffset":2738,"endOffset":2827,"count":31},{"startOffset":2868,"endOffset":3076,"count":0},{"startOffset":3076,"endOffset":3230,"count":31}],"isBlockCoverage":true},{"functionName":"createStrictSyntaxError","ranges":[{"startOffset":3388,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"firstchar","ranges":[{"startOffset":3905,"endOffset":4022,"count":28},{"startOffset":4009,"endOffset":4020,"count":0}],"isBlockCoverage":true},{"functionName":"getCharset","ranges":[{"startOffset":4108,"endOffset":4261,"count":31},{"startOffset":4223,"endOffset":4259,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeJsonSyntaxError","ranges":[{"startOffset":4396,"endOffset":4810,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":4902,"endOffset":5011,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":4941,"endOffset":5009,"count":31}],"isBlockCoverage":true}]},{"scriptId":"597","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/bytes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3613,"count":1}],"isBlockCoverage":true},{"functionName":"bytes","ranges":[{"startOffset":941,"endOffset":1130,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1598,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":3612,"count":32},{"startOffset":3049,"endOffset":3063,"count":31},{"startOffset":3065,"endOffset":3086,"count":31},{"startOffset":3086,"endOffset":3119,"count":1},{"startOffset":3119,"endOffset":3141,"count":0},{"startOffset":3141,"endOffset":3275,"count":1},{"startOffset":3275,"endOffset":3387,"count":0},{"startOffset":3387,"endOffset":3542,"count":1},{"startOffset":3542,"endOffset":3564,"count":0},{"startOffset":3564,"endOffset":3611,"count":1}],"isBlockCoverage":true}]},{"scriptId":"598","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/body-parser/lib/read.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4325,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":664,"endOffset":2935,"count":31},{"startOffset":890,"endOffset":896,"count":0},{"startOffset":1077,"endOffset":1115,"count":0},{"startOffset":1195,"endOffset":1201,"count":0},{"startOffset":1280,"endOffset":1300,"count":0},{"startOffset":1301,"endOffset":1335,"count":0},{"startOffset":1337,"endOffset":1514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1576,"endOffset":2932,"count":31},{"startOffset":1616,"endOffset":2268,"count":0},{"startOffset":2300,"endOffset":2556,"count":0},{"startOffset":2663,"endOffset":2683,"count":0},{"startOffset":2692,"endOffset":2722,"count":0},{"startOffset":2772,"endOffset":2916,"count":0}],"isBlockCoverage":true},{"functionName":"onfinished","ranges":[{"startOffset":2177,"endOffset":2248,"count":0}],"isBlockCoverage":false},{"functionName":"contentstream","ranges":[{"startOffset":3112,"endOffset":4056,"count":31},{"startOffset":3365,"endOffset":3391,"count":0},{"startOffset":3393,"endOffset":3527,"count":0},{"startOffset":3555,"endOffset":3669,"count":0},{"startOffset":3674,"endOffset":3783,"count":0},{"startOffset":3869,"endOffset":4033,"count":0}],"isBlockCoverage":true},{"functionName":"dump","ranges":[{"startOffset":4174,"endOffset":4324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/raw-body/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6902,"count":1}],"isBlockCoverage":true},{"functionName":"getDecoder","ranges":[{"startOffset":633,"endOffset":1022,"count":31},{"startOffset":683,"endOffset":694,"count":0},{"startOffset":746,"endOffset":1020,"count":0}],"isBlockCoverage":true},{"functionName":"getRawBody","ranges":[{"startOffset":1200,"endOffset":2464,"count":31},{"startOffset":1293,"endOffset":1298,"count":0},{"startOffset":1355,"endOffset":1433,"count":0},{"startOffset":1472,"endOffset":1510,"count":0},{"startOffset":1618,"endOffset":1687,"count":0},{"startOffset":1744,"endOffset":1762,"count":0},{"startOffset":1764,"endOffset":1826,"count":0},{"startOffset":1910,"endOffset":1919,"count":0},{"startOffset":2138,"endOffset":2144,"count":0},{"startOffset":2260,"endOffset":2463,"count":0}],"isBlockCoverage":true},{"functionName":"executor","ranges":[{"startOffset":2283,"endOffset":2461,"count":0}],"isBlockCoverage":false},{"functionName":"halt","ranges":[{"startOffset":2534,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"readStream","ranges":[{"startOffset":2896,"endOffset":6280,"count":31},{"startOffset":3208,"endOffset":3381,"count":0},{"startOffset":3713,"endOffset":3855,"count":0},{"startOffset":3923,"endOffset":4031,"count":0},{"startOffset":4114,"endOffset":4152,"count":0},{"startOffset":4190,"endOffset":4194,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":4415,"endOffset":4899,"count":31},{"startOffset":4542,"endOffset":4578,"count":62},{"startOffset":4636,"endOffset":4682,"count":0}],"isBlockCoverage":true},{"functionName":"invokeCallback","ranges":[{"startOffset":4724,"endOffset":4895,"count":31},{"startOffset":4789,"endOffset":4855,"count":0}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":4903,"endOffset":5141,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":5145,"endOffset":5534,"count":28},{"startOffset":5189,"endOffset":5195,"count":0},{"startOffset":5271,"endOffset":5429,"count":0},{"startOffset":5492,"endOffset":5530,"count":0}],"isBlockCoverage":true},{"functionName":"onEnd","ranges":[{"startOffset":5538,"endOffset":6014,"count":31},{"startOffset":5579,"endOffset":5585,"count":0},{"startOffset":5599,"endOffset":5615,"count":0},{"startOffset":5665,"endOffset":5872,"count":0},{"startOffset":5956,"endOffset":5979,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":6018,"endOffset":6278,"count":31}],"isBlockCoverage":true},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":6333,"endOffset":6445,"count":1},{"startOffset":6414,"endOffset":6443,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":6567,"endOffset":6901,"count":31},{"startOffset":6803,"endOffset":6822,"count":0}],"isBlockCoverage":true}]},{"scriptId":"600","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5120,"count":1},{"startOffset":4754,"endOffset":4776,"count":0},{"startOffset":4924,"endOffset":5119,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":585,"endOffset":877,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":894,"endOffset":1476,"count":0}],"isBlockCoverage":false},{"functionName":"encodingExists","ranges":[{"startOffset":1501,"endOffset":1639,"count":0}],"isBlockCoverage":false},{"functionName":"getCodec","ranges":[{"startOffset":1879,"endOffset":3589,"count":31},{"startOffset":1943,"endOffset":1985,"count":1},{"startOffset":2269,"endOffset":3587,"count":32},{"startOffset":2350,"endOffset":2363,"count":30},{"startOffset":2363,"endOffset":2458,"count":2},{"startOffset":2458,"endOffset":2562,"count":0},{"startOffset":2576,"endOffset":2905,"count":1},{"startOffset":2692,"endOffset":2726,"count":2},{"startOffset":2919,"endOffset":3444,"count":1},{"startOffset":3021,"endOffset":3053,"count":0},{"startOffset":3458,"endOffset":3571,"count":0}],"isBlockCoverage":true},{"functionName":"iconv._canonicalizeEncoding","ranges":[{"startOffset":3621,"endOffset":3804,"count":31}],"isBlockCoverage":true},{"functionName":"getEncoder","ranges":[{"startOffset":3825,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":4122,"endOffset":4411,"count":31},{"startOffset":4295,"endOffset":4324,"count":0}],"isBlockCoverage":true}]},{"scriptId":"601","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/safer-buffer/safer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2110,"count":1},{"startOffset":163,"endOffset":294,"count":14},{"startOffset":200,"endOffset":208,"count":0},{"startOffset":236,"endOffset":255,"count":13},{"startOffset":257,"endOffset":265,"count":2},{"startOffset":265,"endOffset":294,"count":12},{"startOffset":346,"endOffset":487,"count":12},{"startOffset":383,"endOffset":391,"count":0},{"startOffset":420,"endOffset":448,"count":11},{"startOffset":450,"endOffset":458,"count":2},{"startOffset":458,"endOffset":487,"count":10},{"startOffset":583,"endOffset":1070,"count":0},{"startOffset":1090,"endOffset":1642,"count":0},{"startOffset":1673,"endOffset":1900,"count":0},{"startOffset":1924,"endOffset":2085,"count":0}],"isBlockCoverage":true},{"functionName":"Safer.from","ranges":[{"startOffset":600,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"Safer.alloc","ranges":[{"startOffset":1108,"endOffset":1640,"count":0}],"isBlockCoverage":false}]},{"scriptId":"602","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/lib/bom-handling.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1109,"count":1}],"isBlockCoverage":true},{"functionName":"PrependBOMWrapper","ranges":[{"startOffset":79,"endOffset":179,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.write","ranges":[{"startOffset":217,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.end","ranges":[{"startOffset":394,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper","ranges":[{"startOffset":560,"endOffset":691,"count":31}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.write","ranges":[{"startOffset":727,"endOffset":1028,"count":28},{"startOffset":817,"endOffset":828,"count":0},{"startOffset":858,"endOffset":987,"count":0}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.end","ranges":[{"startOffset":1062,"endOffset":1107,"count":31}],"isBlockCoverage":true}]},{"scriptId":"603","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/lib/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3387,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":199,"endOffset":824,"count":1}],"isBlockCoverage":true},{"functionName":"encodeStream","ranges":[{"startOffset":277,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"decodeStream","ranges":[{"startOffset":441,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream","ranges":[{"startOffset":905,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._transform","ranges":[{"startOffset":1312,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._flush","ranges":[{"startOffset":1670,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream.collect","ranges":[{"startOffset":1886,"endOffset":2109,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream","ranges":[{"startOffset":2189,"endOffset":2394,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._transform","ranges":[{"startOffset":2570,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._flush","ranges":[{"startOffset":2942,"endOffset":3144,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream.collect","ranges":[{"startOffset":3189,"endOffset":3385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"604","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/lib/extend-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8701,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":229,"endOffset":8700,"count":1},{"startOffset":564,"endOffset":602,"count":0}],"isBlockCoverage":true},{"functionName":"extendNodeEncodings","ranges":[{"startOffset":638,"endOffset":7624,"count":0}],"isBlockCoverage":false},{"functionName":"undoExtendNodeEncodings","ranges":[{"startOffset":7714,"endOffset":8698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"605","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/body-parser/lib/types/raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1884,"count":1}],"isBlockCoverage":true},{"functionName":"raw","ranges":[{"startOffset":452,"endOffset":1682,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":1774,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"606","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/serve-static/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4570,"count":1}],"isBlockCoverage":true},{"functionName":"serveStatic","ranges":[{"startOffset":621,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":2776,"endOffset":2978,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":3088,"endOffset":3383,"count":0}],"isBlockCoverage":false},{"functionName":"createNotFoundDirectoryListener","ranges":[{"startOffset":3453,"endOffset":3556,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectDirectoryListener","ranges":[{"startOffset":3636,"endOffset":4569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"607","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/body-parser/lib/types/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2285,"count":1}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":497,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":1930,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":2175,"endOffset":2284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"608","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/body-parser/lib/types/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5797,"count":1}],"isBlockCoverage":true},{"functionName":"urlencoded","ranges":[{"startOffset":717,"endOffset":2669,"count":0}],"isBlockCoverage":false},{"functionName":"extendedparser","ranges":[{"startOffset":2744,"endOffset":3638,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":3724,"endOffset":3877,"count":0}],"isBlockCoverage":false},{"functionName":"parameterCount","ranges":[{"startOffset":4019,"endOffset":4248,"count":0}],"isBlockCoverage":false},{"functionName":"parser","ranges":[{"startOffset":4367,"endOffset":4755,"count":0}],"isBlockCoverage":false},{"functionName":"simpleparser","ranges":[{"startOffset":4828,"endOffset":5595,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":5687,"endOffset":5796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"609","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/cors/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6618,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":256,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"isOriginAllowed","ranges":[{"startOffset":343,"endOffset":830,"count":0}],"isBlockCoverage":false},{"functionName":"configureOrigin","ranges":[{"startOffset":834,"endOffset":1719,"count":39},{"startOffset":1137,"endOffset":1694,"count":0}],"isBlockCoverage":true},{"functionName":"configureMethods","ranges":[{"startOffset":1723,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"configureCredentials","ranges":[{"startOffset":2009,"endOffset":2211,"count":39},{"startOffset":2088,"endOffset":2190,"count":0}],"isBlockCoverage":true},{"functionName":"configureAllowedHeaders","ranges":[{"startOffset":2215,"endOffset":2947,"count":0}],"isBlockCoverage":false},{"functionName":"configureExposedHeaders","ranges":[{"startOffset":2951,"endOffset":3354,"count":39},{"startOffset":3081,"endOffset":3231,"count":0},{"startOffset":3233,"endOffset":3353,"count":0}],"isBlockCoverage":true},{"functionName":"configureMaxAge","ranges":[{"startOffset":3358,"endOffset":3641,"count":0}],"isBlockCoverage":false},{"functionName":"applyHeaders","ranges":[{"startOffset":3645,"endOffset":4070,"count":117},{"startOffset":3735,"endOffset":4066,"count":195},{"startOffset":3786,"endOffset":4060,"count":117},{"startOffset":3823,"endOffset":3871,"count":78},{"startOffset":3871,"endOffset":4052,"count":39},{"startOffset":3903,"endOffset":3918,"count":0},{"startOffset":3920,"endOffset":3966,"count":0}],"isBlockCoverage":true},{"functionName":"cors","ranges":[{"startOffset":4074,"endOffset":5224,"count":39},{"startOffset":4249,"endOffset":4968,"count":0}],"isBlockCoverage":true},{"functionName":"middlewareWrapper","ranges":[{"startOffset":5228,"endOffset":6506,"count":1},{"startOffset":5424,"endOffset":5458,"count":0}],"isBlockCoverage":true},{"functionName":"optionsCallback","ranges":[{"startOffset":5490,"endOffset":5539,"count":39}],"isBlockCoverage":true},{"functionName":"corsMiddleware","ranges":[{"startOffset":5559,"endOffset":6501,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5628,"endOffset":6493,"count":39},{"startOffset":5671,"endOffset":5703,"count":0},{"startOffset":5885,"endOffset":5947,"count":0},{"startOffset":6436,"endOffset":6475,"count":0}],"isBlockCoverage":true},{"functionName":"originCallback","ranges":[{"startOffset":6008,"endOffset":6089,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6183,"endOffset":6422,"count":39},{"startOffset":6244,"endOffset":6289,"count":0}],"isBlockCoverage":true}]},{"scriptId":"610","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/object-assign/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2108,"count":1},{"startOffset":1600,"endOffset":2106,"count":0}],"isBlockCoverage":true},{"functionName":"toObject","ranges":[{"startOffset":277,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseNative","ranges":[{"startOffset":452,"endOffset":1547,"count":1},{"startOffset":510,"endOffset":532,"count":0},{"startOffset":804,"endOffset":826,"count":0},{"startOffset":935,"endOffset":984,"count":10},{"startOffset":1119,"endOffset":1141,"count":0},{"startOffset":1400,"endOffset":1422,"count":0},{"startOffset":1442,"endOffset":1545,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1076,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1262,"endOffset":1312,"count":20}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1602,"endOffset":2106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"611","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express-fileupload/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1190,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":882,"endOffset":1188,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":970,"endOffset":1185,"count":39},{"startOffset":1128,"endOffset":1184,"count":0}],"isBlockCoverage":true}]},{"scriptId":"612","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express-fileupload/lib/processMultipart.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5721,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":821,"endOffset":5719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"613","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/busboy/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1576,"count":1}],"isBlockCoverage":true},{"functionName":"getInstance","ranges":[{"startOffset":68,"endOffset":1002,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1208,"endOffset":1274,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1295,"endOffset":1574,"count":0}],"isBlockCoverage":false}]},{"scriptId":"614","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/busboy/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16220,"count":1}],"isBlockCoverage":true},{"functionName":"parseContentType","ranges":[{"startOffset":15,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"parseContentTypeParams","ranges":[{"startOffset":955,"endOffset":3591,"count":0}],"isBlockCoverage":false},{"functionName":"parseDisposition","ranges":[{"startOffset":3593,"endOffset":4015,"count":0}],"isBlockCoverage":false},{"functionName":"parseDispositionParams","ranges":[{"startOffset":4017,"endOffset":9012,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":9014,"endOffset":9873,"count":0}],"isBlockCoverage":false},{"functionName":"utf8","ranges":[{"startOffset":9902,"endOffset":10337,"count":0}],"isBlockCoverage":false},{"functionName":"latin1","ranges":[{"startOffset":10350,"endOffset":10513,"count":0}],"isBlockCoverage":false},{"functionName":"utf16le","ranges":[{"startOffset":10527,"endOffset":10711,"count":0}],"isBlockCoverage":false},{"functionName":"base64","ranges":[{"startOffset":10724,"endOffset":10910,"count":0}],"isBlockCoverage":false},{"functionName":"other","ranges":[{"startOffset":10922,"endOffset":11168,"count":0}],"isBlockCoverage":false},{"functionName":"convertToUTF8","ranges":[{"startOffset":11174,"endOffset":11304,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":11306,"endOffset":11667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"615","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/busboy/lib/types/multipart.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18985,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":341,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser","ranges":[{"startOffset":573,"endOffset":790,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":794,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":989,"endOffset":4870,"count":0}],"isBlockCoverage":false},{"functionName":"FileStream","ranges":[{"startOffset":4912,"endOffset":5649,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5652,"endOffset":5754,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":5787,"endOffset":5805,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":5818,"endOffset":5826,"count":0}],"isBlockCoverage":false},{"functionName":"callAndUnsetCb","ranges":[{"startOffset":5832,"endOffset":5981,"count":0}],"isBlockCoverage":false},{"functionName":"nullDecoder","ranges":[{"startOffset":5983,"endOffset":6032,"count":0}],"isBlockCoverage":false},{"functionName":"Multipart","ranges":[{"startOffset":6071,"endOffset":16104,"count":0}],"isBlockCoverage":false},{"functionName":"detect","ranges":[{"startOffset":16115,"endOffset":16214,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":16218,"endOffset":16355,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":16359,"endOffset":16631,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":16635,"endOffset":16873,"count":0}],"isBlockCoverage":false},{"functionName":"finalcb","ranges":[{"startOffset":16877,"endOffset":16983,"count":0}],"isBlockCoverage":false},{"functionName":"checkEndState","ranges":[{"startOffset":16985,"endOffset":17309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"616","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/streamsearch/lib/sbmh.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9501,"count":1}],"isBlockCoverage":true},{"functionName":"memcmp","ranges":[{"startOffset":166,"endOffset":330,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH","ranges":[{"startOffset":347,"endOffset":4251,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4255,"endOffset":4342,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":4346,"endOffset":4644,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":4648,"endOffset":4797,"count":0}],"isBlockCoverage":false},{"functionName":"feed","ranges":[{"startOffset":4801,"endOffset":9163,"count":0}],"isBlockCoverage":false},{"functionName":"matchNeedle","ranges":[{"startOffset":9165,"endOffset":9476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"617","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/busboy/lib/types/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10705,"count":1}],"isBlockCoverage":true},{"functionName":"URLEncoded","ranges":[{"startOffset":142,"endOffset":1382,"count":0}],"isBlockCoverage":false},{"functionName":"detect","ranges":[{"startOffset":1393,"endOffset":1518,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1522,"endOffset":6799,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":6803,"endOffset":7374,"count":0}],"isBlockCoverage":false},{"functionName":"readPctEnc","ranges":[{"startOffset":7378,"endOffset":8579,"count":0}],"isBlockCoverage":false},{"functionName":"skipKeyBytes","ranges":[{"startOffset":8581,"endOffset":9076,"count":0}],"isBlockCoverage":false},{"functionName":"skipValBytes","ranges":[{"startOffset":9078,"endOffset":9520,"count":0}],"isBlockCoverage":false}]},{"scriptId":"618","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express-fileupload/lib/uploadtimer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":606,"count":1}],"isBlockCoverage":true},{"functionName":"UploadTimer","ranges":[{"startOffset":180,"endOffset":312,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":316,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":363,"endOffset":572,"count":0}],"isBlockCoverage":false}]},{"scriptId":"619","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express-fileupload/lib/fileFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2566,"count":1}],"isBlockCoverage":true},{"functionName":"moveFromTemp","ranges":[{"startOffset":534,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"moveFromBuffer","ranges":[{"startOffset":1181,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1419,"endOffset":2564,"count":0}],"isBlockCoverage":false}]},{"scriptId":"620","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express-fileupload/lib/utilities.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9965,"count":1}],"isBlockCoverage":true},{"functionName":"debugLog","ranges":[{"startOffset":598,"endOffset":771,"count":39},{"startOffset":642,"endOffset":647,"count":0},{"startOffset":682,"endOffset":770,"count":0}],"isBlockCoverage":true},{"functionName":"getTempFilename","ranges":[{"startOffset":972,"endOffset":1126,"count":0}],"isBlockCoverage":false},{"functionName":"isFunc","ranges":[{"startOffset":1267,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"errorFunc","ranges":[{"startOffset":1467,"endOffset":1521,"count":0}],"isBlockCoverage":false},{"functionName":"promiseCallback","ranges":[{"startOffset":1694,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"buildOptions","ranges":[{"startOffset":2054,"endOffset":2277,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2115,"endOffset":2254,"count":2},{"startOffset":2178,"endOffset":2185,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2220,"endOffset":2247,"count":17}],"isBlockCoverage":true},{"functionName":"isSafeFromPollution","ranges":[{"startOffset":2780,"endOffset":3257,"count":0}],"isBlockCoverage":false},{"functionName":"buildFields","ranges":[{"startOffset":3505,"endOffset":4051,"count":0}],"isBlockCoverage":false},{"functionName":"checkAndMakeDir","ranges":[{"startOffset":4241,"endOffset":4748,"count":0}],"isBlockCoverage":false},{"functionName":"deleteFile","ranges":[{"startOffset":4888,"endOffset":4933,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":5097,"endOffset":5666,"count":0}],"isBlockCoverage":false},{"functionName":"moveFile","ranges":[{"startOffset":5995,"endOffset":6150,"count":0}],"isBlockCoverage":false},{"functionName":"saveBufferToFile","ranges":[{"startOffset":6324,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"uriDecodeFileName","ranges":[{"startOffset":7196,"endOffset":7297,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileNameExtension","ranges":[{"startOffset":7610,"endOffset":8483,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileName","ranges":[{"startOffset":8675,"endOffset":9632,"count":0}],"isBlockCoverage":false}]},{"scriptId":"621","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express-fileupload/lib/memHandler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1218,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":251,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"622","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express-fileupload/lib/tempFileHandler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2142,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":207,"endOffset":2140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"623","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express-fileupload/lib/processNested.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":902,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":74,"endOffset":900,"count":0}],"isBlockCoverage":false}]},{"scriptId":"624","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/express-fileupload/lib/isEligibleRequest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1123,"count":1}],"isBlockCoverage":true},{"functionName":"hasBody","ranges":[{"startOffset":243,"endOffset":384,"count":39},{"startOffset":340,"endOffset":380,"count":31}],"isBlockCoverage":true},{"functionName":"hasAcceptableMethod","ranges":[{"startOffset":581,"endOffset":630,"count":28}],"isBlockCoverage":true},{"functionName":"hasAcceptableContentType","ranges":[{"startOffset":816,"endOffset":880,"count":28}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1041,"endOffset":1121,"count":39},{"startOffset":1061,"endOffset":1088,"count":28},{"startOffset":1089,"endOffset":1121,"count":28}],"isBlockCoverage":true}]},{"scriptId":"625","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/routes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":148,"endOffset":198,"count":1}],"isBlockCoverage":true}]},{"scriptId":"626","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/routes/usuarioRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":596,"count":1}],"isBlockCoverage":true}]},{"scriptId":"627","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/controller/UsuarioController.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7060,"count":1}],"isBlockCoverage":true},{"functionName":"buscaUsuarios","ranges":[{"startOffset":623,"endOffset":1110,"count":2},{"startOffset":727,"endOffset":1105,"count":1},{"startOffset":1048,"endOffset":1053,"count":0}],"isBlockCoverage":true},{"functionName":"buscaUsuarioPorId","ranges":[{"startOffset":1123,"endOffset":1764,"count":3},{"startOffset":1263,"endOffset":1376,"count":1},{"startOffset":1376,"endOffset":1448,"count":2},{"startOffset":1448,"endOffset":1501,"count":1},{"startOffset":1501,"endOffset":1759,"count":2},{"startOffset":1571,"endOffset":1701,"count":1},{"startOffset":1702,"endOffset":1707,"count":0}],"isBlockCoverage":true},{"functionName":"cadastraUsuario","ranges":[{"startOffset":1777,"endOffset":2925,"count":5},{"startOffset":2087,"endOffset":2141,"count":1},{"startOffset":2141,"endOffset":2920,"count":4},{"startOffset":2202,"endOffset":2809,"count":3},{"startOffset":2259,"endOffset":2276,"count":2},{"startOffset":2278,"endOffset":2430,"count":1},{"startOffset":2430,"endOffset":2800,"count":2},{"startOffset":2447,"endOffset":2462,"count":1},{"startOffset":2464,"endOffset":2800,"count":1},{"startOffset":2809,"endOffset":2873,"count":1},{"startOffset":2873,"endOffset":2878,"count":0}],"isBlockCoverage":true},{"functionName":"logaUsuario","ranges":[{"startOffset":2938,"endOffset":3937,"count":17},{"startOffset":3243,"endOffset":3304,"count":3},{"startOffset":3304,"endOffset":3314,"count":2},{"startOffset":3314,"endOffset":3377,"count":14},{"startOffset":3378,"endOffset":3540,"count":13},{"startOffset":3540,"endOffset":3604,"count":2},{"startOffset":3604,"endOffset":3932,"count":4},{"startOffset":3663,"endOffset":3861,"count":2},{"startOffset":3861,"endOffset":3932,"count":0}],"isBlockCoverage":true},{"functionName":"autenticaUsuario","ranges":[{"startOffset":3950,"endOffset":4521,"count":3},{"startOffset":4087,"endOffset":4249,"count":1},{"startOffset":4249,"endOffset":4516,"count":2},{"startOffset":4319,"endOffset":4453,"count":1},{"startOffset":4454,"endOffset":4459,"count":0}],"isBlockCoverage":true},{"functionName":"atualizaUsuario","ranges":[{"startOffset":4534,"endOffset":6243,"count":6},{"startOffset":4735,"endOffset":4860,"count":1},{"startOffset":4860,"endOffset":4897,"count":5},{"startOffset":4897,"endOffset":5004,"count":1},{"startOffset":5004,"endOffset":5033,"count":4},{"startOffset":5033,"endOffset":5213,"count":1},{"startOffset":5213,"endOffset":5277,"count":4},{"startOffset":5277,"endOffset":5325,"count":1},{"startOffset":5325,"endOffset":6238,"count":5},{"startOffset":5386,"endOffset":5993,"count":3},{"startOffset":5443,"endOffset":5460,"count":2},{"startOffset":5462,"endOffset":5614,"count":1},{"startOffset":5614,"endOffset":5984,"count":2},{"startOffset":5631,"endOffset":5646,"count":1},{"startOffset":5648,"endOffset":5984,"count":1},{"startOffset":5993,"endOffset":6104,"count":2},{"startOffset":6048,"endOffset":6104,"count":1},{"startOffset":6104,"endOffset":6180,"count":1},{"startOffset":6181,"endOffset":6186,"count":0}],"isBlockCoverage":true},{"functionName":"deletaUsuario","ranges":[{"startOffset":6256,"endOffset":7016,"count":3},{"startOffset":6424,"endOffset":6538,"count":1},{"startOffset":6538,"endOffset":6575,"count":2},{"startOffset":6575,"endOffset":6751,"count":1},{"startOffset":6751,"endOffset":7011,"count":2},{"startOffset":6823,"endOffset":6953,"count":1},{"startOffset":6954,"endOffset":6959,"count":0}],"isBlockCoverage":true}]},{"scriptId":"628","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/services/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":true}]},{"scriptId":"629","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/services/UsuarioServices.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":833,"count":1}],"isBlockCoverage":true},{"functionName":"UsuarioServices","ranges":[{"startOffset":170,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"buscaUsuario","ranges":[{"startOffset":219,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"buscaUsuarioLogin","ranges":[{"startOffset":475,"endOffset":791,"count":17},{"startOffset":660,"endOffset":675,"count":15},{"startOffset":675,"endOffset":786,"count":2}],"isBlockCoverage":true}]},{"scriptId":"630","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":234,"count":1}],"isBlockCoverage":true}]},{"scriptId":"631","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/errors/NotFoundError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true}]},{"scriptId":"632","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/errors/UnauthorizedError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":81,"count":1}],"isBlockCoverage":true}]},{"scriptId":"633","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/errors/ConflictError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":true}]},{"scriptId":"634","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/models/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1177,"count":1},{"startOffset":236,"endOffset":252,"count":0},{"startOffset":384,"endOffset":464,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":629,"endOffset":803,"count":6},{"startOffset":714,"endOffset":748,"count":5},{"startOffset":749,"endOffset":790,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":817,"endOffset":971,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1001,"endOffset":1093,"count":5}],"isBlockCoverage":true}]},{"scriptId":"635","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89,"count":1}],"isBlockCoverage":true}]},{"scriptId":"636","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/sequelize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23301,"count":1},{"startOffset":22753,"endOffset":22801,"count":47},{"startOffset":23112,"endOffset":23160,"count":29}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":502},{"startOffset":373,"endOffset":459,"count":14},{"startOffset":460,"endOffset":478,"count":488}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":113},{"startOffset":534,"endOffset":545,"count":22},{"startOffset":551,"endOffset":623,"count":502},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"Sequelize","ranges":[{"startOffset":2202,"endOffset":7989,"count":1},{"startOffset":2302,"endOffset":2333,"count":0},{"startOffset":2335,"endOffset":2452,"count":0},{"startOffset":2485,"endOffset":2516,"count":0},{"startOffset":2543,"endOffset":2574,"count":0},{"startOffset":2576,"endOffset":4133,"count":0},{"startOffset":4165,"endOffset":4170,"count":0},{"startOffset":5152,"endOffset":5238,"count":0},{"startOffset":5286,"endOffset":5334,"count":0},{"startOffset":5377,"endOffset":5414,"count":0},{"startOffset":5416,"endOffset":5582,"count":0},{"startOffset":5622,"endOffset":5707,"count":0},{"startOffset":5797,"endOffset":5821,"count":0},{"startOffset":5855,"endOffset":5879,"count":0},{"startOffset":5913,"endOffset":5937,"count":0},{"startOffset":5938,"endOffset":5945,"count":0},{"startOffset":6498,"endOffset":6577,"count":0},{"startOffset":6584,"endOffset":6659,"count":0},{"startOffset":6748,"endOffset":6825,"count":0},{"startOffset":6832,"endOffset":6913,"count":0},{"startOffset":6920,"endOffset":6997,"count":0},{"startOffset":7004,"endOffset":7075,"count":0},{"startOffset":7082,"endOffset":7165,"count":0},{"startOffset":7172,"endOffset":7336,"count":0},{"startOffset":7510,"endOffset":7643,"count":0},{"startOffset":7705,"endOffset":7756,"count":0}],"isBlockCoverage":true},{"functionName":"refreshTypes","ranges":[{"startOffset":7992,"endOffset":8069,"count":0}],"isBlockCoverage":false},{"functionName":"getDialect","ranges":[{"startOffset":8072,"endOffset":8123,"count":1}],"isBlockCoverage":true},{"functionName":"getDatabaseName","ranges":[{"startOffset":8126,"endOffset":8182,"count":0}],"isBlockCoverage":false},{"functionName":"getQueryInterface","ranges":[{"startOffset":8185,"endOffset":8242,"count":90}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":8245,"endOffset":8461,"count":0}],"isBlockCoverage":false},{"functionName":"model","ranges":[{"startOffset":8464,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"isDefined","ranges":[{"startOffset":8643,"endOffset":8750,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8709,"endOffset":8744,"count":10}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":8753,"endOffset":12378,"count":28},{"startOffset":8885,"endOffset":8902,"count":3},{"startOffset":8904,"endOffset":8963,"count":3},{"startOffset":8990,"endOffset":9007,"count":25},{"startOffset":9009,"endOffset":9042,"count":1},{"startOffset":9071,"endOffset":9150,"count":0},{"startOffset":9287,"endOffset":9300,"count":0},{"startOffset":9385,"endOffset":9410,"count":0},{"startOffset":9454,"endOffset":9625,"count":0},{"startOffset":9668,"endOffset":9699,"count":0},{"startOffset":9700,"endOffset":9749,"count":0},{"startOffset":9750,"endOffset":9789,"count":0},{"startOffset":9831,"endOffset":9907,"count":0},{"startOffset":9941,"endOffset":10483,"count":6},{"startOffset":9976,"endOffset":10191,"count":0},{"startOffset":10262,"endOffset":10369,"count":0},{"startOffset":10535,"endOffset":10550,"count":0},{"startOffset":10552,"endOffset":10647,"count":0},{"startOffset":10678,"endOffset":10758,"count":0},{"startOffset":10805,"endOffset":10924,"count":6}],"isBlockCoverage":true},{"functionName":"checkTransaction","ranges":[{"startOffset":10954,"endOffset":11346,"count":56},{"startOffset":10992,"endOffset":11023,"count":2},{"startOffset":11024,"endOffset":11056,"count":0},{"startOffset":11058,"endOffset":11340,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11461,"endOffset":12358,"count":28},{"startOffset":11516,"endOffset":11533,"count":27},{"startOffset":11535,"endOffset":11609,"count":0},{"startOffset":11688,"endOffset":11720,"count":1},{"startOffset":11721,"endOffset":11768,"count":27},{"startOffset":11812,"endOffset":11828,"count":0},{"startOffset":11830,"endOffset":11933,"count":0},{"startOffset":12269,"endOffset":12344,"count":27}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":12381,"endOffset":13061,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":13064,"endOffset":13137,"count":0}],"isBlockCoverage":false},{"functionName":"createSchema","ranges":[{"startOffset":13140,"endOffset":13254,"count":0}],"isBlockCoverage":false},{"functionName":"showAllSchemas","ranges":[{"startOffset":13257,"endOffset":13359,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":13362,"endOffset":13472,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllSchemas","ranges":[{"startOffset":13475,"endOffset":13577,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":13580,"endOffset":14635,"count":0}],"isBlockCoverage":false},{"functionName":"_syncModelsWithCyclicReferences","ranges":[{"startOffset":14638,"endOffset":15254,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":15257,"endOffset":16191,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":16194,"endOffset":17263,"count":0}],"isBlockCoverage":false},{"functionName":"authenticate","ranges":[{"startOffset":17266,"endOffset":17501,"count":0}],"isBlockCoverage":false},{"functionName":"databaseVersion","ranges":[{"startOffset":17504,"endOffset":17608,"count":1}],"isBlockCoverage":true},{"functionName":"random","ranges":[{"startOffset":17611,"endOffset":17766,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":17776,"endOffset":17832,"count":0}],"isBlockCoverage":false},{"functionName":"col","ranges":[{"startOffset":17842,"endOffset":17887,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":17897,"endOffset":17956,"count":0}],"isBlockCoverage":false},{"functionName":"literal","ranges":[{"startOffset":17966,"endOffset":18019,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":18029,"endOffset":18078,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":18088,"endOffset":18135,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":18145,"endOffset":18232,"count":0}],"isBlockCoverage":false},{"functionName":"where","ranges":[{"startOffset":18242,"endOffset":18331,"count":0}],"isBlockCoverage":false},{"functionName":"transaction","ranges":[{"startOffset":18334,"endOffset":19021,"count":0}],"isBlockCoverage":false},{"functionName":"useCLS","ranges":[{"startOffset":19031,"endOffset":19246,"count":0}],"isBlockCoverage":false},{"functionName":"_clsRun","ranges":[{"startOffset":19256,"endOffset":19409,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":19412,"endOffset":20089,"count":28},{"startOffset":19638,"endOffset":19688,"count":27},{"startOffset":19694,"endOffset":19737,"count":0},{"startOffset":19801,"endOffset":19887,"count":0},{"startOffset":19944,"endOffset":19978,"count":0},{"startOffset":19980,"endOffset":20047,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":20092,"endOffset":20148,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeDataType","ranges":[{"startOffset":20151,"endOffset":20679,"count":144},{"startOffset":20219,"endOffset":20231,"count":36},{"startOffset":20232,"endOffset":20238,"count":108},{"startOffset":20288,"endOffset":20293,"count":0},{"startOffset":20327,"endOffset":20384,"count":28},{"startOffset":20426,"endOffset":20658,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeAttribute","ranges":[{"startOffset":20682,"endOffset":21587,"count":26},{"startOffset":20751,"endOffset":20797,"count":0},{"startOffset":20829,"endOffset":20846,"count":0},{"startOffset":20981,"endOffset":21205,"count":0},{"startOffset":21256,"endOffset":21561,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":22063,"endOffset":22121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"637","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/pg-connection-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3011,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":193,"endOffset":2965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"638","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/retry-as-promised/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4313,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":173,"endOffset":315,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":355,"endOffset":796,"count":4},{"startOffset":423,"endOffset":584,"count":0},{"startOffset":627,"endOffset":639,"count":0},{"startOffset":679,"endOffset":691,"count":0},{"startOffset":735,"endOffset":793,"count":0}],"isBlockCoverage":true},{"functionName":"retryAsPromised","ranges":[{"startOffset":797,"endOffset":4232,"count":28},{"startOffset":884,"endOffset":981,"count":0},{"startOffset":1035,"endOffset":1058,"count":0},{"startOffset":1143,"endOffset":1166,"count":0},{"startOffset":1346,"endOffset":1368,"count":0},{"startOffset":1369,"endOffset":1373,"count":0},{"startOffset":1441,"endOffset":1467,"count":0},{"startOffset":1701,"endOffset":1733,"count":0},{"startOffset":1766,"endOffset":1885,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1909,"endOffset":4228,"count":28},{"startOffset":2039,"endOffset":2298,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2074,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2409,"endOffset":2574,"count":24},{"startOffset":2464,"endOffset":2486,"count":0},{"startOffset":2535,"endOffset":2564,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2595,"endOffset":4220,"count":4},{"startOffset":2653,"endOffset":2675,"count":0},{"startOffset":2724,"endOffset":2753,"count":0},{"startOffset":2831,"endOffset":2892,"count":0},{"startOffset":3057,"endOffset":3076,"count":0},{"startOffset":3296,"endOffset":4210,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3152,"endOffset":3228,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3862,"endOffset":4027,"count":0}],"isBlockCoverage":false}]},{"scriptId":"639","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/lodash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":544096,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":338,"endOffset":544082,"count":1},{"startOffset":17825,"endOffset":17832,"count":0},{"startOffset":17833,"endOffset":17858,"count":0},{"startOffset":17859,"endOffset":17866,"count":0},{"startOffset":17944,"endOffset":17955,"count":0},{"startOffset":17956,"endOffset":17984,"count":0},{"startOffset":543270,"endOffset":543302,"count":0},{"startOffset":543303,"endOffset":543316,"count":0},{"startOffset":543318,"endOffset":543789,"count":0},{"startOffset":544015,"endOffset":544080,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18578,"endOffset":18945,"count":1},{"startOffset":18781,"endOffset":18890,"count":0},{"startOffset":18891,"endOffset":18921,"count":0},{"startOffset":18929,"endOffset":18941,"count":0}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":19779,"endOffset":20109,"count":189},{"startOffset":19850,"endOffset":19884,"count":0},{"startOffset":19891,"endOffset":19934,"count":28},{"startOffset":19941,"endOffset":19993,"count":161},{"startOffset":20000,"endOffset":20061,"count":0},{"startOffset":20067,"endOffset":20108,"count":0}],"isBlockCoverage":true},{"functionName":"arrayAggregator","ranges":[{"startOffset":20506,"endOffset":20797,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEach","ranges":[{"startOffset":21093,"endOffset":21344,"count":279},{"startOffset":21182,"endOffset":21185,"count":0},{"startOffset":21232,"endOffset":21322,"count":1692},{"startOffset":21292,"endOffset":21316,"count":0}],"isBlockCoverage":true},{"functionName":"arrayEachRight","ranges":[{"startOffset":21645,"endOffset":21875,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEvery","ranges":[{"startOffset":22232,"endOffset":22483,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFilter","ranges":[{"startOffset":22794,"endOffset":23129,"count":264},{"startOffset":22886,"endOffset":22889,"count":0},{"startOffset":22979,"endOffset":23106,"count":363},{"startOffset":23055,"endOffset":23100,"count":361}],"isBlockCoverage":true},{"functionName":"arrayIncludes","ranges":[{"startOffset":23452,"endOffset":23603,"count":18},{"startOffset":23522,"endOffset":23525,"count":0},{"startOffset":23562,"endOffset":23598,"count":14}],"isBlockCoverage":true},{"functionName":"arrayIncludesWith","ranges":[{"startOffset":23961,"endOffset":24220,"count":0}],"isBlockCoverage":false},{"functionName":"arrayMap","ranges":[{"startOffset":24525,"endOffset":24785,"count":84},{"startOffset":24613,"endOffset":24616,"count":0},{"startOffset":24695,"endOffset":24762,"count":261}],"isBlockCoverage":true},{"functionName":"arrayPush","ranges":[{"startOffset":25005,"endOffset":25228,"count":392},{"startOffset":25154,"endOffset":25206,"count":316}],"isBlockCoverage":true},{"functionName":"arrayReduce","ranges":[{"startOffset":25687,"endOffset":26031,"count":19},{"startOffset":25802,"endOffset":25805,"count":0},{"startOffset":25841,"endOffset":25850,"count":0},{"startOffset":25852,"endOffset":25895,"count":0},{"startOffset":25925,"endOffset":26003,"count":57}],"isBlockCoverage":true},{"functionName":"arrayReduceRight","ranges":[{"startOffset":26494,"endOffset":26817,"count":0}],"isBlockCoverage":false},{"functionName":"arraySome","ranges":[{"startOffset":27174,"endOffset":27423,"count":0}],"isBlockCoverage":false},{"functionName":"asciiToArray","ranges":[{"startOffset":27816,"endOffset":27880,"count":0}],"isBlockCoverage":false},{"functionName":"asciiWords","ranges":[{"startOffset":28070,"endOffset":28147,"count":0}],"isBlockCoverage":false},{"functionName":"baseFindKey","ranges":[{"startOffset":28645,"endOffset":28906,"count":0}],"isBlockCoverage":false},{"functionName":"baseFindIndex","ranges":[{"startOffset":29375,"endOffset":29682,"count":0}],"isBlockCoverage":false},{"functionName":"baseIndexOf","ranges":[{"startOffset":30022,"endOffset":30199,"count":19},{"startOffset":30150,"endOffset":30194,"count":0}],"isBlockCoverage":true},{"functionName":"baseIndexOfWith","ranges":[{"startOffset":30608,"endOffset":30865,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNaN","ranges":[{"startOffset":31094,"endOffset":31153,"count":0}],"isBlockCoverage":false},{"functionName":"baseMean","ranges":[{"startOffset":31452,"endOffset":31606,"count":0}],"isBlockCoverage":false},{"functionName":"baseProperty","ranges":[{"startOffset":31835,"endOffset":31959,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31875,"endOffset":31954,"count":64},{"startOffset":31922,"endOffset":31933,"count":0}],"isBlockCoverage":true},{"functionName":"basePropertyOf","ranges":[{"startOffset":32182,"endOffset":32308,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32227,"endOffset":32303,"count":0}],"isBlockCoverage":false},{"functionName":"baseReduce","ranges":[{"startOffset":32929,"endOffset":33230,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33032,"endOffset":33200,"count":118},{"startOffset":33107,"endOffset":33135,"count":0}],"isBlockCoverage":true},{"functionName":"baseSortBy","ranges":[{"startOffset":33590,"endOffset":33780,"count":0}],"isBlockCoverage":false},{"functionName":"baseSum","ranges":[{"startOffset":34076,"endOffset":34396,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":34731,"endOffset":34906,"count":0}],"isBlockCoverage":false},{"functionName":"baseToPairs","ranges":[{"startOffset":35276,"endOffset":35401,"count":0}],"isBlockCoverage":false},{"functionName":"baseTrim","ranges":[{"startOffset":35577,"endOffset":35720,"count":0}],"isBlockCoverage":false},{"functionName":"baseUnary","ranges":[{"startOffset":35956,"endOffset":36048,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35994,"endOffset":36043,"count":549}],"isBlockCoverage":true},{"functionName":"baseValues","ranges":[{"startOffset":36426,"endOffset":36543,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36490,"endOffset":36537,"count":38}],"isBlockCoverage":true},{"functionName":"cacheHas","ranges":[{"startOffset":36813,"endOffset":36875,"count":0}],"isBlockCoverage":false},{"functionName":"charsStartIndex","ranges":[{"startOffset":37246,"endOffset":37461,"count":0}],"isBlockCoverage":false},{"functionName":"charsEndIndex","ranges":[{"startOffset":37828,"endOffset":38011,"count":0}],"isBlockCoverage":false},{"functionName":"countHolders","ranges":[{"startOffset":38269,"endOffset":38485,"count":0}],"isBlockCoverage":false},{"functionName":"escapeStringChar","ranges":[{"startOffset":39290,"endOffset":39364,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":39595,"endOffset":39684,"count":7},{"startOffset":39654,"endOffset":39665,"count":0}],"isBlockCoverage":true},{"functionName":"hasUnicode","ranges":[{"startOffset":39895,"endOffset":39966,"count":38}],"isBlockCoverage":true},{"functionName":"hasUnicodeWord","ranges":[{"startOffset":40194,"endOffset":40273,"count":0}],"isBlockCoverage":false},{"functionName":"iteratorToArray","ranges":[{"startOffset":40452,"endOffset":40629,"count":0}],"isBlockCoverage":false},{"functionName":"mapToArray","ranges":[{"startOffset":40804,"endOffset":40993,"count":0}],"isBlockCoverage":false},{"functionName":"overArg","ranges":[{"startOffset":41267,"endOffset":41375,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41314,"endOffset":41370,"count":1129}],"isBlockCoverage":true},{"functionName":"replaceHolders","ranges":[{"startOffset":41706,"endOffset":42078,"count":0}],"isBlockCoverage":false},{"functionName":"setToArray","ranges":[{"startOffset":42247,"endOffset":42424,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42345,"endOffset":42399,"count":2}],"isBlockCoverage":true},{"functionName":"setToPairs","ranges":[{"startOffset":42603,"endOffset":42789,"count":0}],"isBlockCoverage":false},{"functionName":"strictIndexOf","ranges":[{"startOffset":43163,"endOffset":43397,"count":19},{"startOffset":43305,"endOffset":43378,"count":75},{"startOffset":43341,"endOffset":43372,"count":14},{"startOffset":43378,"endOffset":43396,"count":5}],"isBlockCoverage":true},{"functionName":"strictLastIndexOf","ranges":[{"startOffset":43775,"endOffset":43975,"count":0}],"isBlockCoverage":false},{"functionName":"stringSize","ranges":[{"startOffset":44154,"endOffset":44272,"count":0}],"isBlockCoverage":false},{"functionName":"stringToArray","ranges":[{"startOffset":44445,"endOffset":44572,"count":0}],"isBlockCoverage":false},{"functionName":"trimmedEndIndex","ranges":[{"startOffset":44847,"endOffset":45001,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeSize","ranges":[{"startOffset":45444,"endOffset":45598,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeToArray","ranges":[{"startOffset":45781,"endOffset":45860,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeWords","ranges":[{"startOffset":46051,"endOffset":46132,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":46990,"endOffset":543025,"count":1},{"startOffset":47060,"endOffset":47124,"count":0},{"startOffset":49023,"endOffset":49034,"count":0},{"startOffset":49160,"endOffset":49171,"count":0},{"startOffset":49437,"endOffset":49448,"count":0},{"startOffset":49497,"endOffset":49508,"count":0},{"startOffset":49563,"endOffset":49574,"count":0},{"startOffset":49861,"endOffset":49884,"count":0},{"startOffset":49938,"endOffset":49949,"count":0},{"startOffset":50014,"endOffset":50035,"count":0},{"startOffset":50304,"endOffset":50315,"count":0},{"startOffset":51565,"endOffset":51576,"count":0},{"startOffset":51636,"endOffset":51647,"count":0},{"startOffset":51709,"endOffset":51720,"count":0},{"startOffset":132120,"endOffset":132130,"count":0},{"startOffset":132534,"endOffset":132544,"count":0},{"startOffset":181139,"endOffset":181145,"count":0},{"startOffset":197016,"endOffset":197022,"count":0},{"startOffset":201026,"endOffset":201037,"count":0},{"startOffset":201557,"endOffset":201568,"count":0},{"startOffset":202355,"endOffset":202934,"count":0},{"startOffset":212256,"endOffset":212268,"count":0},{"startOffset":369389,"endOffset":369543,"count":0},{"startOffset":370622,"endOffset":370641,"count":0},{"startOffset":373203,"endOffset":373215,"count":0},{"startOffset":373688,"endOffset":373700,"count":0},{"startOffset":384049,"endOffset":384060,"count":0},{"startOffset":391938,"endOffset":391952,"count":0},{"startOffset":393298,"endOffset":393309,"count":0},{"startOffset":394942,"endOffset":394960,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48099,"endOffset":48263,"count":1},{"startOffset":48153,"endOffset":48171,"count":0},{"startOffset":48172,"endOffset":48199,"count":0},{"startOffset":48225,"endOffset":48251,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49603,"endOffset":49757,"count":1},{"startOffset":49739,"endOffset":49751,"count":0}],"isBlockCoverage":true},{"functionName":"lodash","ranges":[{"startOffset":58305,"endOffset":58654,"count":76},{"startOffset":58461,"endOffset":58496,"count":0},{"startOffset":58552,"endOffset":58601,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":58939,"endOffset":59291,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":58958,"endOffset":58978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58992,"endOffset":59284,"count":202},{"startOffset":59040,"endOffset":59072,"count":0},{"startOffset":59148,"endOffset":59283,"count":0}],"isBlockCoverage":true},{"functionName":"baseLodash","ranges":[{"startOffset":59414,"endOffset":59476,"count":0}],"isBlockCoverage":false},{"functionName":"LodashWrapper","ranges":[{"startOffset":59706,"endOffset":59910,"count":76}],"isBlockCoverage":true},{"functionName":"LazyWrapper","ranges":[{"startOffset":61864,"endOffset":62120,"count":0}],"isBlockCoverage":false},{"functionName":"lazyClone","ranges":[{"startOffset":62330,"endOffset":62734,"count":0}],"isBlockCoverage":false},{"functionName":"lazyReverse","ranges":[{"startOffset":62950,"endOffset":63225,"count":0}],"isBlockCoverage":false},{"functionName":"lazyValue","ranges":[{"startOffset":63426,"endOffset":64844,"count":0}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":65259,"endOffset":65504,"count":2},{"startOffset":65345,"endOffset":65361,"count":0},{"startOffset":65415,"endOffset":65498,"count":0}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":65642,"endOffset":65753,"count":2},{"startOffset":65721,"endOffset":65725,"count":0}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":66078,"endOffset":66229,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":66452,"endOffset":66711,"count":59},{"startOffset":66607,"endOffset":66618,"count":0},{"startOffset":66636,"endOffset":66692,"count":0},{"startOffset":66693,"endOffset":66704,"count":0}],"isBlockCoverage":true},{"functionName":"hashHas","ranges":[{"startOffset":66986,"endOffset":67135,"count":67},{"startOffset":67096,"endOffset":67128,"count":0}],"isBlockCoverage":true},{"functionName":"hashSet","ranges":[{"startOffset":67408,"endOffset":67619,"count":4},{"startOffset":67504,"endOffset":67507,"count":0},{"startOffset":67569,"endOffset":67585,"count":0}],"isBlockCoverage":true},{"functionName":"ListCache","ranges":[{"startOffset":68079,"endOffset":68329,"count":163},{"startOffset":68170,"endOffset":68186,"count":0},{"startOffset":68240,"endOffset":68323,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheClear","ranges":[{"startOffset":68478,"endOffset":68558,"count":163}],"isBlockCoverage":true},{"functionName":"listCacheDelete","ranges":[{"startOffset":68846,"endOffset":69201,"count":11},{"startOffset":68975,"endOffset":69006,"count":0},{"startOffset":69105,"endOffset":69157,"count":0}],"isBlockCoverage":true},{"functionName":"listCacheGet","ranges":[{"startOffset":69435,"endOffset":69598,"count":288},{"startOffset":69563,"endOffset":69574,"count":283},{"startOffset":69575,"endOffset":69591,"count":5}],"isBlockCoverage":true},{"functionName":"listCacheHas","ranges":[{"startOffset":69884,"endOffset":69970,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":70260,"endOffset":70528,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":71066,"endOffset":71315,"count":1},{"startOffset":71156,"endOffset":71172,"count":0},{"startOffset":71226,"endOffset":71309,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":71456,"endOffset":71634,"count":1},{"startOffset":71578,"endOffset":71590,"count":0}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":71914,"endOffset":72063,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":72289,"endOffset":72367,"count":59}],"isBlockCoverage":true},{"functionName":"mapCacheHas","ranges":[{"startOffset":72645,"endOffset":72723,"count":63}],"isBlockCoverage":true},{"functionName":"mapCacheSet","ranges":[{"startOffset":73004,"endOffset":73206,"count":4},{"startOffset":73173,"endOffset":73176,"count":0}],"isBlockCoverage":true},{"functionName":"SetCache","ranges":[{"startOffset":73731,"endOffset":73952,"count":0}],"isBlockCoverage":false},{"functionName":"setCacheAdd","ranges":[{"startOffset":74196,"endOffset":74298,"count":0}],"isBlockCoverage":false},{"functionName":"setCacheHas","ranges":[{"startOffset":74558,"endOffset":74632,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":75048,"endOffset":75165,"count":163}],"isBlockCoverage":true},{"functionName":"stackClear","ranges":[{"startOffset":75305,"endOffset":75392,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":75671,"endOffset":75827,"count":11}],"isBlockCoverage":true},{"functionName":"stackGet","ranges":[{"startOffset":76052,"endOffset":76119,"count":288}],"isBlockCoverage":true},{"functionName":"stackHas","ranges":[{"startOffset":76396,"endOffset":76463,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":76745,"endOffset":77189,"count":279},{"startOffset":77047,"endOffset":77188,"count":0}],"isBlockCoverage":true},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":77808,"endOffset":78951,"count":0}],"isBlockCoverage":false},{"functionName":"arraySample","ranges":[{"startOffset":79148,"endOffset":79284,"count":0}],"isBlockCoverage":false},{"functionName":"arraySampleSize","ranges":[{"startOffset":79549,"endOffset":79666,"count":0}],"isBlockCoverage":false},{"functionName":"arrayShuffle","ranges":[{"startOffset":79873,"endOffset":79953,"count":0}],"isBlockCoverage":false},{"functionName":"assignMergeValue","ranges":[{"startOffset":80257,"endOffset":80480,"count":59},{"startOffset":80364,"endOffset":80418,"count":21},{"startOffset":80398,"endOffset":80417,"count":0},{"startOffset":80420,"endOffset":80474,"count":38}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":80895,"endOffset":81157,"count":1658},{"startOffset":81017,"endOffset":81039,"count":0},{"startOffset":81041,"endOffset":81095,"count":0}],"isBlockCoverage":true},{"functionName":"assocIndexOf","ranges":[{"startOffset":81454,"endOffset":81654,"count":299},{"startOffset":81546,"endOffset":81631,"count":169},{"startOffset":81587,"endOffset":81623,"count":16},{"startOffset":81631,"endOffset":81653,"count":283}],"isBlockCoverage":true},{"functionName":"baseAggregator","ranges":[{"startOffset":82158,"endOffset":82395,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssign","ranges":[{"startOffset":82702,"endOffset":82810,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssignIn","ranges":[{"startOffset":83119,"endOffset":83231,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssignValue","ranges":[{"startOffset":83535,"endOffset":83854,"count":1722},{"startOffset":83611,"endOffset":83628,"count":0},{"startOffset":83630,"endOffset":83804,"count":0}],"isBlockCoverage":true},{"functionName":"baseAt","ranges":[{"startOffset":84148,"endOffset":84441,"count":0}],"isBlockCoverage":false},{"functionName":"baseClamp","ranges":[{"startOffset":84760,"endOffset":85064,"count":0}],"isBlockCoverage":false},{"functionName":"baseClone","ranges":[{"startOffset":85711,"endOffset":88167,"count":1506},{"startOffset":85962,"endOffset":86056,"count":751},{"startOffset":85988,"endOffset":86027,"count":606},{"startOffset":86028,"endOffset":86047,"count":145},{"startOffset":86089,"endOffset":86121,"count":68},{"startOffset":86121,"endOffset":86150,"count":1438},{"startOffset":86150,"endOffset":86181,"count":1061},{"startOffset":86181,"endOffset":86233,"count":377},{"startOffset":86233,"endOffset":86358,"count":75},{"startOffset":86296,"endOffset":86350,"count":0},{"startOffset":86358,"endOffset":87052,"count":302},{"startOffset":86435,"endOffset":86451,"count":198},{"startOffset":86483,"endOffset":86539,"count":0},{"startOffset":86569,"endOffset":86586,"count":106},{"startOffset":86587,"endOffset":86609,"count":106},{"startOffset":86598,"endOffset":86608,"count":104},{"startOffset":86611,"endOffset":86883,"count":196},{"startOffset":86651,"endOffset":86655,"count":0},{"startOffset":86705,"endOffset":86873,"count":0},{"startOffset":86883,"endOffset":87044,"count":106},{"startOffset":86926,"endOffset":86979,"count":104},{"startOffset":86962,"endOffset":86966,"count":0},{"startOffset":86979,"endOffset":87044,"count":2},{"startOffset":87052,"endOffset":87140,"count":273},{"startOffset":87140,"endOffset":87162,"count":158},{"startOffset":87221,"endOffset":87254,"count":5},{"startOffset":87254,"endOffset":87312,"count":268},{"startOffset":87312,"endOffset":87464,"count":0},{"startOffset":87464,"endOffset":87645,"count":268},{"startOffset":87488,"endOffset":87645,"count":0},{"startOffset":87645,"endOffset":87721,"count":268},{"startOffset":87693,"endOffset":87707,"count":0},{"startOffset":87730,"endOffset":87756,"count":0},{"startOffset":87783,"endOffset":87794,"count":72},{"startOffset":87795,"endOffset":87812,"count":196},{"startOffset":87836,"endOffset":87844,"count":72}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87336,"endOffset":87454,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":87512,"endOffset":87635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":87846,"endOffset":88138,"count":1348},{"startOffset":87891,"endOffset":87961,"count":475}],"isBlockCoverage":true},{"functionName":"baseConforms","ranges":[{"startOffset":88426,"endOffset":88590,"count":0}],"isBlockCoverage":false},{"functionName":"baseConformsTo","ranges":[{"startOffset":88925,"endOffset":89371,"count":0}],"isBlockCoverage":false},{"functionName":"baseDelay","ranges":[{"startOffset":89788,"endOffset":90001,"count":0}],"isBlockCoverage":false},{"functionName":"baseDifference","ranges":[{"startOffset":90497,"endOffset":91742,"count":14},{"startOffset":90761,"endOffset":90793,"count":3},{"startOffset":90793,"endOffset":90814,"count":11},{"startOffset":90814,"endOffset":90879,"count":0},{"startOffset":90879,"endOffset":90902,"count":11},{"startOffset":90902,"endOffset":90975,"count":0},{"startOffset":90975,"endOffset":91129,"count":11},{"startOffset":91026,"endOffset":91129,"count":0},{"startOffset":91129,"endOffset":91174,"count":11},{"startOffset":91174,"endOffset":91715,"count":168},{"startOffset":91258,"endOffset":91275,"count":0},{"startOffset":91330,"endOffset":91333,"count":0},{"startOffset":91458,"endOffset":91567,"count":1101},{"startOffset":91510,"endOffset":91555,"count":117},{"startOffset":91567,"endOffset":91607,"count":51},{"startOffset":91607,"endOffset":91707,"count":0},{"startOffset":91715,"endOffset":91741,"count":11}],"isBlockCoverage":true},{"functionName":"baseEvery","ranges":[{"startOffset":92878,"endOffset":93126,"count":0}],"isBlockCoverage":false},{"functionName":"baseExtremum","ranges":[{"startOffset":93555,"endOffset":94057,"count":0}],"isBlockCoverage":false},{"functionName":"baseFill","ranges":[{"startOffset":94434,"endOffset":94898,"count":0}],"isBlockCoverage":false},{"functionName":"baseFilter","ranges":[{"startOffset":95228,"endOffset":95487,"count":0}],"isBlockCoverage":false},{"functionName":"baseFlatten","ranges":[{"startOffset":96014,"endOffset":96691,"count":48},{"startOffset":96152,"endOffset":96182,"count":33},{"startOffset":96247,"endOffset":96664,"count":52},{"startOffset":96326,"endOffset":96583,"count":35},{"startOffset":96353,"endOffset":96516,"count":0},{"startOffset":96583,"endOffset":96656,"count":17}],"isBlockCoverage":true},{"functionName":"baseForOwn","ranges":[{"startOffset":97998,"endOffset":98099,"count":218}],"isBlockCoverage":true},{"functionName":"baseForOwnRight","ranges":[{"startOffset":98406,"endOffset":98517,"count":0}],"isBlockCoverage":false},{"functionName":"baseFunctions","ranges":[{"startOffset":98862,"endOffset":99005,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98934,"endOffset":98997,"count":325}],"isBlockCoverage":true},{"functionName":"baseGet","ranges":[{"startOffset":99294,"endOffset":99590,"count":276},{"startOffset":99447,"endOffset":99464,"count":487},{"startOffset":99466,"endOffset":99522,"count":290},{"startOffset":99563,"endOffset":99571,"count":209},{"startOffset":99572,"endOffset":99583,"count":67}],"isBlockCoverage":true},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":100099,"endOffset":100278,"count":218},{"startOffset":100222,"endOffset":100230,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":100504,"endOffset":100759,"count":1237},{"startOffset":100558,"endOffset":100628,"count":0},{"startOffset":100702,"endOffset":100720,"count":8},{"startOffset":100729,"endOffset":100752,"count":1229}],"isBlockCoverage":true},{"functionName":"baseGt","ranges":[{"startOffset":101074,"endOffset":101139,"count":0}],"isBlockCoverage":false},{"functionName":"baseHas","ranges":[{"startOffset":101434,"endOffset":101536,"count":0}],"isBlockCoverage":false},{"functionName":"baseHasIn","ranges":[{"startOffset":101833,"endOffset":101926,"count":79}],"isBlockCoverage":true},{"functionName":"baseInRange","ranges":[{"startOffset":102286,"endOffset":102414,"count":0}],"isBlockCoverage":false},{"functionName":"baseIntersection","ranges":[{"startOffset":102876,"endOffset":104492,"count":24},{"startOffset":102966,"endOffset":102985,"count":0},{"startOffset":103227,"endOffset":103594,"count":48},{"startOffset":103288,"endOffset":103299,"count":24},{"startOffset":103301,"endOffset":103368,"count":0},{"startOffset":103495,"endOffset":103517,"count":0},{"startOffset":103530,"endOffset":103563,"count":0},{"startOffset":103715,"endOffset":103743,"count":9},{"startOffset":103745,"endOffset":104465,"count":9},{"startOffset":103813,"endOffset":103830,"count":0},{"startOffset":103893,"endOffset":103896,"count":0},{"startOffset":103931,"endOffset":103957,"count":0},{"startOffset":104177,"endOffset":104204,"count":0},{"startOffset":104293,"endOffset":104338,"count":0},{"startOffset":104371,"endOffset":104417,"count":0}],"isBlockCoverage":true},{"functionName":"baseInverter","ranges":[{"startOffset":105002,"endOffset":105221,"count":0}],"isBlockCoverage":false},{"functionName":"baseInvoke","ranges":[{"startOffset":105616,"endOffset":105874,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsArguments","ranges":[{"startOffset":106092,"endOffset":106197,"count":31},{"startOffset":106159,"endOffset":106190,"count":10}],"isBlockCoverage":true},{"functionName":"baseIsArrayBuffer","ranges":[{"startOffset":106455,"endOffset":106569,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsDate","ranges":[{"startOffset":106818,"endOffset":106918,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsEqual","ranges":[{"startOffset":107533,"endOffset":107899,"count":52},{"startOffset":107625,"endOffset":107655,"count":0},{"startOffset":107680,"endOffset":107696,"count":51},{"startOffset":107697,"endOffset":107746,"count":0},{"startOffset":107781,"endOffset":107799,"count":0},{"startOffset":107808,"endOffset":107898,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsEqualDeep","ranges":[{"startOffset":108666,"endOffset":110348,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsMap","ranges":[{"startOffset":110588,"endOffset":110682,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsMatch","ranges":[{"startOffset":111181,"endOffset":112424,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsNative","ranges":[{"startOffset":112681,"endOffset":112907,"count":7},{"startOffset":112759,"endOffset":112790,"count":0},{"startOffset":112842,"endOffset":112856,"count":0}],"isBlockCoverage":true},{"functionName":"baseIsRegExp","ranges":[{"startOffset":113153,"endOffset":113257,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsSet","ranges":[{"startOffset":113497,"endOffset":113591,"count":0}],"isBlockCoverage":false},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":113846,"endOffset":113993,"count":0}],"isBlockCoverage":false},{"functionName":"baseIteratee","ranges":[{"startOffset":114209,"endOffset":114730,"count":352},{"startOffset":114443,"endOffset":114474,"count":328},{"startOffset":114474,"endOffset":114500,"count":24},{"startOffset":114500,"endOffset":114534,"count":0},{"startOffset":114534,"endOffset":114571,"count":24},{"startOffset":114571,"endOffset":114694,"count":0},{"startOffset":114694,"endOffset":114729,"count":24}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":114974,"endOffset":115286,"count":480},{"startOffset":115034,"endOffset":115078,"count":478},{"startOffset":115078,"endOffset":115140,"count":2},{"startOffset":115140,"endOffset":115259,"count":618},{"startOffset":115187,"endOffset":115210,"count":40},{"startOffset":115212,"endOffset":115251,"count":38},{"startOffset":115259,"endOffset":115285,"count":2}],"isBlockCoverage":true},{"functionName":"baseKeysIn","ranges":[{"startOffset":115532,"endOffset":115896,"count":180},{"startOffset":115591,"endOffset":115637,"count":0},{"startOffset":115733,"endOffset":115869,"count":810},{"startOffset":115770,"endOffset":115819,"count":0}],"isBlockCoverage":true},{"functionName":"baseLt","ranges":[{"startOffset":116208,"endOffset":116273,"count":0}],"isBlockCoverage":false},{"functionName":"baseMap","ranges":[{"startOffset":116597,"endOffset":116895,"count":6},{"startOffset":116703,"endOffset":116729,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116764,"endOffset":116866,"count":0}],"isBlockCoverage":false},{"functionName":"baseMatches","ranges":[{"startOffset":117144,"endOffset":117477,"count":0}],"isBlockCoverage":false},{"functionName":"baseMatchesProperty","ranges":[{"startOffset":117774,"endOffset":118226,"count":0}],"isBlockCoverage":false},{"functionName":"baseMerge","ranges":[{"startOffset":118691,"endOffset":119366,"count":16},{"startOffset":118786,"endOffset":118811,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":118834,"endOffset":119350,"count":59},{"startOffset":118874,"endOffset":118896,"count":5},{"startOffset":118930,"endOffset":119027,"count":15},{"startOffset":119027,"endOffset":119342,"count":44},{"startOffset":119091,"endOffset":119170,"count":24},{"startOffset":119183,"endOffset":119194,"count":20},{"startOffset":119235,"endOffset":119281,"count":32}],"isBlockCoverage":true},{"functionName":"baseMergeDeep","ranges":[{"startOffset":120067,"endOffset":122010,"count":15},{"startOffset":120300,"endOffset":120373,"count":0},{"startOffset":120414,"endOffset":120481,"count":12},{"startOffset":120490,"endOffset":120501,"count":3},{"startOffset":120570,"endOffset":121701,"count":13},{"startOffset":120799,"endOffset":121303,"count":0},{"startOffset":121345,"endOffset":121369,"count":2},{"startOffset":121371,"endOffset":121640,"count":11},{"startOffset":121441,"endOffset":121502,"count":0},{"startOffset":121542,"endOffset":121565,"count":7},{"startOffset":121567,"endOffset":121630,"count":4},{"startOffset":121640,"endOffset":121693,"count":2},{"startOffset":121722,"endOffset":121957,"count":11}],"isBlockCoverage":true},{"functionName":"baseNth","ranges":[{"startOffset":122294,"endOffset":122493,"count":0}],"isBlockCoverage":false},{"functionName":"baseOrderBy","ranges":[{"startOffset":122877,"endOffset":123786,"count":0}],"isBlockCoverage":false},{"functionName":"basePick","ranges":[{"startOffset":124091,"endOffset":124240,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":124165,"endOffset":124232,"count":79}],"isBlockCoverage":true},{"functionName":"basePickBy","ranges":[{"startOffset":124599,"endOffset":124976,"count":30},{"startOffset":124757,"endOffset":124949,"count":206},{"startOffset":124872,"endOffset":124941,"count":200}],"isBlockCoverage":true},{"functionName":"basePropertyDeep","ranges":[{"startOffset":125224,"endOffset":125342,"count":0}],"isBlockCoverage":false},{"functionName":"basePullAll","ranges":[{"startOffset":125768,"endOffset":126545,"count":0}],"isBlockCoverage":false},{"functionName":"basePullAt","ranges":[{"startOffset":126874,"endOffset":127330,"count":0}],"isBlockCoverage":false},{"functionName":"baseRandom","ranges":[{"startOffset":127625,"endOffset":127738,"count":0}],"isBlockCoverage":false},{"functionName":"baseRange","ranges":[{"startOffset":128183,"endOffset":128500,"count":0}],"isBlockCoverage":false},{"functionName":"baseRepeat","ranges":[{"startOffset":128795,"endOffset":129307,"count":0}],"isBlockCoverage":false},{"functionName":"baseRest","ranges":[{"startOffset":129652,"endOffset":129760,"count":38}],"isBlockCoverage":true},{"functionName":"baseSample","ranges":[{"startOffset":129965,"endOffset":130050,"count":0}],"isBlockCoverage":false},{"functionName":"baseSampleSize","ranges":[{"startOffset":130344,"endOffset":130492,"count":0}],"isBlockCoverage":false},{"functionName":"baseSet","ranges":[{"startOffset":130863,"endOffset":131814,"count":200},{"startOffset":130944,"endOffset":130976,"count":0},{"startOffset":131159,"endOffset":131178,"count":396},{"startOffset":131332,"endOffset":131368,"count":0},{"startOffset":131402,"endOffset":131705,"count":0}],"isBlockCoverage":true},{"functionName":"baseSetData","ranges":[{"startOffset":132133,"endOffset":132211,"count":0}],"isBlockCoverage":false},{"functionName":"baseSetToString","ranges":[{"startOffset":132547,"endOffset":132754,"count":50}],"isBlockCoverage":true},{"functionName":"baseShuffle","ranges":[{"startOffset":132970,"endOffset":133056,"count":0}],"isBlockCoverage":false},{"functionName":"baseSlice","ranges":[{"startOffset":133392,"endOffset":133892,"count":0}],"isBlockCoverage":false},{"functionName":"baseSome","ranges":[{"startOffset":134270,"endOffset":134512,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":134359,"endOffset":134481,"count":45}],"isBlockCoverage":true},{"functionName":"baseSortedIndex","ranges":[{"startOffset":135085,"endOffset":135733,"count":0}],"isBlockCoverage":false},{"functionName":"baseSortedIndexBy","ranges":[{"startOffset":136375,"endOffset":137827,"count":0}],"isBlockCoverage":false},{"functionName":"baseSortedUniq","ranges":[{"startOffset":138172,"endOffset":138621,"count":0}],"isBlockCoverage":false},{"functionName":"baseToNumber","ranges":[{"startOffset":138900,"endOffset":139082,"count":0}],"isBlockCoverage":false},{"functionName":"baseToString","ranges":[{"startOffset":139327,"endOffset":139882,"count":101},{"startOffset":139506,"endOffset":139858,"count":0},{"startOffset":139860,"endOffset":139866,"count":0},{"startOffset":139867,"endOffset":139875,"count":0}],"isBlockCoverage":true},{"functionName":"baseUniq","ranges":[{"startOffset":140269,"endOffset":141637,"count":4},{"startOffset":140507,"endOffset":140580,"count":0},{"startOffset":140624,"endOffset":140834,"count":0},{"startOffset":140872,"endOffset":140876,"count":0},{"startOffset":140939,"endOffset":141610,"count":26},{"startOffset":141007,"endOffset":141024,"count":0},{"startOffset":141087,"endOffset":141090,"count":0},{"startOffset":141210,"endOffset":141315,"count":49},{"startOffset":141258,"endOffset":141303,"count":13},{"startOffset":141315,"endOffset":141340,"count":13},{"startOffset":141340,"endOffset":141386,"count":0},{"startOffset":141386,"endOffset":141426,"count":13},{"startOffset":141426,"endOffset":141602,"count":0}],"isBlockCoverage":true},{"functionName":"baseUnset","ranges":[{"startOffset":141924,"endOffset":142103,"count":10}],"isBlockCoverage":true},{"functionName":"baseUpdate","ranges":[{"startOffset":142514,"endOffset":142656,"count":0}],"isBlockCoverage":false},{"functionName":"baseWhile","ranges":[{"startOffset":143158,"endOffset":143599,"count":0}],"isBlockCoverage":false},{"functionName":"baseWrapperValue","ranges":[{"startOffset":144043,"endOffset":144365,"count":19},{"startOffset":144154,"endOffset":144196,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144231,"endOffset":144349,"count":57}],"isBlockCoverage":true},{"functionName":"baseXor","ranges":[{"startOffset":144811,"endOffset":145414,"count":0}],"isBlockCoverage":false},{"functionName":"baseZipObject","ranges":[{"startOffset":145769,"endOffset":146122,"count":0}],"isBlockCoverage":false},{"functionName":"castArrayLikeObject","ranges":[{"startOffset":146353,"endOffset":146448,"count":48},{"startOffset":146437,"endOffset":146441,"count":0}],"isBlockCoverage":true},{"functionName":"castFunction","ranges":[{"startOffset":146648,"endOffset":146744,"count":0}],"isBlockCoverage":false},{"functionName":"castPath","ranges":[{"startOffset":147012,"endOffset":147187,"count":775},{"startOffset":147073,"endOffset":147104,"count":470},{"startOffset":147104,"endOffset":147139,"count":305},{"startOffset":147139,"endOffset":147148,"count":242},{"startOffset":147149,"endOffset":147180,"count":63}],"isBlockCoverage":true},{"functionName":"castSlice","ranges":[{"startOffset":147808,"endOffset":148011,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":148270,"endOffset":148326,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBuffer","ranges":[{"startOffset":148567,"endOffset":148840,"count":0}],"isBlockCoverage":false},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":149056,"endOffset":149258,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDataView","ranges":[{"startOffset":149507,"endOffset":149725,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRegExp","ranges":[{"startOffset":149909,"endOffset":150089,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSymbol","ranges":[{"startOffset":150298,"endOffset":150404,"count":0}],"isBlockCoverage":false},{"functionName":"cloneTypedArray","ranges":[{"startOffset":150661,"endOffset":150889,"count":0}],"isBlockCoverage":false},{"functionName":"compareAscending","ranges":[{"startOffset":151159,"endOffset":152298,"count":0}],"isBlockCoverage":false},{"functionName":"compareMultiple","ranges":[{"startOffset":152927,"endOffset":153963,"count":0}],"isBlockCoverage":false},{"functionName":"composeArgs","ranges":[{"startOffset":154506,"endOffset":155272,"count":0}],"isBlockCoverage":false},{"functionName":"composeArgsRight","ranges":[{"startOffset":155778,"endOffset":156649,"count":0}],"isBlockCoverage":false},{"functionName":"copyArray","ranges":[{"startOffset":156906,"endOffset":157143,"count":57}],"isBlockCoverage":true},{"functionName":"copyObject","ranges":[{"startOffset":157557,"endOffset":158183,"count":46},{"startOffset":157654,"endOffset":157670,"count":0},{"startOffset":157760,"endOffset":158156,"count":110},{"startOffset":157839,"endOffset":157898,"count":42},{"startOffset":157909,"endOffset":157920,"count":68},{"startOffset":157959,"endOffset":158004,"count":68},{"startOffset":158024,"endOffset":158085,"count":0}],"isBlockCoverage":true},{"functionName":"copySymbols","ranges":[{"startOffset":158451,"endOffset":158556,"count":0}],"isBlockCoverage":false},{"functionName":"copySymbolsIn","ranges":[{"startOffset":158838,"endOffset":158947,"count":0}],"isBlockCoverage":false},{"functionName":"createAggregator","ranges":[{"startOffset":159247,"endOffset":159572,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":159309,"endOffset":159565,"count":0}],"isBlockCoverage":false},{"functionName":"createAssigner","ranges":[{"startOffset":159787,"endOffset":160610,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":159845,"endOffset":160602,"count":47},{"startOffset":159970,"endOffset":159991,"count":46},{"startOffset":159992,"endOffset":160003,"count":1},{"startOffset":160036,"endOffset":160048,"count":0},{"startOffset":160105,"endOffset":160139,"count":46},{"startOffset":160151,"endOffset":160175,"count":46},{"startOffset":160186,"endOffset":160197,"count":1},{"startOffset":160218,"endOffset":160266,"count":0},{"startOffset":160268,"endOffset":160361,"count":0}],"isBlockCoverage":true},{"functionName":"createBaseEach","ranges":[{"startOffset":160921,"endOffset":161526,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":160981,"endOffset":161519,"count":191},{"startOffset":161046,"endOffset":161086,"count":5},{"startOffset":161086,"endOffset":161185,"count":186},{"startOffset":161185,"endOffset":161264,"count":0},{"startOffset":161265,"endOffset":161269,"count":0},{"startOffset":161341,"endOffset":161350,"count":0},{"startOffset":161351,"endOffset":161369,"count":0},{"startOffset":161372,"endOffset":161518,"count":0}],"isBlockCoverage":true},{"functionName":"createBaseFor","ranges":[{"startOffset":161777,"endOffset":162230,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":161826,"endOffset":162223,"count":292},{"startOffset":162027,"endOffset":162192,"count":1927},{"startOffset":162065,"endOffset":162073,"count":0},{"startOffset":162150,"endOffset":162182,"count":19}],"isBlockCoverage":true},{"functionName":"createBind","ranges":[{"startOffset":162642,"endOffset":162975,"count":0}],"isBlockCoverage":false},{"functionName":"createCaseFirst","ranges":[{"startOffset":163204,"endOffset":163668,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163256,"endOffset":163661,"count":38},{"startOffset":163365,"endOffset":163388,"count":0},{"startOffset":163452,"endOffset":163467,"count":0},{"startOffset":163543,"endOffset":163578,"count":0}],"isBlockCoverage":true},{"functionName":"createCompounder","ranges":[{"startOffset":163892,"endOffset":164061,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163943,"endOffset":164054,"count":0}],"isBlockCoverage":false},{"functionName":"createCtor","ranges":[{"startOffset":164383,"endOffset":165556,"count":0}],"isBlockCoverage":false},{"functionName":"createCurry","ranges":[{"startOffset":165913,"endOffset":166809,"count":0}],"isBlockCoverage":false},{"functionName":"createFind","ranges":[{"startOffset":167046,"endOffset":167586,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":167096,"endOffset":167579,"count":0}],"isBlockCoverage":false},{"functionName":"createFlow","ranges":[{"startOffset":167816,"endOffset":169537,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":167871,"endOffset":169529,"count":0}],"isBlockCoverage":false},{"functionName":"createHybrid","ranges":[{"startOffset":170543,"endOffset":172418,"count":1},{"startOffset":170958,"endOffset":170976,"count":0}],"isBlockCoverage":true},{"functionName":"wrapper","ranges":[{"startOffset":170985,"endOffset":172390,"count":0}],"isBlockCoverage":false},{"functionName":"createInverter","ranges":[{"startOffset":172713,"endOffset":172886,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":172772,"endOffset":172879,"count":0}],"isBlockCoverage":false},{"functionName":"createMathOperation","ranges":[{"startOffset":173240,"endOffset":173989,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":173308,"endOffset":173982,"count":0}],"isBlockCoverage":false},{"functionName":"createOver","ranges":[{"startOffset":174208,"endOffset":174574,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":174263,"endOffset":174566,"count":0}],"isBlockCoverage":false},{"functionName":"createPadding","ranges":[{"startOffset":174935,"endOffset":175390,"count":0}],"isBlockCoverage":false},{"functionName":"createPartial","ranges":[{"startOffset":175948,"endOffset":176680,"count":0}],"isBlockCoverage":false},{"functionName":"createRange","ranges":[{"startOffset":176913,"endOffset":177479,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":176960,"endOffset":177472,"count":0}],"isBlockCoverage":false},{"functionName":"createRelationalOperation","ranges":[{"startOffset":177749,"endOffset":178038,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":177809,"endOffset":178031,"count":0}],"isBlockCoverage":false},{"functionName":"createRecurry","ranges":[{"startOffset":178889,"endOffset":179919,"count":0}],"isBlockCoverage":false},{"functionName":"createRound","ranges":[{"startOffset":180151,"endOffset":180874,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":180234,"endOffset":180867,"count":0}],"isBlockCoverage":false},{"functionName":"createSet","ranges":[{"startOffset":181148,"endOffset":181202,"count":0}],"isBlockCoverage":false},{"functionName":"createToPairs","ranges":[{"startOffset":181445,"endOffset":181766,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":181493,"endOffset":181759,"count":0}],"isBlockCoverage":false},{"functionName":"createWrap","ranges":[{"startOffset":182798,"endOffset":184888,"count":0}],"isBlockCoverage":false},{"functionName":"customDefaultsAssignIn","ranges":[{"startOffset":185403,"endOffset":185650,"count":0}],"isBlockCoverage":false},{"functionName":"customDefaultsMerge","ranges":[{"startOffset":186268,"endOffset":186673,"count":0}],"isBlockCoverage":false},{"functionName":"customOmitClone","ranges":[{"startOffset":187019,"endOffset":187113,"count":0}],"isBlockCoverage":false},{"functionName":"equalArrays","ranges":[{"startOffset":187780,"endOffset":189787,"count":0}],"isBlockCoverage":false},{"functionName":"equalByTag","ranges":[{"startOffset":190678,"endOffset":192829,"count":0}],"isBlockCoverage":false},{"functionName":"equalObjects","ranges":[{"startOffset":193504,"endOffset":195751,"count":0}],"isBlockCoverage":false},{"functionName":"flatRest","ranges":[{"startOffset":195996,"endOffset":196100,"count":12}],"isBlockCoverage":true},{"functionName":"getAllKeys","ranges":[{"startOffset":196351,"endOffset":196441,"count":196}],"isBlockCoverage":true},{"functionName":"getAllKeysIn","ranges":[{"startOffset":196713,"endOffset":196809,"count":22}],"isBlockCoverage":true},{"functionName":"getData","ranges":[{"startOffset":197025,"endOffset":197079,"count":0}],"isBlockCoverage":false},{"functionName":"getFuncName","ranges":[{"startOffset":197262,"endOffset":197664,"count":0}],"isBlockCoverage":false},{"functionName":"getHolder","ranges":[{"startOffset":197870,"endOffset":198014,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratee","ranges":[{"startOffset":198533,"endOffset":198748,"count":352},{"startOffset":198593,"endOffset":198604,"count":0},{"startOffset":198656,"endOffset":198664,"count":0},{"startOffset":198733,"endOffset":198741,"count":0}],"isBlockCoverage":true},{"functionName":"getMapData","ranges":[{"startOffset":198958,"endOffset":199133,"count":126},{"startOffset":199098,"endOffset":199106,"count":0},{"startOffset":199116,"endOffset":199126,"count":0}],"isBlockCoverage":true},{"functionName":"getMatchData","ranges":[{"startOffset":199360,"endOffset":199653,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":199935,"endOffset":200069,"count":7},{"startOffset":200051,"endOffset":200062,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":200302,"endOffset":200774,"count":8},{"startOffset":200524,"endOffset":200536,"count":0},{"startOffset":200632,"endOffset":200682,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbols","ranges":[{"startOffset":201040,"endOffset":201288,"count":240},{"startOffset":201085,"endOffset":201113,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":201196,"endOffset":201280,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolsIn","ranges":[{"startOffset":201571,"endOffset":201756,"count":22},{"startOffset":201634,"endOffset":201729,"count":44}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":202372,"endOffset":202927,"count":0}],"isBlockCoverage":false},{"functionName":"getView","ranges":[{"startOffset":203345,"endOffset":203890,"count":0}],"isBlockCoverage":false},{"functionName":"getWrapDetails","ranges":[{"startOffset":204105,"endOffset":204249,"count":0}],"isBlockCoverage":false},{"functionName":"hasPath","ranges":[{"startOffset":204582,"endOffset":205192,"count":79},{"startOffset":204878,"endOffset":204906,"count":6},{"startOffset":204906,"endOffset":204944,"count":73},{"startOffset":204962,"endOffset":204982,"count":6},{"startOffset":204984,"endOffset":205016,"count":73},{"startOffset":205016,"endOffset":205047,"count":6},{"startOffset":205047,"endOffset":205050,"count":0},{"startOffset":205051,"endOffset":205066,"count":6},{"startOffset":205090,"endOffset":205109,"count":0},{"startOffset":205110,"endOffset":205133,"count":0},{"startOffset":205134,"endOffset":205185,"count":0}],"isBlockCoverage":true},{"functionName":"initCloneArray","ranges":[{"startOffset":205375,"endOffset":205739,"count":75},{"startOffset":205631,"endOffset":205712,"count":0}],"isBlockCoverage":true},{"functionName":"initCloneObject","ranges":[{"startOffset":205927,"endOffset":206103,"count":200},{"startOffset":206092,"endOffset":206096,"count":0}],"isBlockCoverage":true},{"functionName":"initCloneByTag","ranges":[{"startOffset":206604,"endOffset":207480,"count":2},{"startOffset":206717,"endOffset":206780,"count":0},{"startOffset":206790,"endOffset":206803,"count":0},{"startOffset":206871,"endOffset":206936,"count":0},{"startOffset":206946,"endOffset":206962,"count":0},{"startOffset":206963,"endOffset":206979,"count":0},{"startOffset":206988,"endOffset":207001,"count":0},{"startOffset":207002,"endOffset":207016,"count":0},{"startOffset":207017,"endOffset":207031,"count":0},{"startOffset":207040,"endOffset":207054,"count":0},{"startOffset":207055,"endOffset":207076,"count":0},{"startOffset":207077,"endOffset":207092,"count":0},{"startOffset":207093,"endOffset":207158,"count":0},{"startOffset":207168,"endOffset":207207,"count":0},{"startOffset":207217,"endOffset":207232,"count":0},{"startOffset":207241,"endOffset":207291,"count":0},{"startOffset":207301,"endOffset":207354,"count":0},{"startOffset":207364,"endOffset":207403,"count":0},{"startOffset":207413,"endOffset":207466,"count":0}],"isBlockCoverage":true},{"functionName":"insertWrapDetails","ranges":[{"startOffset":207765,"endOffset":208155,"count":0}],"isBlockCoverage":false},{"functionName":"isFlattenable","ranges":[{"startOffset":208397,"endOffset":208553,"count":33},{"startOffset":208457,"endOffset":208478,"count":17},{"startOffset":208479,"endOffset":208546,"count":17}],"isBlockCoverage":true},{"functionName":"isIndex","ranges":[{"startOffset":208864,"endOffset":209167,"count":0}],"isBlockCoverage":false},{"functionName":"isIterateeCall","ranges":[{"startOffset":209581,"endOffset":209957,"count":0}],"isBlockCoverage":false},{"functionName":"isKey","ranges":[{"startOffset":210262,"endOffset":210658,"count":329},{"startOffset":210320,"endOffset":210351,"count":0},{"startOffset":210498,"endOffset":210528,"count":0},{"startOffset":210568,"endOffset":210596,"count":63},{"startOffset":210597,"endOffset":210651,"count":63}],"isBlockCoverage":true},{"functionName":"isKeyable","ranges":[{"startOffset":210893,"endOffset":211112,"count":126},{"startOffset":210983,"endOffset":211002,"count":0},{"startOffset":211003,"endOffset":211022,"count":0},{"startOffset":211023,"endOffset":211043,"count":0},{"startOffset":211087,"endOffset":211105,"count":0}],"isBlockCoverage":true},{"functionName":"isLaziable","ranges":[{"startOffset":211355,"endOffset":211706,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":211927,"endOffset":212009,"count":7},{"startOffset":211979,"endOffset":212002,"count":0}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":212507,"endOffset":212698,"count":893},{"startOffset":212646,"endOffset":212660,"count":0}],"isBlockCoverage":true},{"functionName":"isStrictComparable","ranges":[{"startOffset":212988,"endOffset":213080,"count":0}],"isBlockCoverage":false},{"functionName":"matchesStrictComparable","ranges":[{"startOffset":213418,"endOffset":213684,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCapped","ranges":[{"startOffset":213993,"endOffset":214244,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":214057,"endOffset":214182,"count":63},{"startOffset":214118,"endOffset":214154,"count":0}],"isBlockCoverage":true},{"functionName":"mergeData","ranges":[{"startOffset":215016,"endOffset":217040,"count":0}],"isBlockCoverage":false},{"functionName":"nativeKeysIn","ranges":[{"startOffset":217374,"endOffset":217571,"count":0}],"isBlockCoverage":false},{"functionName":"objectToString","ranges":[{"startOffset":217788,"endOffset":217873,"count":1229}],"isBlockCoverage":true},{"functionName":"overRest","ranges":[{"startOffset":218268,"endOffset":218904,"count":50},{"startOffset":218376,"endOffset":218383,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":218402,"endOffset":218897,"count":189},{"startOffset":218594,"endOffset":218651,"count":263},{"startOffset":218746,"endOffset":218799,"count":161}],"isBlockCoverage":true},{"functionName":"parent","ranges":[{"startOffset":219162,"endOffset":219280,"count":10},{"startOffset":219232,"endOffset":219273,"count":0}],"isBlockCoverage":true},{"functionName":"reorder","ranges":[{"startOffset":219695,"endOffset":220039,"count":0}],"isBlockCoverage":false},{"functionName":"safeGet","ranges":[{"startOffset":220320,"endOffset":220537,"count":54},{"startOffset":220384,"endOffset":220420,"count":0},{"startOffset":220422,"endOffset":220447,"count":0},{"startOffset":220479,"endOffset":220504,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":221496,"endOffset":221566,"count":0}],"isBlockCoverage":false},{"functionName":"setWrapToString","ranges":[{"startOffset":222318,"endOffset":222530,"count":0}],"isBlockCoverage":false},{"functionName":"shortOut","ranges":[{"startOffset":222863,"endOffset":223305,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":222950,"endOffset":223298,"count":50},{"startOffset":223109,"endOffset":223203,"count":49},{"startOffset":223147,"endOffset":223193,"count":0},{"startOffset":223203,"endOffset":223241,"count":1}],"isBlockCoverage":true},{"functionName":"shuffleSelf","ranges":[{"startOffset":223593,"endOffset":224008,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":224247,"endOffset":224572,"count":4},{"startOffset":224336,"endOffset":224370,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":224404,"endOffset":224543,"count":11},{"startOffset":224474,"endOffset":224513,"count":0}],"isBlockCoverage":true},{"functionName":"toKey","ranges":[{"startOffset":224786,"endOffset":225009,"count":603},{"startOffset":224845,"endOffset":224863,"count":0},{"startOffset":224896,"endOffset":224985,"count":0},{"startOffset":224987,"endOffset":224993,"count":0},{"startOffset":224994,"endOffset":225002,"count":0}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":225202,"endOffset":225430,"count":12},{"startOffset":225320,"endOffset":225399,"count":0},{"startOffset":225407,"endOffset":225429,"count":0}],"isBlockCoverage":true},{"functionName":"updateWrapDetails","ranges":[{"startOffset":225717,"endOffset":225998,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperClone","ranges":[{"startOffset":226186,"endOffset":226557,"count":0}],"isBlockCoverage":false},{"functionName":"chunk","ranges":[{"startOffset":227354,"endOffset":227905,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":228353,"endOffset":228672,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":229258,"endOffset":229630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":230410,"endOffset":230574,"count":11},{"startOffset":230563,"endOffset":230567,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":231636,"endOffset":231940,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":232901,"endOffset":233208,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":233877,"endOffset":234127,"count":0}],"isBlockCoverage":false},{"functionName":"dropRight","ranges":[{"startOffset":234808,"endOffset":235080,"count":0}],"isBlockCoverage":false},{"functionName":"dropRightWhile","ranges":[{"startOffset":236363,"endOffset":236529,"count":0}],"isBlockCoverage":false},{"functionName":"dropWhile","ranges":[{"startOffset":237800,"endOffset":237955,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":238750,"endOffset":239082,"count":0}],"isBlockCoverage":false},{"functionName":"findIndex","ranges":[{"startOffset":240272,"endOffset":240638,"count":0}],"isBlockCoverage":false},{"functionName":"findLastIndex","ranges":[{"startOffset":241822,"endOffset":242283,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":242638,"endOffset":242772,"count":33},{"startOffset":242697,"endOffset":242700,"count":0},{"startOffset":242761,"endOffset":242765,"count":0}],"isBlockCoverage":true},{"functionName":"flattenDeep","ranges":[{"startOffset":243119,"endOffset":243264,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDepth","ranges":[{"startOffset":243804,"endOffset":244046,"count":0}],"isBlockCoverage":false},{"functionName":"fromPairs","ranges":[{"startOffset":244452,"endOffset":244714,"count":0}],"isBlockCoverage":false},{"functionName":"head","ranges":[{"startOffset":245101,"endOffset":245190,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":246000,"endOffset":246338,"count":0}],"isBlockCoverage":false},{"functionName":"initial","ranges":[{"startOffset":246667,"endOffset":246803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":247433,"endOffset":247620,"count":24},{"startOffset":247609,"endOffset":247613,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":248558,"endOffset":248921,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":249798,"endOffset":250177,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":250610,"endOffset":250718,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":251034,"endOffset":251168,"count":38},{"startOffset":251090,"endOffset":251093,"count":0},{"startOffset":251150,"endOffset":251161,"count":0}],"isBlockCoverage":true},{"functionName":"lastIndexOf","ranges":[{"startOffset":251820,"endOffset":252306,"count":0}],"isBlockCoverage":false},{"functionName":"nth","ranges":[{"startOffset":252862,"endOffset":252973,"count":0}],"isBlockCoverage":false},{"functionName":"pullAll","ranges":[{"startOffset":254309,"endOffset":254466,"count":0}],"isBlockCoverage":false},{"functionName":"pullAllBy","ranges":[{"startOffset":255332,"endOffset":255527,"count":0}],"isBlockCoverage":false},{"functionName":"pullAllWith","ranges":[{"startOffset":256396,"endOffset":256592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":257325,"endOffset":257626,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":258526,"endOffset":259031,"count":0}],"isBlockCoverage":false},{"functionName":"reverse","ranges":[{"startOffset":259649,"endOffset":259744,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":260295,"endOffset":260743,"count":0}],"isBlockCoverage":false},{"functionName":"sortedIndex","ranges":[{"startOffset":261279,"endOffset":261365,"count":0}],"isBlockCoverage":false},{"functionName":"sortedIndexBy","ranges":[{"startOffset":262273,"endOffset":262399,"count":0}],"isBlockCoverage":false},{"functionName":"sortedIndexOf","ranges":[{"startOffset":262869,"endOffset":263153,"count":0}],"isBlockCoverage":false},{"functionName":"sortedLastIndex","ranges":[{"startOffset":263732,"endOffset":263828,"count":0}],"isBlockCoverage":false},{"functionName":"sortedLastIndexBy","ranges":[{"startOffset":264748,"endOffset":264884,"count":0}],"isBlockCoverage":false},{"functionName":"sortedLastIndexOf","ranges":[{"startOffset":265362,"endOffset":265642,"count":0}],"isBlockCoverage":false},{"functionName":"sortedUniq","ranges":[{"startOffset":266037,"endOffset":266154,"count":0}],"isBlockCoverage":false},{"functionName":"sortedUniqBy","ranges":[{"startOffset":266650,"endOffset":266805,"count":0}],"isBlockCoverage":false},{"functionName":"tail","ranges":[{"startOffset":267132,"endOffset":267269,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":267934,"endOffset":268143,"count":0}],"isBlockCoverage":false},{"functionName":"takeRight","ranges":[{"startOffset":268822,"endOffset":269099,"count":0}],"isBlockCoverage":false},{"functionName":"takeRightWhile","ranges":[{"startOffset":270345,"endOffset":270512,"count":0}],"isBlockCoverage":false},{"functionName":"takeWhile","ranges":[{"startOffset":271740,"endOffset":271889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":272412,"endOffset":272508,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":273428,"endOffset":273664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":274552,"endOffset":274785,"count":0}],"isBlockCoverage":false},{"functionName":"uniq","ranges":[{"startOffset":275407,"endOffset":275496,"count":0}],"isBlockCoverage":false},{"functionName":"uniqBy","ranges":[{"startOffset":276373,"endOffset":276500,"count":0}],"isBlockCoverage":false},{"functionName":"uniqWith","ranges":[{"startOffset":277282,"endOffset":277487,"count":0}],"isBlockCoverage":false},{"functionName":"unzip","ranges":[{"startOffset":278122,"endOffset":278536,"count":0}],"isBlockCoverage":false},{"functionName":"unzipWith","ranges":[{"startOffset":279274,"endOffset":279584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":280244,"endOffset":280367,"count":3},{"startOffset":280356,"endOffset":280360,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":280976,"endOffset":281062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":281977,"endOffset":282203,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":283072,"endOffset":283295,"count":0}],"isBlockCoverage":false},{"functionName":"zipObject","ranges":[{"startOffset":284388,"endOffset":284497,"count":0}],"isBlockCoverage":false},{"functionName":"zipObjectDeep","ranges":[{"startOffset":284984,"endOffset":285093,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":285795,"endOffset":286049,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":286939,"endOffset":287054,"count":19}],"isBlockCoverage":true},{"functionName":"tap","ranges":[{"startOffset":287757,"endOffset":287843,"count":0}],"isBlockCoverage":false},{"functionName":"thru","ranges":[{"startOffset":288524,"endOffset":288598,"count":38}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":289078,"endOffset":289825,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperChain","ranges":[{"startOffset":290532,"endOffset":290589,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperCommit","ranges":[{"startOffset":291170,"endOffset":291264,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperNext","ranges":[{"startOffset":291844,"endOffset":292153,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperToIterator","ranges":[{"startOffset":292549,"endOffset":292604,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperPlant","ranges":[{"startOffset":293185,"endOffset":293666,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperReverse","ranges":[{"startOffset":294139,"endOffset":294639,"count":0}],"isBlockCoverage":false},{"functionName":"wrapperValue","ranges":[{"startOffset":294977,"endOffset":295075,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":296049,"endOffset":296218,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":297758,"endOffset":298037,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":299533,"endOffset":299702,"count":19},{"startOffset":299625,"endOffset":299637,"count":0}],"isBlockCoverage":true},{"functionName":"flatMap","ranges":[{"startOffset":302444,"endOffset":302546,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapDeep","ranges":[{"startOffset":303136,"endOffset":303249,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapDepth","ranges":[{"startOffset":303929,"endOffset":304105,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":305244,"endOffset":305408,"count":147},{"startOffset":305322,"endOffset":305333,"count":0}],"isBlockCoverage":true},{"functionName":"forEachRight","ranges":[{"startOffset":306036,"endOffset":306215,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":307232,"endOffset":307417,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":308491,"endOffset":309010,"count":5},{"startOffset":308604,"endOffset":308624,"count":0},{"startOffset":308655,"endOffset":308664,"count":0},{"startOffset":308666,"endOffset":308688,"count":0},{"startOffset":308758,"endOffset":308821,"count":0},{"startOffset":308864,"endOffset":308932,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":309995,"endOffset":310349,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":311455,"endOffset":311534,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":313000,"endOffset":313158,"count":25},{"startOffset":313074,"endOffset":313084,"count":19},{"startOffset":313085,"endOffset":313094,"count":6}],"isBlockCoverage":true},{"functionName":"orderBy","ranges":[{"startOffset":314431,"endOffset":314838,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":316318,"endOffset":316393,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":316395,"endOffset":316426,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":317906,"endOffset":318165,"count":14},{"startOffset":317996,"endOffset":318009,"count":0}],"isBlockCoverage":true},{"functionName":"reduceRight","ranges":[{"startOffset":318893,"endOffset":319167,"count":0}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":320327,"endOffset":320504,"count":0}],"isBlockCoverage":false},{"functionName":"sample","ranges":[{"startOffset":320846,"endOffset":320977,"count":0}],"isBlockCoverage":false},{"functionName":"sampleSize","ranges":[{"startOffset":321602,"endOffset":321900,"count":0}],"isBlockCoverage":false},{"functionName":"shuffle","ranges":[{"startOffset":322365,"endOffset":322499,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":323066,"endOffset":323446,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":324711,"endOffset":324987,"count":24},{"startOffset":324794,"endOffset":324805,"count":0},{"startOffset":324834,"endOffset":324881,"count":0},{"startOffset":324883,"endOffset":324923,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":326166,"endOffset":326611,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":327198,"endOffset":327246,"count":0}],"isBlockCoverage":false},{"functionName":"after","ranges":[{"startOffset":328124,"endOffset":328386,"count":0}],"isBlockCoverage":false},{"functionName":"ary","ranges":[{"startOffset":328973,"endOffset":329184,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":329896,"endOffset":330262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":331479,"endOffset":331764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":333346,"endOffset":333651,"count":0}],"isBlockCoverage":false},{"functionName":"curry","ranges":[{"startOffset":335013,"endOffset":335279,"count":0}],"isBlockCoverage":false},{"functionName":"curryRight","ranges":[{"startOffset":336449,"endOffset":336731,"count":0}],"isBlockCoverage":false},{"functionName":"debounce","ranges":[{"startOffset":339393,"endOffset":343127,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":343730,"endOffset":343797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":344446,"endOffset":344537,"count":0}],"isBlockCoverage":false},{"functionName":"flip","ranges":[{"startOffset":345036,"endOffset":345110,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":346746,"endOffset":347389,"count":1},{"startOffset":346873,"endOffset":346928,"count":0}],"isBlockCoverage":true},{"functionName":"memoized","ranges":[{"startOffset":346950,"endOffset":347303,"count":63},{"startOffset":347049,"endOffset":347058,"count":0},{"startOffset":347125,"endOffset":347169,"count":59},{"startOffset":347169,"endOffset":347263,"count":4},{"startOffset":347263,"endOffset":347271,"count":0}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":348033,"endOffset":348562,"count":18},{"startOffset":348104,"endOffset":348159,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":348173,"endOffset":348555,"count":127},{"startOffset":348257,"endOffset":348294,"count":0},{"startOffset":348305,"endOffset":348351,"count":0},{"startOffset":348428,"endOffset":348492,"count":0},{"startOffset":348502,"endOffset":348554,"count":0}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":349196,"endOffset":349253,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":350024,"endOffset":350590,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":351782,"endOffset":351960,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":353107,"endOffset":353296,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":354108,"endOffset":354229,"count":0}],"isBlockCoverage":false},{"functionName":"rest","ranges":[{"startOffset":355135,"endOffset":355360,"count":0}],"isBlockCoverage":false},{"functionName":"spread","ranges":[{"startOffset":356428,"endOffset":356872,"count":0}],"isBlockCoverage":false},{"functionName":"throttle","ranges":[{"startOffset":359135,"endOffset":359639,"count":0}],"isBlockCoverage":false},{"functionName":"unary","ranges":[{"startOffset":360072,"endOffset":360127,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":360902,"endOffset":360991,"count":0}],"isBlockCoverage":false},{"functionName":"castArray","ranges":[{"startOffset":361771,"endOffset":361936,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":362897,"endOffset":362977,"count":0}],"isBlockCoverage":false},{"functionName":"cloneWith","ranges":[{"startOffset":363982,"endOffset":364167,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDeep","ranges":[{"startOffset":364659,"endOffset":364761,"count":13}],"isBlockCoverage":true},{"functionName":"cloneDeepWith","ranges":[{"startOffset":365555,"endOffset":365762,"count":145},{"startOffset":365663,"endOffset":365674,"count":0}],"isBlockCoverage":true},{"functionName":"conformsTo","ranges":[{"startOffset":366593,"endOffset":366713,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":367528,"endOffset":367631,"count":241},{"startOffset":367585,"endOffset":367624,"count":204},{"startOffset":367605,"endOffset":367623,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":368775,"endOffset":368834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":369335,"endOffset":369367,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":369391,"endOffset":369543,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":371362,"endOffset":371473,"count":972},{"startOffset":371445,"endOffset":371466,"count":89}],"isBlockCoverage":true},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":372103,"endOffset":372200,"count":81}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":372622,"endOffset":372768,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":374116,"endOffset":374232,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":375161,"endOffset":375819,"count":144},{"startOffset":375212,"endOffset":375242,"count":110},{"startOffset":375242,"endOffset":375272,"count":34},{"startOffset":375272,"endOffset":375442,"count":1},{"startOffset":375301,"endOffset":375328,"count":0},{"startOffset":375329,"endOffset":375365,"count":0},{"startOffset":375366,"endOffset":375396,"count":0},{"startOffset":375397,"endOffset":375419,"count":0},{"startOffset":375420,"endOffset":375441,"count":0},{"startOffset":375444,"endOffset":375483,"count":1},{"startOffset":375483,"endOffset":375555,"count":33},{"startOffset":375557,"endOffset":375594,"count":0},{"startOffset":375594,"endOffset":375625,"count":33},{"startOffset":375625,"endOffset":375674,"count":0},{"startOffset":375674,"endOffset":375704,"count":33},{"startOffset":375704,"endOffset":375794,"count":19},{"startOffset":375794,"endOffset":375818,"count":14}],"isBlockCoverage":true},{"functionName":"isEqual","ranges":[{"startOffset":376779,"endOffset":376857,"count":52}],"isBlockCoverage":true},{"functionName":"isEqualWith","ranges":[{"startOffset":377983,"endOffset":378281,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":378779,"endOffset":379063,"count":0}],"isBlockCoverage":false},{"functionName":"isFinite","ranges":[{"startOffset":379691,"endOffset":379787,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":380199,"endOffset":380576,"count":447},{"startOffset":380256,"endOffset":380287,"count":12},{"startOffset":380287,"endOffset":380515,"count":435},{"startOffset":380515,"endOffset":380531,"count":102},{"startOffset":380532,"endOffset":380550,"count":102},{"startOffset":380551,"endOffset":380569,"count":99}],"isBlockCoverage":true},{"functionName":"isInteger","ranges":[{"startOffset":381191,"endOffset":381292,"count":13},{"startOffset":381257,"endOffset":381285,"count":0}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":381947,"endOffset":382087,"count":972},{"startOffset":382012,"endOffset":382033,"count":89},{"startOffset":382034,"endOffset":382051,"count":89},{"startOffset":382052,"endOffset":382080,"count":89}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":382774,"endOffset":382909,"count":2695},{"startOffset":382859,"endOffset":382902,"count":2659},{"startOffset":382880,"endOffset":382901,"count":1672}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":383508,"endOffset":383600,"count":1593},{"startOffset":383566,"endOffset":383593,"count":1540}],"isBlockCoverage":true},{"functionName":"isMatch","ranges":[{"startOffset":385019,"endOffset":385144,"count":0}],"isBlockCoverage":false},{"functionName":"isMatchWith","ranges":[{"startOffset":386285,"endOffset":386494,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":387220,"endOffset":387478,"count":0}],"isBlockCoverage":false},{"functionName":"isNative","ranges":[{"startOffset":388440,"endOffset":388587,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":388964,"endOffset":389023,"count":0}],"isBlockCoverage":false},{"functionName":"isNil","ranges":[{"startOffset":389460,"endOffset":389517,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":390188,"endOffset":390326,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainObject","ranges":[{"startOffset":391043,"endOffset":391474,"count":1076},{"startOffset":391106,"endOffset":391139,"count":452},{"startOffset":391141,"endOffset":391172,"count":669},{"startOffset":391172,"endOffset":391238,"count":407},{"startOffset":391238,"endOffset":391268,"count":0},{"startOffset":391268,"endOffset":391348,"count":407},{"startOffset":391389,"endOffset":391412,"count":407},{"startOffset":391413,"endOffset":391467,"count":403}],"isBlockCoverage":true},{"functionName":"isSafeInteger","ranges":[{"startOffset":392722,"endOffset":392849,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":393727,"endOffset":393884,"count":18},{"startOffset":393792,"endOffset":393877,"count":5},{"startOffset":393820,"endOffset":393842,"count":0},{"startOffset":393843,"endOffset":393876,"count":0}],"isBlockCoverage":true},{"functionName":"isSymbol","ranges":[{"startOffset":394315,"endOffset":394453,"count":329},{"startOffset":394412,"endOffset":394445,"count":0}],"isBlockCoverage":true},{"functionName":"isUndefined","ranges":[{"startOffset":395358,"endOffset":395427,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":395848,"endOffset":395946,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":396367,"endOffset":396469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":397601,"endOffset":397660,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":398136,"endOffset":398580,"count":0}],"isBlockCoverage":false},{"functionName":"toFinite","ranges":[{"startOffset":399082,"endOffset":399394,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":400027,"endOffset":400211,"count":0}],"isBlockCoverage":false},{"functionName":"toLength","ranges":[{"startOffset":400875,"endOffset":400982,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":401451,"endOffset":402107,"count":0}],"isBlockCoverage":false},{"functionName":"toPlainObject","ranges":[{"startOffset":402765,"endOffset":402849,"count":0}],"isBlockCoverage":false},{"functionName":"toSafeInteger","ranges":[{"startOffset":403419,"endOffset":403587,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":404101,"endOffset":404188,"count":101},{"startOffset":404155,"endOffset":404159,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":405233,"endOffset":405542,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":406346,"endOffset":406428,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":407536,"endOffset":407652,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":408731,"endOffset":408845,"count":42}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":410291,"endOffset":410454,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":411245,"endOffset":412028,"count":84},{"startOffset":411391,"endOffset":411403,"count":0},{"startOffset":411434,"endOffset":411482,"count":0},{"startOffset":411484,"endOffset":411513,"count":0},{"startOffset":411734,"endOffset":411992,"count":319},{"startOffset":411845,"endOffset":411928,"count":13},{"startOffset":411891,"endOffset":411927,"count":0},{"startOffset":411930,"endOffset":411982,"count":306}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":412635,"endOffset":412754,"count":0}],"isBlockCoverage":false},{"functionName":"findKey","ranges":[{"startOffset":413958,"endOffset":414074,"count":0}],"isBlockCoverage":false},{"functionName":"findLastKey","ranges":[{"startOffset":415270,"endOffset":415395,"count":0}],"isBlockCoverage":false},{"functionName":"forIn","ranges":[{"startOffset":416305,"endOffset":416451,"count":58},{"startOffset":416376,"endOffset":416384,"count":0}],"isBlockCoverage":true},{"functionName":"forInRight","ranges":[{"startOffset":417192,"endOffset":417348,"count":0}],"isBlockCoverage":false},{"functionName":"forOwn","ranges":[{"startOffset":418240,"endOffset":418350,"count":24}],"isBlockCoverage":true},{"functionName":"forOwnRight","ranges":[{"startOffset":419083,"endOffset":419203,"count":0}],"isBlockCoverage":false},{"functionName":"functions","ranges":[{"startOffset":419778,"endOffset":419884,"count":0}],"isBlockCoverage":false},{"functionName":"functionsIn","ranges":[{"startOffset":420478,"endOffset":420588,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":421350,"endOffset":421528,"count":73},{"startOffset":421427,"endOffset":421438,"count":3},{"startOffset":421439,"endOffset":421462,"count":70},{"startOffset":421498,"endOffset":421512,"count":72},{"startOffset":421513,"endOffset":421521,"count":1}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":422211,"endOffset":422308,"count":0}],"isBlockCoverage":false},{"functionName":"hasIn","ranges":[{"startOffset":422973,"endOffset":423074,"count":79}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":423659,"endOffset":423857,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":424861,"endOffset":425167,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":426530,"endOffset":426636,"count":480},{"startOffset":426587,"endOffset":426610,"count":0}],"isBlockCoverage":true},{"functionName":"keysIn","ranges":[{"startOffset":427240,"endOffset":427356,"count":180},{"startOffset":427299,"endOffset":427328,"count":0}],"isBlockCoverage":true},{"functionName":"mapKeys","ranges":[{"startOffset":428132,"endOffset":428398,"count":0}],"isBlockCoverage":false},{"functionName":"mapValues","ranges":[{"startOffset":429441,"endOffset":429707,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":429572,"endOffset":429678,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":430859,"endOffset":430944,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":432097,"endOffset":432206,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":432885,"endOffset":433509,"count":4},{"startOffset":432960,"endOffset":432992,"count":0},{"startOffset":433256,"endOffset":433374,"count":0},{"startOffset":433431,"endOffset":433482,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":433049,"endOffset":433179,"count":10}],"isBlockCoverage":true},{"functionName":"omitBy","ranges":[{"startOffset":434212,"endOffset":434315,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":434829,"endOffset":434920,"count":12},{"startOffset":434883,"endOffset":434887,"count":0}],"isBlockCoverage":true},{"functionName":"pickBy","ranges":[{"startOffset":435518,"endOffset":435871,"count":18},{"startOffset":435581,"endOffset":435609,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":435659,"endOffset":435706,"count":127}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":435790,"endOffset":435863,"count":127}],"isBlockCoverage":true},{"functionName":"result","ranges":[{"startOffset":436803,"endOffset":437387,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":438301,"endOffset":438411,"count":0}],"isBlockCoverage":false},{"functionName":"setWith","ranges":[{"startOffset":439299,"endOffset":439514,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":442222,"endOffset":442965,"count":0}],"isBlockCoverage":false},{"functionName":"unset","ranges":[{"startOffset":443725,"endOffset":443823,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":444769,"endOffset":444903,"count":0}],"isBlockCoverage":false},{"functionName":"updateWith","ranges":[{"startOffset":445843,"endOffset":446082,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":446732,"endOffset":446832,"count":19},{"startOffset":446786,"endOffset":446790,"count":0}],"isBlockCoverage":true},{"functionName":"valuesIn","ranges":[{"startOffset":447454,"endOffset":447558,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":448133,"endOffset":448562,"count":0}],"isBlockCoverage":false},{"functionName":"inRange","ranges":[{"startOffset":449578,"endOffset":449855,"count":0}],"isBlockCoverage":false},{"functionName":"random","ranges":[{"startOffset":450989,"endOffset":452096,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":452720,"endOffset":452847,"count":0}],"isBlockCoverage":false},{"functionName":"capitalize","ranges":[{"startOffset":453248,"endOffset":453340,"count":0}],"isBlockCoverage":false},{"functionName":"deburr","ranges":[{"startOffset":454006,"endOffset":454157,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":454802,"endOffset":455197,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":456317,"endOffset":456514,"count":0}],"isBlockCoverage":false},{"functionName":"escapeRegExp","ranges":[{"startOffset":457000,"endOffset":457189,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":457758,"endOffset":457858,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":458388,"endOffset":458488,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":459626,"endOffset":460045,"count":0}],"isBlockCoverage":false},{"functionName":"padEnd","ranges":[{"startOffset":460697,"endOffset":460990,"count":0}],"isBlockCoverage":false},{"functionName":"padStart","ranges":[{"startOffset":461647,"endOffset":461942,"count":0}],"isBlockCoverage":false},{"functionName":"parseInt","ranges":[{"startOffset":462791,"endOffset":463035,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":463625,"endOffset":463850,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":464468,"endOffset":464635,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":465183,"endOffset":465283,"count":0}],"isBlockCoverage":false},{"functionName":"split","ranges":[{"startOffset":465863,"endOffset":466551,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":467135,"endOffset":467233,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":467877,"endOffset":468180,"count":0}],"isBlockCoverage":false},{"functionName":"template","ranges":[{"startOffset":473119,"endOffset":477585,"count":0}],"isBlockCoverage":false},{"functionName":"toLower","ranges":[{"startOffset":478133,"endOffset":478208,"count":0}],"isBlockCoverage":false},{"functionName":"toUpper","ranges":[{"startOffset":478756,"endOffset":478831,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":479492,"endOffset":480016,"count":0}],"isBlockCoverage":false},{"functionName":"trimEnd","ranges":[{"startOffset":480595,"endOffset":481052,"count":0}],"isBlockCoverage":false},{"functionName":"trimStart","ranges":[{"startOffset":481634,"endOffset":482079,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":483396,"endOffset":485173,"count":0}],"isBlockCoverage":false},{"functionName":"unescape","ranges":[{"startOffset":485852,"endOffset":486049,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":486575,"endOffset":486675,"count":0}],"isBlockCoverage":false},{"functionName":"words","ranges":[{"startOffset":487778,"endOffset":488071,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":488904,"endOffset":489063,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":489893,"endOffset":490097,"count":0}],"isBlockCoverage":false},{"functionName":"cond","ranges":[{"startOffset":491047,"endOffset":491645,"count":0}],"isBlockCoverage":false},{"functionName":"conforms","ranges":[{"startOffset":492448,"endOffset":492544,"count":0}],"isBlockCoverage":false},{"functionName":"constant","ranges":[{"startOffset":493052,"endOffset":493141,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":493092,"endOffset":493134,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTo","ranges":[{"startOffset":493694,"endOffset":493813,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":495477,"endOffset":495529,"count":173}],"isBlockCoverage":true},{"functionName":"iteratee","ranges":[{"startOffset":497095,"endOffset":497222,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":498537,"endOffset":498631,"count":0}],"isBlockCoverage":false},{"functionName":"matchesProperty","ranges":[{"startOffset":499895,"endOffset":500021,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":500771,"endOffset":500887,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":501685,"endOffset":501801,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":503001,"endOffset":504216,"count":5},{"startOffset":503156,"endOffset":503229,"count":4},{"startOffset":503211,"endOffset":503227,"count":0},{"startOffset":503231,"endOffset":503373,"count":0},{"startOffset":503412,"endOffset":503433,"count":1},{"startOffset":503435,"endOffset":503453,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":503524,"endOffset":504186,"count":323},{"startOffset":503641,"endOffset":504178,"count":317}],"isBlockCoverage":true},{"functionName":"object.<computed>","ranges":[{"startOffset":503684,"endOffset":504167,"count":57},{"startOffset":503762,"endOffset":503773,"count":0},{"startOffset":504078,"endOffset":504166,"count":0}],"isBlockCoverage":true},{"functionName":"noConflict","ranges":[{"startOffset":504549,"endOffset":504660,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":504891,"endOffset":504947,"count":0}],"isBlockCoverage":false},{"functionName":"nthArg","ranges":[{"startOffset":505507,"endOffset":505639,"count":0}],"isBlockCoverage":false},{"functionName":"property","ranges":[{"startOffset":508727,"endOffset":508837,"count":24},{"startOffset":508806,"endOffset":508830,"count":0}],"isBlockCoverage":true},{"functionName":"propertyOf","ranges":[{"startOffset":509465,"endOffset":509606,"count":0}],"isBlockCoverage":false},{"functionName":"stubArray","ranges":[{"startOffset":512191,"endOffset":512236,"count":0}],"isBlockCoverage":false},{"functionName":"stubFalse","ranges":[{"startOffset":512504,"endOffset":512552,"count":0}],"isBlockCoverage":false},{"functionName":"stubObject","ranges":[{"startOffset":512961,"endOffset":513007,"count":0}],"isBlockCoverage":false},{"functionName":"stubString","ranges":[{"startOffset":513286,"endOffset":513332,"count":0}],"isBlockCoverage":false},{"functionName":"stubTrue","ranges":[{"startOffset":513595,"endOffset":513641,"count":0}],"isBlockCoverage":false},{"functionName":"times","ranges":[{"startOffset":514249,"endOffset":514666,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":515076,"endOffset":515264,"count":0}],"isBlockCoverage":false},{"functionName":"uniqueId","ranges":[{"startOffset":515691,"endOffset":515788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":516260,"endOffset":516322,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":517256,"endOffset":517324,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":518298,"endOffset":518431,"count":0}],"isBlockCoverage":false},{"functionName":"maxBy","ranges":[{"startOffset":519218,"endOffset":519379,"count":0}],"isBlockCoverage":false},{"functionName":"mean","ranges":[{"startOffset":519700,"endOffset":519768,"count":0}],"isBlockCoverage":false},{"functionName":"meanBy","ranges":[{"startOffset":520542,"endOffset":520638,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":521068,"endOffset":521201,"count":0}],"isBlockCoverage":false},{"functionName":"minBy","ranges":[{"startOffset":521988,"endOffset":522149,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":522575,"endOffset":522657,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":523598,"endOffset":523670,"count":0}],"isBlockCoverage":false},{"functionName":"sum","ranges":[{"startOffset":523994,"endOffset":524106,"count":0}],"isBlockCoverage":false},{"functionName":"sumBy","ranges":[{"startOffset":524876,"endOffset":525016,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":534928,"endOffset":535167,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":534989,"endOffset":535138,"count":306},{"startOffset":535082,"endOffset":535130,"count":153}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":535543,"endOffset":535618,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":535723,"endOffset":536453,"count":2}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":535795,"endOffset":536314,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":536369,"endOffset":536446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":536569,"endOffset":537019,"count":3},{"startOffset":536673,"endOffset":536699,"count":2}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":536744,"endOffset":537012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":537115,"endOffset":537314,"count":2},{"startOffset":537182,"endOffset":537191,"count":1},{"startOffset":537192,"endOffset":537196,"count":1}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":537242,"endOffset":537307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":537416,"endOffset":537648,"count":2},{"startOffset":537483,"endOffset":537487,"count":1},{"startOffset":537488,"endOffset":537497,"count":1}],"isBlockCoverage":true},{"functionName":"LazyWrapper.<computed>","ranges":[{"startOffset":537543,"endOffset":537641,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.compact","ranges":[{"startOffset":537688,"endOffset":537742,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.find","ranges":[{"startOffset":537778,"endOffset":537849,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.findLast","ranges":[{"startOffset":537889,"endOffset":537961,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":538011,"endOffset":538220,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.reject","ranges":[{"startOffset":538259,"endOffset":538344,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.slice","ranges":[{"startOffset":538381,"endOffset":538879,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.takeRightWhile","ranges":[{"startOffset":538925,"endOffset":539012,"count":0}],"isBlockCoverage":false},{"functionName":"LazyWrapper.toArray","ranges":[{"startOffset":539051,"endOffset":539111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":539208,"endOffset":541000,"count":19},{"startOffset":539412,"endOffset":539462,"count":2},{"startOffset":539446,"endOffset":539455,"count":1},{"startOffset":539456,"endOffset":539460,"count":1},{"startOffset":539463,"endOffset":539475,"count":17},{"startOffset":539511,"endOffset":539538,"count":17},{"startOffset":539564,"endOffset":539589,"count":0}],"isBlockCoverage":true},{"functionName":"lodash.<computed>","ranges":[{"startOffset":539627,"endOffset":540993,"count":38},{"startOffset":539705,"endOffset":539710,"count":0},{"startOffset":540068,"endOffset":540084,"count":0},{"startOffset":540085,"endOffset":540117,"count":0},{"startOffset":540118,"endOffset":540141,"count":0},{"startOffset":540143,"endOffset":540271,"count":0},{"startOffset":540400,"endOffset":540412,"count":0},{"startOffset":540444,"endOffset":540456,"count":0},{"startOffset":540497,"endOffset":540768,"count":0},{"startOffset":540793,"endOffset":540804,"count":0},{"startOffset":540806,"endOffset":540858,"count":0},{"startOffset":540927,"endOffset":540975,"count":0}],"isBlockCoverage":true},{"functionName":"interceptor","ranges":[{"startOffset":539882,"endOffset":540045,"count":38},{"startOffset":540001,"endOffset":540012,"count":0},{"startOffset":540014,"endOffset":540025,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":541123,"endOffset":541708,"count":6},{"startOffset":541252,"endOffset":541259,"count":3},{"startOffset":541260,"endOffset":541268,"count":3}],"isBlockCoverage":true},{"functionName":"lodash.<computed>","ranges":[{"startOffset":541369,"endOffset":541701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":541804,"endOffset":542119,"count":19},{"startOffset":541990,"endOffset":542032,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":543749,"endOffset":543783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"640","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13305,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"useInflection","ranges":[{"startOffset":1243,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"camelizeIf","ranges":[{"startOffset":1350,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"underscoredIf","ranges":[{"startOffset":1511,"endOffset":1643,"count":46},{"startOffset":1589,"endOffset":1624,"count":0}],"isBlockCoverage":true},{"functionName":"isPrimitive","ranges":[{"startOffset":1683,"endOffset":1796,"count":19}],"isBlockCoverage":true},{"functionName":"mergeDefaults","ranges":[{"startOffset":1832,"endOffset":2147,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1890,"endOffset":2143,"count":36},{"startOffset":1960,"endOffset":1985,"count":32},{"startOffset":1987,"endOffset":2139,"count":14},{"startOffset":2025,"endOffset":2053,"count":0},{"startOffset":2055,"endOffset":2107,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":2187,"endOffset":2733,"count":10},{"startOffset":2258,"endOffset":2714,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2278,"endOffset":2708,"count":62},{"startOffset":2324,"endOffset":2702,"count":57},{"startOffset":2394,"endOffset":2694,"count":0}],"isBlockCoverage":true},{"functionName":"spliceStr","ranges":[{"startOffset":2757,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"camelize","ranges":[{"startOffset":2898,"endOffset":3000,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2967,"endOffset":2996,"count":3}],"isBlockCoverage":true},{"functionName":"underscore","ranges":[{"startOffset":3030,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"singularize","ranges":[{"startOffset":3129,"endOffset":3196,"count":5}],"isBlockCoverage":true},{"functionName":"pluralize","ranges":[{"startOffset":3232,"endOffset":3295,"count":5}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":3327,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamedParameters","ranges":[{"startOffset":3479,"endOffset":3642,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDeep","ranges":[{"startOffset":3698,"endOffset":4045,"count":145},{"startOffset":3747,"endOffset":3752,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3784,"endOffset":4041,"count":751},{"startOffset":3824,"endOffset":3848,"count":682},{"startOffset":3850,"endOffset":3878,"count":245},{"startOffset":3878,"endOffset":3897,"count":506},{"startOffset":3897,"endOffset":3924,"count":438},{"startOffset":3926,"endOffset":3952,"count":68},{"startOffset":3952,"endOffset":3966,"count":438},{"startOffset":3966,"endOffset":4001,"count":419},{"startOffset":4003,"endOffset":4037,"count":0}],"isBlockCoverage":true},{"functionName":"mapFinderOptions","ranges":[{"startOffset":4077,"endOffset":4427,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4323,"endOffset":4362,"count":104}],"isBlockCoverage":true},{"functionName":"mapOptionFieldNames","ranges":[{"startOffset":4473,"endOffset":5000,"count":24},{"startOffset":4561,"endOffset":4857,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4611,"endOffset":4851,"count":116},{"startOffset":4667,"endOffset":4679,"count":0},{"startOffset":4761,"endOffset":4826,"count":0}],"isBlockCoverage":true},{"functionName":"mapWhereFieldNames","ranges":[{"startOffset":5052,"endOffset":6047,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5200,"endOffset":6018,"count":23},{"startOffset":5349,"endOffset":5460,"count":0},{"startOffset":5510,"endOffset":5626,"count":0},{"startOffset":5628,"endOffset":5755,"count":0},{"startOffset":5804,"endOffset":6012,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5844,"endOffset":6002,"count":0}],"isBlockCoverage":false},{"functionName":"mapValueFieldNames","ranges":[{"startOffset":6097,"endOffset":6562,"count":6},{"startOffset":6204,"endOffset":6543,"count":56},{"startOffset":6400,"endOffset":6477,"count":0}],"isBlockCoverage":true},{"functionName":"isColString","ranges":[{"startOffset":6612,"endOffset":6734,"count":23},{"startOffset":6697,"endOffset":6731,"count":0}],"isBlockCoverage":true},{"functionName":"canTreatArrayAsAnd","ranges":[{"startOffset":6770,"endOffset":6880,"count":0}],"isBlockCoverage":false},{"functionName":"combineTableNames","ranges":[{"startOffset":6930,"endOffset":7098,"count":2},{"startOffset":7044,"endOffset":7069,"count":1},{"startOffset":7070,"endOffset":7095,"count":1}],"isBlockCoverage":true},{"functionName":"toDefaultValue","ranges":[{"startOffset":7146,"endOffset":7703,"count":7},{"startOffset":7223,"endOffset":7346,"count":0},{"startOffset":7388,"endOffset":7414,"count":0},{"startOffset":7456,"endOffset":7482,"count":0},{"startOffset":7521,"endOffset":7551,"count":0},{"startOffset":7580,"endOffset":7611,"count":0},{"startOffset":7642,"endOffset":7685,"count":0}],"isBlockCoverage":true},{"functionName":"defaultValueSchemable","ranges":[{"startOffset":7745,"endOffset":8036,"count":0}],"isBlockCoverage":false},{"functionName":"removeNullValuesFromHash","ranges":[{"startOffset":8092,"endOffset":8507,"count":6},{"startOffset":8194,"endOffset":8199,"count":3},{"startOffset":8264,"endOffset":8488,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8306,"endOffset":8462,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":8681,"endOffset":8804,"count":8},{"startOffset":8759,"endOffset":8790,"count":0}],"isBlockCoverage":true},{"functionName":"addTicks","ranges":[{"startOffset":8878,"endOffset":9005,"count":249},{"startOffset":8933,"endOffset":8945,"count":0}],"isBlockCoverage":true},{"functionName":"removeTicks","ranges":[{"startOffset":9035,"endOffset":9159,"count":498},{"startOffset":9093,"endOffset":9105,"count":0}],"isBlockCoverage":true},{"functionName":"flattenObjectDeep","ranges":[{"startOffset":9195,"endOffset":9722,"count":0}],"isBlockCoverage":false},{"functionName":"Fn","ranges":[{"startOffset":9876,"endOffset":9956,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":9959,"endOffset":10011,"count":0}],"isBlockCoverage":false},{"functionName":"Col","ranges":[{"startOffset":10069,"endOffset":10184,"count":0}],"isBlockCoverage":false},{"functionName":"Cast","ranges":[{"startOffset":10245,"endOffset":10380,"count":0}],"isBlockCoverage":false},{"functionName":"Literal","ranges":[{"startOffset":10446,"endOffset":10501,"count":0}],"isBlockCoverage":false},{"functionName":"Json","ranges":[{"startOffset":10570,"endOffset":10817,"count":0}],"isBlockCoverage":false},{"functionName":"Where","ranges":[{"startOffset":10881,"endOffset":11115,"count":0}],"isBlockCoverage":false},{"functionName":"getOperators","ranges":[{"startOffset":11141,"endOffset":11250,"count":71}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11220,"endOffset":11246,"count":0}],"isBlockCoverage":false},{"functionName":"getComplexKeys","ranges":[{"startOffset":11288,"endOffset":11373,"count":71}],"isBlockCoverage":true},{"functionName":"getComplexSize","ranges":[{"startOffset":11415,"endOffset":11518,"count":24},{"startOffset":11474,"endOffset":11486,"count":0}],"isBlockCoverage":true},{"functionName":"isWhereEmpty","ranges":[{"startOffset":11560,"endOffset":11658,"count":0}],"isBlockCoverage":false},{"functionName":"generateEnumName","ranges":[{"startOffset":11696,"endOffset":11792,"count":0}],"isBlockCoverage":false},{"functionName":"camelizeObjectKeys","ranges":[{"startOffset":11838,"endOffset":12004,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":12054,"endOffset":12496,"count":0}],"isBlockCoverage":false},{"functionName":"nameIndex","ranges":[{"startOffset":12526,"endOffset":12892,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":12924,"endOffset":13004,"count":0}],"isBlockCoverage":false},{"functionName":"safeStringifyJson","ranges":[{"startOffset":13038,"endOffset":13223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"641","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17962,"count":1},{"startOffset":6807,"endOffset":6864,"count":3},{"startOffset":17599,"endOffset":17731,"count":8},{"startOffset":17785,"endOffset":17884,"count":9}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":512,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":570,"endOffset":604,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":607,"endOffset":735,"count":77},{"startOffset":660,"endOffset":713,"count":16},{"startOffset":713,"endOffset":734,"count":61}],"isBlockCoverage":true},{"functionName":"bindParam","ranges":[{"startOffset":738,"endOffset":910,"count":57},{"startOffset":791,"endOffset":844,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":920,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":968,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":1111,"endOffset":1170,"count":28}],"isBlockCoverage":true},{"functionName":"STRING","ranges":[{"startOffset":1245,"endOffset":1476,"count":25},{"startOffset":1335,"endOffset":1344,"count":0}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1479,"endOffset":1595,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1598,"endOffset":1927,"count":0}],"isBlockCoverage":false},{"functionName":"get BINARY","ranges":[{"startOffset":1930,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"get BINARY","ranges":[{"startOffset":2032,"endOffset":2080,"count":0}],"isBlockCoverage":false},{"functionName":"CHAR","ranges":[{"startOffset":2113,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2220,"endOffset":2333,"count":0}],"isBlockCoverage":false},{"functionName":"TEXT","ranges":[{"startOffset":2368,"endOffset":2547,"count":1},{"startOffset":2450,"endOffset":2459,"count":0}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":2550,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2796,"endOffset":2974,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3011,"endOffset":3045,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":3048,"endOffset":3226,"count":0}],"isBlockCoverage":false},{"functionName":"NUMBER","ranges":[{"startOffset":3263,"endOffset":3657,"count":5},{"startOffset":3341,"endOffset":3399,"count":0}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":3660,"endOffset":4024,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4027,"endOffset":4232,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":4235,"endOffset":4531,"count":7},{"startOffset":4291,"endOffset":4320,"count":6},{"startOffset":4321,"endOffset":4351,"count":6},{"startOffset":4352,"endOffset":4370,"count":6},{"startOffset":4371,"endOffset":4391,"count":6},{"startOffset":4393,"endOffset":4421,"count":1},{"startOffset":4421,"endOffset":4508,"count":6},{"startOffset":4508,"endOffset":4530,"count":0}],"isBlockCoverage":true},{"functionName":"get UNSIGNED","ranges":[{"startOffset":4534,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"get ZEROFILL","ranges":[{"startOffset":4635,"endOffset":4733,"count":0}],"isBlockCoverage":false},{"functionName":"get UNSIGNED","ranges":[{"startOffset":4743,"endOffset":4795,"count":0}],"isBlockCoverage":false},{"functionName":"get ZEROFILL","ranges":[{"startOffset":4805,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4893,"endOffset":5096,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":5268,"endOffset":5376,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":5379,"endOffset":5564,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":5597,"endOffset":5705,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":5740,"endOffset":5848,"count":0}],"isBlockCoverage":false},{"functionName":"DECIMAL","ranges":[{"startOffset":5884,"endOffset":5998,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6001,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6175,"endOffset":6364,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":6412,"endOffset":6606,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":6610,"endOffset":6671,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":6675,"endOffset":6757,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6900,"endOffset":6938,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":6941,"endOffset":7130,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":7133,"endOffset":7569,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7649,"endOffset":7681,"count":0}],"isBlockCoverage":false},{"functionName":"DATE","ranges":[{"startOffset":7716,"endOffset":7895,"count":38},{"startOffset":7798,"endOffset":7807,"count":28},{"startOffset":7808,"endOffset":7821,"count":10}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":7898,"endOffset":7934,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":7937,"endOffset":8120,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":8123,"endOffset":8296,"count":8},{"startOffset":8197,"endOffset":8224,"count":4},{"startOffset":8225,"endOffset":8235,"count":0},{"startOffset":8237,"endOffset":8274,"count":0}],"isBlockCoverage":true},{"functionName":"_isChanged","ranges":[{"startOffset":8299,"endOffset":8639,"count":4},{"startOffset":8356,"endOffset":8366,"count":0},{"startOffset":8367,"endOffset":8500,"count":0},{"startOffset":8502,"endOffset":8529,"count":0},{"startOffset":8563,"endOffset":8589,"count":0},{"startOffset":8591,"endOffset":8618,"count":0}],"isBlockCoverage":true},{"functionName":"_applyTimezone","ranges":[{"startOffset":8642,"endOffset":8908,"count":9},{"startOffset":8748,"endOffset":8809,"count":0},{"startOffset":8877,"endOffset":8907,"count":0}],"isBlockCoverage":true},{"functionName":"_stringify","ranges":[{"startOffset":8911,"endOffset":9084,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":9123,"endOffset":9155,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9158,"endOffset":9226,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":9229,"endOffset":9393,"count":0}],"isBlockCoverage":false},{"functionName":"_isChanged","ranges":[{"startOffset":9396,"endOffset":9629,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":9666,"endOffset":9842,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":9881,"endOffset":9914,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9917,"endOffset":9974,"count":0}],"isBlockCoverage":false},{"functionName":"BLOB","ranges":[{"startOffset":10073,"endOffset":10252,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":10255,"endOffset":10498,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":10501,"endOffset":10704,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":10707,"endOffset":10980,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":10983,"endOffset":11025,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":11028,"endOffset":11278,"count":0}],"isBlockCoverage":false},{"functionName":"RANGE","ranges":[{"startOffset":11345,"endOffset":11690,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":11693,"endOffset":11997,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12032,"endOffset":12285,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12322,"endOffset":12575,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12612,"endOffset":12870,"count":0}],"isBlockCoverage":false},{"functionName":"VIRTUAL","ranges":[{"startOffset":12908,"endOffset":13097,"count":0}],"isBlockCoverage":false},{"functionName":"ENUM","ranges":[{"startOffset":13132,"endOffset":13490,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":13493,"endOffset":13693,"count":0}],"isBlockCoverage":false},{"functionName":"ARRAY","ranges":[{"startOffset":13729,"endOffset":13942,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":13945,"endOffset":13995,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":13998,"endOffset":14171,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":14181,"endOffset":14261,"count":0}],"isBlockCoverage":false},{"functionName":"GEOMETRY","ranges":[{"startOffset":14300,"endOffset":14497,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":14500,"endOffset":14623,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":14626,"endOffset":14752,"count":0}],"isBlockCoverage":false},{"functionName":"GEOGRAPHY","ranges":[{"startOffset":14827,"endOffset":15024,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":15027,"endOffset":15150,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":15153,"endOffset":15279,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15350,"endOffset":15557,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15592,"endOffset":15794,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":15832,"endOffset":16045,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":16084,"endOffset":16262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16745,"endOffset":16911,"count":39},{"startOffset":16829,"endOffset":16909,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17621,"endOffset":17727,"count":112},{"startOffset":17665,"endOffset":17723,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17807,"endOffset":17880,"count":151}],"isBlockCoverage":true}]},{"scriptId":"642","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/wkx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":421,"count":1}],"isBlockCoverage":true}]},{"scriptId":"643","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":777,"count":1}],"isBlockCoverage":true}]},{"scriptId":"644","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/geometry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12236,"count":1}],"isBlockCoverage":true},{"functionName":"Geometry","ranges":[{"startOffset":553,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.parse","ranges":[{"startOffset":674,"endOffset":1051,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._parseWkt","ranges":[{"startOffset":1077,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._parseWkb","ranges":[{"startOffset":2343,"endOffset":4662,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.parseTwkb","ranges":[{"startOffset":4688,"endOffset":7282,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.parseGeoJSON","ranges":[{"startOffset":7311,"endOffset":7375,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._parseGeoJSON","ranges":[{"startOffset":7405,"endOffset":8898,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.toEwkt","ranges":[{"startOffset":8931,"endOffset":9001,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.toEwkb","ranges":[{"startOffset":9034,"endOffset":9350,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._getWktType","ranges":[{"startOffset":9388,"endOffset":9732,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._getWktCoordinate","ranges":[{"startOffset":9776,"endOffset":9992,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._writeWkbType","ranges":[{"startOffset":10032,"endOffset":10651,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.getTwkbPrecision","ranges":[{"startOffset":10684,"endOffset":10964,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry._writeTwkbHeader","ranges":[{"startOffset":11007,"endOffset":11543,"count":0}],"isBlockCoverage":false},{"functionName":"Geometry.toGeoJSON","ranges":[{"startOffset":11579,"endOffset":12233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"645","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/point.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6221,"count":1}],"isBlockCoverage":true},{"functionName":"Point","ranges":[{"startOffset":217,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"Point.Z","ranges":[{"startOffset":517,"endOffset":643,"count":0}],"isBlockCoverage":false},{"functionName":"Point.M","ranges":[{"startOffset":658,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"Point.ZM","ranges":[{"startOffset":800,"endOffset":945,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseWkt","ranges":[{"startOffset":968,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseWkb","ranges":[{"startOffset":1466,"endOffset":1601,"count":0}],"isBlockCoverage":false},{"functionName":"Point._readWkbPoint","ranges":[{"startOffset":1628,"endOffset":1833,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseTwkb","ranges":[{"startOffset":1857,"endOffset":2415,"count":0}],"isBlockCoverage":false},{"functionName":"Point._readTwkbPoint","ranges":[{"startOffset":2443,"endOffset":2979,"count":0}],"isBlockCoverage":false},{"functionName":"Point._parseGeoJSON","ranges":[{"startOffset":3006,"endOffset":3083,"count":0}],"isBlockCoverage":false},{"functionName":"Point._readGeoJSONPoint","ranges":[{"startOffset":3114,"endOffset":3372,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toWkt","ranges":[{"startOffset":3401,"endOffset":3721,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toWkb","ranges":[{"startOffset":3750,"endOffset":4273,"count":0}],"isBlockCoverage":false},{"functionName":"Point._writeWkbPoint","ranges":[{"startOffset":4311,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toTwkb","ranges":[{"startOffset":4538,"endOffset":4931,"count":0}],"isBlockCoverage":false},{"functionName":"Point._writeTwkbPoint","ranges":[{"startOffset":4970,"endOffset":5574,"count":0}],"isBlockCoverage":false},{"functionName":"Point._getWkbSize","ranges":[{"startOffset":5609,"endOffset":5758,"count":0}],"isBlockCoverage":false},{"functionName":"Point.toGeoJSON","ranges":[{"startOffset":5791,"endOffset":6218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"646","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/binarywriter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2447,"count":1}],"isBlockCoverage":true},{"functionName":"BinaryWriter","ranges":[{"startOffset":34,"endOffset":177,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":181,"endOffset":395,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":224,"endOffset":391,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryWriter.writeBuffer","ranges":[{"startOffset":1574,"endOffset":1736,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryWriter.writeVarInt","ranges":[{"startOffset":1778,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryWriter.ensureSize","ranges":[{"startOffset":2063,"endOffset":2444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"647","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/zigzag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":32,"endOffset":103,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":118,"endOffset":190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/linestring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4952,"count":1}],"isBlockCoverage":true},{"functionName":"LineString","ranges":[{"startOffset":217,"endOffset":464,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.Z","ranges":[{"startOffset":523,"endOffset":656,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.M","ranges":[{"startOffset":676,"endOffset":809,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.ZM","ranges":[{"startOffset":830,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseWkt","ranges":[{"startOffset":1020,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseWkb","ranges":[{"startOffset":1469,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseTwkb","ranges":[{"startOffset":1863,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._parseGeoJSON","ranges":[{"startOffset":2397,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toWkt","ranges":[{"startOffset":2757,"endOffset":2952,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._toInnerWkt","ranges":[{"startOffset":2992,"endOffset":3239,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toWkb","ranges":[{"startOffset":3273,"endOffset":3616,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toTwkb","ranges":[{"startOffset":3651,"endOffset":4195,"count":0}],"isBlockCoverage":false},{"functionName":"LineString._getWkbSize","ranges":[{"startOffset":4235,"endOffset":4448,"count":0}],"isBlockCoverage":false},{"functionName":"LineString.toGeoJSON","ranges":[{"startOffset":4486,"endOffset":4949,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/polygon.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8508,"count":1}],"isBlockCoverage":true},{"functionName":"Polygon","ranges":[{"startOffset":214,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.Z","ranges":[{"startOffset":609,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.M","ranges":[{"startOffset":789,"endOffset":952,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.ZM","ranges":[{"startOffset":970,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseWkt","ranges":[{"startOffset":1184,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseWkb","ranges":[{"startOffset":1862,"endOffset":2654,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseTwkb","ranges":[{"startOffset":2680,"endOffset":3550,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._parseGeoJSON","ranges":[{"startOffset":3579,"endOffset":4244,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toWkt","ranges":[{"startOffset":4275,"endOffset":4470,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._toInnerWkt","ranges":[{"startOffset":4507,"endOffset":5113,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toWkb","ranges":[{"startOffset":5144,"endOffset":5912,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toTwkb","ranges":[{"startOffset":5944,"endOffset":6869,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon._getWkbSize","ranges":[{"startOffset":6906,"endOffset":7339,"count":0}],"isBlockCoverage":false},{"functionName":"Polygon.toGeoJSON","ranges":[{"startOffset":7374,"endOffset":8505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/multipoint.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4723,"count":1}],"isBlockCoverage":true},{"functionName":"MultiPoint","ranges":[{"startOffset":217,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.Z","ranges":[{"startOffset":524,"endOffset":657,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.M","ranges":[{"startOffset":677,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.ZM","ranges":[{"startOffset":831,"endOffset":993,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseWkt","ranges":[{"startOffset":1021,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseWkb","ranges":[{"startOffset":1470,"endOffset":1830,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseTwkb","ranges":[{"startOffset":1859,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._parseGeoJSON","ranges":[{"startOffset":2393,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toWkt","ranges":[{"startOffset":2766,"endOffset":3130,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toWkb","ranges":[{"startOffset":3164,"endOffset":3503,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toTwkb","ranges":[{"startOffset":3538,"endOffset":4082,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint._getWkbSize","ranges":[{"startOffset":4122,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPoint.toGeoJSON","ranges":[{"startOffset":4401,"endOffset":4720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/multilinestring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5758,"count":1}],"isBlockCoverage":true},{"functionName":"MultiLineString","ranges":[{"startOffset":265,"endOffset":547,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.Z","ranges":[{"startOffset":616,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.M","ranges":[{"startOffset":804,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.ZM","ranges":[{"startOffset":993,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseWkt","ranges":[{"startOffset":1223,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseWkb","ranges":[{"startOffset":1836,"endOffset":2246,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseTwkb","ranges":[{"startOffset":2280,"endOffset":3114,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._parseGeoJSON","ranges":[{"startOffset":3151,"endOffset":3563,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toWkt","ranges":[{"startOffset":3602,"endOffset":3981,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toWkb","ranges":[{"startOffset":4020,"endOffset":4379,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toTwkb","ranges":[{"startOffset":4419,"endOffset":5161,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString._getWkbSize","ranges":[{"startOffset":5206,"endOffset":5378,"count":0}],"isBlockCoverage":false},{"functionName":"MultiLineString.toGeoJSON","ranges":[{"startOffset":5421,"endOffset":5755,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/multipolygon.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6770,"count":1}],"isBlockCoverage":true},{"functionName":"MultiPolygon","ranges":[{"startOffset":256,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.Z","ranges":[{"startOffset":580,"endOffset":725,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.M","ranges":[{"startOffset":747,"endOffset":892,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.ZM","ranges":[{"startOffset":915,"endOffset":1091,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseWkt","ranges":[{"startOffset":1121,"endOffset":2086,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseWkb","ranges":[{"startOffset":2116,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseTwkb","ranges":[{"startOffset":2527,"endOffset":3734,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._parseGeoJSON","ranges":[{"startOffset":3768,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toWkt","ranges":[{"startOffset":4236,"endOffset":4600,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toWkb","ranges":[{"startOffset":4636,"endOffset":4983,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toTwkb","ranges":[{"startOffset":5020,"endOffset":6194,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon._getWkbSize","ranges":[{"startOffset":6236,"endOffset":6402,"count":0}],"isBlockCoverage":false},{"functionName":"MultiPolygon.toGeoJSON","ranges":[{"startOffset":6442,"endOffset":6767,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/geometrycollection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5023,"count":1}],"isBlockCoverage":true},{"functionName":"GeometryCollection","ranges":[{"startOffset":192,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.Z","ranges":[{"startOffset":546,"endOffset":719,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.M","ranges":[{"startOffset":747,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.ZM","ranges":[{"startOffset":949,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseWkt","ranges":[{"startOffset":1195,"endOffset":1704,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseWkb","ranges":[{"startOffset":1740,"endOffset":2166,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseTwkb","ranges":[{"startOffset":2203,"endOffset":2643,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._parseGeoJSON","ranges":[{"startOffset":2683,"endOffset":3074,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toWkt","ranges":[{"startOffset":3116,"endOffset":3492,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toWkb","ranges":[{"startOffset":3534,"endOffset":3893,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toTwkb","ranges":[{"startOffset":3936,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection._getWkbSize","ranges":[{"startOffset":4483,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"GeometryCollection.toGeoJSON","ranges":[{"startOffset":4699,"endOffset":5020,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/binaryreader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1719,"count":1}],"isBlockCoverage":true},{"functionName":"BinaryReader","ranges":[{"startOffset":34,"endOffset":178,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":182,"endOffset":507,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":233,"endOffset":503,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryReader.readVarInt","ranges":[{"startOffset":1395,"endOffset":1716,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/wkx/lib/wktparser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3645,"count":1}],"isBlockCoverage":true},{"functionName":"WktParser","ranges":[{"startOffset":99,"endOffset":178,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.match","ranges":[{"startOffset":210,"endOffset":504,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchRegex","ranges":[{"startOffset":542,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.isMatch","ranges":[{"startOffset":888,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchType","ranges":[{"startOffset":1215,"endOffset":1541,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchDimension","ranges":[{"startOffset":1583,"endOffset":1905,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.expectGroupStart","ranges":[{"startOffset":1949,"endOffset":2046,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.expectGroupEnd","ranges":[{"startOffset":2088,"endOffset":2183,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchCoordinate","ranges":[{"startOffset":2226,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.matchCoordinates","ranges":[{"startOffset":3164,"endOffset":3473,"count":0}],"isBlockCoverage":false},{"functionName":"WktParser.skipWhitespaces","ranges":[{"startOffset":3516,"endOffset":3642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5394,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":27}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1},{"startOffset":442,"endOffset":504,"count":29}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":26},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":57},{"startOffset":725,"endOffset":745,"count":5},{"startOffset":755,"endOffset":880,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":19}],"isBlockCoverage":true},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":26},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":35}],"isBlockCoverage":true},{"functionName":"AccessDeniedError","ranges":[{"startOffset":1250,"endOffset":1290,"count":1}],"isBlockCoverage":true},{"functionName":"AggregateError","ranges":[{"startOffset":1310,"endOffset":1346,"count":1}],"isBlockCoverage":true},{"functionName":"AssociationError","ranges":[{"startOffset":1368,"endOffset":1406,"count":3}],"isBlockCoverage":true},{"functionName":"AsyncQueueError","ranges":[{"startOffset":1427,"endOffset":1467,"count":1}],"isBlockCoverage":true},{"functionName":"BaseError","ranges":[{"startOffset":1482,"endOffset":1513,"count":2}],"isBlockCoverage":true},{"functionName":"BulkRecordError","ranges":[{"startOffset":1534,"endOffset":1572,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionAcquireTimeoutError","ranges":[{"startOffset":1607,"endOffset":1660,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionError","ranges":[{"startOffset":1681,"endOffset":1718,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionRefusedError","ranges":[{"startOffset":1746,"endOffset":1791,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionTimedOutError","ranges":[{"startOffset":1820,"endOffset":1867,"count":1}],"isBlockCoverage":true},{"functionName":"DatabaseError","ranges":[{"startOffset":1886,"endOffset":1921,"count":1}],"isBlockCoverage":true},{"functionName":"EagerLoadingError","ranges":[{"startOffset":1944,"endOffset":1984,"count":1}],"isBlockCoverage":true},{"functionName":"EmptyResultError","ranges":[{"startOffset":2006,"endOffset":2045,"count":2}],"isBlockCoverage":true},{"functionName":"ExclusionConstraintError","ranges":[{"startOffset":2075,"endOffset":2122,"count":1}],"isBlockCoverage":true},{"functionName":"ForeignKeyConstraintError","ranges":[{"startOffset":2153,"endOffset":2202,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotFoundError","ranges":[{"startOffset":2225,"endOffset":2266,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotReachableError","ranges":[{"startOffset":2293,"endOffset":2338,"count":1}],"isBlockCoverage":true},{"functionName":"InstanceError","ranges":[{"startOffset":2357,"endOffset":2392,"count":1}],"isBlockCoverage":true},{"functionName":"InvalidConnectionError","ranges":[{"startOffset":2420,"endOffset":2465,"count":1}],"isBlockCoverage":true},{"functionName":"OptimisticLockError","ranges":[{"startOffset":2490,"endOffset":2532,"count":1}],"isBlockCoverage":true},{"functionName":"QueryError","ranges":[{"startOffset":2548,"endOffset":2580,"count":1}],"isBlockCoverage":true},{"functionName":"SequelizeScopeError","ranges":[{"startOffset":2605,"endOffset":2647,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":2665,"endOffset":2699,"count":1}],"isBlockCoverage":true},{"functionName":"UniqueConstraintError","ranges":[{"startOffset":2726,"endOffset":2770,"count":5}],"isBlockCoverage":true},{"functionName":"UnknownConstraintError","ranges":[{"startOffset":2798,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationError","ranges":[{"startOffset":2864,"endOffset":2901,"count":3}],"isBlockCoverage":true},{"functionName":"ValidationErrorItem","ranges":[{"startOffset":2926,"endOffset":2975,"count":16}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemOrigin","ranges":[{"startOffset":3006,"endOffset":3061,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemType","ranges":[{"startOffset":3090,"endOffset":3143,"count":1}],"isBlockCoverage":true}]},{"scriptId":"657","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/base-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":532,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":307,"endOffset":331,"count":15}],"isBlockCoverage":true},{"functionName":"BaseError","ranges":[{"startOffset":370,"endOffset":454,"count":6}],"isBlockCoverage":true}]},{"scriptId":"658","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/database-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2253,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1564,"count":5}],"isBlockCoverage":true},{"functionName":"DatabaseError","ranges":[{"startOffset":1688,"endOffset":2163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"659","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/aggregate-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2227,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1565,"count":1}],"isBlockCoverage":true},{"functionName":"AggregateError","ranges":[{"startOffset":1690,"endOffset":1823,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1826,"endOffset":2134,"count":0}],"isBlockCoverage":false}]},{"scriptId":"660","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/association-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1588,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1271,"count":3}],"isBlockCoverage":true},{"functionName":"AssociationError","ranges":[{"startOffset":1398,"endOffset":1489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"661","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/bulk-record-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2014,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1567,"count":1}],"isBlockCoverage":true},{"functionName":"BulkRecordError","ranges":[{"startOffset":1693,"endOffset":1916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"662","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2024,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1566,"count":8}],"isBlockCoverage":true},{"functionName":"ConnectionError","ranges":[{"startOffset":1692,"endOffset":1928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/eager-loading-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1597,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1273,"count":1}],"isBlockCoverage":true},{"functionName":"EagerLoadingError","ranges":[{"startOffset":1401,"endOffset":1493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/empty-result-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1591,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1272,"count":2}],"isBlockCoverage":true},{"functionName":"EmptyResultError","ranges":[{"startOffset":1399,"endOffset":1490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"665","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/instance-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1570,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1268,"count":1}],"isBlockCoverage":true},{"functionName":"InstanceError","ranges":[{"startOffset":1392,"endOffset":1480,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/optimistic-lock-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2265,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1571,"count":1}],"isBlockCoverage":true},{"functionName":"OptimisticLockError","ranges":[{"startOffset":1701,"endOffset":2155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"667","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/query-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1552,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1265,"count":1}],"isBlockCoverage":true},{"functionName":"QueryError","ranges":[{"startOffset":1386,"endOffset":1471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/sequelize-scope-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1600,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1275,"count":1}],"isBlockCoverage":true},{"functionName":"SequelizeScopeError","ranges":[{"startOffset":1405,"endOffset":1490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/validation-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5444,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":143},{"startOffset":325,"endOffset":411,"count":0}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1},{"startOffset":603,"endOffset":665,"count":4}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":143},{"startOffset":1471,"endOffset":1476,"count":0}],"isBlockCoverage":true},{"functionName":"ValidationErrorItem","ranges":[{"startOffset":1548,"endOffset":1573,"count":16}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemOrigin","ranges":[{"startOffset":1604,"endOffset":1635,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItemType","ranges":[{"startOffset":1664,"endOffset":1693,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1706,"endOffset":1736,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1849,"endOffset":2148,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2231,"endOffset":2448,"count":1}],"isBlockCoverage":true},{"functionName":"ValidationErrorItem","ranges":[{"startOffset":2514,"endOffset":3639,"count":15},{"startOffset":2956,"endOffset":2961,"count":0},{"startOffset":3006,"endOffset":3013,"count":0},{"startOffset":3049,"endOffset":3056,"count":7},{"startOffset":3057,"endOffset":3063,"count":8},{"startOffset":3118,"endOffset":3125,"count":2},{"startOffset":3164,"endOffset":3171,"count":0},{"startOffset":3205,"endOffset":3212,"count":13},{"startOffset":3246,"endOffset":3251,"count":13},{"startOffset":3319,"endOffset":3356,"count":0}],"isBlockCoverage":true},{"functionName":"isValidationErrorItemOrigin","ranges":[{"startOffset":3642,"endOffset":3740,"count":15}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":3743,"endOffset":3806,"count":15}],"isBlockCoverage":true},{"functionName":"getValidatorKey","ranges":[{"startOffset":3809,"endOffset":4450,"count":0}],"isBlockCoverage":false},{"functionName":"ValidationError","ranges":[{"startOffset":4665,"endOffset":5174,"count":6},{"startOffset":4873,"endOffset":4878,"count":0},{"startOffset":4897,"endOffset":4934,"count":4},{"startOffset":4934,"endOffset":5105,"count":2},{"startOffset":5129,"endOffset":5170,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5033,"endOffset":5085,"count":11},{"startOffset":5054,"endOffset":5067,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5177,"endOffset":5348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/access-denied-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1614,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1273,"count":1}],"isBlockCoverage":true},{"functionName":"AccessDeniedError","ranges":[{"startOffset":1420,"endOffset":1510,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/connection-acquire-timeout-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1689,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1286,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionAcquireTimeoutError","ranges":[{"startOffset":1445,"endOffset":1547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/connection-refused-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1644,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionRefusedError","ranges":[{"startOffset":1430,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"673","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/connection-timed-out-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1653,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1280,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionTimedOutError","ranges":[{"startOffset":1433,"endOffset":1529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/host-not-found-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1617,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1274,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotFoundError","ranges":[{"startOffset":1421,"endOffset":1511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/host-not-reachable-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1641,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"HostNotReachableError","ranges":[{"startOffset":1429,"endOffset":1523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"676","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/invalid-connection-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1644,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"InvalidConnectionError","ranges":[{"startOffset":1430,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"677","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/database/exclusion-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2369,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1576,"count":1}],"isBlockCoverage":true},{"functionName":"ExclusionConstraintError","ranges":[{"startOffset":1724,"endOffset":2244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"678","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/database/foreign-key-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2762,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1},{"startOffset":603,"endOffset":665,"count":2}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"RelationshipType","ranges":[{"startOffset":1545,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1580,"endOffset":1622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1737,"endOffset":1873,"count":1}],"isBlockCoverage":true},{"functionName":"ForeignKeyConstraintError","ranges":[{"startOffset":1974,"endOffset":2632,"count":0}],"isBlockCoverage":false}]},{"scriptId":"679","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/database/timeout-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1598,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":2},{"startOffset":725,"endOffset":745,"count":0},{"startOffset":755,"endOffset":880,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1154,"endOffset":1192,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1240,"endOffset":1267,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":1403,"endOffset":1511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/database/unknown-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2370,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":2},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1574,"count":1}],"isBlockCoverage":true},{"functionName":"UnknownConstraintError","ranges":[{"startOffset":1720,"endOffset":2251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"681","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/validation/unique-constraint-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2598,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":16},{"startOffset":325,"endOffset":411,"count":0}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":1},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":5},{"startOffset":886,"endOffset":906,"count":3},{"startOffset":916,"endOffset":1041,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":1},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":16},{"startOffset":1471,"endOffset":1476,"count":0}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1536,"endOffset":1573,"count":5}],"isBlockCoverage":true},{"functionName":"UniqueConstraintError","ranges":[{"startOffset":1724,"endOffset":2482,"count":4},{"startOffset":1807,"endOffset":1811,"count":0},{"startOffset":1869,"endOffset":1905,"count":0},{"startOffset":1945,"endOffset":1970,"count":0},{"startOffset":1971,"endOffset":1992,"count":0},{"startOffset":2050,"endOffset":2054,"count":0},{"startOffset":2368,"endOffset":2372,"count":0}],"isBlockCoverage":true}]},{"scriptId":"682","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mssql/async-queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2868,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":293,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":453,"endOffset":513,"count":3}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":530,"endOffset":667,"count":1},{"startOffset":603,"endOffset":665,"count":2}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":686,"endOffset":1064,"count":2},{"startOffset":760,"endOffset":792,"count":0},{"startOffset":850,"endOffset":1041,"count":4},{"startOffset":886,"endOffset":906,"count":0},{"startOffset":916,"endOffset":1041,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":946,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1083,"endOffset":1368,"count":2},{"startOffset":1193,"endOffset":1197,"count":0},{"startOffset":1315,"endOffset":1353,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1273,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":1390,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncQueueError","ranges":[{"startOffset":1544,"endOffset":1565,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":1578,"endOffset":1603,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncQueueError","ranges":[{"startOffset":1824,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncQueue","ranges":[{"startOffset":1938,"endOffset":2175,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":2178,"endOffset":2367,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":2370,"endOffset":2787,"count":0}],"isBlockCoverage":false}]},{"scriptId":"683","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/validator-extras.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2220,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":153,"endOffset":213,"count":0}],"isBlockCoverage":false},{"functionName":"notEmpty","ranges":[{"startOffset":217,"endOffset":276,"count":43}],"isBlockCoverage":true},{"functionName":"len","ranges":[{"startOffset":280,"endOffset":345,"count":50}],"isBlockCoverage":true},{"functionName":"isUrl","ranges":[{"startOffset":349,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":397,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":448,"endOffset":495,"count":0}],"isBlockCoverage":false},{"functionName":"notIn","ranges":[{"startOffset":499,"endOffset":559,"count":0}],"isBlockCoverage":false},{"functionName":"regex","ranges":[{"startOffset":563,"endOffset":776,"count":16},{"startOffset":686,"endOffset":741,"count":0}],"isBlockCoverage":true},{"functionName":"notRegex","ranges":[{"startOffset":780,"endOffset":868,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimal","ranges":[{"startOffset":872,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":994,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":1096,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":1198,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":1287,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"notContains","ranges":[{"startOffset":1357,"endOffset":1423,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":1427,"endOffset":1508,"count":16}],"isBlockCoverage":true},{"functionName":"validator.isImmutable","ranges":[{"startOffset":1569,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"validator.notNull","ranges":[{"startOffset":1763,"endOffset":1821,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1845,"endOffset":1892,"count":16}],"isBlockCoverage":true},{"functionName":"validator.isDate","ranges":[{"startOffset":1952,"endOffset":2142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"684","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12012,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":15,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":7266,"endOffset":7476,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":7478,"endOffset":8223,"count":6},{"startOffset":7560,"endOffset":7635,"count":0},{"startOffset":7637,"endOffset":7733,"count":0},{"startOffset":7735,"endOffset":7863,"count":0},{"startOffset":7886,"endOffset":8222,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":8225,"endOffset":8320,"count":91},{"startOffset":8293,"endOffset":8298,"count":5},{"startOffset":8299,"endOffset":8317,"count":86}],"isBlockCoverage":true}]},{"scriptId":"685","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/toDate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":493,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"toDate","ranges":[{"startOffset":281,"endOffset":416,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/util/assertString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":113,"endOffset":491,"count":0}],"isBlockCoverage":false},{"functionName":"assertString","ranges":[{"startOffset":493,"endOffset":859,"count":50},{"startOffset":567,"endOffset":593,"count":0},{"startOffset":613,"endOffset":857,"count":0}],"isBlockCoverage":true}]},{"scriptId":"687","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/toFloat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":442,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":170,"endOffset":265,"count":1},{"startOffset":244,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"toFloat","ranges":[{"startOffset":267,"endOffset":365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"688","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isFloat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1081,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":245,"endOffset":340,"count":1},{"startOffset":313,"endOffset":318,"count":0}],"isBlockCoverage":true},{"functionName":"isFloat","ranges":[{"startOffset":342,"endOffset":1010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"689","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/alpha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5843,"count":1},{"startOffset":3658,"endOffset":3825,"count":7},{"startOffset":4096,"endOffset":4249,"count":17},{"startOffset":4384,"endOffset":4511,"count":2},{"startOffset":4654,"endOffset":4819,"count":2},{"startOffset":5331,"endOffset":5381,"count":3},{"startOffset":5435,"endOffset":5474,"count":29}],"isBlockCoverage":true}]},{"scriptId":"690","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/toInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":459,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"toInt","ranges":[{"startOffset":280,"endOffset":382,"count":0}],"isBlockCoverage":false}]},{"scriptId":"691","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/toBoolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":561,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"toBoolean","ranges":[{"startOffset":284,"endOffset":484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"692","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/equals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":458,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":281,"endOffset":381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"693","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/contains.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":318,"endOffset":413,"count":3},{"startOffset":386,"endOffset":391,"count":0}],"isBlockCoverage":true},{"functionName":"contains","ranges":[{"startOffset":490,"endOffset":859,"count":0}],"isBlockCoverage":false}]},{"scriptId":"694","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/util/toString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":922,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":109,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":489,"endOffset":845,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/util/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":484,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":106,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"696","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/matches.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"matches","ranges":[{"startOffset":282,"endOffset":516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isEmail.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6410,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":436,"endOffset":531,"count":5},{"startOffset":504,"endOffset":509,"count":0}],"isBlockCoverage":true},{"functionName":"validateDisplayName","ranges":[{"startOffset":1696,"endOffset":2582,"count":0}],"isBlockCoverage":false},{"functionName":"isEmail","ranges":[{"startOffset":2584,"endOffset":6333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"698","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isByteLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":258,"endOffset":263,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":287,"endOffset":665,"count":0}],"isBlockCoverage":false},{"functionName":"isByteLength","ranges":[{"startOffset":707,"endOffset":1142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"699","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isFQDN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2136,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":247,"endOffset":342,"count":2},{"startOffset":315,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"isFQDN","ranges":[{"startOffset":535,"endOffset":2059,"count":0}],"isBlockCoverage":false}]},{"scriptId":"700","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isIP.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3014,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":250,"endOffset":255,"count":0}],"isBlockCoverage":true},{"functionName":"isIP","ranges":[{"startOffset":2542,"endOffset":2937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isURL.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6270,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":362,"endOffset":457,"count":4},{"startOffset":430,"endOffset":435,"count":0}],"isBlockCoverage":true},{"functionName":"_slicedToArray","ranges":[{"startOffset":459,"endOffset":617,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableRest","ranges":[{"startOffset":619,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":814,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":1232,"endOffset":1415,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArrayLimit","ranges":[{"startOffset":1417,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithHoles","ranges":[{"startOffset":1908,"endOffset":1977,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":3032,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"checkHost","ranges":[{"startOffset":3128,"endOffset":3350,"count":0}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":3352,"endOffset":6193,"count":0}],"isBlockCoverage":false}]},{"scriptId":"702","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isMACAddress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1851,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":258,"endOffset":263,"count":0}],"isBlockCoverage":true},{"functionName":"isMACAddress","ranges":[{"startOffset":712,"endOffset":1774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"703","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isIPRange.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1424,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":243,"endOffset":338,"count":2},{"startOffset":311,"endOffset":316,"count":0}],"isBlockCoverage":true},{"functionName":"isIPRange","ranges":[{"startOffset":411,"endOffset":1347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"704","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isDate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5377,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":170,"endOffset":265,"count":1},{"startOffset":238,"endOffset":243,"count":0}],"isBlockCoverage":true},{"functionName":"_slicedToArray","ranges":[{"startOffset":267,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableRest","ranges":[{"startOffset":427,"endOffset":620,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArrayLimit","ranges":[{"startOffset":622,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithHoles","ranges":[{"startOffset":1113,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"_createForOfIteratorHelper","ranges":[{"startOffset":1184,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":2179,"endOffset":2595,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":2597,"endOffset":2780,"count":0}],"isBlockCoverage":false},{"functionName":"isValidFormat","ranges":[{"startOffset":2885,"endOffset":3082,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":3084,"endOffset":3288,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":3290,"endOffset":5300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"705","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isTime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":925,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":170,"endOffset":265,"count":1},{"startOffset":238,"endOffset":243,"count":0}],"isBlockCoverage":true},{"functionName":"isTime","ranges":[{"startOffset":638,"endOffset":848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"706","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isBoolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":799,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":438,"endOffset":722,"count":0}],"isBlockCoverage":false}]},{"scriptId":"707","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isLocale.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3802,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"isLocale","ranges":[{"startOffset":3627,"endOffset":3725,"count":0}],"isBlockCoverage":false}]},{"scriptId":"708","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isAlpha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1217,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":245,"endOffset":340,"count":1},{"startOffset":313,"endOffset":318,"count":0}],"isBlockCoverage":true},{"functionName":"isAlpha","ranges":[{"startOffset":342,"endOffset":1148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"709","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isAlphanumeric.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1252,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":252,"endOffset":347,"count":1},{"startOffset":320,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"isAlphanumeric","ranges":[{"startOffset":349,"endOffset":1176,"count":0}],"isBlockCoverage":false}]},{"scriptId":"710","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isNumeric.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":719,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":221,"endOffset":316,"count":1},{"startOffset":289,"endOffset":294,"count":0}],"isBlockCoverage":true},{"functionName":"isNumeric","ranges":[{"startOffset":354,"endOffset":642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isPassportNumber.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3733,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":194,"endOffset":289,"count":1},{"startOffset":262,"endOffset":267,"count":0}],"isBlockCoverage":true},{"functionName":"isPassportNumber","ranges":[{"startOffset":3330,"endOffset":3656,"count":0}],"isBlockCoverage":false}]},{"scriptId":"712","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isPort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":432,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":165,"endOffset":260,"count":1},{"startOffset":233,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"isPort","ranges":[{"startOffset":262,"endOffset":355,"count":0}],"isBlockCoverage":false}]},{"scriptId":"713","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1169,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"isInt","ranges":[{"startOffset":363,"endOffset":1092,"count":0}],"isBlockCoverage":false}]},{"scriptId":"714","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isLowercase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":463,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":189,"endOffset":284,"count":1},{"startOffset":257,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"isLowercase","ranges":[{"startOffset":286,"endOffset":386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"715","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isUppercase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":463,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":189,"endOffset":284,"count":1},{"startOffset":257,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"isUppercase","ranges":[{"startOffset":286,"endOffset":386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"716","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isIMEI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1269,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isIMEI","ranges":[{"startOffset":381,"endOffset":1192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"717","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isAscii.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":551,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"isAscii","ranges":[{"startOffset":388,"endOffset":474,"count":0}],"isBlockCoverage":false}]},{"scriptId":"718","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isFullWidth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":1},{"startOffset":285,"endOffset":290,"count":0}],"isBlockCoverage":true},{"functionName":"isFullWidth","ranges":[{"startOffset":430,"endOffset":524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"719","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isHalfWidth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":523,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":1},{"startOffset":285,"endOffset":290,"count":0}],"isBlockCoverage":true},{"functionName":"isHalfWidth","ranges":[{"startOffset":429,"endOffset":523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"720","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isVariableWidth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":606,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":285,"endOffset":380,"count":1},{"startOffset":353,"endOffset":358,"count":0}],"isBlockCoverage":true},{"functionName":"isVariableWidth","ranges":[{"startOffset":382,"endOffset":529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"721","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isMultibyte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":189,"endOffset":284,"count":1},{"startOffset":257,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"isMultibyte","ranges":[{"startOffset":394,"endOffset":488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"722","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isSemVer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":267,"endOffset":362,"count":2},{"startOffset":335,"endOffset":340,"count":0}],"isBlockCoverage":true},{"functionName":"isSemVer","ranges":[{"startOffset":767,"endOffset":872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"723","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/util/multilineRegex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":507,"count":1}],"isBlockCoverage":true},{"functionName":"multilineRegexp","ranges":[{"startOffset":291,"endOffset":430,"count":1}],"isBlockCoverage":true}]},{"scriptId":"724","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isSurrogatePair.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":193,"endOffset":288,"count":1},{"startOffset":261,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"isSurrogatePair","ranges":[{"startOffset":345,"endOffset":447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"725","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isDecimal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1255,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":353,"endOffset":448,"count":3},{"startOffset":421,"endOffset":426,"count":0}],"isBlockCoverage":true},{"functionName":"decimalRegExp","ranges":[{"startOffset":450,"endOffset":683,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimal","ranges":[{"startOffset":819,"endOffset":1178,"count":0}],"isBlockCoverage":false}]},{"scriptId":"726","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/util/includes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":355,"count":1}],"isBlockCoverage":true},{"functionName":"includes","ranges":[{"startOffset":122,"endOffset":224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"727","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isHexadecimal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":191,"endOffset":286,"count":1},{"startOffset":259,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"isHexadecimal","ranges":[{"startOffset":331,"endOffset":429,"count":0}],"isBlockCoverage":false}]},{"scriptId":"728","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isOctal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":185,"endOffset":280,"count":1},{"startOffset":253,"endOffset":258,"count":0}],"isBlockCoverage":true},{"functionName":"isOctal","ranges":[{"startOffset":313,"endOffset":399,"count":0}],"isBlockCoverage":false}]},{"scriptId":"729","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isDivisibleBy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":561,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":253,"endOffset":348,"count":2},{"startOffset":321,"endOffset":326,"count":0}],"isBlockCoverage":true},{"functionName":"isDivisibleBy","ranges":[{"startOffset":350,"endOffset":484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"730","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isHexColor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":528,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"isHexColor","ranges":[{"startOffset":359,"endOffset":451,"count":0}],"isBlockCoverage":false}]},{"scriptId":"731","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isRgbColor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1158,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"isRgbColor","ranges":[{"startOffset":713,"endOffset":1081,"count":0}],"isBlockCoverage":false}]},{"scriptId":"732","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isHSL.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1293,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"isHSL","ranges":[{"startOffset":859,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"733","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isISRC.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":546,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isISRC","ranges":[{"startOffset":385,"endOffset":469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"734","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isIBAN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6719,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":210,"endOffset":305,"count":1},{"startOffset":278,"endOffset":283,"count":0}],"isBlockCoverage":true},{"functionName":"hasOnlyValidCountryCodes","ranges":[{"startOffset":3609,"endOffset":3930,"count":0}],"isBlockCoverage":false},{"functionName":"hasValidIbanFormat","ranges":[{"startOffset":4484,"endOffset":5332,"count":0}],"isBlockCoverage":false},{"functionName":"hasValidIbanChecksum","ranges":[{"startOffset":5903,"endOffset":6414,"count":0}],"isBlockCoverage":false},{"functionName":"isIBAN","ranges":[{"startOffset":6416,"endOffset":6635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"735","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isBIC.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":884,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":238,"endOffset":333,"count":1},{"startOffset":306,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"isBIC","ranges":[{"startOffset":441,"endOffset":807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"736","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isISO31661Alpha2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2153,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":225,"endOffset":320,"count":1},{"startOffset":293,"endOffset":298,"count":0}],"isBlockCoverage":true},{"functionName":"isISO31661Alpha2","ranges":[{"startOffset":1925,"endOffset":2061,"count":0}],"isBlockCoverage":false}]},{"scriptId":"737","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isMD5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"isMD5","ranges":[{"startOffset":309,"endOffset":391,"count":0}],"isBlockCoverage":false}]},{"scriptId":"738","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isHash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":731,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isHash","ranges":[{"startOffset":484,"endOffset":654,"count":0}],"isBlockCoverage":false}]},{"scriptId":"739","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isJWT.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":725,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":245,"endOffset":340,"count":2},{"startOffset":313,"endOffset":318,"count":0}],"isBlockCoverage":true},{"functionName":"isJWT","ranges":[{"startOffset":342,"endOffset":648,"count":0}],"isBlockCoverage":false}]},{"scriptId":"740","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isBase64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1005,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":249,"endOffset":344,"count":2},{"startOffset":317,"endOffset":322,"count":0}],"isBlockCoverage":true},{"functionName":"isBase64","ranges":[{"startOffset":469,"endOffset":928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"741","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isJSON.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1272,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":247,"endOffset":342,"count":2},{"startOffset":315,"endOffset":320,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":344,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"isJSON","ranges":[{"startOffset":783,"endOffset":1195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"742","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isEmpty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":248,"endOffset":343,"count":2},{"startOffset":316,"endOffset":321,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":409,"endOffset":623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"743","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1379,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":283,"endOffset":661,"count":1},{"startOffset":466,"endOffset":638,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":419,"endOffset":463,"count":50}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":484,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"isLength","ranges":[{"startOffset":703,"endOffset":1302,"count":50},{"startOffset":832,"endOffset":888,"count":0},{"startOffset":978,"endOffset":982,"count":14},{"startOffset":1254,"endOffset":1299,"count":49}],"isBlockCoverage":true}]},{"scriptId":"744","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isUUID.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1012,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isUUID","ranges":[{"startOffset":748,"endOffset":935,"count":0}],"isBlockCoverage":false}]},{"scriptId":"745","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isMongoId.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":561,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":261,"endOffset":356,"count":2},{"startOffset":329,"endOffset":334,"count":0}],"isBlockCoverage":true},{"functionName":"isMongoId","ranges":[{"startOffset":358,"endOffset":484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"746","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isAfter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":797,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":168,"endOffset":263,"count":1},{"startOffset":236,"endOffset":241,"count":0}],"isBlockCoverage":true},{"functionName":"isAfter","ranges":[{"startOffset":265,"endOffset":720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"747","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isBefore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":735,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":246,"endOffset":341,"count":2},{"startOffset":314,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"isBefore","ranges":[{"startOffset":343,"endOffset":658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"748","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1517,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":251,"endOffset":346,"count":2},{"startOffset":319,"endOffset":324,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":348,"endOffset":726,"count":0}],"isBlockCoverage":false},{"functionName":"isIn","ranges":[{"startOffset":728,"endOffset":1440,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isLuhnNumber.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":944,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":258,"endOffset":263,"count":0}],"isBlockCoverage":true},{"functionName":"isLuhnNumber","ranges":[{"startOffset":287,"endOffset":867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"750","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isCreditCard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1896,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":262,"endOffset":357,"count":2},{"startOffset":330,"endOffset":335,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":782,"endOffset":1016,"count":1},{"startOffset":857,"endOffset":989,"count":7}],"isBlockCoverage":true},{"functionName":"isCreditCard","ranges":[{"startOffset":1021,"endOffset":1819,"count":0}],"isBlockCoverage":false}]},{"scriptId":"751","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isIdentityCard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12375,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":250,"endOffset":345,"count":2},{"startOffset":318,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"PL","ranges":[{"startOffset":372,"endOffset":1114,"count":0}],"isBlockCoverage":false},{"functionName":"ES","ranges":[{"startOffset":1122,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"FI","ranges":[{"startOffset":1824,"endOffset":2443,"count":0}],"isBlockCoverage":false},{"functionName":"IN","ranges":[{"startOffset":2451,"endOffset":3523,"count":0}],"isBlockCoverage":false},{"functionName":"IR","ranges":[{"startOffset":3531,"endOffset":3977,"count":0}],"isBlockCoverage":false},{"functionName":"IT","ranges":[{"startOffset":3985,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"NO","ranges":[{"startOffset":4232,"endOffset":4867,"count":0}],"isBlockCoverage":false},{"functionName":"TH","ranges":[{"startOffset":4875,"endOffset":5137,"count":0}],"isBlockCoverage":false},{"functionName":"LK","ranges":[{"startOffset":5145,"endOffset":5382,"count":0}],"isBlockCoverage":false},{"functionName":"heIL","ranges":[{"startOffset":5395,"endOffset":5884,"count":0}],"isBlockCoverage":false},{"functionName":"arLY","ranges":[{"startOffset":5897,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"arTN","ranges":[{"startOffset":6218,"endOffset":6431,"count":0}],"isBlockCoverage":false},{"functionName":"zhCN","ranges":[{"startOffset":6444,"endOffset":9701,"count":0}],"isBlockCoverage":false},{"functionName":"zhHK","ranges":[{"startOffset":9714,"endOffset":10813,"count":0}],"isBlockCoverage":false},{"functionName":"zhTW","ranges":[{"startOffset":10826,"endOffset":11682,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentityCard","ranges":[{"startOffset":11687,"endOffset":12298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"752","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isEAN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2461,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"getPositionWeightThroughLengthAndIndex","ranges":[{"startOffset":1297,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"calculateCheckDigit","ranges":[{"startOffset":1688,"endOffset":2041,"count":0}],"isBlockCoverage":false},{"functionName":"isEAN","ranges":[{"startOffset":2195,"endOffset":2384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"753","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isISIN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1886,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isISIN","ranges":[{"startOffset":624,"endOffset":1809,"count":0}],"isBlockCoverage":false}]},{"scriptId":"754","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isISBN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1754,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isISBN","ranges":[{"startOffset":393,"endOffset":1677,"count":0}],"isBlockCoverage":false}]},{"scriptId":"755","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isISSN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1018,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isISSN","ranges":[{"startOffset":319,"endOffset":941,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isTaxID.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42435,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":15,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":698,"endOffset":908,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":910,"endOffset":1655,"count":1},{"startOffset":992,"endOffset":1067,"count":0},{"startOffset":1069,"endOffset":1165,"count":0},{"startOffset":1167,"endOffset":1295,"count":0},{"startOffset":1318,"endOffset":1654,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1657,"endOffset":1752,"count":2},{"startOffset":1725,"endOffset":1730,"count":0}],"isBlockCoverage":true},{"functionName":"_toConsumableArray","ranges":[{"startOffset":1754,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableSpread","ranges":[{"startOffset":1909,"endOffset":2099,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":2101,"endOffset":2517,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArray","ranges":[{"startOffset":2519,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithoutHoles","ranges":[{"startOffset":2651,"endOffset":2742,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":2744,"endOffset":2927,"count":0}],"isBlockCoverage":false},{"functionName":"bgBgCheck","ranges":[{"startOffset":3918,"endOffset":5013,"count":0}],"isBlockCoverage":false},{"functionName":"isCanadianSIN","ranges":[{"startOffset":5495,"endOffset":5936,"count":0}],"isBlockCoverage":false},{"functionName":"csCzCheck","ranges":[{"startOffset":6281,"endOffset":8051,"count":0}],"isBlockCoverage":false},{"functionName":"deAtCheck","ranges":[{"startOffset":8178,"endOffset":8241,"count":0}],"isBlockCoverage":false},{"functionName":"deDeCheck","ranges":[{"startOffset":8510,"endOffset":9736,"count":0}],"isBlockCoverage":false},{"functionName":"dkDkCheck","ranges":[{"startOffset":9950,"endOffset":11454,"count":0}],"isBlockCoverage":false},{"functionName":"elCyCheck","ranges":[{"startOffset":11627,"endOffset":12274,"count":0}],"isBlockCoverage":false},{"functionName":"elGrCheck","ranges":[{"startOffset":12893,"endOffset":13206,"count":0}],"isBlockCoverage":false},{"functionName":"enIeCheck","ranges":[{"startOffset":13546,"endOffset":13964,"count":0}],"isBlockCoverage":false},{"functionName":"enUsGetPrefixes","ranges":[{"startOffset":14739,"endOffset":15154,"count":0}],"isBlockCoverage":false},{"functionName":"enUsCheck","ranges":[{"startOffset":15254,"endOffset":15341,"count":0}],"isBlockCoverage":false},{"functionName":"esEsCheck","ranges":[{"startOffset":15549,"endOffset":16426,"count":0}],"isBlockCoverage":false},{"functionName":"etEeCheck","ranges":[{"startOffset":16779,"endOffset":18118,"count":0}],"isBlockCoverage":false},{"functionName":"fiFiCheck","ranges":[{"startOffset":18306,"endOffset":19261,"count":0}],"isBlockCoverage":false},{"functionName":"frBeCheck","ranges":[{"startOffset":19436,"endOffset":20094,"count":0}],"isBlockCoverage":false},{"functionName":"frFrCheck","ranges":[{"startOffset":20256,"endOffset":20458,"count":0}],"isBlockCoverage":false},{"functionName":"frLuCheck","ranges":[{"startOffset":20618,"endOffset":21078,"count":0}],"isBlockCoverage":false},{"functionName":"hrHrCheck","ranges":[{"startOffset":21230,"endOffset":21296,"count":0}],"isBlockCoverage":false},{"functionName":"huHuCheck","ranges":[{"startOffset":21428,"endOffset":21725,"count":0}],"isBlockCoverage":false},{"functionName":"itItNameCheck","ranges":[{"startOffset":22384,"endOffset":23059,"count":0}],"isBlockCoverage":false},{"functionName":"itItCheck","ranges":[{"startOffset":23338,"endOffset":25912,"count":0}],"isBlockCoverage":false},{"functionName":"lvLvCheck","ranges":[{"startOffset":26296,"endOffset":27389,"count":0}],"isBlockCoverage":false},{"functionName":"mtMtCheck","ranges":[{"startOffset":27565,"endOffset":28348,"count":0}],"isBlockCoverage":false},{"functionName":"nlNlCheck","ranges":[{"startOffset":28595,"endOffset":28777,"count":0}],"isBlockCoverage":false},{"functionName":"plPlCheck","ranges":[{"startOffset":29032,"endOffset":30690,"count":0}],"isBlockCoverage":false},{"functionName":"ptBrCheck","ranges":[{"startOffset":30863,"endOffset":32999,"count":0}],"isBlockCoverage":false},{"functionName":"ptPtCheck","ranges":[{"startOffset":33175,"endOffset":33456,"count":0}],"isBlockCoverage":false},{"functionName":"roRoCheck","ranges":[{"startOffset":33788,"endOffset":35054,"count":0}],"isBlockCoverage":false},{"functionName":"skSkCheck","ranges":[{"startOffset":35395,"endOffset":36275,"count":0}],"isBlockCoverage":false},{"functionName":"slSiCheck","ranges":[{"startOffset":36430,"endOffset":36714,"count":0}],"isBlockCoverage":false},{"functionName":"svSeCheck","ranges":[{"startOffset":36892,"endOffset":38560,"count":0}],"isBlockCoverage":false},{"functionName":"isTaxID","ranges":[{"startOffset":41699,"endOffset":42358,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/util/algorithms.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3079,"count":1}],"isBlockCoverage":true},{"functionName":"iso7064Check","ranges":[{"startOffset":506,"endOffset":843,"count":0}],"isBlockCoverage":false},{"functionName":"luhnCheck","ranges":[{"startOffset":993,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"reverseMultiplyAndSum","ranges":[{"startOffset":1861,"endOffset":2029,"count":0}],"isBlockCoverage":false},{"functionName":"verhoeffCheck","ranges":[{"startOffset":2165,"endOffset":3079,"count":0}],"isBlockCoverage":false}]},{"scriptId":"758","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isMobilePhone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9175,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":1},{"startOffset":285,"endOffset":290,"count":0}],"isBlockCoverage":true},{"functionName":"isMobilePhone","ranges":[{"startOffset":8099,"endOffset":9112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"759","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isEthereumAddress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":497,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":195,"endOffset":290,"count":1},{"startOffset":263,"endOffset":268,"count":0}],"isBlockCoverage":true},{"functionName":"isEthereumAddress","ranges":[{"startOffset":326,"endOffset":420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"760","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isCurrency.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3400,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":251,"endOffset":346,"count":2},{"startOffset":319,"endOffset":324,"count":0}],"isBlockCoverage":true},{"functionName":"currencyRegex","ranges":[{"startOffset":348,"endOffset":2657,"count":0}],"isBlockCoverage":false},{"functionName":"isCurrency","ranges":[{"startOffset":3140,"endOffset":3323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isBtcAddress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":567,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":258,"endOffset":263,"count":0}],"isBlockCoverage":true},{"functionName":"isBtcAddress","ranges":[{"startOffset":378,"endOffset":490,"count":0}],"isBlockCoverage":false}]},{"scriptId":"762","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isISO6346.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1511,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":228,"endOffset":323,"count":1},{"startOffset":296,"endOffset":301,"count":0}],"isBlockCoverage":true},{"functionName":"isISO6346","ranges":[{"startOffset":594,"endOffset":1419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isISO6391.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1596,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isISO6391","ranges":[{"startOffset":1425,"endOffset":1519,"count":0}],"isBlockCoverage":false}]},{"scriptId":"764","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isISO8601.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2495,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isValidDate","ranges":[{"startOffset":1078,"endOffset":2099,"count":0}],"isBlockCoverage":false},{"functionName":"isISO8601","ranges":[{"startOffset":2102,"endOffset":2418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"765","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isRFC3339.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1368,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isRFC3339","ranges":[{"startOffset":1201,"endOffset":1291,"count":0}],"isBlockCoverage":false}]},{"scriptId":"766","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isISO31661Alpha3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2356,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":194,"endOffset":289,"count":1},{"startOffset":262,"endOffset":267,"count":0}],"isBlockCoverage":true},{"functionName":"isISO31661Alpha3","ranges":[{"startOffset":2143,"endOffset":2279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isISO4217.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1868,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":219,"endOffset":314,"count":1},{"startOffset":287,"endOffset":292,"count":0}],"isBlockCoverage":true},{"functionName":"isISO4217","ranges":[{"startOffset":1660,"endOffset":1781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"768","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isBase32.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":863,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":249,"endOffset":344,"count":2},{"startOffset":317,"endOffset":322,"count":0}],"isBlockCoverage":true},{"functionName":"isBase32","ranges":[{"startOffset":475,"endOffset":786,"count":0}],"isBlockCoverage":false}]},{"scriptId":"769","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isBase58.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":615,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"isBase58","ranges":[{"startOffset":409,"endOffset":538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"770","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isDataURI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1303,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isDataURI","ranges":[{"startOffset":448,"endOffset":1226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"771","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isMagnetURI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":721,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":189,"endOffset":284,"count":1},{"startOffset":257,"endOffset":262,"count":0}],"isBlockCoverage":true},{"functionName":"isMagnetURI","ranges":[{"startOffset":478,"endOffset":644,"count":0}],"isBlockCoverage":false}]},{"scriptId":"772","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isMailtoURI.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4947,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":307,"endOffset":402,"count":3},{"startOffset":375,"endOffset":380,"count":0}],"isBlockCoverage":true},{"functionName":"_slicedToArray","ranges":[{"startOffset":404,"endOffset":562,"count":0}],"isBlockCoverage":false},{"functionName":"_nonIterableRest","ranges":[{"startOffset":564,"endOffset":757,"count":0}],"isBlockCoverage":false},{"functionName":"_iterableToArrayLimit","ranges":[{"startOffset":759,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayWithHoles","ranges":[{"startOffset":1250,"endOffset":1319,"count":0}],"isBlockCoverage":false},{"functionName":"_createForOfIteratorHelper","ranges":[{"startOffset":1321,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"_unsupportedIterableToArray","ranges":[{"startOffset":2316,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"_arrayLikeToArray","ranges":[{"startOffset":2734,"endOffset":2917,"count":0}],"isBlockCoverage":false},{"functionName":"parseMailtoQueryString","ranges":[{"startOffset":2919,"endOffset":3947,"count":0}],"isBlockCoverage":false},{"functionName":"isMailtoURI","ranges":[{"startOffset":3949,"endOffset":4870,"count":0}],"isBlockCoverage":false}]},{"scriptId":"773","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/trim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":494,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":221,"endOffset":316,"count":2},{"startOffset":289,"endOffset":294,"count":0}],"isBlockCoverage":true},{"functionName":"trim","ranges":[{"startOffset":318,"endOffset":417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"774","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/rtrim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"rtrim","ranges":[{"startOffset":280,"endOffset":858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"775","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/ltrim.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":668,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":251,"endOffset":256,"count":0}],"isBlockCoverage":true},{"functionName":"ltrim","ranges":[{"startOffset":280,"endOffset":591,"count":0}],"isBlockCoverage":false}]},{"scriptId":"776","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isMimeType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2241,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":188,"endOffset":283,"count":1},{"startOffset":256,"endOffset":261,"count":0}],"isBlockCoverage":true},{"functionName":"isMimeType","ranges":[{"startOffset":2009,"endOffset":2164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"777","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isLatLong.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1264,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":250,"endOffset":345,"count":2},{"startOffset":318,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"isLatLong","ranges":[{"startOffset":718,"endOffset":1187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"778","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isPostalCode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2811,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":216,"endOffset":311,"count":1},{"startOffset":284,"endOffset":289,"count":0}],"isBlockCoverage":true},{"functionName":"isPostalCode","ranges":[{"startOffset":2206,"endOffset":2811,"count":0}],"isBlockCoverage":false}]},{"scriptId":"779","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":619,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":281,"endOffset":542,"count":0}],"isBlockCoverage":false}]},{"scriptId":"780","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":807,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":254,"endOffset":259,"count":0}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":283,"endOffset":730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"781","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/stripLow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":252,"endOffset":347,"count":2},{"startOffset":320,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"stripLow","ranges":[{"startOffset":349,"endOffset":565,"count":0}],"isBlockCoverage":false}]},{"scriptId":"782","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/blacklist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"blacklist","ranges":[{"startOffset":284,"endOffset":421,"count":0}],"isBlockCoverage":false}]},{"scriptId":"783","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/whitelist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":499,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":187,"endOffset":282,"count":1},{"startOffset":255,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"whitelist","ranges":[{"startOffset":284,"endOffset":422,"count":0}],"isBlockCoverage":false}]},{"scriptId":"784","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isWhitelisted.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":571,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":191,"endOffset":286,"count":1},{"startOffset":259,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"isWhitelisted","ranges":[{"startOffset":288,"endOffset":494,"count":0}],"isBlockCoverage":false}]},{"scriptId":"785","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/normalizeEmail.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6666,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":178,"endOffset":273,"count":1},{"startOffset":246,"endOffset":251,"count":0}],"isBlockCoverage":true},{"functionName":"dotsReplacer","ranges":[{"startOffset":4036,"endOffset":4130,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeEmail","ranges":[{"startOffset":4132,"endOffset":6589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"786","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isSlug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":522,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":184,"endOffset":279,"count":1},{"startOffset":252,"endOffset":257,"count":0}],"isBlockCoverage":true},{"functionName":"isSlug","ranges":[{"startOffset":353,"endOffset":445,"count":0}],"isBlockCoverage":false}]},{"scriptId":"787","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isLicensePlate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4849,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":192,"endOffset":287,"count":1},{"startOffset":260,"endOffset":265,"count":0}],"isBlockCoverage":true},{"functionName":"csCZ","ranges":[{"startOffset":319,"endOffset":411,"count":0}],"isBlockCoverage":false},{"functionName":"deDE","ranges":[{"startOffset":424,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"deLI","ranges":[{"startOffset":3032,"endOffset":3102,"count":0}],"isBlockCoverage":false},{"functionName":"enIN","ranges":[{"startOffset":3115,"endOffset":3232,"count":0}],"isBlockCoverage":false},{"functionName":"esAR","ranges":[{"startOffset":3245,"endOffset":3349,"count":0}],"isBlockCoverage":false},{"functionName":"fiFI","ranges":[{"startOffset":3362,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"huHU","ranges":[{"startOffset":3490,"endOffset":3835,"count":0}],"isBlockCoverage":false},{"functionName":"ptBR","ranges":[{"startOffset":3848,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"ptPT","ranges":[{"startOffset":3965,"endOffset":4085,"count":0}],"isBlockCoverage":false},{"functionName":"sqAL","ranges":[{"startOffset":4098,"endOffset":4204,"count":0}],"isBlockCoverage":false},{"functionName":"svSE","ranges":[{"startOffset":4217,"endOffset":4337,"count":0}],"isBlockCoverage":false},{"functionName":"isLicensePlate","ranges":[{"startOffset":4342,"endOffset":4772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"788","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isStrongPassword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":257,"endOffset":352,"count":2},{"startOffset":325,"endOffset":330,"count":0}],"isBlockCoverage":true},{"functionName":"countChars","ranges":[{"startOffset":910,"endOffset":1142,"count":0}],"isBlockCoverage":false},{"functionName":"analyzePassword","ranges":[{"startOffset":1187,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"scorePassword","ranges":[{"startOffset":1909,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"isStrongPassword","ranges":[{"startOffset":2537,"endOffset":3120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"789","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/validator/lib/isVAT.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8294,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":15,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":666,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":878,"endOffset":1623,"count":1},{"startOffset":960,"endOffset":1035,"count":0},{"startOffset":1037,"endOffset":1133,"count":0},{"startOffset":1135,"endOffset":1263,"count":0},{"startOffset":1286,"endOffset":1622,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1625,"endOffset":1720,"count":1},{"startOffset":1693,"endOffset":1698,"count":0}],"isBlockCoverage":true},{"functionName":"CH","ranges":[{"startOffset":1731,"endOffset":2452,"count":0}],"isBlockCoverage":false},{"functionName":"PT","ranges":[{"startOffset":2464,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"AT","ranges":[{"startOffset":2933,"endOffset":2993,"count":0}],"isBlockCoverage":false},{"functionName":"BE","ranges":[{"startOffset":3001,"endOffset":3061,"count":0}],"isBlockCoverage":false},{"functionName":"BG","ranges":[{"startOffset":3069,"endOffset":3131,"count":0}],"isBlockCoverage":false},{"functionName":"HR","ranges":[{"startOffset":3139,"endOffset":3199,"count":0}],"isBlockCoverage":false},{"functionName":"CY","ranges":[{"startOffset":3207,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"CZ","ranges":[{"startOffset":3274,"endOffset":3336,"count":0}],"isBlockCoverage":false},{"functionName":"DK","ranges":[{"startOffset":3344,"endOffset":3403,"count":0}],"isBlockCoverage":false},{"functionName":"EE","ranges":[{"startOffset":3411,"endOffset":3470,"count":0}],"isBlockCoverage":false},{"functionName":"FI","ranges":[{"startOffset":3478,"endOffset":3537,"count":0}],"isBlockCoverage":false},{"functionName":"FR","ranges":[{"startOffset":3545,"endOffset":3609,"count":0}],"isBlockCoverage":false},{"functionName":"DE","ranges":[{"startOffset":3617,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"EL","ranges":[{"startOffset":3684,"endOffset":3743,"count":0}],"isBlockCoverage":false},{"functionName":"HU","ranges":[{"startOffset":3751,"endOffset":3810,"count":0}],"isBlockCoverage":false},{"functionName":"IE","ranges":[{"startOffset":3818,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"IT","ranges":[{"startOffset":3894,"endOffset":3954,"count":0}],"isBlockCoverage":false},{"functionName":"LV","ranges":[{"startOffset":3962,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"LT","ranges":[{"startOffset":4030,"endOffset":4092,"count":0}],"isBlockCoverage":false},{"functionName":"LU","ranges":[{"startOffset":4100,"endOffset":4159,"count":0}],"isBlockCoverage":false},{"functionName":"MT","ranges":[{"startOffset":4167,"endOffset":4226,"count":0}],"isBlockCoverage":false},{"functionName":"NL","ranges":[{"startOffset":4234,"endOffset":4299,"count":0}],"isBlockCoverage":false},{"functionName":"PL","ranges":[{"startOffset":4307,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"RO","ranges":[{"startOffset":4439,"endOffset":4501,"count":0}],"isBlockCoverage":false},{"functionName":"SK","ranges":[{"startOffset":4509,"endOffset":4569,"count":0}],"isBlockCoverage":false},{"functionName":"SI","ranges":[{"startOffset":4577,"endOffset":4636,"count":0}],"isBlockCoverage":false},{"functionName":"ES","ranges":[{"startOffset":4644,"endOffset":4710,"count":0}],"isBlockCoverage":false},{"functionName":"SE","ranges":[{"startOffset":4718,"endOffset":4778,"count":0}],"isBlockCoverage":false},{"functionName":"AL","ranges":[{"startOffset":4838,"endOffset":4902,"count":0}],"isBlockCoverage":false},{"functionName":"MK","ranges":[{"startOffset":4910,"endOffset":4970,"count":0}],"isBlockCoverage":false},{"functionName":"AU","ranges":[{"startOffset":4978,"endOffset":5038,"count":0}],"isBlockCoverage":false},{"functionName":"BY","ranges":[{"startOffset":5046,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"CA","ranges":[{"startOffset":5115,"endOffset":5174,"count":0}],"isBlockCoverage":false},{"functionName":"IS","ranges":[{"startOffset":5182,"endOffset":5243,"count":0}],"isBlockCoverage":false},{"functionName":"IN","ranges":[{"startOffset":5251,"endOffset":5311,"count":0}],"isBlockCoverage":false},{"functionName":"ID","ranges":[{"startOffset":5319,"endOffset":5419,"count":0}],"isBlockCoverage":false},{"functionName":"IL","ranges":[{"startOffset":5427,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"KZ","ranges":[{"startOffset":5494,"endOffset":5553,"count":0}],"isBlockCoverage":false},{"functionName":"NZ","ranges":[{"startOffset":5561,"endOffset":5620,"count":0}],"isBlockCoverage":false},{"functionName":"NG","ranges":[{"startOffset":5628,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"NO","ranges":[{"startOffset":5712,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"PH","ranges":[{"startOffset":5782,"endOffset":5868,"count":0}],"isBlockCoverage":false},{"functionName":"RU","ranges":[{"startOffset":5876,"endOffset":5945,"count":0}],"isBlockCoverage":false},{"functionName":"SM","ranges":[{"startOffset":5953,"endOffset":6012,"count":0}],"isBlockCoverage":false},{"functionName":"SA","ranges":[{"startOffset":6020,"endOffset":6080,"count":0}],"isBlockCoverage":false},{"functionName":"RS","ranges":[{"startOffset":6088,"endOffset":6147,"count":0}],"isBlockCoverage":false},{"functionName":"TR","ranges":[{"startOffset":6165,"endOffset":6225,"count":0}],"isBlockCoverage":false},{"functionName":"UA","ranges":[{"startOffset":6233,"endOffset":6293,"count":0}],"isBlockCoverage":false},{"functionName":"GB","ranges":[{"startOffset":6301,"endOffset":6433,"count":0}],"isBlockCoverage":false},{"functionName":"UZ","ranges":[{"startOffset":6441,"endOffset":6500,"count":0}],"isBlockCoverage":false},{"functionName":"AR","ranges":[{"startOffset":6568,"endOffset":6628,"count":0}],"isBlockCoverage":false},{"functionName":"BO","ranges":[{"startOffset":6636,"endOffset":6695,"count":0}],"isBlockCoverage":false},{"functionName":"BR","ranges":[{"startOffset":6703,"endOffset":6817,"count":0}],"isBlockCoverage":false},{"functionName":"CL","ranges":[{"startOffset":6825,"endOffset":6890,"count":0}],"isBlockCoverage":false},{"functionName":"CO","ranges":[{"startOffset":6898,"endOffset":6958,"count":0}],"isBlockCoverage":false},{"functionName":"CR","ranges":[{"startOffset":6966,"endOffset":7028,"count":0}],"isBlockCoverage":false},{"functionName":"EC","ranges":[{"startOffset":7036,"endOffset":7096,"count":0}],"isBlockCoverage":false},{"functionName":"SV","ranges":[{"startOffset":7104,"endOffset":7181,"count":0}],"isBlockCoverage":false},{"functionName":"GT","ranges":[{"startOffset":7189,"endOffset":7254,"count":0}],"isBlockCoverage":false},{"functionName":"HN","ranges":[{"startOffset":7262,"endOffset":7316,"count":0}],"isBlockCoverage":false},{"functionName":"MX","ranges":[{"startOffset":7324,"endOffset":7395,"count":0}],"isBlockCoverage":false},{"functionName":"NI","ranges":[{"startOffset":7403,"endOffset":7479,"count":0}],"isBlockCoverage":false},{"functionName":"PA","ranges":[{"startOffset":7487,"endOffset":7541,"count":0}],"isBlockCoverage":false},{"functionName":"PY","ranges":[{"startOffset":7549,"endOffset":7616,"count":0}],"isBlockCoverage":false},{"functionName":"PE","ranges":[{"startOffset":7624,"endOffset":7684,"count":0}],"isBlockCoverage":false},{"functionName":"DO","ranges":[{"startOffset":7692,"endOffset":7821,"count":0}],"isBlockCoverage":false},{"functionName":"UY","ranges":[{"startOffset":7829,"endOffset":7889,"count":0}],"isBlockCoverage":false},{"functionName":"VE","ranges":[{"startOffset":7897,"endOffset":7985,"count":0}],"isBlockCoverage":false},{"functionName":"isVAT","ranges":[{"startOffset":8025,"endOffset":8294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"790","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/moment/moment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":174604,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":136,"endOffset":359,"count":1},{"startOffset":259,"endOffset":357,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":367,"endOffset":174599,"count":1},{"startOffset":3530,"endOffset":3870,"count":0},{"startOffset":11905,"endOffset":12166,"count":0},{"startOffset":25550,"endOffset":25818,"count":0},{"startOffset":149282,"endOffset":149334,"count":6},{"startOffset":149494,"endOffset":149540,"count":9}],"isBlockCoverage":true},{"functionName":"hooks","ranges":[{"startOffset":423,"endOffset":499,"count":9}],"isBlockCoverage":true},{"functionName":"setHookCallback","ranges":[{"startOffset":616,"endOffset":691,"count":1}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":697,"endOffset":865,"count":10}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":871,"endOffset":1129,"count":24},{"startOffset":1038,"endOffset":1112,"count":22}],"isBlockCoverage":true},{"functionName":"hasOwnProp","ranges":[{"startOffset":1135,"endOffset":1227,"count":122}],"isBlockCoverage":true},{"functionName":"isObjectEmpty","ranges":[{"startOffset":1233,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":1589,"endOffset":1657,"count":110}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":1663,"endOffset":1836,"count":40},{"startOffset":1745,"endOffset":1819,"count":34}],"isBlockCoverage":true},{"functionName":"isDate","ranges":[{"startOffset":1842,"endOffset":2007,"count":9},{"startOffset":1918,"endOffset":1990,"count":0}],"isBlockCoverage":true},{"functionName":"map","ranges":[{"startOffset":2013,"endOffset":2218,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2224,"endOffset":2563,"count":17},{"startOffset":2273,"endOffset":2363,"count":43},{"startOffset":2404,"endOffset":2452,"count":0},{"startOffset":2492,"endOffset":2538,"count":0}],"isBlockCoverage":true},{"functionName":"createUTC","ranges":[{"startOffset":2569,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"defaultParsingFlags","ranges":[{"startOffset":2708,"endOffset":3295,"count":9}],"isBlockCoverage":true},{"functionName":"getParsingFlags","ranges":[{"startOffset":3301,"endOffset":3440,"count":27},{"startOffset":3358,"endOffset":3412,"count":9}],"isBlockCoverage":true},{"functionName":"some","ranges":[{"startOffset":3553,"endOffset":3863,"count":0}],"isBlockCoverage":false},{"functionName":"isValid","ranges":[{"startOffset":3876,"endOffset":5124,"count":90},{"startOffset":3930,"endOffset":5091,"count":18},{"startOffset":4607,"endOffset":4641,"count":0},{"startOffset":4672,"endOffset":4903,"count":0},{"startOffset":5025,"endOffset":5081,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4039,"endOffset":4109,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalid","ranges":[{"startOffset":5130,"endOffset":5376,"count":0}],"isBlockCoverage":false},{"functionName":"copyConfig","ranges":[{"startOffset":5596,"endOffset":6937,"count":9},{"startOffset":5967,"endOffset":6007,"count":0},{"startOffset":6043,"endOffset":6083,"count":0},{"startOffset":6124,"endOffset":6174,"count":0},{"startOffset":6212,"endOffset":6256,"count":0},{"startOffset":6385,"endOffset":6435,"count":0},{"startOffset":6713,"endOffset":6901,"count":18},{"startOffset":6832,"endOffset":6887,"count":0}],"isBlockCoverage":true},{"functionName":"Moment","ranges":[{"startOffset":6974,"endOffset":7450,"count":9},{"startOffset":7101,"endOffset":7106,"count":0},{"startOffset":7138,"endOffset":7186,"count":0}],"isBlockCoverage":true},{"functionName":"isMoment","ranges":[{"startOffset":7456,"endOffset":7597,"count":18}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":7603,"endOffset":7851,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":7857,"endOffset":9288,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7940,"endOffset":9276,"count":0}],"isBlockCoverage":false},{"functionName":"deprecateSimple","ranges":[{"startOffset":9322,"endOffset":9579,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":9670,"endOffset":9884,"count":186},{"startOffset":9791,"endOffset":9867,"count":117}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9890,"endOffset":10680,"count":1},{"startOffset":9960,"endOffset":10221,"count":15},{"startOffset":10075,"endOffset":10130,"count":1},{"startOffset":10130,"endOffset":10197,"count":14},{"startOffset":10577,"endOffset":10605,"count":0}],"isBlockCoverage":true},{"functionName":"mergeConfigs","ranges":[{"startOffset":10686,"endOffset":11725,"count":1},{"startOffset":10833,"endOffset":11331,"count":4},{"startOffset":10933,"endOffset":10963,"count":0},{"startOffset":10965,"endOffset":11137,"count":0},{"startOffset":11244,"endOffset":11307,"count":0},{"startOffset":11367,"endOffset":11699,"count":13},{"startOffset":11483,"endOffset":11530,"count":11},{"startOffset":11545,"endOffset":11689,"count":4}],"isBlockCoverage":true},{"functionName":"Locale","ranges":[{"startOffset":11731,"endOffset":11832,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":11928,"endOffset":12159,"count":0}],"isBlockCoverage":false},{"functionName":"calendar","ranges":[{"startOffset":12415,"endOffset":12595,"count":0}],"isBlockCoverage":false},{"functionName":"zeroFill","ranges":[{"startOffset":12601,"endOffset":12973,"count":54},{"startOffset":12840,"endOffset":12845,"count":0},{"startOffset":12852,"endOffset":12857,"count":0}],"isBlockCoverage":true},{"functionName":"addFormatToken","ranges":[{"startOffset":13484,"endOffset":14241,"count":60},{"startOffset":13615,"endOffset":13715,"count":32},{"startOffset":13735,"endOffset":13794,"count":42},{"startOffset":13815,"endOffset":13985,"count":32},{"startOffset":14007,"endOffset":14235,"count":8}],"isBlockCoverage":true},{"functionName":"func","ranges":[{"startOffset":13636,"endOffset":13704,"count":45}],"isBlockCoverage":true},{"functionName":"formatTokenFunctions.<computed>","ranges":[{"startOffset":13863,"endOffset":13974,"count":54}],"isBlockCoverage":true},{"functionName":"formatTokenFunctions.<computed>","ranges":[{"startOffset":14053,"endOffset":14224,"count":0}],"isBlockCoverage":false},{"functionName":"removeFormattingTokens","ranges":[{"startOffset":14247,"endOffset":14433,"count":5},{"startOffset":14325,"endOffset":14386,"count":0}],"isBlockCoverage":true},{"functionName":"makeFormatFunction","ranges":[{"startOffset":14439,"endOffset":15151,"count":1},{"startOffset":14625,"endOffset":14841,"count":11},{"startOffset":14675,"endOffset":14749,"count":6},{"startOffset":14749,"endOffset":14831,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14858,"endOffset":15144,"count":9},{"startOffset":14964,"endOffset":15107,"count":99},{"startOffset":15033,"endOffset":15061,"count":54},{"startOffset":15082,"endOffset":15092,"count":45}],"isBlockCoverage":true},{"functionName":"formatMoment","ranges":[{"startOffset":15201,"endOffset":15529,"count":9},{"startOffset":15262,"endOffset":15322,"count":0},{"startOffset":15449,"endOffset":15478,"count":1}],"isBlockCoverage":true},{"functionName":"expandFormat","ranges":[{"startOffset":15535,"endOffset":16069,"count":9},{"startOffset":15824,"endOffset":16039,"count":0}],"isBlockCoverage":true},{"functionName":"replaceLongDateFormatTokens","ranges":[{"startOffset":15603,"endOffset":15716,"count":0}],"isBlockCoverage":false},{"functionName":"longDateFormat","ranges":[{"startOffset":16297,"endOffset":16998,"count":0}],"isBlockCoverage":false},{"functionName":"invalidDate","ranges":[{"startOffset":17050,"endOffset":17114,"count":0}],"isBlockCoverage":false},{"functionName":"ordinal","ranges":[{"startOffset":17203,"endOffset":17287,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTime","ranges":[{"startOffset":17711,"endOffset":17971,"count":0}],"isBlockCoverage":false},{"functionName":"pastFuture","ranges":[{"startOffset":17977,"endOffset":18173,"count":0}],"isBlockCoverage":false},{"functionName":"addUnitAlias","ranges":[{"startOffset":18202,"endOffset":18375,"count":16}],"isBlockCoverage":true},{"functionName":"normalizeUnits","ranges":[{"startOffset":18381,"endOffset":18546,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeObjectUnits","ranges":[{"startOffset":18552,"endOffset":19009,"count":0}],"isBlockCoverage":false},{"functionName":"addUnitPriority","ranges":[{"startOffset":19041,"endOffset":19126,"count":16}],"isBlockCoverage":true},{"functionName":"getPrioritizedUnits","ranges":[{"startOffset":19132,"endOffset":19495,"count":0}],"isBlockCoverage":false},{"functionName":"isLeapYear","ranges":[{"startOffset":19501,"endOffset":19607,"count":0}],"isBlockCoverage":false},{"functionName":"absFloor","ranges":[{"startOffset":19613,"endOffset":19804,"count":0}],"isBlockCoverage":false},{"functionName":"toInt","ranges":[{"startOffset":19810,"endOffset":20067,"count":9},{"startOffset":19954,"endOffset":19980,"count":0},{"startOffset":19982,"endOffset":20038,"count":0}],"isBlockCoverage":true},{"functionName":"makeGetSet","ranges":[{"startOffset":20073,"endOffset":20392,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20126,"endOffset":20385,"count":45},{"startOffset":20176,"endOffset":20314,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":20398,"endOffset":20542,"count":54},{"startOffset":20502,"endOffset":20506,"count":0},{"startOffset":20530,"endOffset":20535,"count":0}],"isBlockCoverage":true},{"functionName":"set$1","ranges":[{"startOffset":20548,"endOffset":21172,"count":0}],"isBlockCoverage":false},{"functionName":"stringGet","ranges":[{"startOffset":21194,"endOffset":21370,"count":0}],"isBlockCoverage":false},{"functionName":"stringSet","ranges":[{"startOffset":21376,"endOffset":21963,"count":0}],"isBlockCoverage":false},{"functionName":"addRegexToken","ranges":[{"startOffset":23223,"endOffset":23480,"count":72},{"startOffset":23330,"endOffset":23337,"count":14},{"startOffset":23350,"endOffset":23473,"count":58}],"isBlockCoverage":true},{"functionName":"regexes.<computed>","ranges":[{"startOffset":23352,"endOffset":23473,"count":0}],"isBlockCoverage":false},{"functionName":"getParseRegexForToken","ranges":[{"startOffset":23486,"endOffset":23710,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeFormat","ranges":[{"startOffset":23824,"endOffset":24181,"count":0}],"isBlockCoverage":false},{"functionName":"regexEscape","ranges":[{"startOffset":24187,"endOffset":24278,"count":0}],"isBlockCoverage":false},{"functionName":"addParseToken","ranges":[{"startOffset":24306,"endOffset":24772,"count":40},{"startOffset":24453,"endOffset":24493,"count":20},{"startOffset":24526,"endOffset":24645,"count":6},{"startOffset":24718,"endOffset":24766,"count":70}],"isBlockCoverage":true},{"functionName":"func","ranges":[{"startOffset":24547,"endOffset":24634,"count":0}],"isBlockCoverage":false},{"functionName":"addWeekParseToken","ranges":[{"startOffset":24778,"endOffset":25007,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24853,"endOffset":24999,"count":0}],"isBlockCoverage":false},{"functionName":"addTimeToArrayFromToken","ranges":[{"startOffset":25013,"endOffset":25203,"count":0}],"isBlockCoverage":false},{"functionName":"mod","ranges":[{"startOffset":25387,"endOffset":25447,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":25576,"endOffset":25811,"count":0}],"isBlockCoverage":false},{"functionName":"daysInMonth","ranges":[{"startOffset":25824,"endOffset":26166,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26228,"endOffset":26280,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26316,"endOffset":26401,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26438,"endOffset":26518,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26742,"endOffset":26827,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26856,"endOffset":26936,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26971,"endOffset":27043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27082,"endOffset":27423,"count":0}],"isBlockCoverage":false},{"functionName":"localeMonths","ranges":[{"startOffset":27874,"endOffset":28336,"count":0}],"isBlockCoverage":false},{"functionName":"localeMonthsShort","ranges":[{"startOffset":28342,"endOffset":28768,"count":0}],"isBlockCoverage":false},{"functionName":"handleStrictParse","ranges":[{"startOffset":28774,"endOffset":30377,"count":0}],"isBlockCoverage":false},{"functionName":"localeMonthsParse","ranges":[{"startOffset":30383,"endOffset":32227,"count":0}],"isBlockCoverage":false},{"functionName":"setMonth","ranges":[{"startOffset":32249,"endOffset":32936,"count":0}],"isBlockCoverage":false},{"functionName":"getSetMonth","ranges":[{"startOffset":32942,"endOffset":33176,"count":9},{"startOffset":32999,"endOffset":33114,"count":0}],"isBlockCoverage":true},{"functionName":"getDaysInMonth","ranges":[{"startOffset":33182,"endOffset":33270,"count":0}],"isBlockCoverage":false},{"functionName":"monthsShortRegex","ranges":[{"startOffset":33276,"endOffset":33948,"count":0}],"isBlockCoverage":false},{"functionName":"monthsRegex","ranges":[{"startOffset":33954,"endOffset":34581,"count":0}],"isBlockCoverage":false},{"functionName":"computeMonthsParse","ranges":[{"startOffset":34587,"endOffset":36062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36113,"endOffset":36214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36254,"endOffset":36307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36873,"endOffset":37006,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37033,"endOffset":37118,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37144,"endOffset":37218,"count":0}],"isBlockCoverage":false},{"functionName":"daysInYear","ranges":[{"startOffset":37242,"endOffset":37320,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.parseTwoDigitYear","ranges":[{"startOffset":37366,"endOffset":37455,"count":0}],"isBlockCoverage":false},{"functionName":"getIsLeapYear","ranges":[{"startOffset":37530,"endOffset":37602,"count":0}],"isBlockCoverage":false},{"functionName":"createDate","ranges":[{"startOffset":37608,"endOffset":38196,"count":0}],"isBlockCoverage":false},{"functionName":"createUTCDate","ranges":[{"startOffset":38202,"endOffset":38793,"count":0}],"isBlockCoverage":false},{"functionName":"firstWeekOffset","ranges":[{"startOffset":38842,"endOffset":39208,"count":0}],"isBlockCoverage":false},{"functionName":"dayOfYearFromWeeks","ranges":[{"startOffset":39326,"endOffset":40070,"count":0}],"isBlockCoverage":false},{"functionName":"weekOfYear","ranges":[{"startOffset":40076,"endOffset":40760,"count":0}],"isBlockCoverage":false},{"functionName":"weeksInYear","ranges":[{"startOffset":40766,"endOffset":41003,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41535,"endOffset":41637,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeek","ranges":[{"startOffset":41682,"endOffset":41783,"count":0}],"isBlockCoverage":false},{"functionName":"localeFirstDayOfWeek","ranges":[{"startOffset":41964,"endOffset":42034,"count":0}],"isBlockCoverage":false},{"functionName":"localeFirstDayOfYear","ranges":[{"startOffset":42040,"endOffset":42110,"count":0}],"isBlockCoverage":false},{"functionName":"getSetWeek","ranges":[{"startOffset":42132,"endOffset":42288,"count":0}],"isBlockCoverage":false},{"functionName":"getSetISOWeek","ranges":[{"startOffset":42294,"endOffset":42452,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42546,"endOffset":42631,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42667,"endOffset":42754,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42791,"endOffset":42873,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43352,"endOffset":43437,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43465,"endOffset":43552,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43581,"endOffset":43663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43712,"endOffset":44056,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44099,"endOffset":44180,"count":0}],"isBlockCoverage":false},{"functionName":"parseWeekday","ranges":[{"startOffset":44204,"endOffset":44550,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsoWeekday","ranges":[{"startOffset":44556,"endOffset":44755,"count":0}],"isBlockCoverage":false},{"functionName":"shiftWeekdays","ranges":[{"startOffset":44776,"endOffset":44867,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdays","ranges":[{"startOffset":45272,"endOffset":45733,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdaysShort","ranges":[{"startOffset":45739,"endOffset":45963,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdaysMin","ranges":[{"startOffset":45969,"endOffset":46185,"count":0}],"isBlockCoverage":false},{"functionName":"handleStrictParse$1","ranges":[{"startOffset":46191,"endOffset":48826,"count":0}],"isBlockCoverage":false},{"functionName":"localeWeekdaysParse","ranges":[{"startOffset":48832,"endOffset":51120,"count":0}],"isBlockCoverage":false},{"functionName":"getSetDayOfWeek","ranges":[{"startOffset":51142,"endOffset":51528,"count":0}],"isBlockCoverage":false},{"functionName":"getSetLocaleDayOfWeek","ranges":[{"startOffset":51534,"endOffset":51814,"count":0}],"isBlockCoverage":false},{"functionName":"getSetISODayOfWeek","ranges":[{"startOffset":51820,"endOffset":52372,"count":0}],"isBlockCoverage":false},{"functionName":"weekdaysRegex","ranges":[{"startOffset":52378,"endOffset":53029,"count":0}],"isBlockCoverage":false},{"functionName":"weekdaysShortRegex","ranges":[{"startOffset":53035,"endOffset":53731,"count":0}],"isBlockCoverage":false},{"functionName":"weekdaysMinRegex","ranges":[{"startOffset":53737,"endOffset":54415,"count":0}],"isBlockCoverage":false},{"functionName":"computeWeekdaysParse","ranges":[{"startOffset":54421,"endOffset":56134,"count":0}],"isBlockCoverage":false},{"functionName":"hFormat","ranges":[{"startOffset":56159,"endOffset":56225,"count":0}],"isBlockCoverage":false},{"functionName":"kFormat","ranges":[{"startOffset":56231,"endOffset":56292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56470,"endOffset":56560,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56598,"endOffset":56778,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56814,"endOffset":56897,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56935,"endOffset":57108,"count":0}],"isBlockCoverage":false},{"functionName":"meridiem","ranges":[{"startOffset":57116,"endOffset":57371,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57190,"endOffset":57363,"count":0}],"isBlockCoverage":false},{"functionName":"matchMeridiem","ranges":[{"startOffset":57543,"endOffset":57629,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58169,"endOffset":58293,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58326,"endOffset":58450,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58484,"endOffset":58607,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58635,"endOffset":58859,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58889,"endOffset":59207,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59235,"endOffset":59411,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59441,"endOffset":59711,"count":0}],"isBlockCoverage":false},{"functionName":"localeIsPM","ranges":[{"startOffset":59735,"endOffset":59972,"count":0}],"isBlockCoverage":false},{"functionName":"localeMeridiem","ranges":[{"startOffset":60345,"endOffset":60538,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":61270,"endOffset":61531,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeLocale","ranges":[{"startOffset":61537,"endOffset":61638,"count":0}],"isBlockCoverage":false},{"functionName":"chooseLocale","ranges":[{"startOffset":61911,"endOffset":62830,"count":0}],"isBlockCoverage":false},{"functionName":"isLocaleNameSane","ranges":[{"startOffset":62836,"endOffset":63006,"count":0}],"isBlockCoverage":false},{"functionName":"loadLocale","ranges":[{"startOffset":63012,"endOffset":63914,"count":1},{"startOffset":63231,"endOffset":63275,"count":0},{"startOffset":63276,"endOffset":63297,"count":0},{"startOffset":63298,"endOffset":63327,"count":0},{"startOffset":63328,"endOffset":63365,"count":0},{"startOffset":63376,"endOffset":63878,"count":0}],"isBlockCoverage":true},{"functionName":"getSetGlobalLocale","ranges":[{"startOffset":64089,"endOffset":64864,"count":2},{"startOffset":64206,"endOffset":64331,"count":1},{"startOffset":64475,"endOffset":64812,"count":0}],"isBlockCoverage":true},{"functionName":"defineLocale","ranges":[{"startOffset":64870,"endOffset":67074,"count":1},{"startOffset":65077,"endOffset":65583,"count":0},{"startOffset":65622,"endOffset":66403,"count":0},{"startOffset":66519,"endOffset":66666,"count":0},{"startOffset":66958,"endOffset":67068,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66566,"endOffset":66650,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":67080,"endOffset":68832,"count":0}],"isBlockCoverage":false},{"functionName":"getLocale","ranges":[{"startOffset":68865,"endOffset":69336,"count":10},{"startOffset":68928,"endOffset":68942,"count":1},{"startOffset":68943,"endOffset":68963,"count":0},{"startOffset":68965,"endOffset":69013,"count":0},{"startOffset":69033,"endOffset":69077,"count":9},{"startOffset":69077,"endOffset":69295,"count":1},{"startOffset":69260,"endOffset":69295,"count":0},{"startOffset":69295,"endOffset":69335,"count":0}],"isBlockCoverage":true},{"functionName":"listLocales","ranges":[{"startOffset":69342,"endOffset":69402,"count":0}],"isBlockCoverage":false},{"functionName":"checkOverflow","ranges":[{"startOffset":69408,"endOffset":70841,"count":9},{"startOffset":69495,"endOffset":69532,"count":0},{"startOffset":69534,"endOffset":70816,"count":0}],"isBlockCoverage":true},{"functionName":"configFromISO","ranges":[{"startOffset":73112,"endOffset":74985,"count":0}],"isBlockCoverage":false},{"functionName":"extractFromRFC2822Strings","ranges":[{"startOffset":74991,"endOffset":75488,"count":0}],"isBlockCoverage":false},{"functionName":"untruncateYear","ranges":[{"startOffset":75494,"endOffset":75731,"count":0}],"isBlockCoverage":false},{"functionName":"preprocessRFC2822","ranges":[{"startOffset":75737,"endOffset":76046,"count":0}],"isBlockCoverage":false},{"functionName":"checkWeekday","ranges":[{"startOffset":76052,"endOffset":76727,"count":0}],"isBlockCoverage":false},{"functionName":"calculateOffset","ranges":[{"startOffset":76733,"endOffset":77148,"count":0}],"isBlockCoverage":false},{"functionName":"configFromRFC2822","ranges":[{"startOffset":77196,"endOffset":78043,"count":0}],"isBlockCoverage":false},{"functionName":"configFromString","ranges":[{"startOffset":78155,"endOffset":78871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":79259,"endOffset":79366,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":79436,"endOffset":79602,"count":0}],"isBlockCoverage":false},{"functionName":"currentDateArray","ranges":[{"startOffset":79608,"endOffset":80031,"count":0}],"isBlockCoverage":false},{"functionName":"configFromArray","ranges":[{"startOffset":80284,"endOffset":83032,"count":0}],"isBlockCoverage":false},{"functionName":"dayOfYearFromWeekInfo","ranges":[{"startOffset":83038,"endOffset":85260,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.ISO_8601","ranges":[{"startOffset":85331,"endOffset":85345,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.RFC_2822","ranges":[{"startOffset":85418,"endOffset":85432,"count":0}],"isBlockCoverage":false},{"functionName":"configFromStringAndFormat","ranges":[{"startOffset":85481,"endOffset":88607,"count":0}],"isBlockCoverage":false},{"functionName":"meridiemFixWrap","ranges":[{"startOffset":88613,"endOffset":89273,"count":0}],"isBlockCoverage":false},{"functionName":"configFromStringAndArray","ranges":[{"startOffset":89331,"endOffset":91247,"count":0}],"isBlockCoverage":false},{"functionName":"configFromObject","ranges":[{"startOffset":91253,"endOffset":91708,"count":0}],"isBlockCoverage":false},{"functionName":"createFromConfig","ranges":[{"startOffset":91714,"endOffset":91998,"count":9},{"startOffset":91844,"endOffset":91971,"count":0}],"isBlockCoverage":true},{"functionName":"prepareConfig","ranges":[{"startOffset":92004,"endOffset":92898,"count":9},{"startOffset":92237,"endOffset":92303,"count":0},{"startOffset":92344,"endOffset":92419,"count":0},{"startOffset":92450,"endOffset":92514,"count":0},{"startOffset":92581,"endOffset":92795,"count":0},{"startOffset":92827,"endOffset":92868,"count":0}],"isBlockCoverage":true},{"functionName":"configFromInput","ranges":[{"startOffset":92904,"endOffset":93688,"count":0}],"isBlockCoverage":false},{"functionName":"createLocalOrUTC","ranges":[{"startOffset":93694,"endOffset":94522,"count":9},{"startOffset":93830,"endOffset":93902,"count":0},{"startOffset":93953,"endOffset":94025,"count":0},{"startOffset":94069,"endOffset":94092,"count":0},{"startOffset":94125,"endOffset":94146,"count":0},{"startOffset":94158,"endOffset":94200,"count":0}],"isBlockCoverage":true},{"functionName":"createLocal","ranges":[{"startOffset":94528,"endOffset":94658,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":94820,"endOffset":95111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":95283,"endOffset":95574,"count":0}],"isBlockCoverage":false},{"functionName":"pickBy","ranges":[{"startOffset":95864,"endOffset":96313,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":96353,"endOffset":96465,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":96471,"endOffset":96582,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":96598,"endOffset":96669,"count":0}],"isBlockCoverage":false},{"functionName":"isDurationValid","ranges":[{"startOffset":96863,"endOffset":97700,"count":0}],"isBlockCoverage":false},{"functionName":"isValid$1","ranges":[{"startOffset":97706,"endOffset":97764,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalid$1","ranges":[{"startOffset":97770,"endOffset":97840,"count":0}],"isBlockCoverage":false},{"functionName":"Duration","ranges":[{"startOffset":97846,"endOffset":99323,"count":0}],"isBlockCoverage":false},{"functionName":"isDuration","ranges":[{"startOffset":99329,"endOffset":99401,"count":0}],"isBlockCoverage":false},{"functionName":"absRound","ranges":[{"startOffset":99407,"endOffset":99581,"count":0}],"isBlockCoverage":false},{"functionName":"compareArrays","ranges":[{"startOffset":99647,"endOffset":100153,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":100178,"endOffset":100635,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100250,"endOffset":100627,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100814,"endOffset":100949,"count":0}],"isBlockCoverage":false},{"functionName":"offsetFromString","ranges":[{"startOffset":101103,"endOffset":101578,"count":9},{"startOffset":101178,"endOffset":101183,"count":0},{"startOffset":101291,"endOffset":101327,"count":0},{"startOffset":101373,"endOffset":101378,"count":0},{"startOffset":101428,"endOffset":101442,"count":0},{"startOffset":101532,"endOffset":101571,"count":0}],"isBlockCoverage":true},{"functionName":"cloneWithOffset","ranges":[{"startOffset":101663,"endOffset":102232,"count":0}],"isBlockCoverage":false},{"functionName":"getDateOffset","ranges":[{"startOffset":102238,"endOffset":102453,"count":0}],"isBlockCoverage":false},{"functionName":"hooks.updateOffset","ranges":[{"startOffset":102628,"endOffset":102642,"count":0}],"isBlockCoverage":false},{"functionName":"getSetOffset","ranges":[{"startOffset":103276,"endOffset":104772,"count":9},{"startOffset":103429,"endOffset":103487,"count":0},{"startOffset":103665,"endOffset":103717,"count":0},{"startOffset":103731,"endOffset":103830,"count":0},{"startOffset":103878,"endOffset":103944,"count":0},{"startOffset":104048,"endOffset":104107,"count":0},{"startOffset":104142,"endOffset":104651,"count":0},{"startOffset":104686,"endOffset":104766,"count":0}],"isBlockCoverage":true},{"functionName":"getSetZone","ranges":[{"startOffset":104778,"endOffset":105089,"count":0}],"isBlockCoverage":false},{"functionName":"setOffsetToUTC","ranges":[{"startOffset":105095,"endOffset":105190,"count":0}],"isBlockCoverage":false},{"functionName":"setOffsetToLocal","ranges":[{"startOffset":105196,"endOffset":105486,"count":0}],"isBlockCoverage":false},{"functionName":"setOffsetToParsedOffset","ranges":[{"startOffset":105492,"endOffset":105912,"count":0}],"isBlockCoverage":false},{"functionName":"hasAlignedHourOffset","ranges":[{"startOffset":105918,"endOffset":106144,"count":0}],"isBlockCoverage":false},{"functionName":"isDaylightSavingTime","ranges":[{"startOffset":106150,"endOffset":106350,"count":0}],"isBlockCoverage":false},{"functionName":"isDaylightSavingTimeShifted","ranges":[{"startOffset":106356,"endOffset":106900,"count":0}],"isBlockCoverage":false},{"functionName":"isLocal","ranges":[{"startOffset":106906,"endOffset":106986,"count":0}],"isBlockCoverage":false},{"functionName":"isUtcOffset","ranges":[{"startOffset":106992,"endOffset":107075,"count":0}],"isBlockCoverage":false},{"functionName":"isUtc","ranges":[{"startOffset":107081,"endOffset":107180,"count":0}],"isBlockCoverage":false},{"functionName":"createDuration","ranges":[{"startOffset":107770,"endOffset":110143,"count":0}],"isBlockCoverage":false},{"functionName":"parseIso","ranges":[{"startOffset":110240,"endOffset":110596,"count":0}],"isBlockCoverage":false},{"functionName":"positiveMomentsDifference","ranges":[{"startOffset":110602,"endOffset":110973,"count":0}],"isBlockCoverage":false},{"functionName":"momentsDifference","ranges":[{"startOffset":110979,"endOffset":111491,"count":0}],"isBlockCoverage":false},{"functionName":"createAdder","ranges":[{"startOffset":111557,"endOffset":112417,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":111612,"endOffset":112410,"count":0}],"isBlockCoverage":false},{"functionName":"addSubtract","ranges":[{"startOffset":112423,"endOffset":113183,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":113275,"endOffset":113376,"count":0}],"isBlockCoverage":false},{"functionName":"isMomentInput","ranges":[{"startOffset":113510,"endOffset":113845,"count":0}],"isBlockCoverage":false},{"functionName":"isMomentInputObject","ranges":[{"startOffset":113851,"endOffset":114914,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberOrStringArray","ranges":[{"startOffset":114920,"endOffset":115286,"count":0}],"isBlockCoverage":false},{"functionName":"isCalendarSpec","ranges":[{"startOffset":115292,"endOffset":115893,"count":0}],"isBlockCoverage":false},{"functionName":"getCalendarFormat","ranges":[{"startOffset":115899,"endOffset":116315,"count":0}],"isBlockCoverage":false},{"functionName":"calendar$1","ranges":[{"startOffset":116321,"endOffset":117495,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":117501,"endOffset":117558,"count":0}],"isBlockCoverage":false},{"functionName":"isAfter","ranges":[{"startOffset":117564,"endOffset":118027,"count":0}],"isBlockCoverage":false},{"functionName":"isBefore","ranges":[{"startOffset":118033,"endOffset":118495,"count":0}],"isBlockCoverage":false},{"functionName":"isBetween","ranges":[{"startOffset":118501,"endOffset":119140,"count":0}],"isBlockCoverage":false},{"functionName":"isSame","ranges":[{"startOffset":119146,"endOffset":119761,"count":0}],"isBlockCoverage":false},{"functionName":"isSameOrAfter","ranges":[{"startOffset":119767,"endOffset":119883,"count":0}],"isBlockCoverage":false},{"functionName":"isSameOrBefore","ranges":[{"startOffset":119889,"endOffset":120007,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":120013,"endOffset":121443,"count":0}],"isBlockCoverage":false},{"functionName":"monthDiff","ranges":[{"startOffset":121449,"endOffset":122460,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":122572,"endOffset":122684,"count":0}],"isBlockCoverage":false},{"functionName":"toISOString","ranges":[{"startOffset":122690,"endOffset":123688,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":123950,"endOffset":124606,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":124612,"endOffset":124912,"count":9},{"startOffset":124669,"endOffset":124799,"count":0}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":124918,"endOffset":125316,"count":0}],"isBlockCoverage":false},{"functionName":"fromNow","ranges":[{"startOffset":125322,"endOffset":125417,"count":0}],"isBlockCoverage":false},{"functionName":"to","ranges":[{"startOffset":125423,"endOffset":125819,"count":0}],"isBlockCoverage":false},{"functionName":"toNow","ranges":[{"startOffset":125825,"endOffset":125916,"count":0}],"isBlockCoverage":false},{"functionName":"locale","ranges":[{"startOffset":126090,"endOffset":126415,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":126606,"endOffset":126787,"count":0}],"isBlockCoverage":false},{"functionName":"localeData","ranges":[{"startOffset":126800,"endOffset":126858,"count":18}],"isBlockCoverage":true},{"functionName":"mod$1","ranges":[{"startOffset":127118,"endOffset":127218,"count":0}],"isBlockCoverage":false},{"functionName":"localStartOfDate","ranges":[{"startOffset":127224,"endOffset":127575,"count":0}],"isBlockCoverage":false},{"functionName":"utcStartOfDate","ranges":[{"startOffset":127581,"endOffset":127908,"count":0}],"isBlockCoverage":false},{"functionName":"startOf","ranges":[{"startOffset":127914,"endOffset":129905,"count":0}],"isBlockCoverage":false},{"functionName":"endOf","ranges":[{"startOffset":129911,"endOffset":132186,"count":0}],"isBlockCoverage":false},{"functionName":"valueOf","ranges":[{"startOffset":132192,"endOffset":132282,"count":0}],"isBlockCoverage":false},{"functionName":"unix","ranges":[{"startOffset":132288,"endOffset":132361,"count":0}],"isBlockCoverage":false},{"functionName":"toDate","ranges":[{"startOffset":132367,"endOffset":132433,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":132439,"endOffset":132681,"count":0}],"isBlockCoverage":false},{"functionName":"toObject","ranges":[{"startOffset":132687,"endOffset":132994,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":133000,"endOffset":133127,"count":0}],"isBlockCoverage":false},{"functionName":"isValid$2","ranges":[{"startOffset":133133,"endOffset":133191,"count":81}],"isBlockCoverage":true},{"functionName":"parsingFlags","ranges":[{"startOffset":133197,"endOffset":133278,"count":0}],"isBlockCoverage":false},{"functionName":"invalidAt","ranges":[{"startOffset":133284,"endOffset":133359,"count":0}],"isBlockCoverage":false},{"functionName":"creationData","ranges":[{"startOffset":133365,"endOffset":133581,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":134287,"endOffset":134584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":134881,"endOffset":135278,"count":0}],"isBlockCoverage":false},{"functionName":"localeEras","ranges":[{"startOffset":135286,"endOffset":136167,"count":0}],"isBlockCoverage":false},{"functionName":"localeErasParse","ranges":[{"startOffset":136173,"endOffset":137401,"count":0}],"isBlockCoverage":false},{"functionName":"localeErasConvertYear","ranges":[{"startOffset":137407,"endOffset":137685,"count":0}],"isBlockCoverage":false},{"functionName":"getEraName","ranges":[{"startOffset":137691,"endOffset":138210,"count":0}],"isBlockCoverage":false},{"functionName":"getEraNarrow","ranges":[{"startOffset":138216,"endOffset":138741,"count":0}],"isBlockCoverage":false},{"functionName":"getEraAbbr","ranges":[{"startOffset":138747,"endOffset":139266,"count":0}],"isBlockCoverage":false},{"functionName":"getEraYear","ranges":[{"startOffset":139272,"endOffset":139975,"count":0}],"isBlockCoverage":false},{"functionName":"erasNameRegex","ranges":[{"startOffset":139981,"endOffset":140188,"count":0}],"isBlockCoverage":false},{"functionName":"erasAbbrRegex","ranges":[{"startOffset":140194,"endOffset":140401,"count":0}],"isBlockCoverage":false},{"functionName":"erasNarrowRegex","ranges":[{"startOffset":140407,"endOffset":140620,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraAbbr","ranges":[{"startOffset":140626,"endOffset":140720,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraName","ranges":[{"startOffset":140726,"endOffset":140820,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraNarrow","ranges":[{"startOffset":140826,"endOffset":140924,"count":0}],"isBlockCoverage":false},{"functionName":"matchEraYearOrdinal","ranges":[{"startOffset":140930,"endOffset":141045,"count":0}],"isBlockCoverage":false},{"functionName":"computeErasParse","ranges":[{"startOffset":141051,"endOffset":142039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":142096,"endOffset":142153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":142193,"endOffset":142253,"count":0}],"isBlockCoverage":false},{"functionName":"addWeekYearFormatToken","ranges":[{"startOffset":142261,"endOffset":142376,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":143204,"endOffset":143306,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":143351,"endOffset":143450,"count":0}],"isBlockCoverage":false},{"functionName":"getSetWeekYear","ranges":[{"startOffset":143474,"endOffset":143736,"count":0}],"isBlockCoverage":false},{"functionName":"getSetISOWeekYear","ranges":[{"startOffset":143742,"endOffset":143961,"count":0}],"isBlockCoverage":false},{"functionName":"getISOWeeksInYear","ranges":[{"startOffset":143967,"endOffset":144050,"count":0}],"isBlockCoverage":false},{"functionName":"getISOWeeksInISOWeekYear","ranges":[{"startOffset":144056,"endOffset":144153,"count":0}],"isBlockCoverage":false},{"functionName":"getWeeksInYear","ranges":[{"startOffset":144159,"endOffset":144309,"count":0}],"isBlockCoverage":false},{"functionName":"getWeeksInWeekYear","ranges":[{"startOffset":144315,"endOffset":144473,"count":0}],"isBlockCoverage":false},{"functionName":"getSetWeekYearHelper","ranges":[{"startOffset":144479,"endOffset":144899,"count":0}],"isBlockCoverage":false},{"functionName":"setWeekAll","ranges":[{"startOffset":144905,"endOffset":145274,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":145516,"endOffset":145594,"count":0}],"isBlockCoverage":false},{"functionName":"getSetQuarter","ranges":[{"startOffset":145618,"endOffset":145796,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":146084,"endOffset":146336,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":146402,"endOffset":146489,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":146876,"endOffset":146957,"count":0}],"isBlockCoverage":false},{"functionName":"getSetDayOfYear","ranges":[{"startOffset":146997,"endOffset":147265,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148072,"endOffset":148136,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148176,"endOffset":148239,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148334,"endOffset":148393,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148435,"endOffset":148495,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148538,"endOffset":148599,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148643,"endOffset":148705,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148750,"endOffset":148813,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148859,"endOffset":148923,"count":0}],"isBlockCoverage":false},{"functionName":"parseMs","ranges":[{"startOffset":149340,"endOffset":149437,"count":0}],"isBlockCoverage":false},{"functionName":"getZoneAbbr","ranges":[{"startOffset":149729,"endOffset":149800,"count":0}],"isBlockCoverage":false},{"functionName":"getZoneName","ranges":[{"startOffset":149806,"endOffset":149900,"count":0}],"isBlockCoverage":false},{"functionName":"proto.<computed>","ranges":[{"startOffset":151027,"endOffset":151102,"count":0}],"isBlockCoverage":false},{"functionName":"createUnix","ranges":[{"startOffset":153510,"endOffset":153586,"count":0}],"isBlockCoverage":false},{"functionName":"createInZone","ranges":[{"startOffset":153592,"endOffset":153686,"count":0}],"isBlockCoverage":false},{"functionName":"preParsePostFormat","ranges":[{"startOffset":153692,"endOffset":153758,"count":9}],"isBlockCoverage":true},{"functionName":"get$1","ranges":[{"startOffset":155144,"endOffset":155323,"count":0}],"isBlockCoverage":false},{"functionName":"listMonthsImpl","ranges":[{"startOffset":155329,"endOffset":155771,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdaysImpl","ranges":[{"startOffset":155899,"endOffset":156820,"count":0}],"isBlockCoverage":false},{"functionName":"listMonths","ranges":[{"startOffset":156826,"endOffset":156924,"count":0}],"isBlockCoverage":false},{"functionName":"listMonthsShort","ranges":[{"startOffset":156930,"endOffset":157038,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdays","ranges":[{"startOffset":157044,"endOffset":157176,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdaysShort","ranges":[{"startOffset":157182,"endOffset":157324,"count":0}],"isBlockCoverage":false},{"functionName":"listWeekdaysMin","ranges":[{"startOffset":157330,"endOffset":157468,"count":0}],"isBlockCoverage":false},{"functionName":"ordinal","ranges":[{"startOffset":158047,"endOffset":158481,"count":0}],"isBlockCoverage":false},{"functionName":"abs","ranges":[{"startOffset":158811,"endOffset":159310,"count":0}],"isBlockCoverage":false},{"functionName":"addSubtract$1","ranges":[{"startOffset":159316,"endOffset":159641,"count":0}],"isBlockCoverage":false},{"functionName":"add$1","ranges":[{"startOffset":159707,"endOffset":159796,"count":0}],"isBlockCoverage":false},{"functionName":"subtract$1","ranges":[{"startOffset":159872,"endOffset":159967,"count":0}],"isBlockCoverage":false},{"functionName":"absCeil","ranges":[{"startOffset":159973,"endOffset":160135,"count":0}],"isBlockCoverage":false},{"functionName":"bubble","ranges":[{"startOffset":160141,"endOffset":161692,"count":0}],"isBlockCoverage":false},{"functionName":"daysToMonths","ranges":[{"startOffset":161698,"endOffset":161893,"count":0}],"isBlockCoverage":false},{"functionName":"monthsToDays","ranges":[{"startOffset":161899,"endOffset":162016,"count":0}],"isBlockCoverage":false},{"functionName":"as","ranges":[{"startOffset":162022,"endOffset":163624,"count":0}],"isBlockCoverage":false},{"functionName":"valueOf$1","ranges":[{"startOffset":163662,"endOffset":163939,"count":0}],"isBlockCoverage":false},{"functionName":"makeAs","ranges":[{"startOffset":163945,"endOffset":164050,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163985,"endOffset":164043,"count":0}],"isBlockCoverage":false},{"functionName":"clone$1","ranges":[{"startOffset":164351,"endOffset":164414,"count":0}],"isBlockCoverage":false},{"functionName":"get$2","ranges":[{"startOffset":164420,"endOffset":164547,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":164553,"endOffset":164686,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":164596,"endOffset":164679,"count":0}],"isBlockCoverage":false},{"functionName":"weeks","ranges":[{"startOffset":164974,"endOffset":165040,"count":0}],"isBlockCoverage":false},{"functionName":"substituteTimeAgo","ranges":[{"startOffset":165481,"endOffset":165648,"count":0}],"isBlockCoverage":false},{"functionName":"relativeTime$1","ranges":[{"startOffset":165654,"endOffset":167045,"count":0}],"isBlockCoverage":false},{"functionName":"getSetRelativeTimeRounding","ranges":[{"startOffset":167138,"endOffset":167430,"count":0}],"isBlockCoverage":false},{"functionName":"getSetRelativeTimeThreshold","ranges":[{"startOffset":167513,"endOffset":167891,"count":0}],"isBlockCoverage":false},{"functionName":"humanize","ranges":[{"startOffset":167897,"endOffset":168873,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":168906,"endOffset":168970,"count":0}],"isBlockCoverage":false},{"functionName":"toISOString$1","ranges":[{"startOffset":168976,"endOffset":171144,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":172603,"endOffset":172698,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":172724,"endOffset":172807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"791","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/moment-timezone/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true}]},{"scriptId":"792","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/moment-timezone/moment-timezone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16328,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":157,"endOffset":511,"count":1},{"startOffset":329,"endOffset":509,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":518,"endOffset":16324,"count":1},{"startOffset":626,"endOffset":643,"count":0},{"startOffset":645,"endOffset":676,"count":0},{"startOffset":1127,"endOffset":1239,"count":0},{"startOffset":1422,"endOffset":1551,"count":0},{"startOffset":16208,"endOffset":16288,"count":0}],"isBlockCoverage":true},{"functionName":"charCodeToInt","ranges":[{"startOffset":1645,"endOffset":1813,"count":3328},{"startOffset":1701,"endOffset":1731,"count":588},{"startOffset":1731,"endOffset":1786,"count":2740},{"startOffset":1756,"endOffset":1786,"count":344},{"startOffset":1786,"endOffset":1812,"count":2396}],"isBlockCoverage":true},{"functionName":"unpackBase60","ranges":[{"startOffset":1816,"endOffset":2460,"count":1516},{"startOffset":1937,"endOffset":1942,"count":1140},{"startOffset":2061,"endOffset":2090,"count":738},{"startOffset":2163,"endOffset":2238,"count":2952},{"startOffset":2319,"endOffset":2435,"count":376}],"isBlockCoverage":true},{"functionName":"arrayToInt","ranges":[{"startOffset":2463,"endOffset":2580,"count":350},{"startOffset":2534,"endOffset":2577,"count":1516}],"isBlockCoverage":true},{"functionName":"intToUntil","ranges":[{"startOffset":2583,"endOffset":2792,"count":0}],"isBlockCoverage":false},{"functionName":"mapIndices","ranges":[{"startOffset":2795,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"unpack","ranges":[{"startOffset":2952,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"Zone","ranges":[{"startOffset":3512,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"_set","ranges":[{"startOffset":3638,"endOffset":3855,"count":0}],"isBlockCoverage":false},{"functionName":"_index","ranges":[{"startOffset":3869,"endOffset":4054,"count":0}],"isBlockCoverage":false},{"functionName":"countries","ranges":[{"startOffset":4071,"endOffset":4259,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4272,"endOffset":4879,"count":0}],"isBlockCoverage":false},{"functionName":"abbr","ranges":[{"startOffset":4891,"endOffset":4951,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":4965,"endOffset":5102,"count":0}],"isBlockCoverage":false},{"functionName":"utcOffset","ranges":[{"startOffset":5119,"endOffset":5181,"count":0}],"isBlockCoverage":false},{"functionName":"Country","ranges":[{"startOffset":5284,"endOffset":5387,"count":247}],"isBlockCoverage":true},{"functionName":"OffsetAt","ranges":[{"startOffset":5488,"endOffset":6057,"count":0}],"isBlockCoverage":false},{"functionName":"ZoneScore","ranges":[{"startOffset":6060,"endOffset":6155,"count":0}],"isBlockCoverage":false},{"functionName":"ZoneScore.scoreOffsetAt","ranges":[{"startOffset":6194,"endOffset":6405,"count":0}],"isBlockCoverage":false},{"functionName":"findChange","ranges":[{"startOffset":6409,"endOffset":6672,"count":0}],"isBlockCoverage":false},{"functionName":"userOffsets","ranges":[{"startOffset":6675,"endOffset":7284,"count":0}],"isBlockCoverage":false},{"functionName":"sortZoneScores","ranges":[{"startOffset":7287,"endOffset":7637,"count":0}],"isBlockCoverage":false},{"functionName":"addToGuesses","ranges":[{"startOffset":7640,"endOffset":7868,"count":350},{"startOffset":7759,"endOffset":7865,"count":1516},{"startOffset":7822,"endOffset":7827,"count":406}],"isBlockCoverage":true},{"functionName":"guessesForUserOffsets","ranges":[{"startOffset":7871,"endOffset":8354,"count":0}],"isBlockCoverage":false},{"functionName":"rebuildGuess","ranges":[{"startOffset":8357,"endOffset":9333,"count":0}],"isBlockCoverage":false},{"functionName":"guess","ranges":[{"startOffset":9336,"endOffset":9465,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeName","ranges":[{"startOffset":9564,"endOffset":9655,"count":851},{"startOffset":9611,"endOffset":9616,"count":0}],"isBlockCoverage":true},{"functionName":"addZone","ranges":[{"startOffset":9658,"endOffset":10033,"count":1},{"startOffset":9755,"endOffset":9782,"count":0},{"startOffset":9822,"endOffset":10030,"count":350}],"isBlockCoverage":true},{"functionName":"getZone","ranges":[{"startOffset":10036,"endOffset":10565,"count":9},{"startOffset":10169,"endOffset":10190,"count":0},{"startOffset":10224,"endOffset":10294,"count":0},{"startOffset":10376,"endOffset":10397,"count":0},{"startOffset":10398,"endOffset":10439,"count":0},{"startOffset":10441,"endOffset":10546,"count":0}],"isBlockCoverage":true},{"functionName":"getNames","ranges":[{"startOffset":10568,"endOffset":10768,"count":0}],"isBlockCoverage":false},{"functionName":"getCountryNames","ranges":[{"startOffset":10771,"endOffset":10836,"count":0}],"isBlockCoverage":false},{"functionName":"addLink","ranges":[{"startOffset":10839,"endOffset":11247,"count":1},{"startOffset":10938,"endOffset":10967,"count":0},{"startOffset":11008,"endOffset":11244,"count":246}],"isBlockCoverage":true},{"functionName":"addCountries","ranges":[{"startOffset":11250,"endOffset":11604,"count":1},{"startOffset":11355,"endOffset":11362,"count":0},{"startOffset":11399,"endOffset":11601,"count":247}],"isBlockCoverage":true},{"functionName":"getCountry","ranges":[{"startOffset":11607,"endOffset":11701,"count":0}],"isBlockCoverage":false},{"functionName":"zonesForCountry","ranges":[{"startOffset":11704,"endOffset":12065,"count":0}],"isBlockCoverage":false},{"functionName":"loadData","ranges":[{"startOffset":12068,"endOffset":12208,"count":1}],"isBlockCoverage":true},{"functionName":"zoneExists","ranges":[{"startOffset":12211,"endOffset":12459,"count":0}],"isBlockCoverage":false},{"functionName":"needsOffset","ranges":[{"startOffset":12462,"endOffset":12612,"count":0}],"isBlockCoverage":false},{"functionName":"logError","ranges":[{"startOffset":12615,"endOffset":12757,"count":0}],"isBlockCoverage":false},{"functionName":"tz","ranges":[{"startOffset":12861,"endOffset":13190,"count":0}],"isBlockCoverage":false},{"functionName":"moment.updateOffset","ranges":[{"startOffset":14029,"endOffset":14572,"count":9},{"startOffset":14143,"endOffset":14162,"count":0},{"startOffset":14163,"endOffset":14177,"count":0},{"startOffset":14179,"endOffset":14268,"count":0},{"startOffset":14305,"endOffset":14569,"count":0}],"isBlockCoverage":true},{"functionName":"fn.tz","ranges":[{"startOffset":14584,"endOffset":15046,"count":0}],"isBlockCoverage":false},{"functionName":"abbrWrap","ranges":[{"startOffset":15050,"endOffset":15179,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15085,"endOffset":15175,"count":0}],"isBlockCoverage":false},{"functionName":"resetZoneWrap","ranges":[{"startOffset":15182,"endOffset":15300,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15222,"endOffset":15296,"count":0}],"isBlockCoverage":false},{"functionName":"resetZoneWrap2","ranges":[{"startOffset":15303,"endOffset":15448,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15344,"endOffset":15444,"count":9}],"isBlockCoverage":true},{"functionName":"moment.tz.setDefault","ranges":[{"startOffset":15679,"endOffset":15942,"count":0}],"isBlockCoverage":false}]},{"scriptId":"793","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/logger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3126,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":407,"endOffset":544,"count":1},{"startOffset":439,"endOffset":525,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":567,"endOffset":864,"count":1},{"startOffset":600,"endOffset":611,"count":0},{"startOffset":617,"endOffset":689,"count":0},{"startOffset":762,"endOffset":850,"count":0}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":887,"endOffset":947,"count":3}],"isBlockCoverage":true},{"functionName":"__objRest","ranges":[{"startOffset":965,"endOffset":1369,"count":1},{"startOffset":1038,"endOffset":1138,"count":0},{"startOffset":1234,"endOffset":1350,"count":0}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":1386,"endOffset":1523,"count":1},{"startOffset":1459,"endOffset":1521,"count":2}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":1542,"endOffset":1920,"count":2},{"startOffset":1616,"endOffset":1648,"count":1},{"startOffset":1706,"endOffset":1897,"count":68},{"startOffset":1742,"endOffset":1762,"count":67},{"startOffset":1772,"endOffset":1897,"count":67}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1802,"endOffset":1820,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":1939,"endOffset":2224,"count":2},{"startOffset":2049,"endOffset":2053,"count":0},{"startOffset":2096,"endOffset":2119,"count":0},{"startOffset":2120,"endOffset":2170,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2129,"endOffset":2150,"count":0}],"isBlockCoverage":false},{"functionName":"__publicField","ranges":[{"startOffset":2246,"endOffset":2359,"count":1},{"startOffset":2327,"endOffset":2332,"count":0}],"isBlockCoverage":true},{"functionName":"Logger","ranges":[{"startOffset":2391,"endOffset":2403,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2415,"endOffset":2427,"count":7}],"isBlockCoverage":true},{"functionName":"Logger","ranges":[{"startOffset":2545,"endOffset":2753,"count":1}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":2756,"endOffset":2841,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2844,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"debugContext","ranges":[{"startOffset":2963,"endOffset":3059,"count":4}],"isBlockCoverage":true}]},{"scriptId":"794","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"795","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4685,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":90}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":4},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3214,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3379,"endOffset":3636,"count":1},{"startOffset":3424,"endOffset":3462,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3753,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3964,"endOffset":4167,"count":4},{"startOffset":4100,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4332,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4581,"endOffset":4683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"796","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":457,"endOffset":479,"count":0},{"startOffset":518,"endOffset":540,"count":0},{"startOffset":592,"endOffset":595,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":699,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1109,"endOffset":1125,"count":0},{"startOffset":1151,"endOffset":1155,"count":0},{"startOffset":1184,"endOffset":1202,"count":0},{"startOffset":1570,"endOffset":1573,"count":0},{"startOffset":1578,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"797","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"798","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6289,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6263,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":4},{"startOffset":1108,"endOffset":1213,"count":74}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":120},{"startOffset":1668,"endOffset":1795,"count":0},{"startOffset":1963,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2147,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":120},{"startOffset":3190,"endOffset":3225,"count":0},{"startOffset":3278,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4609,"count":1},{"startOffset":4205,"endOffset":4217,"count":0},{"startOffset":4366,"endOffset":4602,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4695,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5063,"endOffset":5450,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespace","ranges":[{"startOffset":5568,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5793,"endOffset":5902,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6021,"endOffset":6197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"799","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"800","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/class-to-invokable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"classToInvokable","ranges":[{"startOffset":316,"endOffset":338,"count":2}],"isBlockCoverage":true},{"functionName":"classToInvokable","ranges":[{"startOffset":343,"endOffset":560,"count":156}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":410,"endOffset":481,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":487,"endOffset":552,"count":69}],"isBlockCoverage":true}]},{"scriptId":"801","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/join-sql-fragments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2307,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":61,"endOffset":198,"count":0}],"isBlockCoverage":false},{"functionName":"__markAsModule","ranges":[{"startOffset":221,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":298,"endOffset":435,"count":1},{"startOffset":371,"endOffset":433,"count":2}],"isBlockCoverage":true},{"functionName":"__publicField","ranges":[{"startOffset":457,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"JoinSQLFragmentsError","ranges":[{"startOffset":617,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"joinSQLFragments","ranges":[{"startOffset":666,"endOffset":688,"count":2}],"isBlockCoverage":true},{"functionName":"doesNotWantLeadingSpace","ranges":[{"startOffset":693,"endOffset":763,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotWantTrailingSpace","ranges":[{"startOffset":764,"endOffset":832,"count":0}],"isBlockCoverage":false},{"functionName":"singleSpaceJoinHelper","ranges":[{"startOffset":833,"endOffset":1250,"count":0}],"isBlockCoverage":false},{"functionName":"joinSQLFragments","ranges":[{"startOffset":1251,"endOffset":1981,"count":0}],"isBlockCoverage":false},{"functionName":"JoinSQLFragmentsError","ranges":[{"startOffset":2032,"endOffset":2257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"802","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/postgres/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13058,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":88,"endOffset":13017,"count":1}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":219,"endOffset":666,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1085,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":1307,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1771,"endOffset":1947,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2055,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2196,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2393,"endOffset":2593,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2695,"endOffset":2735,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2830,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3038,"endOffset":3077,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":3082,"endOffset":3553,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3694,"endOffset":3750,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":3755,"endOffset":3898,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3903,"endOffset":4120,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":4125,"endOffset":4609,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":4713,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":4908,"endOffset":5001,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":5102,"endOffset":5195,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5218,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":5372,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":5558,"endOffset":5651,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":5748,"endOffset":5841,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":5938,"endOffset":6554,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6623,"endOffset":6833,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":6838,"endOffset":6889,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6989,"endOffset":7215,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7227,"endOffset":7356,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":7361,"endOffset":7472,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":7477,"endOffset":7575,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7684,"endOffset":7913,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7925,"endOffset":8054,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":8059,"endOffset":8170,"count":0}],"isBlockCoverage":false},{"functionName":"bindParam","ranges":[{"startOffset":8175,"endOffset":8272,"count":0}],"isBlockCoverage":false},{"functionName":"HSTORE","ranges":[{"startOffset":8391,"endOffset":8494,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":8499,"endOffset":8625,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":8630,"endOffset":8695,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":8700,"endOffset":8786,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":8798,"endOffset":8919,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":9051,"endOffset":9951,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9956,"endOffset":10163,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":10168,"endOffset":10404,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":10409,"endOffset":10507,"count":0}],"isBlockCoverage":false},{"functionName":"toCastType","ranges":[{"startOffset":10512,"endOffset":10616,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":10628,"endOffset":10733,"count":0}],"isBlockCoverage":false},{"functionName":"_value","ranges":[{"startOffset":11233,"endOffset":11671,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":11714,"endOffset":12447,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":12490,"endOffset":12592,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":12643,"endOffset":12683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"803","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/postgres/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2140,"count":1}],"isBlockCoverage":true},{"functionName":"stringifyRangeBound","ranges":[{"startOffset":43,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"parseRangeBound","ranges":[{"startOffset":256,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":479,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1642,"endOffset":2082,"count":0}],"isBlockCoverage":false}]},{"scriptId":"804","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3716,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":167,"endOffset":3675,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1285,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1552,"endOffset":1637,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1642,"endOffset":1908,"count":9},{"startOffset":1789,"endOffset":1853,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1920,"endOffset":2249,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2311,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2407,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"GEOMETRY","ranges":[{"startOffset":2580,"endOffset":2938,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2950,"endOffset":3171,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3176,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3265,"endOffset":3373,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3424,"endOffset":3563,"count":0}],"isBlockCoverage":false}]},{"scriptId":"805","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mariadb/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3425,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":167,"endOffset":3384,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1328,"endOffset":1548,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1595,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1685,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1878,"endOffset":2207,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2269,"endOffset":2318,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2365,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"GEOMETRY","ranges":[{"startOffset":2467,"endOffset":2647,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2659,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2885,"endOffset":2927,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2974,"endOffset":3082,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3133,"endOffset":3272,"count":0}],"isBlockCoverage":false}]},{"scriptId":"806","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/sqlite/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4783,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":4742,"count":1},{"startOffset":4225,"endOffset":4266,"count":3},{"startOffset":4357,"endOffset":4412,"count":8}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":144,"endOffset":458,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1533,"endOffset":1583,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1637,"endOffset":1785,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1847,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1936,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2114,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2361,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2459,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2634,"endOffset":3030,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":3083,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":3231,"endOffset":3324,"count":0}],"isBlockCoverage":false},{"functionName":"MEDIUMINT","ranges":[{"startOffset":3381,"endOffset":3474,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":3527,"endOffset":3620,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":3671,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"parseFloating","ranges":[{"startOffset":3903,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4455,"endOffset":4491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"807","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mssql/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5318,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":65,"endOffset":5277,"count":1}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":210,"endOffset":630,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1468,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":1882,"endOffset":1927,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1978,"endOffset":2112,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2117,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":2275,"endOffset":2384,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2466,"endOffset":2871,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2924,"endOffset":2959,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3006,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3091,"endOffset":3132,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3179,"endOffset":3225,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":3287,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":3409,"endOffset":3502,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":3555,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":3703,"endOffset":3796,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":3847,"endOffset":3940,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":3987,"endOffset":4377,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":4426,"endOffset":4994,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5041,"endOffset":5085,"count":0}],"isBlockCoverage":false}]},{"scriptId":"808","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/db2/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8522,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":110,"endOffset":8481,"count":1}],"isBlockCoverage":true},{"functionName":"removeUnsupportedIntegerOptions","ranges":[{"startOffset":289,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":1671,"endOffset":2061,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":2066,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2154,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":2507,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2604,"endOffset":3012,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3017,"endOffset":3183,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":3188,"endOffset":3297,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3379,"endOffset":4124,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4177,"endOffset":4216,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":4221,"endOffset":4738,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4832,"endOffset":4885,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4930,"endOffset":4974,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5021,"endOffset":5232,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":5237,"endOffset":5625,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5637,"endOffset":5859,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":5921,"endOffset":5992,"count":0}],"isBlockCoverage":false},{"functionName":"INTEGER","ranges":[{"startOffset":6045,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"TINYINT","ranges":[{"startOffset":6191,"endOffset":6284,"count":0}],"isBlockCoverage":false},{"functionName":"SMALLINT","ranges":[{"startOffset":6339,"endOffset":6432,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":6483,"endOffset":6576,"count":0}],"isBlockCoverage":false},{"functionName":"REAL","ranges":[{"startOffset":6623,"endOffset":7011,"count":0}],"isBlockCoverage":false},{"functionName":"FLOAT","ranges":[{"startOffset":7060,"endOffset":7622,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7669,"endOffset":7713,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":7764,"endOffset":8154,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":8159,"endOffset":8197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"809","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/snowflake/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2668,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":110,"endOffset":2627,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1310,"endOffset":1351,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1356,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1634,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2025,"endOffset":2074,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2121,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2211,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2300,"endOffset":2339,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2390,"endOffset":2529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"810","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/oracle/data-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10524,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":110,"endOffset":10483,"count":1}],"isBlockCoverage":true},{"functionName":"toSql","ranges":[{"startOffset":1313,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":1781,"endOffset":1939,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":1944,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":2154,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2315,"endOffset":2354,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":2359,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":2451,"endOffset":2543,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":2548,"endOffset":2766,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2813,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":2862,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":2998,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":3042,"endOffset":3086,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3133,"endOffset":3178,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":3183,"endOffset":3275,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3322,"endOffset":3358,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":3363,"endOffset":3438,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":3485,"endOffset":3670,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":3675,"endOffset":3877,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":3882,"endOffset":3955,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":4002,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":4069,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":4158,"endOffset":4428,"count":0}],"isBlockCoverage":false},{"functionName":"_applyTimezone","ranges":[{"startOffset":4433,"endOffset":4763,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4775,"endOffset":5019,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":5024,"endOffset":5097,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5183,"endOffset":5664,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":5669,"endOffset":5746,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5799,"endOffset":5840,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":5845,"endOffset":5922,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":5977,"endOffset":6095,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":6100,"endOffset":6177,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6234,"endOffset":6275,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":6280,"endOffset":6357,"count":0}],"isBlockCoverage":false},{"functionName":"BIGINT","ranges":[{"startOffset":6408,"endOffset":6864,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":6869,"endOffset":6911,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":6916,"endOffset":6993,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":6998,"endOffset":7151,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":7202,"endOffset":7279,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7332,"endOffset":7449,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":7454,"endOffset":7531,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7580,"endOffset":7624,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":7629,"endOffset":7712,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":7759,"endOffset":7804,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":7809,"endOffset":8011,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":8016,"endOffset":8100,"count":0}],"isBlockCoverage":false},{"functionName":"_hexify","ranges":[{"startOffset":8147,"endOffset":8192,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":8197,"endOffset":8233,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":8238,"endOffset":8313,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":8364,"endOffset":8400,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":8405,"endOffset":8480,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":8485,"endOffset":8624,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":8629,"endOffset":8731,"count":0}],"isBlockCoverage":false},{"functionName":"DOUBLE","ranges":[{"startOffset":8782,"endOffset":9293,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":9298,"endOffset":9382,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":9387,"endOffset":9432,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":9487,"endOffset":9556,"count":0}],"isBlockCoverage":false},{"functionName":"_sanitize","ranges":[{"startOffset":9561,"endOffset":9683,"count":0}],"isBlockCoverage":false},{"functionName":"_stringify","ranges":[{"startOffset":9688,"endOffset":9884,"count":0}],"isBlockCoverage":false},{"functionName":"_getBindDef","ranges":[{"startOffset":9889,"endOffset":9964,"count":0}],"isBlockCoverage":false},{"functionName":"_bindParam","ranges":[{"startOffset":9969,"endOffset":10140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"811","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/sql-string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3352,"count":1}],"isBlockCoverage":true},{"functionName":"arrayToList","ranges":[{"startOffset":103,"endOffset":442,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":478,"endOffset":2465,"count":20},{"startOffset":591,"endOffset":615,"count":0},{"startOffset":644,"endOffset":784,"count":0},{"startOffset":789,"endOffset":803,"count":0},{"startOffset":808,"endOffset":851,"count":0},{"startOffset":953,"endOffset":1042,"count":0},{"startOffset":1071,"endOffset":1232,"count":0},{"startOffset":1259,"endOffset":1537,"count":0},{"startOffset":1558,"endOffset":1624,"count":0},{"startOffset":1702,"endOffset":1821,"count":0},{"startOffset":1852,"endOffset":1878,"count":0},{"startOffset":1880,"endOffset":2015,"count":0},{"startOffset":2440,"endOffset":2446,"count":0}],"isBlockCoverage":true},{"functionName":"partialEscape","ranges":[{"startOffset":1287,"endOffset":1341,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2070,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2491,"endOffset":2828,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamedParameters","ranges":[{"startOffset":2854,"endOffset":3257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"812","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_baseIsNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1417,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":1182,"endOffset":1384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"813","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/isFunction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":617,"endOffset":962,"count":0}],"isBlockCoverage":false}]},{"scriptId":"814","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_baseGetTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1},{"startOffset":328,"endOffset":339,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":534,"endOffset":761,"count":0}],"isBlockCoverage":false}]},{"scriptId":"815","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_Symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true}]},{"scriptId":"816","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_root.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":300,"count":1},{"startOffset":119,"endOffset":126,"count":0},{"startOffset":127,"endOffset":152,"count":0},{"startOffset":153,"endOffset":160,"count":0},{"startOffset":234,"endOffset":245,"count":0},{"startOffset":246,"endOffset":274,"count":0}],"isBlockCoverage":true}]},{"scriptId":"817","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_freeGlobal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173,"count":1}],"isBlockCoverage":true}]},{"scriptId":"818","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_getRawTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1139,"count":1},{"startOffset":488,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":701,"endOffset":1109,"count":0}],"isBlockCoverage":false}]},{"scriptId":"819","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_objectToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"objectToString","ranges":[{"startOffset":453,"endOffset":530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"820","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/isObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":581,"endOffset":704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"821","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_isMasked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116,"endOffset":268,"count":1},{"startOffset":166,"endOffset":184,"count":0},{"startOffset":185,"endOffset":212,"count":0},{"startOffset":234,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isMasked","ranges":[{"startOffset":461,"endOffset":535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"822","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_coreJsData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"823","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_toSource.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":339,"endOffset":527,"count":0}],"isBlockCoverage":false}]},{"scriptId":"824","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1765,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":146,"endOffset":186,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":257,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":369,"endOffset":410,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":481,"endOffset":522,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":594,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":712,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":835,"endOffset":882,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":960,"endOffset":1008,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1082,"endOffset":1126,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1670,"endOffset":1765,"count":9},{"startOffset":1744,"endOffset":1762,"count":0}],"isBlockCoverage":true}]},{"scriptId":"825","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/v1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3618,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":233,"endOffset":328,"count":2},{"startOffset":307,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"v1","ranges":[{"startOffset":627,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"826","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/rng.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":162,"endOffset":257,"count":1},{"startOffset":230,"endOffset":235,"count":0}],"isBlockCoverage":true},{"functionName":"rng","ranges":[{"startOffset":370,"endOffset":549,"count":28},{"startOffset":426,"endOffset":496,"count":2}],"isBlockCoverage":true}]},{"scriptId":"827","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1667,"count":1},{"startOffset":442,"endOffset":499,"count":256}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":501,"endOffset":1612,"count":28},{"startOffset":1537,"endOffset":1594,"count":0}],"isBlockCoverage":true}]},{"scriptId":"828","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":168,"endOffset":263,"count":1},{"startOffset":242,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":265,"endOffset":356,"count":28}],"isBlockCoverage":true}]},{"scriptId":"829","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/regex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true}]},{"scriptId":"830","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/v3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":414,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":218,"endOffset":313,"count":2},{"startOffset":292,"endOffset":310,"count":0}],"isBlockCoverage":true}]},{"scriptId":"831","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/v35.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2008,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":275,"endOffset":370,"count":2},{"startOffset":349,"endOffset":367,"count":0}],"isBlockCoverage":true},{"functionName":"stringToBytes","ranges":[{"startOffset":372,"endOffset":580,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":725,"endOffset":2008,"count":2}],"isBlockCoverage":true},{"functionName":"generateUUID","ranges":[{"startOffset":772,"endOffset":1736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"832","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1380,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":271,"endOffset":1329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"833","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/md5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":550,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":165,"endOffset":260,"count":1},{"startOffset":233,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"md5","ranges":[{"startOffset":262,"endOffset":501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"834","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/v4.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":860,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":233,"endOffset":328,"count":2},{"startOffset":307,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"v4","ranges":[{"startOffset":330,"endOffset":812,"count":28},{"startOffset":646,"endOffset":769,"count":0}],"isBlockCoverage":true}]},{"scriptId":"835","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/v5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":417,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":220,"endOffset":315,"count":2},{"startOffset":294,"endOffset":312,"count":0}],"isBlockCoverage":true}]},{"scriptId":"836","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/sha1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":165,"endOffset":260,"count":1},{"startOffset":233,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"sha1","ranges":[{"startOffset":262,"endOffset":503,"count":0}],"isBlockCoverage":false}]},{"scriptId":"837","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/nil.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":188,"count":1}],"isBlockCoverage":true}]},{"scriptId":"838","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/uuid/dist/version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"version","ranges":[{"startOffset":271,"endOffset":421,"count":0}],"isBlockCoverage":false}]},{"scriptId":"839","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/operators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1741,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1},{"startOffset":210,"endOffset":272,"count":2}],"isBlockCoverage":true},{"functionName":"Op","ranges":[{"startOffset":302,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":323,"endOffset":346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"840","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/inflection/lib/inflection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31406,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":158,"endOffset":386,"count":1},{"startOffset":221,"endOffset":234,"count":0},{"startOffset":236,"endOffset":267,"count":0},{"startOffset":342,"endOffset":384,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":394,"endOffset":31402,"count":1}],"isBlockCoverage":true},{"functionName":"_apply_rules","ranges":[{"startOffset":16280,"endOffset":16836,"count":10},{"startOffset":16341,"endOffset":16374,"count":0},{"startOffset":16562,"endOffset":16793,"count":528},{"startOffset":16608,"endOffset":16781,"count":8},{"startOffset":16659,"endOffset":16746,"count":7}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17529,"endOffset":17913,"count":10},{"startOffset":17746,"endOffset":17886,"count":2030},{"startOffset":17795,"endOffset":17828,"count":0},{"startOffset":17829,"endOffset":17878,"count":0}],"isBlockCoverage":true},{"functionName":"pluralize","ranges":[{"startOffset":18569,"endOffset":18685,"count":5}],"isBlockCoverage":true},{"functionName":"singularize","ranges":[{"startOffset":19357,"endOffset":19479,"count":5}],"isBlockCoverage":true},{"functionName":"inflect","ranges":[{"startOffset":20652,"endOffset":21003,"count":0}],"isBlockCoverage":false},{"functionName":"camelize","ranges":[{"startOffset":21741,"endOffset":22495,"count":0}],"isBlockCoverage":false},{"functionName":"underscore","ranges":[{"startOffset":23273,"endOffset":23705,"count":0}],"isBlockCoverage":false},{"functionName":"humanize","ranges":[{"startOffset":24384,"endOffset":24642,"count":0}],"isBlockCoverage":false},{"functionName":"capitalize","ranges":[{"startOffset":25155,"endOffset":25281,"count":0}],"isBlockCoverage":false},{"functionName":"dasherize","ranges":[{"startOffset":25766,"endOffset":25841,"count":0}],"isBlockCoverage":false},{"functionName":"titleize","ranges":[{"startOffset":26338,"endOffset":27002,"count":0}],"isBlockCoverage":false},{"functionName":"demodulize","ranges":[{"startOffset":27415,"endOffset":27522,"count":0}],"isBlockCoverage":false},{"functionName":"tableize","ranges":[{"startOffset":27937,"endOffset":28060,"count":0}],"isBlockCoverage":false},{"functionName":"classify","ranges":[{"startOffset":28483,"endOffset":28606,"count":0}],"isBlockCoverage":false},{"functionName":"foreign_key","ranges":[{"startOffset":29309,"endOffset":29494,"count":0}],"isBlockCoverage":false},{"functionName":"ordinalize","ranges":[{"startOffset":29891,"endOffset":30631,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":31062,"endOffset":31322,"count":0}],"isBlockCoverage":false}]},{"scriptId":"841","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/model.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113012,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":590},{"startOffset":373,"endOffset":459,"count":59},{"startOffset":460,"endOffset":478,"count":531}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":156},{"startOffset":534,"endOffset":545,"count":28},{"startOffset":551,"endOffset":623,"count":590},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":20}],"isBlockCoverage":true},{"functionName":"get queryInterface","ranges":[{"startOffset":2218,"endOffset":2291,"count":89}],"isBlockCoverage":true},{"functionName":"get queryGenerator","ranges":[{"startOffset":2301,"endOffset":2374,"count":62}],"isBlockCoverage":true},{"functionName":"get sequelize","ranges":[{"startOffset":2377,"endOffset":2437,"count":19}],"isBlockCoverage":true},{"functionName":"Model","ranges":[{"startOffset":2440,"endOffset":4151,"count":27},{"startOffset":2538,"endOffset":3317,"count":2},{"startOffset":3518,"endOffset":3644,"count":19},{"startOffset":3777,"endOffset":3900,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2618,"endOffset":3306,"count":2},{"startOffset":2748,"endOffset":2881,"count":32},{"startOffset":2813,"endOffset":2871,"count":0},{"startOffset":2928,"endOffset":3298,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3079,"endOffset":3109,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3570,"endOffset":3636,"count":108},{"startOffset":3610,"endOffset":3624,"count":0}],"isBlockCoverage":true},{"functionName":"_initValues","ranges":[{"startOffset":4154,"endOffset":6334,"count":27},{"startOffset":4286,"endOffset":6299,"count":8},{"startOffset":4355,"endOffset":4585,"count":0},{"startOffset":5013,"endOffset":5284,"count":0},{"startOffset":5405,"endOffset":5676,"count":0},{"startOffset":5735,"endOffset":5795,"count":0},{"startOffset":5797,"endOffset":6068,"count":0},{"startOffset":6135,"endOffset":6285,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4421,"endOffset":4575,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4698,"endOffset":4882,"count":8}],"isBlockCoverage":true},{"functionName":"_paranoidClause","ranges":[{"startOffset":6344,"endOffset":7603,"count":24},{"startOffset":6408,"endOffset":6524,"count":0},{"startOffset":6585,"endOffset":6807,"count":0},{"startOffset":6869,"endOffset":6898,"count":0},{"startOffset":6929,"endOffset":7229,"count":0},{"startOffset":7230,"endOffset":7236,"count":0},{"startOffset":7288,"endOffset":7318,"count":0},{"startOffset":7365,"endOffset":7380,"count":0},{"startOffset":7450,"endOffset":7602,"count":0}],"isBlockCoverage":true},{"functionName":"_addDefaultAttributes","ranges":[{"startOffset":7613,"endOffset":9286,"count":5},{"startOffset":7770,"endOffset":7918,"count":0},{"startOffset":8575,"endOffset":8702,"count":0},{"startOffset":8735,"endOffset":8903,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9012,"endOffset":9131,"count":10}],"isBlockCoverage":true},{"functionName":"getAttributes","ranges":[{"startOffset":9296,"endOffset":9348,"count":0}],"isBlockCoverage":false},{"functionName":"_findAutoIncrementAttribute","ranges":[{"startOffset":9358,"endOffset":9887,"count":5},{"startOffset":9473,"endOffset":9883,"count":41},{"startOffset":9656,"endOffset":9869,"count":5},{"startOffset":9701,"endOffset":9813,"count":0}],"isBlockCoverage":true},{"functionName":"_conformIncludes","ranges":[{"startOffset":9897,"endOffset":10245,"count":126},{"startOffset":9970,"endOffset":10244,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10191,"endOffset":10239,"count":0}],"isBlockCoverage":false},{"functionName":"_transformStringAssociation","ranges":[{"startOffset":10255,"endOffset":10599,"count":0}],"isBlockCoverage":false},{"functionName":"_conformInclude","ranges":[{"startOffset":10609,"endOffset":12115,"count":0}],"isBlockCoverage":false},{"functionName":"_expandIncludeAllElement","ranges":[{"startOffset":12125,"endOffset":14413,"count":0}],"isBlockCoverage":false},{"functionName":"_validateIncludedElements","ranges":[{"startOffset":14423,"endOffset":17524,"count":0}],"isBlockCoverage":false},{"functionName":"_validateIncludedElement","ranges":[{"startOffset":17534,"endOffset":21136,"count":0}],"isBlockCoverage":false},{"functionName":"_getIncludedAssociation","ranges":[{"startOffset":21146,"endOffset":22598,"count":0}],"isBlockCoverage":false},{"functionName":"_expandIncludeAll","ranges":[{"startOffset":22608,"endOffset":23070,"count":20},{"startOffset":22715,"endOffset":23069,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22985,"endOffset":23064,"count":0}],"isBlockCoverage":false},{"functionName":"_conformIndex","ranges":[{"startOffset":23080,"endOffset":23424,"count":0}],"isBlockCoverage":false},{"functionName":"_uniqIncludes","ranges":[{"startOffset":23434,"endOffset":23681,"count":42},{"startOffset":23498,"endOffset":23680,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23548,"endOffset":23615,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23621,"endOffset":23667,"count":0}],"isBlockCoverage":false},{"functionName":"_baseMerge","ranges":[{"startOffset":23691,"endOffset":23838,"count":42}],"isBlockCoverage":true},{"functionName":"_mergeFunction","ranges":[{"startOffset":23848,"endOffset":24855,"count":42},{"startOffset":23922,"endOffset":23948,"count":25},{"startOffset":23950,"endOffset":23999,"count":0},{"startOffset":24043,"endOffset":24418,"count":0},{"startOffset":24478,"endOffset":24506,"count":0},{"startOffset":24508,"endOffset":24725,"count":0},{"startOffset":24744,"endOffset":24797,"count":17},{"startOffset":24797,"endOffset":24839,"count":25},{"startOffset":24840,"endOffset":24850,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24556,"endOffset":24717,"count":0}],"isBlockCoverage":false},{"functionName":"_assignOptions","ranges":[{"startOffset":24865,"endOffset":24963,"count":17}],"isBlockCoverage":true},{"functionName":"_defaultsOptions","ranges":[{"startOffset":24973,"endOffset":25148,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25047,"endOffset":25142,"count":25}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":25158,"endOffset":30553,"count":5},{"startOffset":25219,"endOffset":25281,"count":0},{"startOffset":25471,"endOffset":25515,"count":0},{"startOffset":25892,"endOffset":25972,"count":0},{"startOffset":26427,"endOffset":26530,"count":0},{"startOffset":26744,"endOffset":26811,"count":0},{"startOffset":26818,"endOffset":26878,"count":0},{"startOffset":27575,"endOffset":27739,"count":0},{"startOffset":28808,"endOffset":29164,"count":15},{"startOffset":28894,"endOffset":29024,"count":0},{"startOffset":29063,"endOffset":29156,"count":0},{"startOffset":29300,"endOffset":29324,"count":0},{"startOffset":29558,"endOffset":29582,"count":0},{"startOffset":29713,"endOffset":29748,"count":0},{"startOffset":29750,"endOffset":29963,"count":0},{"startOffset":30000,"endOffset":30175,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27006,"endOffset":27480,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27789,"endOffset":28429,"count":26},{"startOffset":27913,"endOffset":28009,"count":0},{"startOffset":28050,"endOffset":28089,"count":4},{"startOffset":28091,"endOffset":28234,"count":0},{"startOffset":28310,"endOffset":28399,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28520,"endOffset":28584,"count":0}],"isBlockCoverage":false},{"functionName":"refreshAttributes","ranges":[{"startOffset":30563,"endOffset":36760,"count":14},{"startOffset":35839,"endOffset":36113,"count":118},{"startOffset":35911,"endOffset":36029,"count":0},{"startOffset":36525,"endOffset":36552,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30730,"endOffset":32031,"count":28},{"startOffset":30877,"endOffset":30908,"count":14},{"startOffset":30909,"endOffset":30940,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30962,"endOffset":31313,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31349,"endOffset":31787,"count":236},{"startOffset":31440,"endOffset":31497,"count":0},{"startOffset":31526,"endOffset":31632,"count":118},{"startOffset":31661,"endOffset":31779,"count":118}],"isBlockCoverage":true},{"functionName":"funcs.<computed>","ranges":[{"startOffset":31557,"endOffset":31621,"count":60}],"isBlockCoverage":true},{"functionName":"funcs.<computed>","ranges":[{"startOffset":31692,"endOffset":31768,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31810,"endOffset":32023,"count":236},{"startOffset":31869,"endOffset":31966,"count":118}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32476,"endOffset":35108,"count":118},{"startOffset":32721,"endOffset":32802,"count":46},{"startOffset":32845,"endOffset":32899,"count":17},{"startOffset":33002,"endOffset":33079,"count":28},{"startOffset":33118,"endOffset":33193,"count":28},{"startOffset":33250,"endOffset":33302,"count":0},{"startOffset":33354,"endOffset":33402,"count":90},{"startOffset":33404,"endOffset":33453,"count":28},{"startOffset":33453,"endOffset":33663,"count":90},{"startOffset":33506,"endOffset":33555,"count":0},{"startOffset":33611,"endOffset":33663,"count":0},{"startOffset":33740,"endOffset":33870,"count":0},{"startOffset":33940,"endOffset":33960,"count":4},{"startOffset":33962,"endOffset":34663,"count":4},{"startOffset":34035,"endOffset":34101,"count":0},{"startOffset":34103,"endOffset":34158,"count":0},{"startOffset":34207,"endOffset":34257,"count":0},{"startOffset":34525,"endOffset":34533,"count":0},{"startOffset":34736,"endOffset":34808,"count":50},{"startOffset":34845,"endOffset":34890,"count":0},{"startOffset":34892,"endOffset":35102,"count":0}],"isBlockCoverage":true},{"functionName":"_defaultValues.<computed>","ranges":[{"startOffset":33778,"endOffset":33861,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35177,"endOffset":35304,"count":118},{"startOffset":35235,"endOffset":35280,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35553,"endOffset":35598,"count":118}],"isBlockCoverage":true},{"functionName":"_isAttribute","ranges":[{"startOffset":36203,"endOffset":36283,"count":57}],"isBlockCoverage":true},{"functionName":"_isPrimaryKey","ranges":[{"startOffset":36650,"endOffset":36698,"count":1}],"isBlockCoverage":true},{"functionName":"removeAttribute","ranges":[{"startOffset":36770,"endOffset":36874,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":36884,"endOffset":40727,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":40737,"endOffset":40847,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":40857,"endOffset":40944,"count":0}],"isBlockCoverage":false},{"functionName":"schema","ranges":[{"startOffset":40954,"endOffset":41357,"count":0}],"isBlockCoverage":false},{"functionName":"getTableName","ranges":[{"startOffset":41367,"endOffset":41435,"count":62}],"isBlockCoverage":true},{"functionName":"unscoped","ranges":[{"startOffset":41445,"endOffset":41486,"count":0}],"isBlockCoverage":false},{"functionName":"addScope","ranges":[{"startOffset":41496,"endOffset":42016,"count":0}],"isBlockCoverage":false},{"functionName":"scope","ranges":[{"startOffset":42026,"endOffset":43603,"count":17},{"startOffset":42274,"endOffset":42300,"count":0},{"startOffset":42460,"endOffset":42952,"count":0},{"startOffset":42989,"endOffset":43034,"count":0},{"startOffset":43036,"endOffset":43088,"count":0},{"startOffset":43214,"endOffset":43252,"count":0},{"startOffset":43442,"endOffset":43458,"count":0},{"startOffset":43468,"endOffset":43576,"count":0}],"isBlockCoverage":true},{"functionName":"findAll","ranges":[{"startOffset":43613,"endOffset":46706,"count":20},{"startOffset":43695,"endOffset":43867,"count":0},{"startOffset":43918,"endOffset":44138,"count":0},{"startOffset":44405,"endOffset":44536,"count":0},{"startOffset":44670,"endOffset":44693,"count":0},{"startOffset":45173,"endOffset":45579,"count":0},{"startOffset":45609,"endOffset":45771,"count":0},{"startOffset":45821,"endOffset":45828,"count":0},{"startOffset":46353,"endOffset":46377,"count":3},{"startOffset":46379,"endOffset":46646,"count":0}],"isBlockCoverage":true},{"functionName":"warnOnInvalidOptions","ranges":[{"startOffset":46716,"endOffset":47301,"count":20},{"startOffset":46801,"endOffset":46822,"count":0},{"startOffset":47035,"endOffset":47074,"count":0},{"startOffset":47076,"endOffset":47297,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46883,"endOffset":46916,"count":39}],"isBlockCoverage":true},{"functionName":"_injectDependentVirtualAttributes","ranges":[{"startOffset":47311,"endOffset":47796,"count":40},{"startOffset":47420,"endOffset":47470,"count":0},{"startOffset":47478,"endOffset":47795,"count":0}],"isBlockCoverage":true},{"functionName":"_findSeparate","ranges":[{"startOffset":47806,"endOffset":49172,"count":20},{"startOffset":47871,"endOffset":47885,"count":0},{"startOffset":47886,"endOffset":47897,"count":0},{"startOffset":47920,"endOffset":49171,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48091,"endOffset":49144,"count":0}],"isBlockCoverage":false},{"functionName":"findByPk","ranges":[{"startOffset":49182,"endOffset":49661,"count":0}],"isBlockCoverage":false},{"functionName":"findOne","ranges":[{"startOffset":49671,"endOffset":50638,"count":19},{"startOffset":49753,"endOffset":49904,"count":0},{"startOffset":50020,"endOffset":50151,"count":0},{"startOffset":50513,"endOffset":50549,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50263,"endOffset":50291,"count":38}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":50367,"endOffset":50510,"count":19},{"startOffset":50417,"endOffset":50453,"count":17},{"startOffset":50484,"endOffset":50509,"count":0}],"isBlockCoverage":true},{"functionName":"aggregate","ranges":[{"startOffset":50648,"endOffset":52140,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":52150,"endOffset":53249,"count":0}],"isBlockCoverage":false},{"functionName":"findAndCountAll","ranges":[{"startOffset":53259,"endOffset":53827,"count":0}],"isBlockCoverage":false},{"functionName":"max","ranges":[{"startOffset":53837,"endOffset":53924,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":53934,"endOffset":54021,"count":0}],"isBlockCoverage":false},{"functionName":"sum","ranges":[{"startOffset":54031,"endOffset":54118,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":54128,"endOffset":54279,"count":27},{"startOffset":54184,"endOffset":54237,"count":0}],"isBlockCoverage":true},{"functionName":"bulkBuild","ranges":[{"startOffset":54289,"endOffset":54822,"count":20},{"startOffset":54491,"endOffset":54590,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54677,"endOffset":54743,"count":104},{"startOffset":54717,"endOffset":54731,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54777,"endOffset":54816,"count":19}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":54832,"endOffset":55117,"count":4}],"isBlockCoverage":true},{"functionName":"findOrBuild","ranges":[{"startOffset":55127,"endOffset":55810,"count":0}],"isBlockCoverage":false},{"functionName":"findOrCreate","ranges":[{"startOffset":55820,"endOffset":59212,"count":0}],"isBlockCoverage":false},{"functionName":"findCreateFind","ranges":[{"startOffset":59222,"endOffset":60209,"count":0}],"isBlockCoverage":false},{"functionName":"upsert","ranges":[{"startOffset":60219,"endOffset":62705,"count":0}],"isBlockCoverage":false},{"functionName":"bulkCreate","ranges":[{"startOffset":62715,"endOffset":74891,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":74901,"endOffset":75045,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":75055,"endOffset":77605,"count":1},{"startOffset":75195,"endOffset":75326,"count":0},{"startOffset":75395,"endOffset":75414,"count":0},{"startOffset":75417,"endOffset":75529,"count":0},{"startOffset":75591,"endOffset":75623,"count":0},{"startOffset":75624,"endOffset":75676,"count":0},{"startOffset":75678,"endOffset":75809,"count":0},{"startOffset":76228,"endOffset":76494,"count":0},{"startOffset":76555,"endOffset":76572,"count":0},{"startOffset":76574,"endOffset":77226,"count":0},{"startOffset":77384,"endOffset":77495,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":76422,"endOffset":76485,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":77424,"endOffset":77486,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":77615,"endOffset":79387,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":79397,"endOffset":84848,"count":4},{"startOffset":79544,"endOffset":79675,"count":0},{"startOffset":80088,"endOffset":80122,"count":0},{"startOffset":80124,"endOffset":80271,"count":0},{"startOffset":81352,"endOffset":81427,"count":3},{"startOffset":81429,"endOffset":81507,"count":3},{"startOffset":81513,"endOffset":81816,"count":3},{"startOffset":81816,"endOffset":83704,"count":0},{"startOffset":83704,"endOffset":83749,"count":3},{"startOffset":83749,"endOffset":83802,"count":0},{"startOffset":83802,"endOffset":84498,"count":3},{"startOffset":83872,"endOffset":83921,"count":0},{"startOffset":83923,"endOffset":83950,"count":0},{"startOffset":84159,"endOffset":84166,"count":0},{"startOffset":84317,"endOffset":84347,"count":1},{"startOffset":84347,"endOffset":84444,"count":0},{"startOffset":84444,"endOffset":84492,"count":1},{"startOffset":84498,"endOffset":84532,"count":1},{"startOffset":84532,"endOffset":84671,"count":0},{"startOffset":84671,"endOffset":84847,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":80035,"endOffset":80062,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82186,"endOffset":83051,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":83343,"endOffset":83640,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":84572,"endOffset":84633,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":84858,"endOffset":85034,"count":0}],"isBlockCoverage":false},{"functionName":"_getDefaultTimestamp","ranges":[{"startOffset":85044,"endOffset":85288,"count":12},{"startOffset":85152,"endOffset":85265,"count":0}],"isBlockCoverage":true},{"functionName":"_expandAttributes","ranges":[{"startOffset":85298,"endOffset":85735,"count":20},{"startOffset":85394,"endOffset":85734,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":85524,"endOffset":85576,"count":0}],"isBlockCoverage":false},{"functionName":"_injectScope","ranges":[{"startOffset":85745,"endOffset":85863,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":85873,"endOffset":85945,"count":0}],"isBlockCoverage":false},{"functionName":"hasAlias","ranges":[{"startOffset":85955,"endOffset":86051,"count":28}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":86061,"endOffset":88475,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":88485,"endOffset":88651,"count":0}],"isBlockCoverage":false},{"functionName":"_optionsMustContainWhere","ranges":[{"startOffset":88661,"endOffset":88999,"count":4},{"startOffset":88829,"endOffset":88860,"count":0},{"startOffset":88861,"endOffset":88910,"count":0}],"isBlockCoverage":true},{"functionName":"where","ranges":[{"startOffset":89002,"endOffset":89534,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":89537,"endOffset":89619,"count":0}],"isBlockCoverage":false},{"functionName":"getDataValue","ranges":[{"startOffset":89622,"endOffset":89678,"count":0}],"isBlockCoverage":false},{"functionName":"setDataValue","ranges":[{"startOffset":89681,"endOffset":89883,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":89886,"endOffset":91449,"count":69},{"startOffset":89961,"endOffset":90009,"count":5},{"startOffset":90032,"endOffset":90037,"count":64},{"startOffset":90052,"endOffset":90657,"count":60},{"startOffset":90127,"endOffset":90142,"count":0},{"startOffset":90144,"endOffset":90219,"count":0},{"startOffset":90244,"endOffset":90268,"count":0},{"startOffset":90269,"endOffset":90312,"count":0},{"startOffset":90314,"endOffset":90616,"count":0},{"startOffset":90657,"endOffset":90730,"count":9},{"startOffset":90706,"endOffset":90730,"count":5},{"startOffset":90731,"endOffset":90747,"count":9},{"startOffset":90749,"endOffset":91417,"count":0},{"startOffset":91417,"endOffset":91448,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":90409,"endOffset":90444,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":91452,"endOffset":95081,"count":203},{"startOffset":91550,"endOffset":91565,"count":27},{"startOffset":91567,"endOffset":93015,"count":27},{"startOffset":91611,"endOffset":91616,"count":0},{"startOffset":91643,"endOffset":91766,"count":0},{"startOffset":91789,"endOffset":91833,"count":19},{"startOffset":91834,"endOffset":91869,"count":19},{"startOffset":91870,"endOffset":91909,"count":0},{"startOffset":91910,"endOffset":91952,"count":0},{"startOffset":91954,"endOffset":92199,"count":0},{"startOffset":92239,"endOffset":92752,"count":19},{"startOffset":92566,"endOffset":92637,"count":0},{"startOffset":92680,"endOffset":92742,"count":0},{"startOffset":92752,"endOffset":92871,"count":8},{"startOffset":92797,"endOffset":92861,"count":56},{"startOffset":92897,"endOffset":92982,"count":19},{"startOffset":93015,"endOffset":93040,"count":176},{"startOffset":93040,"endOffset":93053,"count":1},{"startOffset":93053,"endOffset":93076,"count":176},{"startOffset":93076,"endOffset":93127,"count":57},{"startOffset":93127,"endOffset":93149,"count":176},{"startOffset":93149,"endOffset":93176,"count":57},{"startOffset":93178,"endOffset":93430,"count":0},{"startOffset":93430,"endOffset":95060,"count":176},{"startOffset":93487,"endOffset":93530,"count":0},{"startOffset":93532,"endOffset":93609,"count":0},{"startOffset":93634,"endOffset":94370,"count":57},{"startOffset":93673,"endOffset":94067,"count":0},{"startOffset":94130,"endOffset":94168,"count":1},{"startOffset":94170,"endOffset":94204,"count":1},{"startOffset":94204,"endOffset":94235,"count":56},{"startOffset":94235,"endOffset":94277,"count":0},{"startOffset":94278,"endOffset":94326,"count":0},{"startOffset":94328,"endOffset":94362,"count":0},{"startOffset":94370,"endOffset":94505,"count":175},{"startOffset":94507,"endOffset":94602,"count":8},{"startOffset":94602,"endOffset":94626,"count":175},{"startOffset":94626,"endOffset":94919,"count":56},{"startOffset":94756,"endOffset":94839,"count":4},{"startOffset":94840,"endOffset":94918,"count":52},{"startOffset":94921,"endOffset":95018,"count":56},{"startOffset":95018,"endOffset":95060,"count":175},{"startOffset":95060,"endOffset":95080,"count":175}],"isBlockCoverage":true},{"functionName":"setKeys","ranges":[{"startOffset":92267,"endOffset":92471,"count":19},{"startOffset":92313,"endOffset":92459,"count":108},{"startOffset":92355,"endOffset":92398,"count":0}],"isBlockCoverage":true},{"functionName":"setAttributes","ranges":[{"startOffset":95084,"endOffset":95142,"count":0}],"isBlockCoverage":false},{"functionName":"changed","ranges":[{"startOffset":95145,"endOffset":95509,"count":82},{"startOffset":95191,"endOffset":95304,"count":10},{"startOffset":95278,"endOffset":95304,"count":0},{"startOffset":95304,"endOffset":95329,"count":72},{"startOffset":95329,"endOffset":95385,"count":56},{"startOffset":95385,"endOffset":95470,"count":16},{"startOffset":95470,"endOffset":95508,"count":0}],"isBlockCoverage":true},{"functionName":"previous","ranges":[{"startOffset":95512,"endOffset":95680,"count":0}],"isBlockCoverage":false},{"functionName":"_setInclude","ranges":[{"startOffset":95683,"endOffset":96978,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":96981,"endOffset":106325,"count":4},{"startOffset":97033,"endOffset":97130,"count":0},{"startOffset":97246,"endOffset":97377,"count":0},{"startOffset":97596,"endOffset":97713,"count":0},{"startOffset":97837,"endOffset":97881,"count":0},{"startOffset":98302,"endOffset":98312,"count":0},{"startOffset":98584,"endOffset":98633,"count":0},{"startOffset":98654,"endOffset":98682,"count":0},{"startOffset":98683,"endOffset":98723,"count":0},{"startOffset":98725,"endOffset":98772,"count":0},{"startOffset":98805,"endOffset":98869,"count":0},{"startOffset":98871,"endOffset":98971,"count":0},{"startOffset":99077,"endOffset":99130,"count":0},{"startOffset":99197,"endOffset":99240,"count":0},{"startOffset":99242,"endOffset":99299,"count":0},{"startOffset":99342,"endOffset":99583,"count":0},{"startOffset":100011,"endOffset":100030,"count":0},{"startOffset":100032,"endOffset":100176,"count":0},{"startOffset":100240,"endOffset":101361,"count":3},{"startOffset":100733,"endOffset":101112,"count":0},{"startOffset":101136,"endOffset":101355,"count":0},{"startOffset":101361,"endOffset":101411,"count":3},{"startOffset":101412,"endOffset":101436,"count":3},{"startOffset":101437,"endOffset":101468,"count":0},{"startOffset":101470,"endOffset":102083,"count":0},{"startOffset":102083,"endOffset":102224,"count":3},{"startOffset":102224,"endOffset":102236,"count":0},{"startOffset":102236,"endOffset":102261,"count":3},{"startOffset":102261,"endOffset":102281,"count":0},{"startOffset":102289,"endOffset":102301,"count":0},{"startOffset":102301,"endOffset":102405,"count":3},{"startOffset":102585,"endOffset":102694,"count":3},{"startOffset":102694,"endOffset":102960,"count":0},{"startOffset":102960,"endOffset":103049,"count":3},{"startOffset":103049,"endOffset":103071,"count":1},{"startOffset":103071,"endOffset":103343,"count":0},{"startOffset":103343,"endOffset":103412,"count":1},{"startOffset":103412,"endOffset":103745,"count":16},{"startOffset":103588,"endOffset":103739,"count":0},{"startOffset":103745,"endOffset":103883,"count":1},{"startOffset":103884,"endOffset":103915,"count":0},{"startOffset":103917,"endOffset":106019,"count":0},{"startOffset":106019,"endOffset":106163,"count":1},{"startOffset":106163,"endOffset":106272,"count":16},{"startOffset":106272,"endOffset":106324,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98904,"endOffset":98934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101525,"endOffset":101578,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101584,"endOffset":102074,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":102129,"endOffset":102187,"count":48}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":103972,"endOffset":104101,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104107,"endOffset":106010,"count":0}],"isBlockCoverage":false},{"functionName":"reload","ranges":[{"startOffset":106328,"endOffset":106865,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":106868,"endOffset":106957,"count":8}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":106960,"endOffset":107885,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":107888,"endOffset":109404,"count":0}],"isBlockCoverage":false},{"functionName":"isSoftDeleted","ranges":[{"startOffset":109407,"endOffset":109947,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":109950,"endOffset":111095,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":111098,"endOffset":111397,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":111400,"endOffset":111566,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":111569,"endOffset":111875,"count":0}],"isBlockCoverage":false},{"functionName":"equalsOneOf","ranges":[{"startOffset":111878,"endOffset":111958,"count":0}],"isBlockCoverage":false},{"functionName":"setValidators","ranges":[{"startOffset":111961,"endOffset":112048,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":112051,"endOffset":112126,"count":5}],"isBlockCoverage":true},{"functionName":"hasMany","ranges":[{"startOffset":112136,"endOffset":112166,"count":0}],"isBlockCoverage":false},{"functionName":"belongsToMany","ranges":[{"startOffset":112176,"endOffset":112212,"count":0}],"isBlockCoverage":false},{"functionName":"hasOne","ranges":[{"startOffset":112222,"endOffset":112251,"count":0}],"isBlockCoverage":false},{"functionName":"belongsTo","ranges":[{"startOffset":112261,"endOffset":112293,"count":0}],"isBlockCoverage":false},{"functionName":"unpackAnd","ranges":[{"startOffset":112296,"endOffset":112586,"count":0}],"isBlockCoverage":false},{"functionName":"combineWheresWithAnd","ranges":[{"startOffset":112587,"endOffset":112884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"842","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/dottie/dottie.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6374,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6369,"count":1},{"startOffset":6199,"endOffset":6367,"count":0}],"isBlockCoverage":true},{"functionName":"reverseDupArray","ranges":[{"startOffset":194,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie","ranges":[{"startOffset":443,"endOffset":639,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.find","ranges":[{"startOffset":733,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.get","ranges":[{"startOffset":1007,"endOffset":1876,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.exists","ranges":[{"startOffset":1897,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.set","ranges":[{"startOffset":2016,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.default","ranges":[{"startOffset":3449,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie$transformfunction","ranges":[{"startOffset":3678,"endOffset":4923,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.flatten","ranges":[{"startOffset":4945,"endOffset":5536,"count":0}],"isBlockCoverage":false},{"functionName":"Dottie.paths","ranges":[{"startOffset":5556,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6325,"endOffset":6355,"count":0}],"isBlockCoverage":false}]},{"scriptId":"843","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/belongs-to.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6490,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":4},{"startOffset":273,"endOffset":359,"count":2},{"startOffset":360,"endOffset":378,"count":2}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":2},{"startOffset":434,"endOffset":445,"count":0},{"startOffset":451,"endOffset":523,"count":4},{"startOffset":596,"endOffset":684,"count":0}],"isBlockCoverage":true},{"functionName":"BelongsTo","ranges":[{"startOffset":919,"endOffset":2802,"count":10},{"startOffset":1123,"endOffset":1222,"count":0},{"startOffset":1384,"endOffset":1542,"count":2},{"startOffset":1498,"endOffset":1535,"count":0},{"startOffset":1542,"endOffset":1633,"count":8},{"startOffset":1660,"endOffset":1785,"count":0},{"startOffset":1877,"endOffset":1982,"count":8},{"startOffset":1957,"endOffset":1975,"count":0},{"startOffset":2014,"endOffset":2067,"count":0},{"startOffset":2069,"endOffset":2228,"count":0},{"startOffset":2383,"endOffset":2400,"count":0}],"isBlockCoverage":true},{"functionName":"_injectAttributes","ranges":[{"startOffset":2805,"endOffset":3759,"count":2},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3679,"endOffset":3697,"count":0}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":3762,"endOffset":3870,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3873,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5338,"endOffset":5830,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":5833,"endOffset":6123,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":6126,"endOffset":6346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"844","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1591,"count":1}],"isBlockCoverage":true},{"functionName":"checkNamingCollision","ranges":[{"startOffset":14,"endOffset":390,"count":7},{"startOffset":153,"endOffset":388,"count":0}],"isBlockCoverage":true},{"functionName":"addForeignKeyConstraints","ranges":[{"startOffset":444,"endOffset":1049,"count":4},{"startOffset":579,"endOffset":598,"count":0},{"startOffset":793,"endOffset":822,"count":0},{"startOffset":915,"endOffset":932,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":662,"endOffset":757,"count":4},{"startOffset":735,"endOffset":757,"count":0}],"isBlockCoverage":true},{"functionName":"mixinMethods","ranges":[{"startOffset":1111,"endOffset":1517,"count":6},{"startOffset":1191,"endOffset":1196,"count":2},{"startOffset":1230,"endOffset":1515,"count":46},{"startOffset":1358,"endOffset":1367,"count":30}],"isBlockCoverage":true},{"functionName":"obj.<computed>","ranges":[{"startOffset":1412,"endOffset":1504,"count":0}],"isBlockCoverage":false}]},{"scriptId":"845","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1063,"count":1}],"isBlockCoverage":true},{"functionName":"Association","ranges":[{"startOffset":89,"endOffset":560,"count":28},{"startOffset":397,"endOffset":556,"count":0}],"isBlockCoverage":true},{"functionName":"toInstanceArray","ranges":[{"startOffset":563,"endOffset":924,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":927,"endOffset":997,"count":0}],"isBlockCoverage":false}]},{"scriptId":"846","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/belongs-to-many.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23125,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":8},{"startOffset":373,"endOffset":459,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":8},{"startOffset":534,"endOffset":545,"count":0},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"BelongsToMany","ranges":[{"startOffset":1337,"endOffset":6269,"count":2},{"startOffset":1519,"endOffset":1665,"count":0},{"startOffset":2072,"endOffset":2172,"count":0},{"startOffset":2190,"endOffset":2473,"count":0},{"startOffset":2687,"endOffset":2721,"count":0},{"startOffset":2780,"endOffset":2824,"count":0},{"startOffset":3336,"endOffset":3353,"count":0},{"startOffset":3387,"endOffset":3536,"count":0},{"startOffset":3712,"endOffset":3729,"count":0},{"startOffset":3824,"endOffset":4264,"count":0},{"startOffset":4458,"endOffset":5521,"count":1},{"startOffset":4784,"endOffset":5065,"count":0},{"startOffset":5728,"endOffset":5748,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2862,"endOffset":3179,"count":1},{"startOffset":2948,"endOffset":2955,"count":0},{"startOffset":3010,"endOffset":3017,"count":0}],"isBlockCoverage":true},{"functionName":"_createForeignAndOtherKeys","ranges":[{"startOffset":6272,"endOffset":7239,"count":3},{"startOffset":6462,"endOffset":6499,"count":0},{"startOffset":6506,"endOffset":6710,"count":0},{"startOffset":6754,"endOffset":6902,"count":0},{"startOffset":7121,"endOffset":7149,"count":0}],"isBlockCoverage":true},{"functionName":"_injectAttributes","ranges":[{"startOffset":7242,"endOffset":12309,"count":3},{"startOffset":8380,"endOffset":8776,"count":0},{"startOffset":8837,"endOffset":8942,"count":1},{"startOffset":9001,"endOffset":9104,"count":2},{"startOffset":9549,"endOffset":9586,"count":1},{"startOffset":9632,"endOffset":9669,"count":1},{"startOffset":9877,"endOffset":9901,"count":2},{"startOffset":9993,"endOffset":10017,"count":2},{"startOffset":10064,"endOffset":10101,"count":2},{"startOffset":10147,"endOffset":10184,"count":2},{"startOffset":10490,"endOffset":10508,"count":0},{"startOffset":10598,"endOffset":10614,"count":0},{"startOffset":10673,"endOffset":10737,"count":0},{"startOffset":10739,"endOffset":10809,"count":0},{"startOffset":10830,"endOffset":10868,"count":2},{"startOffset":10870,"endOffset":11006,"count":1},{"startOffset":10976,"endOffset":10999,"count":0},{"startOffset":11835,"endOffset":11865,"count":2},{"startOffset":11867,"endOffset":12248,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7392,"endOffset":7761,"count":10},{"startOffset":7464,"endOffset":7500,"count":4},{"startOffset":7502,"endOffset":7755,"count":4},{"startOffset":7574,"endOffset":7625,"count":3},{"startOffset":7625,"endOffset":7708,"count":1}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":12312,"endOffset":12642,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12645,"endOffset":14065,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":14068,"endOffset":14509,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":14512,"endOffset":15357,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15360,"endOffset":18424,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":18427,"endOffset":21571,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":21574,"endOffset":22094,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":22097,"endOffset":22741,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":22744,"endOffset":22960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"847","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/has-many.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11910,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":42},{"startOffset":373,"endOffset":459,"count":2},{"startOffset":460,"endOffset":478,"count":40}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":4},{"startOffset":534,"endOffset":545,"count":0},{"startOffset":551,"endOffset":623,"count":42},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"HasMany","ranges":[{"startOffset":1084,"endOffset":3638,"count":8},{"startOffset":1372,"endOffset":1480,"count":0},{"startOffset":1513,"endOffset":1557,"count":0},{"startOffset":1575,"endOffset":1858,"count":0},{"startOffset":2018,"endOffset":2176,"count":2},{"startOffset":2132,"endOffset":2169,"count":0},{"startOffset":2176,"endOffset":2267,"count":6},{"startOffset":2294,"endOffset":2445,"count":0},{"startOffset":2578,"endOffset":2596,"count":0},{"startOffset":2676,"endOffset":2694,"count":0},{"startOffset":2959,"endOffset":2976,"count":0},{"startOffset":2983,"endOffset":3118,"count":0}],"isBlockCoverage":true},{"functionName":"_injectAttributes","ranges":[{"startOffset":3641,"endOffset":4917,"count":2},{"startOffset":4068,"endOffset":4101,"count":0},{"startOffset":4186,"endOffset":4198,"count":0},{"startOffset":4648,"endOffset":4666,"count":0},{"startOffset":4744,"endOffset":4762,"count":0},{"startOffset":4838,"endOffset":4855,"count":0}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":4920,"endOffset":5250,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5253,"endOffset":6910,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":6913,"endOffset":7308,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":7311,"endOffset":8090,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8093,"endOffset":9821,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":9824,"endOffset":10421,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":10424,"endOffset":10951,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":10954,"endOffset":11557,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":11560,"endOffset":11776,"count":0}],"isBlockCoverage":false}]},{"scriptId":"848","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/has-one.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7518,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"HasOne","ranges":[{"startOffset":1083,"endOffset":2953,"count":8},{"startOffset":1383,"endOffset":1499,"count":0},{"startOffset":1545,"endOffset":1703,"count":0},{"startOffset":1821,"endOffset":1993,"count":0},{"startOffset":2080,"endOffset":2239,"count":0},{"startOffset":2310,"endOffset":2344,"count":0},{"startOffset":2420,"endOffset":2437,"count":0},{"startOffset":2739,"endOffset":2757,"count":0}],"isBlockCoverage":true},{"functionName":"_injectAttributes","ranges":[{"startOffset":2956,"endOffset":3908,"count":0}],"isBlockCoverage":false},{"functionName":"mixin","ranges":[{"startOffset":3911,"endOffset":4019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4022,"endOffset":5389,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5392,"endOffset":6690,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":6693,"endOffset":7231,"count":0}],"isBlockCoverage":false},{"functionName":"verifyAssociationAlias","ranges":[{"startOffset":7234,"endOffset":7454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"849","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/instance-validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8825,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":68},{"startOffset":273,"endOffset":359,"count":8},{"startOffset":360,"endOffset":378,"count":60}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":8},{"startOffset":434,"endOffset":445,"count":0},{"startOffset":451,"endOffset":523,"count":68},{"startOffset":596,"endOffset":684,"count":0}],"isBlockCoverage":true},{"functionName":"InstanceValidator","ranges":[{"startOffset":1038,"endOffset":1504,"count":8},{"startOffset":1183,"endOffset":1349,"count":4},{"startOffset":1337,"endOffset":1342,"count":0}],"isBlockCoverage":true},{"functionName":"_validate","ranges":[{"startOffset":1507,"endOffset":1846,"count":8},{"startOffset":1558,"endOffset":1610,"count":0},{"startOffset":1768,"endOffset":1842,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1849,"endOffset":1959,"count":8},{"startOffset":1935,"endOffset":1953,"count":0}],"isBlockCoverage":true},{"functionName":"_validateAndRunHooks","ranges":[{"startOffset":1962,"endOffset":2468,"count":8},{"startOffset":2203,"endOffset":2210,"count":6},{"startOffset":2210,"endOffset":2362,"count":2},{"startOffset":2362,"endOffset":2467,"count":6}],"isBlockCoverage":true},{"functionName":"_perAttributeValidators","ranges":[{"startOffset":2471,"endOffset":3187,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2578,"endOffset":3139,"count":128},{"startOffset":2650,"endOffset":2675,"count":51},{"startOffset":2675,"endOffset":2784,"count":77},{"startOffset":2784,"endOffset":2809,"count":0},{"startOffset":2809,"endOffset":2849,"count":77},{"startOffset":2849,"endOffset":2879,"count":61},{"startOffset":2881,"endOffset":2948,"count":61},{"startOffset":2948,"endOffset":3035,"count":77},{"startOffset":3035,"endOffset":3133,"count":61}],"isBlockCoverage":true},{"functionName":"_customValidators","ranges":[{"startOffset":3190,"endOffset":3603,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3305,"endOffset":3555,"count":0}],"isBlockCoverage":false},{"functionName":"_singleAttrValidate","ranges":[{"startOffset":3606,"endOffset":4798,"count":61},{"startOffset":3683,"endOffset":3702,"count":60},{"startOffset":3704,"endOffset":3717,"count":11},{"startOffset":3719,"endOffset":3740,"count":11},{"startOffset":3740,"endOffset":4797,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3818,"endOffset":4534,"count":109},{"startOffset":3910,"endOffset":4113,"count":0},{"startOffset":4152,"endOffset":4272,"count":0},{"startOffset":4319,"endOffset":4344,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4470,"endOffset":4485,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4575,"endOffset":4791,"count":109}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4608,"endOffset":4790,"count":2}],"isBlockCoverage":true},{"functionName":"_invokeCustomValidator","ranges":[{"startOffset":4801,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"_invokeBuiltinValidator","ranges":[{"startOffset":5744,"endOffset":6293,"count":109},{"startOffset":5906,"endOffset":5984,"count":0},{"startOffset":6133,"endOffset":6289,"count":2}],"isBlockCoverage":true},{"functionName":"_extractValidatorArgs","ranges":[{"startOffset":6296,"endOffset":6942,"count":109},{"startOffset":6572,"endOffset":6853,"count":59},{"startOffset":6617,"endOffset":6694,"count":0},{"startOffset":6754,"endOffset":6791,"count":0},{"startOffset":6853,"endOffset":6912,"count":50}],"isBlockCoverage":true},{"functionName":"_validateSchema","ranges":[{"startOffset":6945,"endOffset":8178,"count":61},{"startOffset":7032,"endOffset":7071,"count":52},{"startOffset":7051,"endOffset":7070,"count":51},{"startOffset":7073,"endOffset":7700,"count":9},{"startOffset":7296,"endOffset":7355,"count":0},{"startOffset":7755,"endOffset":7801,"count":0},{"startOffset":7802,"endOffset":7850,"count":0},{"startOffset":7906,"endOffset":7950,"count":0},{"startOffset":7951,"endOffset":7977,"count":0},{"startOffset":7979,"endOffset":8168,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7165,"endOffset":7270,"count":9},{"startOffset":7217,"endOffset":7270,"count":0}],"isBlockCoverage":true},{"functionName":"_pushError","ranges":[{"startOffset":8181,"endOffset":8596,"count":2},{"startOffset":8285,"endOffset":8296,"count":0},{"startOffset":8297,"endOffset":8318,"count":0},{"startOffset":8470,"endOffset":8478,"count":0},{"startOffset":8499,"endOffset":8507,"count":0}],"isBlockCoverage":true}]},{"scriptId":"850","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/query-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":436,"count":1}],"isBlockCoverage":true}]},{"scriptId":"851","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4849,"count":1}],"isBlockCoverage":true},{"functionName":"getProxiedHooks","ranges":[{"startOffset":2005,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"getHooks","ranges":[{"startOffset":2108,"endOffset":2202,"count":342},{"startOffset":2177,"endOffset":2182,"count":0}],"isBlockCoverage":true},{"functionName":"_setupHooks","ranges":[{"startOffset":2221,"endOffset":2476,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2294,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"runHooks","ranges":[{"startOffset":2480,"endOffset":3356,"count":236},{"startOffset":2539,"endOffset":2596,"count":0},{"startOffset":2742,"endOffset":2817,"count":106},{"startOffset":2855,"endOffset":2885,"count":0},{"startOffset":2943,"endOffset":3165,"count":12},{"startOffset":2975,"endOffset":3145,"count":0},{"startOffset":3165,"endOffset":3194,"count":224},{"startOffset":3194,"endOffset":3352,"count":0},{"startOffset":3352,"endOffset":3355,"count":224}],"isBlockCoverage":true},{"functionName":"addHook","ranges":[{"startOffset":3360,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"removeHook","ranges":[{"startOffset":3741,"endOffset":4350,"count":0}],"isBlockCoverage":false},{"functionName":"hasHook","ranges":[{"startOffset":4354,"endOffset":4459,"count":0}],"isBlockCoverage":false},{"functionName":"applyTo","ranges":[{"startOffset":4495,"endOffset":4787,"count":3},{"startOffset":4610,"endOffset":4785,"count":138},{"startOffset":4628,"endOffset":4654,"count":46},{"startOffset":4656,"endOffset":4679,"count":10},{"startOffset":4679,"endOffset":4785,"count":128}],"isBlockCoverage":true},{"functionName":"target.<computed>","ranges":[{"startOffset":4699,"endOffset":4780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"852","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/mixin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3739,"count":1}],"isBlockCoverage":true},{"functionName":"isModel","ranges":[{"startOffset":214,"endOffset":343,"count":6}],"isBlockCoverage":true},{"functionName":"hasMany","ranges":[{"startOffset":362,"endOffset":1246,"count":2},{"startOffset":436,"endOffset":553,"count":0},{"startOffset":632,"endOffset":656,"count":0},{"startOffset":785,"endOffset":876,"count":0},{"startOffset":1115,"endOffset":1218,"count":0}],"isBlockCoverage":true},{"functionName":"belongsToMany","ranges":[{"startOffset":1250,"endOffset":2317,"count":2},{"startOffset":1330,"endOffset":1453,"count":0},{"startOffset":1532,"endOffset":1556,"count":0},{"startOffset":1687,"endOffset":1707,"count":0},{"startOffset":1838,"endOffset":1935,"count":0},{"startOffset":2180,"endOffset":2289,"count":0}],"isBlockCoverage":true},{"functionName":"getAssociations","ranges":[{"startOffset":2321,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"getAssociationForAlias","ranges":[{"startOffset":2464,"endOffset":2621,"count":0}],"isBlockCoverage":false},{"functionName":"singleLinked","ranges":[{"startOffset":2625,"endOffset":3538,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2664,"endOffset":3535,"count":2},{"startOffset":2766,"endOffset":2904,"count":0},{"startOffset":2958,"endOffset":2982,"count":0},{"startOffset":3048,"endOffset":3138,"count":0},{"startOffset":3405,"endOffset":3507,"count":0}],"isBlockCoverage":true}]},{"scriptId":"853","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/deprecations.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2577,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1},{"startOffset":442,"endOffset":504,"count":5}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":1},{"startOffset":599,"endOffset":631,"count":0},{"startOffset":689,"endOffset":880,"count":42}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":5}],"isBlockCoverage":true},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":1},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1079,"endOffset":1102,"count":0},{"startOffset":1103,"endOffset":1153,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"noBoolOperatorAliases","ranges":[{"startOffset":1254,"endOffset":1281,"count":0}],"isBlockCoverage":false},{"functionName":"noDoubleNestedGroup","ranges":[{"startOffset":1306,"endOffset":1331,"count":1}],"isBlockCoverage":true},{"functionName":"noStringOperators","ranges":[{"startOffset":1354,"endOffset":1377,"count":0}],"isBlockCoverage":false},{"functionName":"noTrueLogging","ranges":[{"startOffset":1396,"endOffset":1415,"count":0}],"isBlockCoverage":false},{"functionName":"unsupportedEngine","ranges":[{"startOffset":1438,"endOffset":1461,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1526,"endOffset":1535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"854","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/deferrable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1344,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":89,"endOffset":153,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":156,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":214,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":329,"endOffset":386,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":436,"endOffset":494,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":528,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"SET_DEFERRED","ranges":[{"startOffset":613,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":695,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"SET_IMMEDIATE","ranges":[{"startOffset":828,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"toSql","ranges":[{"startOffset":910,"endOffset":1000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"855","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/model-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2463,"count":1}],"isBlockCoverage":true},{"functionName":"ModelManager","ranges":[{"startOffset":110,"endOffset":192,"count":1}],"isBlockCoverage":true},{"functionName":"addModel","ranges":[{"startOffset":195,"endOffset":310,"count":5}],"isBlockCoverage":true},{"functionName":"removeModel","ranges":[{"startOffset":313,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"getModel","ranges":[{"startOffset":486,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"get all","ranges":[{"startOffset":673,"endOffset":712,"count":0}],"isBlockCoverage":false},{"functionName":"getModelsTopoSortedByForeignKey","ranges":[{"startOffset":715,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"forEachModel","ranges":[{"startOffset":1911,"endOffset":2304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"856","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/toposort-class/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":51,"count":1}],"isBlockCoverage":true}]},{"scriptId":"857","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/toposort-class/build/toposort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11111,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1172,"endOffset":1589,"count":1},{"startOffset":1239,"endOffset":1252,"count":0},{"startOffset":1255,"endOffset":1324,"count":0},{"startOffset":1443,"endOffset":1587,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1598,"endOffset":11107,"count":1}],"isBlockCoverage":true},{"functionName":"_classCallCheck","ranges":[{"startOffset":1651,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1863,"endOffset":11069,"count":1}],"isBlockCoverage":true},{"functionName":"Toposort","ranges":[{"startOffset":1884,"endOffset":2030,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2417,"endOffset":3946,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":4188,"endOffset":10759,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10953,"endOffset":11036,"count":0}],"isBlockCoverage":false}]},{"scriptId":"858","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/transaction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5852,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"Transaction","ranges":[{"startOffset":722,"endOffset":1440,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":1443,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":2124,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"prepareEnvironment","ranges":[{"startOffset":2785,"endOffset":3675,"count":0}],"isBlockCoverage":false},{"functionName":"setDeferrable","ranges":[{"startOffset":3678,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"begin","ranges":[{"startOffset":3841,"endOffset":4329,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":4332,"endOffset":4555,"count":0}],"isBlockCoverage":false},{"functionName":"forceCleanup","ranges":[{"startOffset":4558,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"_clearCls","ranges":[{"startOffset":4801,"endOffset":4979,"count":0}],"isBlockCoverage":false},{"functionName":"afterCommit","ranges":[{"startOffset":4982,"endOffset":5139,"count":0}],"isBlockCoverage":false},{"functionName":"get TYPES","ranges":[{"startOffset":5149,"endOffset":5273,"count":1}],"isBlockCoverage":true},{"functionName":"get ISOLATION_LEVELS","ranges":[{"startOffset":5283,"endOffset":5492,"count":0}],"isBlockCoverage":false},{"functionName":"get LOCK","ranges":[{"startOffset":5502,"endOffset":5651,"count":0}],"isBlockCoverage":false},{"functionName":"get LOCK","ranges":[{"startOffset":5654,"endOffset":5699,"count":0}],"isBlockCoverage":false}]},{"scriptId":"859","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/table-hints.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true}]},{"scriptId":"860","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/index-hints.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":146,"count":1}],"isBlockCoverage":true}]},{"scriptId":"861","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true}]},{"scriptId":"862","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/query-interface.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24714,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":141},{"startOffset":373,"endOffset":459,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":21},{"startOffset":534,"endOffset":545,"count":0},{"startOffset":551,"endOffset":623,"count":141},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":21}],"isBlockCoverage":true},{"functionName":"QueryInterface","ranges":[{"startOffset":1105,"endOffset":1223,"count":1}],"isBlockCoverage":true},{"functionName":"createDatabase","ranges":[{"startOffset":1226,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"dropDatabase","ranges":[{"startOffset":1432,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"createSchema","ranges":[{"startOffset":1625,"endOffset":1806,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":1809,"endOffset":1986,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllSchemas","ranges":[{"startOffset":1989,"endOffset":2307,"count":0}],"isBlockCoverage":false},{"functionName":"showAllSchemas","ranges":[{"startOffset":2310,"endOffset":2722,"count":0}],"isBlockCoverage":false},{"functionName":"databaseVersion","ranges":[{"startOffset":2725,"endOffset":2910,"count":1}],"isBlockCoverage":true},{"functionName":"createTable","ranges":[{"startOffset":2913,"endOffset":4060,"count":0}],"isBlockCoverage":false},{"functionName":"tableExists","ranges":[{"startOffset":4063,"endOffset":4336,"count":0}],"isBlockCoverage":false},{"functionName":"dropTable","ranges":[{"startOffset":4339,"endOffset":4606,"count":0}],"isBlockCoverage":false},{"functionName":"_dropAllTables","ranges":[{"startOffset":4609,"endOffset":4884,"count":0}],"isBlockCoverage":false},{"functionName":"dropAllTables","ranges":[{"startOffset":4887,"endOffset":5569,"count":0}],"isBlockCoverage":false},{"functionName":"renameTable","ranges":[{"startOffset":5572,"endOffset":5770,"count":0}],"isBlockCoverage":false},{"functionName":"showAllTables","ranges":[{"startOffset":5773,"endOffset":6129,"count":0}],"isBlockCoverage":false},{"functionName":"describeTable","ranges":[{"startOffset":6132,"endOffset":7315,"count":0}],"isBlockCoverage":false},{"functionName":"addColumn","ranges":[{"startOffset":7318,"endOffset":7724,"count":0}],"isBlockCoverage":false},{"functionName":"removeColumn","ranges":[{"startOffset":7727,"endOffset":7893,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAttribute","ranges":[{"startOffset":7896,"endOffset":8199,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifier","ranges":[{"startOffset":8202,"endOffset":8311,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifiers","ranges":[{"startOffset":8314,"endOffset":8411,"count":0}],"isBlockCoverage":false},{"functionName":"changeColumn","ranges":[{"startOffset":8414,"endOffset":8834,"count":0}],"isBlockCoverage":false},{"functionName":"assertTableHasColumn","ranges":[{"startOffset":8837,"endOffset":9119,"count":0}],"isBlockCoverage":false},{"functionName":"renameColumn","ranges":[{"startOffset":9122,"endOffset":9816,"count":0}],"isBlockCoverage":false},{"functionName":"addIndex","ranges":[{"startOffset":9819,"endOffset":10362,"count":0}],"isBlockCoverage":false},{"functionName":"showIndex","ranges":[{"startOffset":10365,"endOffset":10602,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeysForTables","ranges":[{"startOffset":10605,"endOffset":11403,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeyReferencesForTable","ranges":[{"startOffset":11406,"endOffset":11738,"count":0}],"isBlockCoverage":false},{"functionName":"removeIndex","ranges":[{"startOffset":11741,"endOffset":11986,"count":0}],"isBlockCoverage":false},{"functionName":"addConstraint","ranges":[{"startOffset":11989,"endOffset":12422,"count":0}],"isBlockCoverage":false},{"functionName":"showConstraint","ranges":[{"startOffset":12425,"endOffset":12698,"count":0}],"isBlockCoverage":false},{"functionName":"removeConstraint","ranges":[{"startOffset":12701,"endOffset":12877,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":12880,"endOffset":13388,"count":3},{"startOffset":13308,"endOffset":13387,"count":1}],"isBlockCoverage":true},{"functionName":"upsert","ranges":[{"startOffset":13391,"endOffset":14841,"count":0}],"isBlockCoverage":false},{"functionName":"bulkInsert","ranges":[{"startOffset":14844,"endOffset":15146,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":15149,"endOffset":15589,"count":0}],"isBlockCoverage":false},{"functionName":"bulkUpdate","ranges":[{"startOffset":15592,"endOffset":16217,"count":3},{"startOffset":15937,"endOffset":15948,"count":0},{"startOffset":16014,"endOffset":16090,"count":0}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":16220,"endOffset":17375,"count":0}],"isBlockCoverage":false},{"functionName":"bulkDelete","ranges":[{"startOffset":17378,"endOffset":17866,"count":1},{"startOffset":17558,"endOffset":17669,"count":0},{"startOffset":17716,"endOffset":17747,"count":0}],"isBlockCoverage":true},{"functionName":"select","ranges":[{"startOffset":17869,"endOffset":18128,"count":20}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":18131,"endOffset":18535,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":18538,"endOffset":18942,"count":0}],"isBlockCoverage":false},{"functionName":"rawSelect","ranges":[{"startOffset":18945,"endOffset":20125,"count":0}],"isBlockCoverage":false},{"functionName":"createTrigger","ranges":[{"startOffset":20128,"endOffset":20504,"count":0}],"isBlockCoverage":false},{"functionName":"dropTrigger","ranges":[{"startOffset":20507,"endOffset":20741,"count":0}],"isBlockCoverage":false},{"functionName":"renameTrigger","ranges":[{"startOffset":20744,"endOffset":21020,"count":0}],"isBlockCoverage":false},{"functionName":"createFunction","ranges":[{"startOffset":21023,"endOffset":21352,"count":0}],"isBlockCoverage":false},{"functionName":"dropFunction","ranges":[{"startOffset":21355,"endOffset":21587,"count":0}],"isBlockCoverage":false},{"functionName":"renameFunction","ranges":[{"startOffset":21590,"endOffset":21866,"count":0}],"isBlockCoverage":false},{"functionName":"ensureEnums","ranges":[{"startOffset":21869,"endOffset":21888,"count":0}],"isBlockCoverage":false},{"functionName":"setIsolationLevel","ranges":[{"startOffset":21891,"endOffset":22482,"count":0}],"isBlockCoverage":false},{"functionName":"startTransaction","ranges":[{"startOffset":22485,"endOffset":23004,"count":0}],"isBlockCoverage":false},{"functionName":"deferConstraints","ranges":[{"startOffset":23007,"endOffset":23311,"count":0}],"isBlockCoverage":false},{"functionName":"commitTransaction","ranges":[{"startOffset":23314,"endOffset":23950,"count":0}],"isBlockCoverage":false},{"functionName":"rollbackTransaction","ranges":[{"startOffset":23953,"endOffset":24626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"863","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/sqlite/sqlite-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":646,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":60,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":137,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"withSqliteForeignKeysOff","ranges":[{"startOffset":324,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"withSqliteForeignKeysOff","ranges":[{"startOffset":359,"endOffset":604,"count":0}],"isBlockCoverage":false}]},{"scriptId":"864","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/sql.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7145,"count":1}],"isBlockCoverage":true},{"functionName":"__markAsModule","ranges":[{"startOffset":292,"endOffset":352,"count":3}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":369,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"__reExport","ranges":[{"startOffset":525,"endOffset":903,"count":2},{"startOffset":599,"endOffset":631,"count":1},{"startOffset":689,"endOffset":880,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":785,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"__toModule","ranges":[{"startOffset":922,"endOffset":1207,"count":2},{"startOffset":1032,"endOffset":1036,"count":0},{"startOffset":1079,"endOffset":1102,"count":0},{"startOffset":1103,"endOffset":1153,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1112,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"injectReplacements","ranges":[{"startOffset":1251,"endOffset":1275,"count":1}],"isBlockCoverage":true},{"functionName":"injectReplacements","ranges":[{"startOffset":1414,"endOffset":6802,"count":0}],"isBlockCoverage":false},{"functionName":"canPrecedeNewToken","ranges":[{"startOffset":6803,"endOffset":6891,"count":0}],"isBlockCoverage":false},{"functionName":"isBackslashEscaped","ranges":[{"startOffset":6892,"endOffset":7112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"865","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/isPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1650,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":1229,"endOffset":1616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"866","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_getPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"867","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/_overArg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":254,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":299,"endOffset":351,"count":0}],"isBlockCoverage":false}]},{"scriptId":"868","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lodash/isObjectLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":497,"endOffset":581,"count":0}],"isBlockCoverage":false}]},{"scriptId":"869","url":"node:process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":87,"count":1}],"isBlockCoverage":false}]},{"scriptId":"870","url":"node:internal/process/report","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2767,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":368,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":808,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":985,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":1043,"endOffset":1134,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1139,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1195,"endOffset":1286,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1291,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1345,"endOffset":1425,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1430,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1482,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1629,"endOffset":1703,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1708,"endOffset":1830,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1835,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1906,"endOffset":2073,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2078,"endOffset":2166,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2171,"endOffset":2307,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2316,"endOffset":2494,"count":0}],"isBlockCoverage":false},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2498,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2631,"endOffset":2707,"count":0}],"isBlockCoverage":false}]},{"scriptId":"871","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/config/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":630,"count":1}],"isBlockCoverage":true}]},{"scriptId":"872","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/dotenv/lib/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8522,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":382,"endOffset":1161,"count":1},{"startOffset":622,"endOffset":1145,"count":5},{"startOffset":725,"endOffset":730,"count":0}],"isBlockCoverage":true},{"functionName":"_parseVault","ranges":[{"startOffset":1163,"endOffset":2248,"count":0}],"isBlockCoverage":false},{"functionName":"_log","ranges":[{"startOffset":2250,"endOffset":2331,"count":0}],"isBlockCoverage":false},{"functionName":"_warn","ranges":[{"startOffset":2333,"endOffset":2415,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":2417,"endOffset":2501,"count":0}],"isBlockCoverage":false},{"functionName":"_dotenvKey","ranges":[{"startOffset":2503,"endOffset":2927,"count":1},{"startOffset":2611,"endOffset":2632,"count":0},{"startOffset":2633,"endOffset":2665,"count":0},{"startOffset":2667,"endOffset":2702,"count":0},{"startOffset":2805,"endOffset":2841,"count":0},{"startOffset":2843,"endOffset":2882,"count":0}],"isBlockCoverage":true},{"functionName":"_instructions","ranges":[{"startOffset":2929,"endOffset":3969,"count":0}],"isBlockCoverage":false},{"functionName":"_vaultPath","ranges":[{"startOffset":3971,"endOffset":4254,"count":1},{"startOffset":4073,"endOffset":4088,"count":0},{"startOffset":4089,"endOffset":4115,"count":0},{"startOffset":4117,"endOffset":4152,"count":0},{"startOffset":4216,"endOffset":4228,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveHome","ranges":[{"startOffset":4256,"endOffset":4373,"count":0}],"isBlockCoverage":false},{"functionName":"_configVault","ranges":[{"startOffset":4375,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"configDotenv","ranges":[{"startOffset":4706,"endOffset":5541,"count":1},{"startOffset":4851,"endOffset":4867,"count":0},{"startOffset":4885,"endOffset":5050,"count":0},{"startOffset":5258,"endOffset":5287,"count":0},{"startOffset":5289,"endOffset":5334,"count":0},{"startOffset":5418,"endOffset":5539,"count":0}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":5583,"endOffset":6107,"count":1},{"startOffset":5801,"endOffset":6106,"count":0}],"isBlockCoverage":true},{"functionName":"decrypt","ranges":[{"startOffset":6109,"endOffset":7185,"count":0}],"isBlockCoverage":false},{"functionName":"populate","ranges":[{"startOffset":7230,"endOffset":8029,"count":1},{"startOffset":7426,"endOffset":7533,"count":0},{"startOffset":7597,"endOffset":8027,"count":5},{"startOffset":7662,"endOffset":7974,"count":0}],"isBlockCoverage":true}]},{"scriptId":"873","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1865,"count":1}],"isBlockCoverage":true},{"functionName":"MysqlDialect","ranges":[{"startOffset":399,"endOffset":717,"count":1}],"isBlockCoverage":true},{"functionName":"canBackslashEscape","ranges":[{"startOffset":720,"endOffset":763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"874","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1454,"count":1}],"isBlockCoverage":true},{"functionName":"canBackslashEscape","ranges":[{"startOffset":40,"endOffset":84,"count":0}],"isBlockCoverage":false}]},{"scriptId":"875","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/connection-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4549,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":2},{"startOffset":451,"endOffset":523,"count":0},{"startOffset":596,"endOffset":684,"count":0}],"isBlockCoverage":true},{"functionName":"ConnectionManager","ranges":[{"startOffset":1186,"endOffset":1402,"count":1}],"isBlockCoverage":true},{"functionName":"_refreshTypeParser","ranges":[{"startOffset":1405,"endOffset":1474,"count":3}],"isBlockCoverage":true},{"functionName":"_clearTypeParser","ranges":[{"startOffset":1477,"endOffset":1526,"count":0}],"isBlockCoverage":false},{"functionName":"_typecast","ranges":[{"startOffset":1536,"endOffset":1707,"count":109},{"startOffset":1598,"endOffset":1684,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":1710,"endOffset":3963,"count":2},{"startOffset":3194,"endOffset":3229,"count":0},{"startOffset":3371,"endOffset":3959,"count":0}],"isBlockCoverage":true},{"functionName":"connection","ranges":[{"startOffset":2203,"endOffset":2747,"count":2}],"isBlockCoverage":true},{"functionName":"errorHandler","ranges":[{"startOffset":2328,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"connectHandler","ranges":[{"startOffset":2528,"endOffset":2638,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2815,"endOffset":3040,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3266,"endOffset":3327,"count":2}],"isBlockCoverage":true},{"functionName":"disconnect","ranges":[{"startOffset":3966,"endOffset":4200,"count":2},{"startOffset":4026,"endOffset":4126,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4154,"endOffset":4192,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4203,"endOffset":4365,"count":26}],"isBlockCoverage":true}]},{"scriptId":"876","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/connection-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8801,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionManager","ranges":[{"startOffset":354,"endOffset":927,"count":1},{"startOffset":642,"endOffset":718,"count":0},{"startOffset":760,"endOffset":765,"count":0}],"isBlockCoverage":true},{"functionName":"refreshTypeParser","ranges":[{"startOffset":930,"endOffset":1322,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":983,"endOffset":1316,"count":7},{"startOffset":1066,"endOffset":1310,"count":3},{"startOffset":1170,"endOffset":1302,"count":0}],"isBlockCoverage":true},{"functionName":"_loadDialectModule","ranges":[{"startOffset":1325,"endOffset":1974,"count":1},{"startOffset":1419,"endOffset":1493,"count":0},{"startOffset":1541,"endOffset":1602,"count":0},{"startOffset":1643,"endOffset":1970,"count":0}],"isBlockCoverage":true},{"functionName":"_onProcessExit","ranges":[{"startOffset":1977,"endOffset":2171,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":2174,"endOffset":2408,"count":0}],"isBlockCoverage":false},{"functionName":"initPools","ranges":[{"startOffset":2411,"endOffset":5857,"count":1},{"startOffset":3172,"endOffset":5856,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":2560,"endOffset":2587,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":2606,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3447,"endOffset":3521,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":3576,"endOffset":3752,"count":0}],"isBlockCoverage":false},{"functionName":"acquire","ranges":[{"startOffset":3769,"endOffset":4013,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":4030,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"destroyAllNow","ranges":[{"startOffset":4176,"endOffset":4365,"count":0}],"isBlockCoverage":false},{"functionName":"drain","ranges":[{"startOffset":4380,"endOffset":4478,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4551,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":4817,"endOffset":4861,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":5226,"endOffset":5396,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":5415,"endOffset":5459,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":5860,"endOffset":7701,"count":27},{"startOffset":5913,"endOffset":5918,"count":0},{"startOffset":5974,"endOffset":7253,"count":1},{"startOffset":7500,"endOffset":7644,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6041,"endOffset":7202,"count":1},{"startOffset":6579,"endOffset":6589,"count":0},{"startOffset":6690,"endOffset":6719,"count":0},{"startOffset":6831,"endOffset":6996,"count":0},{"startOffset":7104,"endOffset":7192,"count":0}],"isBlockCoverage":true},{"functionName":"versionPromise._options.logging","ranges":[{"startOffset":6284,"endOffset":6305,"count":1}],"isBlockCoverage":true},{"functionName":"releaseConnection","ranges":[{"startOffset":7704,"endOffset":7808,"count":27}],"isBlockCoverage":true},{"functionName":"destroyConnection","ranges":[{"startOffset":7811,"endOffset":7947,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":7950,"endOffset":8209,"count":2}],"isBlockCoverage":true},{"functionName":"_disconnect","ranges":[{"startOffset":8212,"endOffset":8446,"count":2}],"isBlockCoverage":true},{"functionName":"_validate","ranges":[{"startOffset":8449,"endOffset":8617,"count":26},{"startOffset":8523,"endOffset":8549,"count":0}],"isBlockCoverage":true}]},{"scriptId":"877","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":679,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":268,"endOffset":319,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":450,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":606,"endOffset":641,"count":1}],"isBlockCoverage":true}]},{"scriptId":"878","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/lib/TimeoutError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":222,"count":1}],"isBlockCoverage":true}]},{"scriptId":"879","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/lib/AggregateError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756,"count":1}],"isBlockCoverage":true},{"functionName":"AggregateError","ranges":[{"startOffset":151,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":268,"endOffset":670,"count":0}],"isBlockCoverage":false}]},{"scriptId":"880","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/lib/Pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10503,"count":1}],"isBlockCoverage":true},{"functionName":"Pool","ranges":[{"startOffset":213,"endOffset":1841,"count":1},{"startOffset":291,"endOffset":362,"count":0},{"startOffset":393,"endOffset":465,"count":0},{"startOffset":497,"endOffset":570,"count":0},{"startOffset":702,"endOffset":773,"count":0},{"startOffset":906,"endOffset":976,"count":0},{"startOffset":1016,"endOffset":1083,"count":0},{"startOffset":1126,"endOffset":1201,"count":0},{"startOffset":1203,"endOffset":1278,"count":0},{"startOffset":1338,"endOffset":1346,"count":0},{"startOffset":1413,"endOffset":1421,"count":0},{"startOffset":1484,"endOffset":1491,"count":0}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":1846,"endOffset":1892,"count":15}],"isBlockCoverage":true},{"functionName":"get name","ranges":[{"startOffset":1897,"endOffset":1950,"count":0}],"isBlockCoverage":false},{"functionName":"get available","ranges":[{"startOffset":1955,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"get using","ranges":[{"startOffset":2029,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"get waiting","ranges":[{"startOffset":2095,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"get maxSize","ranges":[{"startOffset":2166,"endOffset":2221,"count":2}],"isBlockCoverage":true},{"functionName":"get minSize","ranges":[{"startOffset":2226,"endOffset":2281,"count":14}],"isBlockCoverage":true},{"functionName":"_log","ranges":[{"startOffset":2286,"endOffset":2535,"count":95},{"startOffset":2353,"endOffset":2402,"count":0},{"startOffset":2430,"endOffset":2529,"count":0}],"isBlockCoverage":true},{"functionName":"_removeIdle","ranges":[{"startOffset":2540,"endOffset":3526,"count":12},{"startOffset":2971,"endOffset":3159,"count":1},{"startOffset":3294,"endOffset":3425,"count":11},{"startOffset":3425,"endOffset":3520,"count":1}],"isBlockCoverage":true},{"functionName":"_scheduleRemoveIdle","ranges":[{"startOffset":3531,"endOffset":3790,"count":38},{"startOffset":3595,"endOffset":3784,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3690,"endOffset":3747,"count":12}],"isBlockCoverage":true},{"functionName":"_dispense","ranges":[{"startOffset":3795,"endOffset":4805,"count":55},{"startOffset":4042,"endOffset":4073,"count":28},{"startOffset":4073,"endOffset":4124,"count":27},{"startOffset":4124,"endOffset":4713,"count":26},{"startOffset":4344,"endOffset":4441,"count":0},{"startOffset":4713,"endOffset":4799,"count":1}],"isBlockCoverage":true},{"functionName":"_createResource","ranges":[{"startOffset":4810,"endOffset":5752,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5044,"endOffset":5376,"count":1},{"startOffset":5267,"endOffset":5366,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5397,"endOffset":5744,"count":0}],"isBlockCoverage":false},{"functionName":"_addResourceToAvailableObjects","ranges":[{"startOffset":5757,"endOffset":6098,"count":27}],"isBlockCoverage":true},{"functionName":"_addResourceToInUseObjects","ranges":[{"startOffset":6103,"endOffset":6316,"count":27}],"isBlockCoverage":true},{"functionName":"_ensureMinimum","ranges":[{"startOffset":6321,"endOffset":6575,"count":1},{"startOffset":6418,"endOffset":6569,"count":0}],"isBlockCoverage":true},{"functionName":"acquire","ranges":[{"startOffset":6580,"endOffset":7066,"count":27},{"startOffset":6620,"endOffset":6720,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6833,"endOffset":6951,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":7071,"endOffset":8232,"count":27},{"startOffset":7200,"endOffset":7331,"count":0},{"startOffset":7467,"endOffset":7594,"count":0},{"startOffset":7758,"endOffset":8051,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7131,"endOffset":7197,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7383,"endOffset":7441,"count":27}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":8237,"endOffset":9123,"count":1},{"startOffset":8629,"endOffset":8679,"count":0},{"startOffset":8681,"endOffset":8747,"count":0},{"startOffset":8815,"endOffset":8831,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8432,"endOffset":8472,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8530,"endOffset":8570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9028,"endOffset":9091,"count":1}],"isBlockCoverage":true},{"functionName":"drain","ranges":[{"startOffset":9128,"endOffset":9764,"count":0}],"isBlockCoverage":false},{"functionName":"destroyAllNow","ranges":[{"startOffset":9769,"endOffset":10447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"881","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/lib/Deferred.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1021,"count":1}],"isBlockCoverage":true},{"functionName":"Deferred","ranges":[{"startOffset":175,"endOffset":339,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":227,"endOffset":331,"count":27}],"isBlockCoverage":true},{"functionName":"registerTimeout","ranges":[{"startOffset":344,"endOffset":616,"count":27},{"startOffset":428,"endOffset":435,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":471,"endOffset":591,"count":0}],"isBlockCoverage":false},{"functionName":"_clearTimeout","ranges":[{"startOffset":621,"endOffset":729,"count":27},{"startOffset":679,"endOffset":686,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":734,"endOffset":816,"count":27}],"isBlockCoverage":true},{"functionName":"reject","ranges":[{"startOffset":821,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":906,"endOffset":953,"count":27}],"isBlockCoverage":true}]},{"scriptId":"882","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2616,"count":1}],"isBlockCoverage":true}]},{"scriptId":"883","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7690,"count":1}],"isBlockCoverage":true},{"functionName":"makeSafeRegex","ranges":[{"startOffset":950,"endOffset":1161,"count":40},{"startOffset":1015,"endOffset":1144,"count":120}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1183,"endOffset":1459,"count":40},{"startOffset":1376,"endOffset":1381,"count":4},{"startOffset":1382,"endOffset":1393,"count":36},{"startOffset":1439,"endOffset":1444,"count":4},{"startOffset":1445,"endOffset":1456,"count":36}],"isBlockCoverage":true}]},{"scriptId":"884","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":859,"count":1},{"startOffset":233,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"885","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1},{"startOffset":91,"endOffset":138,"count":0},{"startOffset":141,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":143,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":193,"endOffset":201,"count":149}],"isBlockCoverage":true}]},{"scriptId":"886","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8756,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":311,"endOffset":2238,"count":24},{"startOffset":416,"endOffset":621,"count":10},{"startOffset":566,"endOffset":615,"count":0},{"startOffset":621,"endOffset":761,"count":14},{"startOffset":660,"endOffset":761,"count":0},{"startOffset":761,"endOffset":800,"count":14},{"startOffset":800,"endOffset":900,"count":0},{"startOffset":900,"endOffset":1239,"count":14},{"startOffset":1239,"endOffset":1252,"count":0},{"startOffset":1253,"endOffset":1265,"count":14},{"startOffset":1280,"endOffset":1344,"count":0},{"startOffset":1344,"endOffset":1529,"count":14},{"startOffset":1531,"endOffset":1589,"count":0},{"startOffset":1589,"endOffset":1646,"count":14},{"startOffset":1648,"endOffset":1706,"count":0},{"startOffset":1706,"endOffset":1763,"count":14},{"startOffset":1765,"endOffset":1823,"count":0},{"startOffset":1823,"endOffset":1884,"count":14},{"startOffset":1884,"endOffset":1918,"count":12},{"startOffset":1918,"endOffset":2170,"count":2},{"startOffset":2170,"endOffset":2194,"count":14},{"startOffset":2194,"endOffset":2211,"count":0},{"startOffset":2212,"endOffset":2216,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1970,"endOffset":2163,"count":2},{"startOffset":2137,"endOffset":2162,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2242,"endOffset":2438,"count":14},{"startOffset":2349,"endOffset":2410,"count":2}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2442,"endOffset":2483,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2487,"endOffset":2877,"count":6},{"startOffset":2604,"endOffset":2747,"count":0},{"startOffset":2789,"endOffset":2811,"count":0},{"startOffset":2848,"endOffset":2873,"count":0}],"isBlockCoverage":true},{"functionName":"compareMain","ranges":[{"startOffset":2881,"endOffset":3172,"count":6},{"startOffset":2939,"endOffset":2992,"count":0},{"startOffset":3057,"endOffset":3109,"count":0},{"startOffset":3110,"endOffset":3162,"count":0}],"isBlockCoverage":true},{"functionName":"comparePre","ranges":[{"startOffset":3176,"endOffset":4027,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4031,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4726,"endOffset":8728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"887","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":324,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":153,"endOffset":293,"count":34},{"startOffset":182,"endOffset":208,"count":15},{"startOffset":208,"endOffset":245,"count":19},{"startOffset":245,"endOffset":273,"count":0},{"startOffset":273,"endOffset":292,"count":19}],"isBlockCoverage":true}]},{"scriptId":"888","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":54,"endOffset":278,"count":6},{"startOffset":195,"endOffset":198,"count":0},{"startOffset":221,"endOffset":225,"count":0},{"startOffset":248,"endOffset":251,"count":0},{"startOffset":264,"endOffset":268,"count":0}],"isBlockCoverage":true},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":308,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"889","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":58,"endOffset":292,"count":2},{"startOffset":136,"endOffset":160,"count":0},{"startOffset":213,"endOffset":290,"count":0}],"isBlockCoverage":true}]},{"scriptId":"890","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":47,"endOffset":138,"count":1},{"startOffset":130,"endOffset":136,"count":0}],"isBlockCoverage":true}]},{"scriptId":"891","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":47,"endOffset":167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"892","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":57,"endOffset":442,"count":0}],"isBlockCoverage":false}]},{"scriptId":"893","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1612,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":50,"endOffset":1588,"count":0}],"isBlockCoverage":false}]},{"scriptId":"894","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"895","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"896","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"897","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":52,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"898","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":60,"endOffset":129,"count":6}],"isBlockCoverage":true}]},{"scriptId":"899","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":54,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"900","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":58,"endOffset":87,"count":0}],"isBlockCoverage":false}]},{"scriptId":"901","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":65,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"902","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":61,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"903","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":62,"endOffset":125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"904","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"905","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":48,"endOffset":89,"count":2}],"isBlockCoverage":true}]},{"scriptId":"906","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":48,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"907","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":49,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"908","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":49,"endOffset":91,"count":4}],"isBlockCoverage":true}]},{"scriptId":"909","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"910","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":947,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":181,"endOffset":925,"count":5},{"startOffset":224,"endOffset":386,"count":0},{"startOffset":392,"endOffset":554,"count":0},{"startOffset":560,"endOffset":568,"count":0},{"startOffset":573,"endOffset":582,"count":0},{"startOffset":587,"endOffset":626,"count":0},{"startOffset":632,"endOffset":672,"count":0},{"startOffset":678,"endOffset":716,"count":0},{"startOffset":722,"endOffset":762,"count":4},{"startOffset":768,"endOffset":806,"count":1},{"startOffset":812,"endOffset":852,"count":0},{"startOffset":858,"endOffset":919,"count":0}],"isBlockCoverage":true}]},{"scriptId":"911","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1513,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":145,"endOffset":1488,"count":1},{"startOffset":202,"endOffset":226,"count":0},{"startOffset":263,"endOffset":298,"count":0},{"startOffset":335,"endOffset":356,"count":0},{"startOffset":469,"endOffset":1363,"count":0},{"startOffset":1387,"endOffset":1408,"count":0},{"startOffset":1449,"endOffset":1455,"count":0},{"startOffset":1468,"endOffset":1474,"count":0}],"isBlockCoverage":true}]},{"scriptId":"912","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3617,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":100,"endOffset":131,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":135,"endOffset":682,"count":7},{"startOffset":238,"endOffset":358,"count":0},{"startOffset":556,"endOffset":585,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":686,"endOffset":1182,"count":7},{"startOffset":734,"endOffset":757,"count":0},{"startOffset":818,"endOffset":882,"count":0},{"startOffset":930,"endOffset":934,"count":0},{"startOffset":966,"endOffset":998,"count":0},{"startOffset":1077,"endOffset":1108,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1186,"endOffset":1225,"count":5}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":1229,"endOffset":1609,"count":5},{"startOffset":1353,"endOffset":1378,"count":0},{"startOffset":1417,"endOffset":1538,"count":0}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":1613,"endOffset":3323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"913","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14514,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":55,"endOffset":2052,"count":3},{"startOffset":155,"endOffset":379,"count":0},{"startOffset":418,"endOffset":562,"count":0},{"startOffset":1381,"endOffset":1451,"count":0},{"startOffset":1552,"endOffset":2029,"count":1},{"startOffset":1734,"endOffset":1770,"count":0},{"startOffset":1900,"endOffset":2015,"count":2},{"startOffset":1931,"endOffset":1945,"count":1},{"startOffset":1947,"endOffset":2005,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1084,"endOffset":1114,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1339,"endOffset":1352,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1678,"endOffset":1699,"count":2}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2056,"endOffset":2197,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2105,"endOffset":2138,"count":4}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2201,"endOffset":2240,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2244,"endOffset":4527,"count":4},{"startOffset":2427,"endOffset":2453,"count":0},{"startOffset":2483,"endOffset":2496,"count":0},{"startOffset":2595,"endOffset":2622,"count":0},{"startOffset":2726,"endOffset":2750,"count":0},{"startOffset":3623,"endOffset":3862,"count":0},{"startOffset":4247,"endOffset":4350,"count":5},{"startOffset":4276,"endOffset":4307,"count":0},{"startOffset":4377,"endOffset":4396,"count":1},{"startOffset":4398,"endOffset":4431,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3437,"endOffset":3480,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3566,"endOffset":3605,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3729,"endOffset":3855,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4167,"endOffset":4209,"count":5}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":4531,"endOffset":5161,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":5229,"endOffset":5611,"count":3},{"startOffset":5264,"endOffset":5290,"count":0},{"startOffset":5403,"endOffset":5444,"count":0},{"startOffset":5498,"endOffset":5590,"count":4},{"startOffset":5555,"endOffset":5584,"count":3},{"startOffset":5590,"endOffset":5610,"count":0}],"isBlockCoverage":true},{"functionName":"isNullSet","ranges":[{"startOffset":6111,"endOffset":6138,"count":7}],"isBlockCoverage":true},{"functionName":"isAny","ranges":[{"startOffset":6153,"endOffset":6172,"count":1}],"isBlockCoverage":true},{"functionName":"isSatisfiable","ranges":[{"startOffset":6294,"endOffset":6700,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":6870,"endOffset":7183,"count":4}],"isBlockCoverage":true},{"functionName":"isX","ranges":[{"startOffset":7197,"endOffset":7248,"count":18}],"isBlockCoverage":true},{"functionName":"replaceTildes","ranges":[{"startOffset":7584,"endOffset":7707,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7658,"endOffset":7689,"count":5}],"isBlockCoverage":true},{"functionName":"replaceTilde","ranges":[{"startOffset":7730,"endOffset":8404,"count":5},{"startOffset":7777,"endOffset":7795,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7835,"endOffset":8401,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":8697,"endOffset":8820,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8771,"endOffset":8802,"count":4}],"isBlockCoverage":true},{"functionName":"replaceCaret","ranges":[{"startOffset":8843,"endOffset":10145,"count":4},{"startOffset":8922,"endOffset":8940,"count":0},{"startOffset":8993,"endOffset":8999,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9030,"endOffset":10142,"count":1},{"startOffset":9122,"endOffset":9144,"count":0},{"startOffset":9162,"endOffset":9215,"count":0},{"startOffset":9233,"endOffset":9391,"count":0},{"startOffset":9405,"endOffset":9757,"count":0},{"startOffset":9807,"endOffset":10011,"count":0}],"isBlockCoverage":true},{"functionName":"replaceXRanges","ranges":[{"startOffset":10170,"endOffset":10323,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10273,"endOffset":10305,"count":5}],"isBlockCoverage":true},{"functionName":"replaceXRange","ranges":[{"startOffset":10347,"endOffset":12047,"count":5},{"startOffset":10415,"endOffset":10434,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10475,"endOffset":12044,"count":5},{"startOffset":10675,"endOffset":10682,"count":0},{"startOffset":10684,"endOffset":10707,"count":0},{"startOffset":10872,"endOffset":10878,"count":0},{"startOffset":10897,"endOffset":11074,"count":0},{"startOffset":11098,"endOffset":11842,"count":0},{"startOffset":11856,"endOffset":11910,"count":0},{"startOffset":11924,"endOffset":11991,"count":0}],"isBlockCoverage":true},{"functionName":"replaceStars","ranges":[{"startOffset":12193,"endOffset":12378,"count":4}],"isBlockCoverage":true},{"functionName":"replaceGTE0","ranges":[{"startOffset":12400,"endOffset":12555,"count":5},{"startOffset":12527,"endOffset":12538,"count":0}],"isBlockCoverage":true},{"functionName":"hyphenReplace","ranges":[{"startOffset":12797,"endOffset":13471,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12806,"endOffset":13471,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":13489,"endOffset":14513,"count":4},{"startOffset":13557,"endOffset":13620,"count":5},{"startOffset":13590,"endOffset":13616,"count":1},{"startOffset":13620,"endOffset":13654,"count":3},{"startOffset":13654,"endOffset":13683,"count":0},{"startOffset":13685,"endOffset":14496,"count":0},{"startOffset":14496,"endOffset":14512,"count":3}],"isBlockCoverage":true}]},{"scriptId":"914","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/node_modules/lru-cache/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8186,"count":1}],"isBlockCoverage":true},{"functionName":"naiveLength","ranges":[{"startOffset":510,"endOffset":517,"count":4}],"isBlockCoverage":true},{"functionName":"LRUCache","ranges":[{"startOffset":853,"endOffset":1751,"count":1},{"startOffset":920,"endOffset":946,"count":0},{"startOffset":972,"endOffset":984,"count":0},{"startOffset":1069,"endOffset":1125,"count":0},{"startOffset":1235,"endOffset":1246,"count":0},{"startOffset":1350,"endOffset":1363,"count":0},{"startOffset":1439,"endOffset":1476,"count":0},{"startOffset":1484,"endOffset":1530,"count":0}],"isBlockCoverage":true},{"functionName":"set max","ranges":[{"startOffset":1799,"endOffset":1969,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":1972,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"set allowStale","ranges":[{"startOffset":2013,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"get allowStale","ranges":[{"startOffset":2086,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"set maxAge","ranges":[{"startOffset":2142,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"get maxAge","ranges":[{"startOffset":2303,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"set lengthCalculator","ranges":[{"startOffset":2408,"endOffset":2765,"count":0}],"isBlockCoverage":false},{"functionName":"get lengthCalculator","ranges":[{"startOffset":2768,"endOffset":2826,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":2830,"endOffset":2867,"count":0}],"isBlockCoverage":false},{"functionName":"get itemCount","ranges":[{"startOffset":2870,"endOffset":2919,"count":0}],"isBlockCoverage":false},{"functionName":"rforEach","ranges":[{"startOffset":2923,"endOffset":3138,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":3142,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":3360,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":3429,"endOffset":3498,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":3502,"endOffset":3858,"count":1},{"startOffset":3535,"endOffset":3560,"count":0},{"startOffset":3561,"endOffset":3593,"count":0},{"startOffset":3595,"endOffset":3673,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3626,"endOffset":3666,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":3862,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"dumpLru","ranges":[{"startOffset":4068,"endOffset":4110,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4114,"endOffset":5376,"count":4},{"startOffset":4194,"endOffset":4223,"count":0},{"startOffset":4231,"endOffset":4277,"count":0},{"startOffset":4302,"endOffset":4314,"count":0},{"startOffset":4402,"endOffset":4996,"count":0},{"startOffset":5145,"endOffset":5231,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":5380,"endOffset":5513,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5517,"endOffset":5564,"count":4}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":5568,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":5621,"endOffset":5746,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":5750,"endOffset":5801,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":5805,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"prune","ranges":[{"startOffset":6382,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6475,"endOffset":6871,"count":4},{"startOffset":6547,"endOffset":6869,"count":0}],"isBlockCoverage":true},{"functionName":"isStale","ranges":[{"startOffset":6889,"endOffset":7094,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":7109,"endOffset":7497,"count":4},{"startOffset":7151,"endOffset":7495,"count":0}],"isBlockCoverage":true},{"functionName":"del","ranges":[{"startOffset":7511,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"Entry","ranges":[{"startOffset":7756,"endOffset":7923,"count":4}],"isBlockCoverage":true},{"functionName":"forEachStep","ranges":[{"startOffset":7947,"endOffset":8158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"915","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/yallist/yallist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8411,"count":1},{"startOffset":8397,"endOffset":8410,"count":0}],"isBlockCoverage":true},{"functionName":"Yallist","ranges":[{"startOffset":85,"endOffset":517,"count":1},{"startOffset":163,"endOffset":193,"count":0},{"startOffset":263,"endOffset":300,"count":0},{"startOffset":302,"endOffset":371,"count":0},{"startOffset":403,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":321,"endOffset":366,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.removeNode","ranges":[{"startOffset":550,"endOffset":1001,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.unshiftNode","ranges":[{"startOffset":1035,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.pushNode","ranges":[{"startOffset":1365,"endOffset":1664,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.push","ranges":[{"startOffset":1691,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.unshift","ranges":[{"startOffset":1844,"endOffset":1970,"count":4}],"isBlockCoverage":true},{"functionName":"Yallist.pop","ranges":[{"startOffset":1996,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.shift","ranges":[{"startOffset":2252,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.forEach","ranges":[{"startOffset":2510,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.forEachReverse","ranges":[{"startOffset":2728,"endOffset":2923,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.get","ranges":[{"startOffset":2949,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.getReverse","ranges":[{"startOffset":3215,"endOffset":3448,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.map","ranges":[{"startOffset":3474,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.mapReverse","ranges":[{"startOffset":3723,"endOffset":3939,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reduce","ranges":[{"startOffset":3968,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reduceReverse","ranges":[{"startOffset":4399,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.toArray","ranges":[{"startOffset":4838,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.toArrayReverse","ranges":[{"startOffset":5055,"endOffset":5235,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.slice","ranges":[{"startOffset":5263,"endOffset":5790,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.sliceReverse","ranges":[{"startOffset":5825,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.splice","ranges":[{"startOffset":6391,"endOffset":7034,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reverse","ranges":[{"startOffset":7064,"endOffset":7322,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7324,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":7645,"endOffset":7793,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":7795,"endOffset":7946,"count":4},{"startOffset":7897,"endOffset":7928,"count":1}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":7948,"endOffset":8300,"count":4},{"startOffset":8021,"endOffset":8071,"count":0},{"startOffset":8126,"endOffset":8173,"count":0},{"startOffset":8219,"endOffset":8266,"count":3},{"startOffset":8266,"endOffset":8298,"count":1}],"isBlockCoverage":true}]},{"scriptId":"916","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/yallist/iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":30,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"Yallist.<computed>","ranges":[{"startOffset":90,"endOffset":204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"917","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":60,"endOffset":205,"count":3},{"startOffset":141,"endOffset":174,"count":0}],"isBlockCoverage":true}]},{"scriptId":"918","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":115,"endOffset":235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"919","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":109,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"920","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":108,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"921","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1500,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":144,"endOffset":1471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"922","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":61,"endOffset":283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"923","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2190,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":390,"endOffset":2163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"924","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":129,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"925","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":125,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"926","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":210,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":61,"endOffset":181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"927","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1341,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":329,"endOffset":1340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"928","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7510,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":1996,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2869,"endOffset":6974,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":7025,"endOffset":7229,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":7280,"endOffset":7484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"929","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/parserStore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":459,"count":1}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":189,"endOffset":239,"count":0}],"isBlockCoverage":false},{"functionName":"refresh","ranges":[{"startOffset":245,"endOffset":385,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":391,"endOffset":452,"count":109}],"isBlockCoverage":true}]},{"scriptId":"930","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8964,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":460},{"startOffset":273,"endOffset":359,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":28},{"startOffset":434,"endOffset":445,"count":0},{"startOffset":451,"endOffset":523,"count":460},{"startOffset":596,"endOffset":684,"count":0}],"isBlockCoverage":true},{"functionName":"Query","ranges":[{"startOffset":1089,"endOffset":1222,"count":28}],"isBlockCoverage":true},{"functionName":"formatBindParameters","ranges":[{"startOffset":1232,"endOffset":1641,"count":6},{"startOffset":1627,"endOffset":1635,"count":0}],"isBlockCoverage":true},{"functionName":"replacementFunc","ranges":[{"startOffset":1331,"endOffset":1487,"count":57},{"startOffset":1460,"endOffset":1486,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":1644,"endOffset":3025,"count":28},{"startOffset":1902,"endOffset":1952,"count":6},{"startOffset":2038,"endOffset":2058,"count":6},{"startOffset":2060,"endOffset":2268,"count":6},{"startOffset":2260,"endOffset":2268,"count":2},{"startOffset":2268,"endOffset":2472,"count":22},{"startOffset":2479,"endOffset":2838,"count":4},{"startOffset":2525,"endOffset":2555,"count":0},{"startOffset":2557,"endOffset":2716,"count":0},{"startOffset":2838,"endOffset":2839,"count":24},{"startOffset":2872,"endOffset":2894,"count":24},{"startOffset":2894,"endOffset":2904,"count":0},{"startOffset":2905,"endOffset":2933,"count":0},{"startOffset":2935,"endOffset":2981,"count":0},{"startOffset":2981,"endOffset":3024,"count":24}],"isBlockCoverage":true},{"functionName":"results","ranges":[{"startOffset":2098,"endOffset":2258,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2167,"endOffset":2225,"count":6},{"startOffset":2192,"endOffset":2207,"count":4},{"startOffset":2208,"endOffset":2225,"count":2}],"isBlockCoverage":true},{"functionName":"results","ranges":[{"startOffset":2312,"endOffset":2462,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2371,"endOffset":2429,"count":22},{"startOffset":2396,"endOffset":2411,"count":0}],"isBlockCoverage":true},{"functionName":"formatResults","ranges":[{"startOffset":3028,"endOffset":5315,"count":24},{"startOffset":3116,"endOffset":3776,"count":1},{"startOffset":3180,"endOffset":3770,"count":0},{"startOffset":3807,"endOffset":3857,"count":20},{"startOffset":3857,"endOffset":3892,"count":4},{"startOffset":3892,"endOffset":3946,"count":0},{"startOffset":3946,"endOffset":3979,"count":4},{"startOffset":3979,"endOffset":4592,"count":0},{"startOffset":4592,"endOffset":4628,"count":4},{"startOffset":4628,"endOffset":4683,"count":0},{"startOffset":4683,"endOffset":4712,"count":4},{"startOffset":4712,"endOffset":4741,"count":0},{"startOffset":4741,"endOffset":4775,"count":4},{"startOffset":4775,"endOffset":4802,"count":3},{"startOffset":4804,"endOffset":4875,"count":2},{"startOffset":4875,"endOffset":4948,"count":1},{"startOffset":4948,"endOffset":4974,"count":0},{"startOffset":4974,"endOffset":5005,"count":1},{"startOffset":5005,"endOffset":5060,"count":0},{"startOffset":5060,"endOffset":5090,"count":1},{"startOffset":5090,"endOffset":5113,"count":0},{"startOffset":5115,"endOffset":5164,"count":1},{"startOffset":5164,"endOffset":5314,"count":0}],"isBlockCoverage":true},{"functionName":"logWarnings","ranges":[{"startOffset":5318,"endOffset":6152,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":6155,"endOffset":8159,"count":4},{"startOffset":6214,"endOffset":6225,"count":0},{"startOffset":6491,"endOffset":6499,"count":0},{"startOffset":6560,"endOffset":6568,"count":0},{"startOffset":6612,"endOffset":6620,"count":0},{"startOffset":6718,"endOffset":6853,"count":0},{"startOffset":7297,"endOffset":7323,"count":0},{"startOffset":7330,"endOffset":8058,"count":0},{"startOffset":8065,"endOffset":8149,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6962,"endOffset":7163,"count":4}],"isBlockCoverage":true},{"functionName":"handleShowIndexesQuery","ranges":[{"startOffset":8162,"endOffset":8841,"count":0}],"isBlockCoverage":false}]},{"scriptId":"931","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19072,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":488},{"startOffset":273,"endOffset":359,"count":48},{"startOffset":360,"endOffset":378,"count":440}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":28},{"startOffset":434,"endOffset":445,"count":0},{"startOffset":451,"endOffset":523,"count":488},{"startOffset":596,"endOffset":684,"count":0}],"isBlockCoverage":true},{"functionName":"AbstractQuery","ranges":[{"startOffset":1028,"endOffset":1483,"count":28},{"startOffset":1410,"endOffset":1479,"count":0}],"isBlockCoverage":true},{"functionName":"formatBindParameters","ranges":[{"startOffset":1493,"endOffset":3330,"count":6},{"startOffset":1581,"endOffset":1612,"count":0},{"startOffset":1689,"endOffset":1767,"count":0},{"startOffset":1794,"endOffset":2265,"count":0},{"startOffset":2301,"endOffset":2605,"count":0}],"isBlockCoverage":true},{"functionName":"replacementFunc","ranges":[{"startOffset":1860,"endOffset":2000,"count":0}],"isBlockCoverage":false},{"functionName":"replacementFunc","ranges":[{"startOffset":2043,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"replacementFunc","ranges":[{"startOffset":2378,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2712,"endOffset":3302,"count":57},{"startOffset":2753,"endOffset":2813,"count":0},{"startOffset":3017,"endOffset":3140,"count":0},{"startOffset":3171,"endOffset":3274,"count":0}],"isBlockCoverage":true},{"functionName":"formatError","ranges":[{"startOffset":3333,"endOffset":3413,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":3416,"endOffset":3486,"count":0}],"isBlockCoverage":false},{"functionName":"checkLoggingOption","ranges":[{"startOffset":3489,"endOffset":3640,"count":28},{"startOffset":3551,"endOffset":3636,"count":0}],"isBlockCoverage":true},{"functionName":"getInsertIdField","ranges":[{"startOffset":3643,"endOffset":3690,"count":1}],"isBlockCoverage":true},{"functionName":"getUniqueConstraintErrorMessage","ranges":[{"startOffset":3693,"endOffset":4143,"count":4},{"startOffset":3786,"endOffset":3804,"count":0},{"startOffset":3897,"endOffset":4113,"count":8},{"startOffset":3980,"endOffset":4105,"count":4},{"startOffset":4028,"endOffset":4095,"count":0}],"isBlockCoverage":true},{"functionName":"isRawQuery","ranges":[{"startOffset":4146,"endOffset":4213,"count":0}],"isBlockCoverage":false},{"functionName":"isVersionQuery","ranges":[{"startOffset":4216,"endOffset":4291,"count":2}],"isBlockCoverage":true},{"functionName":"isUpsertQuery","ranges":[{"startOffset":4294,"endOffset":4367,"count":1}],"isBlockCoverage":true},{"functionName":"isInsertQuery","ranges":[{"startOffset":4370,"endOffset":4819,"count":25},{"startOffset":4477,"endOffset":4503,"count":2},{"startOffset":4503,"endOffset":4575,"count":23},{"startOffset":4597,"endOffset":4684,"count":0},{"startOffset":4706,"endOffset":4795,"count":0}],"isBlockCoverage":true},{"functionName":"handleInsertQuery","ranges":[{"startOffset":4822,"endOffset":5164,"count":1},{"startOffset":5055,"endOffset":5103,"count":0}],"isBlockCoverage":true},{"functionName":"isShowTablesQuery","ranges":[{"startOffset":5167,"endOffset":5248,"count":4}],"isBlockCoverage":true},{"functionName":"handleShowTablesQuery","ranges":[{"startOffset":5251,"endOffset":5363,"count":0}],"isBlockCoverage":false},{"functionName":"isShowIndexesQuery","ranges":[{"startOffset":5366,"endOffset":5449,"count":4}],"isBlockCoverage":true},{"functionName":"isShowConstraintsQuery","ranges":[{"startOffset":5452,"endOffset":5543,"count":0}],"isBlockCoverage":false},{"functionName":"isDescribeQuery","ranges":[{"startOffset":5546,"endOffset":5623,"count":4}],"isBlockCoverage":true},{"functionName":"isSelectQuery","ranges":[{"startOffset":5626,"endOffset":5699,"count":24}],"isBlockCoverage":true},{"functionName":"isBulkUpdateQuery","ranges":[{"startOffset":5702,"endOffset":5783,"count":4}],"isBlockCoverage":true},{"functionName":"isBulkDeleteQuery","ranges":[{"startOffset":5786,"endOffset":5867,"count":3}],"isBlockCoverage":true},{"functionName":"isForeignKeysQuery","ranges":[{"startOffset":5870,"endOffset":5953,"count":1}],"isBlockCoverage":true},{"functionName":"isUpdateQuery","ranges":[{"startOffset":5956,"endOffset":6029,"count":0}],"isBlockCoverage":false},{"functionName":"handleSelectQuery","ranges":[{"startOffset":6032,"endOffset":7764,"count":20},{"startOffset":6115,"endOffset":6444,"count":0},{"startOffset":6471,"endOffset":6805,"count":0},{"startOffset":6846,"endOffset":7454,"count":0},{"startOffset":7608,"endOffset":7634,"count":0},{"startOffset":7679,"endOffset":7741,"count":19},{"startOffset":7716,"endOffset":7722,"count":3},{"startOffset":7723,"endOffset":7734,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6191,"endOffset":6436,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6500,"endOffset":6797,"count":0}],"isBlockCoverage":false},{"functionName":"isShowOrDescribeQuery","ranges":[{"startOffset":7767,"endOffset":7975,"count":0}],"isBlockCoverage":false},{"functionName":"isCallQuery","ranges":[{"startOffset":7978,"endOffset":8051,"count":4}],"isBlockCoverage":true},{"functionName":"_logQuery","ranges":[{"startOffset":8054,"endOffset":9162,"count":28},{"startOffset":8408,"endOffset":8421,"count":0},{"startOffset":8423,"endOffset":8740,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8572,"endOffset":8599,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8970,"endOffset":9157,"count":28},{"startOffset":9071,"endOffset":9151,"count":0}],"isBlockCoverage":true},{"functionName":"_groupJoinData","ranges":[{"startOffset":9172,"endOffset":18917,"count":0}],"isBlockCoverage":false}]},{"scriptId":"932","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/query-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16938,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":38},{"startOffset":373,"endOffset":459,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":1},{"startOffset":534,"endOffset":545,"count":0},{"startOffset":551,"endOffset":623,"count":0},{"startOffset":696,"endOffset":784,"count":38}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"MySQLQueryGenerator","ranges":[{"startOffset":2012,"endOffset":2207,"count":1}],"isBlockCoverage":true},{"functionName":"createDatabaseQuery","ranges":[{"startOffset":2210,"endOffset":2640,"count":0}],"isBlockCoverage":false},{"functionName":"dropDatabaseQuery","ranges":[{"startOffset":2643,"endOffset":2757,"count":0}],"isBlockCoverage":false},{"functionName":"createSchema","ranges":[{"startOffset":2760,"endOffset":2806,"count":0}],"isBlockCoverage":false},{"functionName":"showSchemasQuery","ranges":[{"startOffset":2809,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"versionQuery","ranges":[{"startOffset":2862,"endOffset":2926,"count":1}],"isBlockCoverage":true},{"functionName":"createTableQuery","ranges":[{"startOffset":2929,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"describeTableQuery","ranges":[{"startOffset":5580,"endOffset":5827,"count":0}],"isBlockCoverage":false},{"functionName":"showTablesQuery","ranges":[{"startOffset":5830,"endOffset":6251,"count":0}],"isBlockCoverage":false},{"functionName":"tableExistsQuery","ranges":[{"startOffset":6254,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"addColumnQuery","ranges":[{"startOffset":6549,"endOffset":6870,"count":0}],"isBlockCoverage":false},{"functionName":"removeColumnQuery","ranges":[{"startOffset":6873,"endOffset":7088,"count":0}],"isBlockCoverage":false},{"functionName":"changeColumnQuery","ranges":[{"startOffset":7091,"endOffset":7897,"count":0}],"isBlockCoverage":false},{"functionName":"renameColumnQuery","ranges":[{"startOffset":7900,"endOffset":8307,"count":0}],"isBlockCoverage":false},{"functionName":"handleSequelizeMethod","ranges":[{"startOffset":8310,"endOffset":9636,"count":0}],"isBlockCoverage":false},{"functionName":"_toJSONValue","ranges":[{"startOffset":9639,"endOffset":9810,"count":0}],"isBlockCoverage":false},{"functionName":"truncateTableQuery","ranges":[{"startOffset":9813,"endOffset":9901,"count":0}],"isBlockCoverage":false},{"functionName":"deleteQuery","ranges":[{"startOffset":9904,"endOffset":10275,"count":1},{"startOffset":10061,"endOffset":10122,"count":0}],"isBlockCoverage":true},{"functionName":"showIndexesQuery","ranges":[{"startOffset":10278,"endOffset":10487,"count":0}],"isBlockCoverage":false},{"functionName":"showConstraintsQuery","ranges":[{"startOffset":10490,"endOffset":11161,"count":0}],"isBlockCoverage":false},{"functionName":"removeIndexQuery","ranges":[{"startOffset":11164,"endOffset":11545,"count":0}],"isBlockCoverage":false},{"functionName":"attributeToSQL","ranges":[{"startOffset":11548,"endOffset":13519,"count":0}],"isBlockCoverage":false},{"functionName":"attributesToSQL","ranges":[{"startOffset":13522,"endOffset":13769,"count":0}],"isBlockCoverage":false},{"functionName":"_checkValidJsonStatement","ranges":[{"startOffset":13772,"endOffset":15169,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeysQuery","ranges":[{"startOffset":15172,"endOffset":15569,"count":0}],"isBlockCoverage":false},{"functionName":"getForeignKeyQuery","ranges":[{"startOffset":15572,"endOffset":16433,"count":0}],"isBlockCoverage":false},{"functionName":"dropForeignKeyQuery","ranges":[{"startOffset":16436,"endOffset":16659,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifier","ranges":[{"startOffset":16662,"endOffset":16770,"count":249}],"isBlockCoverage":true},{"functionName":"wrapSingleQuote","ranges":[{"startOffset":16773,"endOffset":16855,"count":0}],"isBlockCoverage":false}]},{"scriptId":"933","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/query-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":90701,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":126},{"startOffset":373,"endOffset":459,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":3},{"startOffset":534,"endOffset":545,"count":0},{"startOffset":551,"endOffset":623,"count":126},{"startOffset":696,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":3}],"isBlockCoverage":true},{"functionName":"QueryGenerator","ranges":[{"startOffset":1591,"endOffset":2028,"count":1},{"startOffset":1648,"endOffset":1720,"count":0},{"startOffset":1754,"endOffset":1825,"count":0}],"isBlockCoverage":true},{"functionName":"extractTableDetails","ranges":[{"startOffset":2031,"endOffset":2387,"count":0}],"isBlockCoverage":false},{"functionName":"addSchema","ranges":[{"startOffset":2390,"endOffset":2775,"count":62},{"startOffset":2462,"endOffset":2470,"count":0},{"startOffset":2471,"endOffset":2549,"count":0},{"startOffset":2580,"endOffset":2588,"count":0},{"startOffset":2613,"endOffset":2621,"count":0},{"startOffset":2692,"endOffset":2698,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2706,"endOffset":2764,"count":0}],"isBlockCoverage":false},{"functionName":"dropSchema","ranges":[{"startOffset":2778,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"describeTableQuery","ranges":[{"startOffset":2869,"endOffset":3102,"count":0}],"isBlockCoverage":false},{"functionName":"dropTableQuery","ranges":[{"startOffset":3105,"endOffset":3202,"count":0}],"isBlockCoverage":false},{"functionName":"renameTableQuery","ranges":[{"startOffset":3205,"endOffset":3332,"count":0}],"isBlockCoverage":false},{"functionName":"populateInsertQueryReturnIntoBinds","ranges":[{"startOffset":3335,"endOffset":3377,"count":0}],"isBlockCoverage":false},{"functionName":"insertQuery","ranges":[{"startOffset":3380,"endOffset":10907,"count":3},{"startOffset":3460,"endOffset":3465,"count":0},{"startOffset":3814,"endOffset":3833,"count":0},{"startOffset":4346,"endOffset":4392,"count":0},{"startOffset":4570,"endOffset":4590,"count":0},{"startOffset":4592,"endOffset":5024,"count":0},{"startOffset":5133,"endOffset":5173,"count":0},{"startOffset":5215,"endOffset":5235,"count":0},{"startOffset":5237,"endOffset":5277,"count":0},{"startOffset":5393,"endOffset":6521,"count":48},{"startOffset":5652,"endOffset":5668,"count":3},{"startOffset":5670,"endOffset":5949,"count":2},{"startOffset":5738,"endOffset":5785,"count":0},{"startOffset":5876,"endOffset":5939,"count":0},{"startOffset":5949,"endOffset":6507,"count":46},{"startOffset":6065,"endOffset":6122,"count":1},{"startOffset":6208,"endOffset":6344,"count":0},{"startOffset":6439,"endOffset":6448,"count":0},{"startOffset":6599,"endOffset":6649,"count":0},{"startOffset":6651,"endOffset":6733,"count":0},{"startOffset":6821,"endOffset":8311,"count":0},{"startOffset":8388,"endOffset":8437,"count":0},{"startOffset":8496,"endOffset":8548,"count":0},{"startOffset":9143,"endOffset":9163,"count":0},{"startOffset":9165,"endOffset":10026,"count":0},{"startOffset":10166,"endOffset":10186,"count":0},{"startOffset":10188,"endOffset":10321,"count":0},{"startOffset":10381,"endOffset":10393,"count":0},{"startOffset":10470,"endOffset":10582,"count":0},{"startOffset":10615,"endOffset":10669,"count":1},{"startOffset":10671,"endOffset":10783,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4115,"endOffset":4287,"count":48}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6969,"endOffset":7005,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7065,"endOffset":7145,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7721,"endOffset":7800,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7912,"endOffset":7983,"count":0}],"isBlockCoverage":false},{"functionName":"bulkInsertQuery","ranges":[{"startOffset":10910,"endOffset":14158,"count":0}],"isBlockCoverage":false},{"functionName":"updateQuery","ranges":[{"startOffset":14161,"endOffset":17044,"count":3},{"startOffset":14251,"endOffset":14256,"count":0},{"startOffset":14650,"endOffset":14690,"count":0},{"startOffset":14765,"endOffset":14784,"count":0},{"startOffset":14854,"endOffset":15278,"count":0},{"startOffset":15323,"endOffset":15343,"count":0},{"startOffset":15345,"endOffset":15700,"count":0},{"startOffset":15966,"endOffset":16616,"count":8},{"startOffset":16071,"endOffset":16118,"count":0},{"startOffset":16120,"endOffset":16147,"count":0},{"startOffset":16269,"endOffset":16431,"count":0},{"startOffset":16554,"endOffset":16563,"count":0},{"startOffset":16730,"endOffset":16754,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15748,"endOffset":15920,"count":48}],"isBlockCoverage":true},{"functionName":"arithmeticQuery","ranges":[{"startOffset":17047,"endOffset":18541,"count":0}],"isBlockCoverage":false},{"functionName":"addIndexQuery","ranges":[{"startOffset":18544,"endOffset":21566,"count":0}],"isBlockCoverage":false},{"functionName":"addConstraintQuery","ranges":[{"startOffset":21569,"endOffset":21935,"count":0}],"isBlockCoverage":false},{"functionName":"getConstraintSnippet","ranges":[{"startOffset":21938,"endOffset":25349,"count":0}],"isBlockCoverage":false},{"functionName":"removeConstraintQuery","ranges":[{"startOffset":25352,"endOffset":25715,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":25718,"endOffset":30345,"count":0}],"isBlockCoverage":false},{"functionName":"_initQuoteIdentifier","ranges":[{"startOffset":30348,"endOffset":30602,"count":1}],"isBlockCoverage":true},{"functionName":"quoteIdentifier","ranges":[{"startOffset":30450,"endOffset":30597,"count":249},{"startOffset":30518,"endOffset":30536,"count":0}],"isBlockCoverage":true},{"functionName":"quoteIdentifier","ranges":[{"startOffset":30605,"endOffset":30734,"count":0}],"isBlockCoverage":false},{"functionName":"quoteIdentifiers","ranges":[{"startOffset":30737,"endOffset":31113,"count":0}],"isBlockCoverage":false},{"functionName":"quoteAttribute","ranges":[{"startOffset":31116,"endOffset":31304,"count":104},{"startOffset":31255,"endOffset":31303,"count":0}],"isBlockCoverage":true},{"functionName":"getAliasToken","ranges":[{"startOffset":31307,"endOffset":31345,"count":39}],"isBlockCoverage":true},{"functionName":"quoteTable","ranges":[{"startOffset":31348,"endOffset":32082,"count":46},{"startOffset":31419,"endOffset":31473,"count":0},{"startOffset":31501,"endOffset":31907,"count":0},{"startOffset":31979,"endOffset":32060,"count":0}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":32085,"endOffset":32849,"count":20},{"startOffset":32242,"endOffset":32301,"count":0},{"startOffset":32709,"endOffset":32748,"count":0}],"isBlockCoverage":true},{"functionName":"simpleEscape","ranges":[{"startOffset":32448,"endOffset":32521,"count":0}],"isBlockCoverage":false},{"functionName":"bindParam","ranges":[{"startOffset":32852,"endOffset":32960,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32881,"endOffset":32955,"count":57}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":32963,"endOffset":33560,"count":57},{"startOffset":33028,"endOffset":33033,"count":0},{"startOffset":33131,"endOffset":33237,"count":0},{"startOffset":33527,"endOffset":33559,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":33563,"endOffset":34198,"count":77},{"startOffset":33625,"endOffset":33647,"count":0},{"startOffset":33648,"endOffset":33656,"count":0},{"startOffset":33658,"endOffset":34194,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierQuoted","ranges":[{"startOffset":34201,"endOffset":34313,"count":0}],"isBlockCoverage":false},{"functionName":"jsonPathExtractionQuery","ranges":[{"startOffset":34316,"endOffset":35372,"count":0}],"isBlockCoverage":false},{"functionName":"selectQuery","ranges":[{"startOffset":35375,"endOffset":45344,"count":20},{"startOffset":35438,"endOffset":35443,"count":0},{"startOffset":35596,"endOffset":35626,"count":0},{"startOffset":35627,"endOffset":35645,"count":0},{"startOffset":36065,"endOffset":36091,"count":0},{"startOffset":36093,"endOffset":36251,"count":0},{"startOffset":36277,"endOffset":36344,"count":0},{"startOffset":36570,"endOffset":36700,"count":0},{"startOffset":36719,"endOffset":36737,"count":0},{"startOffset":36739,"endOffset":37081,"count":0},{"startOffset":37205,"endOffset":37257,"count":0},{"startOffset":37301,"endOffset":37424,"count":0},{"startOffset":37450,"endOffset":38168,"count":0},{"startOffset":38187,"endOffset":38384,"count":0},{"startOffset":38424,"endOffset":41896,"count":0},{"startOffset":42274,"endOffset":42286,"count":0},{"startOffset":42330,"endOffset":42780,"count":19},{"startOffset":42354,"endOffset":42422,"count":0},{"startOffset":42810,"endOffset":43224,"count":0},{"startOffset":43290,"endOffset":43601,"count":0},{"startOffset":43625,"endOffset":43953,"count":0},{"startOffset":44046,"endOffset":44070,"count":0},{"startOffset":44072,"endOffset":44205,"count":0},{"startOffset":44224,"endOffset":44518,"count":0},{"startOffset":44592,"endOffset":44622,"count":0},{"startOffset":44624,"endOffset":45316,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36586,"endOffset":36688,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36842,"endOffset":36911,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39876,"endOffset":40345,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41357,"endOffset":41797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42521,"endOffset":42760,"count":57},{"startOffset":42583,"endOffset":42748,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42883,"endOffset":42941,"count":0}],"isBlockCoverage":false},{"functionName":"aliasGrouping","ranges":[{"startOffset":45347,"endOffset":45543,"count":0}],"isBlockCoverage":false},{"functionName":"escapeAttributes","ranges":[{"startOffset":45546,"endOffset":48157,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45639,"endOffset":48151,"count":104},{"startOffset":45727,"endOffset":45785,"count":0},{"startOffset":45817,"endOffset":47827,"count":0},{"startOffset":47948,"endOffset":47967,"count":0},{"startOffset":48015,"endOffset":48062,"count":0},{"startOffset":48063,"endOffset":48074,"count":0},{"startOffset":48076,"endOffset":48126,"count":0}],"isBlockCoverage":true},{"functionName":"generateInclude","ranges":[{"startOffset":48160,"endOffset":54045,"count":0}],"isBlockCoverage":false},{"functionName":"_getMinifiedAlias","ranges":[{"startOffset":54048,"endOffset":54505,"count":0}],"isBlockCoverage":false},{"functionName":"_getAliasForField","ranges":[{"startOffset":54508,"endOffset":54750,"count":0}],"isBlockCoverage":false},{"functionName":"generateJoin","ranges":[{"startOffset":54753,"endOffset":57986,"count":0}],"isBlockCoverage":false},{"functionName":"generateReturnValues","ranges":[{"startOffset":57989,"endOffset":59512,"count":0}],"isBlockCoverage":false},{"functionName":"generateThroughJoin","ranges":[{"startOffset":59515,"endOffset":63418,"count":0}],"isBlockCoverage":false},{"functionName":"aliasAs","ranges":[{"startOffset":63421,"endOffset":63641,"count":0}],"isBlockCoverage":false},{"functionName":"_generateSubQueryFilter","ranges":[{"startOffset":63644,"endOffset":66913,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequiredClosure","ranges":[{"startOffset":66916,"endOffset":67217,"count":0}],"isBlockCoverage":false},{"functionName":"getQueryOrders","ranges":[{"startOffset":67220,"endOffset":69367,"count":0}],"isBlockCoverage":false},{"functionName":"_throwOnEmptyAttributes","ranges":[{"startOffset":69370,"endOffset":69793,"count":39},{"startOffset":69468,"endOffset":69524,"count":0},{"startOffset":69525,"endOffset":69530,"count":0},{"startOffset":69573,"endOffset":69612,"count":0},{"startOffset":69613,"endOffset":69618,"count":0}],"isBlockCoverage":true},{"functionName":"selectFromTableFragment","ranges":[{"startOffset":69796,"endOffset":70465,"count":39},{"startOffset":70156,"endOffset":70192,"count":0},{"startOffset":70194,"endOffset":70440,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":70354,"endOffset":70401,"count":0}],"isBlockCoverage":false},{"functionName":"addLimitAndOffset","ranges":[{"startOffset":70468,"endOffset":70938,"count":20},{"startOffset":70551,"endOffset":70575,"count":0},{"startOffset":70577,"endOffset":70657,"count":0},{"startOffset":70690,"endOffset":70913,"count":0}],"isBlockCoverage":true},{"functionName":"handleSequelizeMethod","ranges":[{"startOffset":70941,"endOffset":74025,"count":0}],"isBlockCoverage":false},{"functionName":"whereQuery","ranges":[{"startOffset":74028,"endOffset":74201,"count":3},{"startOffset":74182,"endOffset":74200,"count":0}],"isBlockCoverage":true},{"functionName":"whereItemsQuery","ranges":[{"startOffset":74204,"endOffset":74960,"count":24},{"startOffset":74328,"endOffset":74352,"count":1},{"startOffset":74352,"endOffset":74388,"count":23},{"startOffset":74388,"endOffset":74474,"count":0},{"startOffset":74474,"endOffset":74527,"count":23},{"startOffset":74563,"endOffset":74788,"count":23},{"startOffset":74788,"endOffset":74864,"count":0},{"startOffset":74864,"endOffset":74949,"count":23},{"startOffset":74950,"endOffset":74955,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74665,"endOffset":74780,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74905,"endOffset":74934,"count":23}],"isBlockCoverage":true},{"functionName":"whereItemQuery","ranges":[{"startOffset":74963,"endOffset":78920,"count":23},{"startOffset":75032,"endOffset":75120,"count":0},{"startOffset":75174,"endOffset":75190,"count":0},{"startOffset":75192,"endOffset":75624,"count":0},{"startOffset":75716,"endOffset":75731,"count":0},{"startOffset":75938,"endOffset":75988,"count":0},{"startOffset":76025,"endOffset":76055,"count":0},{"startOffset":76081,"endOffset":76298,"count":0},{"startOffset":76323,"endOffset":76498,"count":0},{"startOffset":76515,"endOffset":76737,"count":0},{"startOffset":76785,"endOffset":76834,"count":0},{"startOffset":76836,"endOffset":76891,"count":0},{"startOffset":76915,"endOffset":76925,"count":0},{"startOffset":76927,"endOffset":77125,"count":0},{"startOffset":77185,"endOffset":77248,"count":0},{"startOffset":77271,"endOffset":77361,"count":0},{"startOffset":77385,"endOffset":77477,"count":0},{"startOffset":77494,"endOffset":77533,"count":0},{"startOffset":77535,"endOffset":77757,"count":0},{"startOffset":77780,"endOffset":77818,"count":0},{"startOffset":77819,"endOffset":77844,"count":0},{"startOffset":77846,"endOffset":77904,"count":0},{"startOffset":77927,"endOffset":77950,"count":0},{"startOffset":77952,"endOffset":78036,"count":0},{"startOffset":78054,"endOffset":78144,"count":0},{"startOffset":78168,"endOffset":78434,"count":0},{"startOffset":78467,"endOffset":78707,"count":0},{"startOffset":78746,"endOffset":78801,"count":3},{"startOffset":78802,"endOffset":78829,"count":20}],"isBlockCoverage":true},{"functionName":"_findField","ranges":[{"startOffset":78923,"endOffset":79326,"count":23},{"startOffset":78973,"endOffset":79008,"count":0},{"startOffset":79153,"endOffset":79214,"count":0},{"startOffset":79215,"endOffset":79258,"count":0},{"startOffset":79260,"endOffset":79322,"count":0}],"isBlockCoverage":true},{"functionName":"_whereGroupBind","ranges":[{"startOffset":79329,"endOffset":80193,"count":0}],"isBlockCoverage":false},{"functionName":"_whereBind","ranges":[{"startOffset":80196,"endOffset":80661,"count":0}],"isBlockCoverage":false},{"functionName":"_whereJSON","ranges":[{"startOffset":80664,"endOffset":81463,"count":0}],"isBlockCoverage":false},{"functionName":"_traverseJSON","ranges":[{"startOffset":81466,"endOffset":82574,"count":0}],"isBlockCoverage":false},{"functionName":"_toJSONValue","ranges":[{"startOffset":82577,"endOffset":82620,"count":0}],"isBlockCoverage":false},{"functionName":"_castKey","ranges":[{"startOffset":82623,"endOffset":82909,"count":0}],"isBlockCoverage":false},{"functionName":"_getJsonCast","ranges":[{"startOffset":82912,"endOffset":83160,"count":0}],"isBlockCoverage":false},{"functionName":"_joinKeyValue","ranges":[{"startOffset":83163,"endOffset":83449,"count":23},{"startOffset":83225,"endOffset":83252,"count":0},{"startOffset":83284,"endOffset":83355,"count":0}],"isBlockCoverage":true},{"functionName":"_getSafeKey","ranges":[{"startOffset":83452,"endOffset":84023,"count":23},{"startOffset":83525,"endOffset":83648,"count":0},{"startOffset":83681,"endOffset":83956,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":83890,"endOffset":83938,"count":0}],"isBlockCoverage":false},{"functionName":"_prefixKey","ranges":[{"startOffset":84026,"endOffset":84271,"count":23},{"startOffset":84068,"endOffset":84251,"count":19},{"startOffset":84113,"endOffset":84190,"count":0},{"startOffset":84251,"endOffset":84270,"count":4}],"isBlockCoverage":true},{"functionName":"_whereParseSingleValueObject","ranges":[{"startOffset":84274,"endOffset":87963,"count":0}],"isBlockCoverage":false},{"functionName":"getWhereConditions","ranges":[{"startOffset":87966,"endOffset":90016,"count":21},{"startOffset":88087,"endOffset":88206,"count":0},{"startOffset":88229,"endOffset":88234,"count":0},{"startOffset":88349,"endOffset":88441,"count":0},{"startOffset":88621,"endOffset":88682,"count":0},{"startOffset":88684,"endOffset":90015,"count":0}],"isBlockCoverage":true},{"functionName":"parseConditionObject","ranges":[{"startOffset":90019,"endOffset":90352,"count":0}],"isBlockCoverage":false},{"functionName":"booleanValue","ranges":[{"startOffset":90355,"endOffset":90398,"count":0}],"isBlockCoverage":false},{"functionName":"authTestQuery","ranges":[{"startOffset":90401,"endOffset":90457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"934","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/query-generator/operators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2645,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":241,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":401,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"setOperatorsAliases","ranges":[{"startOffset":1831,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceAliases","ranges":[{"startOffset":2028,"endOffset":2569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"935","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/query-generator/transaction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":980,"count":1}],"isBlockCoverage":true},{"functionName":"setIsolationLevelQuery","ranges":[{"startOffset":80,"endOffset":226,"count":0}],"isBlockCoverage":false},{"functionName":"generateTransactionId","ranges":[{"startOffset":230,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"startTransactionQuery","ranges":[{"startOffset":284,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"deferConstraintsQuery","ranges":[{"startOffset":472,"endOffset":501,"count":0}],"isBlockCoverage":false},{"functionName":"setConstraintQuery","ranges":[{"startOffset":505,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"setDeferredQuery","ranges":[{"startOffset":535,"endOffset":559,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediateQuery","ranges":[{"startOffset":563,"endOffset":588,"count":0}],"isBlockCoverage":false},{"functionName":"commitTransactionQuery","ranges":[{"startOffset":592,"endOffset":705,"count":0}],"isBlockCoverage":false},{"functionName":"rollbackTransactionQuery","ranges":[{"startOffset":709,"endOffset":899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"936","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/query-interface.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3476,"count":1}],"isBlockCoverage":true},{"functionName":"__defNormalProp","ranges":[{"startOffset":341,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadValues","ranges":[{"startOffset":501,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadProps","ranges":[{"startOffset":820,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"removeColumn","ranges":[{"startOffset":1085,"endOffset":1830,"count":0}],"isBlockCoverage":false},{"functionName":"upsert","ranges":[{"startOffset":1833,"endOffset":2329,"count":0}],"isBlockCoverage":false},{"functionName":"removeConstraint","ranges":[{"startOffset":2332,"endOffset":3378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"937","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2133,"count":1}],"isBlockCoverage":true},{"functionName":"exports.createConnection","ranges":[{"startOffset":258,"endOffset":341,"count":2}],"isBlockCoverage":true},{"functionName":"exports.createPool","ranges":[{"startOffset":582,"endOffset":711,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createPoolCluster","ranges":[{"startOffset":742,"endOffset":852,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createServer","ranges":[{"startOffset":983,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1452,"endOffset":1498,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1554,"endOffset":1594,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1657,"endOffset":1704,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1743,"endOffset":1784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1825,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1922,"endOffset":1977,"count":0}],"isBlockCoverage":false},{"functionName":"exports.setMaxParserCache","ranges":[{"startOffset":2010,"endOffset":2059,"count":0}],"isBlockCoverage":false},{"functionName":"exports.clearParserCache","ranges":[{"startOffset":2089,"endOffset":2131,"count":0}],"isBlockCoverage":false}]},{"scriptId":"938","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sqlstring/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45,"count":1}],"isBlockCoverage":true}]},{"scriptId":"939","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sqlstring/lib/SqlString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5865,"count":1}],"isBlockCoverage":true},{"functionName":"escapeId","ranges":[{"startOffset":401,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":879,"endOffset":1747,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToList","ranges":[{"startOffset":1774,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2153,"endOffset":3060,"count":24},{"startOffset":2234,"endOffset":2255,"count":0},{"startOffset":2287,"endOffset":2315,"count":0},{"startOffset":2490,"endOffset":2530,"count":0},{"startOffset":2532,"endOffset":2884,"count":0},{"startOffset":2959,"endOffset":3059,"count":0}],"isBlockCoverage":true},{"functionName":"dateToString","ranges":[{"startOffset":3088,"endOffset":4256,"count":0}],"isBlockCoverage":false},{"functionName":"bufferToString","ranges":[{"startOffset":4286,"endOffset":4374,"count":0}],"isBlockCoverage":false},{"functionName":"objectToValues","ranges":[{"startOffset":4404,"endOffset":4718,"count":0}],"isBlockCoverage":false},{"functionName":"raw","ranges":[{"startOffset":4737,"endOffset":4926,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":4929,"endOffset":5454,"count":0}],"isBlockCoverage":false},{"functionName":"zeroPad","ranges":[{"startOffset":5456,"endOffset":5606,"count":0}],"isBlockCoverage":false},{"functionName":"convertTimezone","ranges":[{"startOffset":5608,"endOffset":5864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"940","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28704,"count":1}],"isBlockCoverage":true},{"functionName":"Connection","ranges":[{"startOffset":1429,"endOffset":5978,"count":2},{"startOffset":1870,"endOffset":1938,"count":0},{"startOffset":2541,"endOffset":2700,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2182,"endOffset":2280,"count":2}],"isBlockCoverage":true},{"functionName":"dispose","ranges":[{"startOffset":2962,"endOffset":3018,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3566,"endOffset":3606,"count":255}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3636,"endOffset":3817,"count":41},{"startOffset":3677,"endOffset":3772,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3846,"endOffset":3966,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3997,"endOffset":4505,"count":2},{"startOffset":4134,"endOffset":4504,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4680,"endOffset":5216,"count":2},{"startOffset":4996,"endOffset":5025,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5254,"endOffset":5332,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":5982,"endOffset":6132,"count":0}],"isBlockCoverage":false},{"functionName":"_addCommandClosedState","ranges":[{"startOffset":6136,"endOffset":6389,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFatalError","ranges":[{"startOffset":6393,"endOffset":6724,"count":0}],"isBlockCoverage":false},{"functionName":"_handleNetworkError","ranges":[{"startOffset":6728,"endOffset":7058,"count":0}],"isBlockCoverage":false},{"functionName":"_handleTimeoutError","ranges":[{"startOffset":7062,"endOffset":7429,"count":0}],"isBlockCoverage":false},{"functionName":"_notifyError","ranges":[{"startOffset":7564,"endOffset":9130,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":9134,"endOffset":9338,"count":41},{"startOffset":9294,"endOffset":9334,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9195,"endOffset":9273,"count":41},{"startOffset":9219,"endOffset":9267,"count":0}],"isBlockCoverage":true},{"functionName":"_resetSequenceId","ranges":[{"startOffset":9650,"endOffset":9734,"count":40}],"isBlockCoverage":true},{"functionName":"_bumpCompressedSequenceId","ranges":[{"startOffset":9738,"endOffset":9864,"count":0}],"isBlockCoverage":false},{"functionName":"_bumpSequenceId","ranges":[{"startOffset":9868,"endOffset":9964,"count":296}],"isBlockCoverage":true},{"functionName":"writePacket","ranges":[{"startOffset":9968,"endOffset":11789,"count":41},{"startOffset":10207,"endOffset":10643,"count":0},{"startOffset":10713,"endOffset":11785,"count":0}],"isBlockCoverage":true},{"functionName":"startTLS","ranges":[{"startOffset":11816,"endOffset":13540,"count":0}],"isBlockCoverage":false},{"functionName":"protocolError","ranges":[{"startOffset":13544,"endOffset":13971,"count":0}],"isBlockCoverage":false},{"functionName":"get fatalError","ranges":[{"startOffset":13977,"endOffset":14028,"count":0}],"isBlockCoverage":false},{"functionName":"handlePacket","ranges":[{"startOffset":14032,"endOffset":16586,"count":295},{"startOffset":14077,"endOffset":14139,"count":0},{"startOffset":14167,"endOffset":14929,"count":0},{"startOffset":14954,"endOffset":15454,"count":0},{"startOffset":15471,"endOffset":16087,"count":255},{"startOffset":15667,"endOffset":16034,"count":0},{"startOffset":16126,"endOffset":16220,"count":0},{"startOffset":16293,"endOffset":16492,"count":40},{"startOffset":16370,"endOffset":16484,"count":5},{"startOffset":16499,"endOffset":16582,"count":0}],"isBlockCoverage":true},{"functionName":"addCommand","ranges":[{"startOffset":16590,"endOffset":17040,"count":40},{"startOffset":16701,"endOffset":16889,"count":0},{"startOffset":16914,"endOffset":16975,"count":35},{"startOffset":16975,"endOffset":17020,"count":5}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":17044,"endOffset":17495,"count":24},{"startOffset":17121,"endOffset":17252,"count":0}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":17499,"endOffset":17583,"count":0}],"isBlockCoverage":false},{"functionName":"escapeId","ranges":[{"startOffset":17587,"endOffset":17653,"count":0}],"isBlockCoverage":false},{"functionName":"raw","ranges":[{"startOffset":17657,"endOffset":17702,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveNamedPlaceholders","ranges":[{"startOffset":17706,"endOffset":18360,"count":54},{"startOffset":17828,"endOffset":18356,"count":0}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":18364,"endOffset":18779,"count":24},{"startOffset":18451,"endOffset":18480,"count":0},{"startOffset":18686,"endOffset":18703,"count":0}],"isBlockCoverage":true},{"functionName":"pause","ranges":[{"startOffset":18783,"endOffset":18846,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":18850,"endOffset":19133,"count":0}],"isBlockCoverage":false},{"functionName":"prepare","ranges":[{"startOffset":19175,"endOffset":19343,"count":0}],"isBlockCoverage":false},{"functionName":"unprepare","ranges":[{"startOffset":19347,"endOffset":19678,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":19682,"endOffset":22075,"count":6},{"startOffset":19828,"endOffset":20064,"count":0},{"startOffset":20104,"endOffset":20215,"count":0},{"startOffset":20560,"endOffset":20697,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20727,"endOffset":21417,"count":57},{"startOffset":20865,"endOffset":21010,"count":0},{"startOffset":21042,"endOffset":21188,"count":0},{"startOffset":21228,"endOffset":21409,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21545,"endOffset":21968,"count":6},{"startOffset":21577,"endOffset":21923,"count":0}],"isBlockCoverage":true},{"functionName":"executeCommand.start","ranges":[{"startOffset":21708,"endOffset":21753,"count":0}],"isBlockCoverage":false},{"functionName":"changeUser","ranges":[{"startOffset":22079,"endOffset":23345,"count":0}],"isBlockCoverage":false},{"functionName":"beginTransaction","ranges":[{"startOffset":23374,"endOffset":23448,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":23452,"endOffset":23505,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":23509,"endOffset":23566,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":23570,"endOffset":23635,"count":0}],"isBlockCoverage":false},{"functionName":"_registerSlave","ranges":[{"startOffset":23639,"endOffset":23735,"count":0}],"isBlockCoverage":false},{"functionName":"_binlogDump","ranges":[{"startOffset":23739,"endOffset":23829,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":23868,"endOffset":23901,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":23905,"endOffset":24137,"count":0}],"isBlockCoverage":false},{"functionName":"createBinlogStream","ranges":[{"startOffset":24141,"endOffset":24823,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":24827,"endOffset":25452,"count":0}],"isBlockCoverage":false},{"functionName":"writeColumns","ranges":[{"startOffset":25578,"endOffset":25849,"count":0}],"isBlockCoverage":false},{"functionName":"writeTextRow","ranges":[{"startOffset":25892,"endOffset":26014,"count":0}],"isBlockCoverage":false},{"functionName":"writeBinaryRow","ranges":[{"startOffset":26018,"endOffset":26144,"count":0}],"isBlockCoverage":false},{"functionName":"writeTextResult","ranges":[{"startOffset":26148,"endOffset":26526,"count":0}],"isBlockCoverage":false},{"functionName":"writeEof","ranges":[{"startOffset":26530,"endOffset":26634,"count":0}],"isBlockCoverage":false},{"functionName":"writeOk","ranges":[{"startOffset":26638,"endOffset":26791,"count":0}],"isBlockCoverage":false},{"functionName":"writeError","ranges":[{"startOffset":26795,"endOffset":27042,"count":0}],"isBlockCoverage":false},{"functionName":"serverHandshake","ranges":[{"startOffset":27046,"endOffset":27257,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":27330,"endOffset":27774,"count":2},{"startOffset":27376,"endOffset":27568,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27467,"endOffset":27538,"count":0}],"isBlockCoverage":false},{"functionName":"createQuery","ranges":[{"startOffset":27785,"endOffset":28517,"count":24},{"startOffset":27977,"endOffset":28219,"count":22},{"startOffset":28139,"endOffset":28213,"count":0},{"startOffset":28219,"endOffset":28469,"count":2},{"startOffset":28368,"endOffset":28469,"count":0}],"isBlockCoverage":true},{"functionName":"statementKey","ranges":[{"startOffset":28528,"endOffset":28671,"count":6}],"isBlockCoverage":true}]},{"scriptId":"941","url":"node:tls","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11963,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3566,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"cacheRootCertificates","ranges":[{"startOffset":3664,"endOffset":3760,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3889,"endOffset":4044,"count":2},{"startOffset":3985,"endOffset":4009,"count":1}],"isBlockCoverage":true},{"functionName":"convertProtocols","ranges":[{"startOffset":4159,"endOffset":4791,"count":0}],"isBlockCoverage":false},{"functionName":"convertALPNProtocols","ranges":[{"startOffset":4826,"endOffset":5363,"count":0}],"isBlockCoverage":false},{"functionName":"unfqdn","ranges":[{"startOffset":5368,"endOffset":5452,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":5564,"endOffset":5660,"count":0}],"isBlockCoverage":false},{"functionName":"splitHost","ranges":[{"startOffset":5664,"endOffset":5813,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":5817,"endOffset":7874,"count":0}],"isBlockCoverage":false},{"functionName":"splitEscapedAltNames","ranges":[{"startOffset":8248,"endOffset":9514,"count":0}],"isBlockCoverage":false},{"functionName":"checkServerIdentity","ranges":[{"startOffset":9548,"endOffset":11505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"942","url":"node:_tls_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5289,"count":1}],"isBlockCoverage":false},{"functionName":"toV","ranges":[{"startOffset":1835,"endOffset":2135,"count":0}],"isBlockCoverage":false},{"functionName":"SecureContext","ranges":[{"startOffset":2221,"endOffset":3080,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureContext","ranges":[{"startOffset":3084,"endOffset":3575,"count":0}],"isBlockCoverage":false},{"functionName":"translatePeerCertificate","ranges":[{"startOffset":3819,"endOffset":5190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"943","url":"node:internal/tls/secure-context","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9401,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultEcdhCurve","ranges":[{"startOffset":772,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCiphers","ranges":[{"startOffset":1031,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"addCACerts","ranges":[{"startOffset":1272,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"setCerts","ranges":[{"startOffset":1445,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOrCertOption","ranges":[{"startOffset":1614,"endOffset":1907,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":1911,"endOffset":2158,"count":0}],"isBlockCoverage":false},{"functionName":"processCiphers","ranges":[{"startOffset":2162,"endOffset":3020,"count":0}],"isBlockCoverage":false},{"functionName":"configSecureContext","ranges":[{"startOffset":3024,"endOffset":9349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"944","url":"node:_tls_wrap","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54312,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2110,"endOffset":2137,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakestart","ranges":[{"startOffset":4403,"endOffset":5215,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakedone","ranges":[{"startOffset":5219,"endOffset":5525,"count":0}],"isBlockCoverage":false},{"functionName":"loadSession","ranges":[{"startOffset":5531,"endOffset":6772,"count":0}],"isBlockCoverage":false},{"functionName":"loadSNI","ranges":[{"startOffset":6778,"endOffset":7455,"count":0}],"isBlockCoverage":false},{"functionName":"callALPNCallback","ranges":[{"startOffset":7461,"endOffset":8534,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSP","ranges":[{"startOffset":8538,"endOffset":9907,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSPDone","ranges":[{"startOffset":9911,"endOffset":10114,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsessionclient","ranges":[{"startOffset":10118,"endOffset":10362,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsession","ranges":[{"startOffset":10366,"endOffset":11233,"count":0}],"isBlockCoverage":false},{"functionName":"onPskServerCallback","ranges":[{"startOffset":11237,"endOffset":11917,"count":0}],"isBlockCoverage":false},{"functionName":"onPskClientCallback","ranges":[{"startOffset":11921,"endOffset":12655,"count":0}],"isBlockCoverage":false},{"functionName":"onkeylog","ranges":[{"startOffset":12659,"endOffset":12753,"count":0}],"isBlockCoverage":false},{"functionName":"onocspresponse","ranges":[{"startOffset":12757,"endOffset":12876,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":12880,"endOffset":14040,"count":0}],"isBlockCoverage":false},{"functionName":"initRead","ranges":[{"startOffset":14188,"endOffset":14753,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket","ranges":[{"startOffset":14837,"endOffset":17247,"count":0}],"isBlockCoverage":false},{"functionName":"makeMethodProxy","ranges":[{"startOffset":17705,"endOffset":17885,"count":15}],"isBlockCoverage":true},{"functionName":"methodProxy","ranges":[{"startOffset":17748,"endOffset":17881,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":18058,"endOffset":18777,"count":0}],"isBlockCoverage":false},{"functionName":"disableRenegotiation","ranges":[{"startOffset":18825,"endOffset":18900,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._wrapHandle","ranges":[{"startOffset":18939,"endOffset":19984,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":20032,"endOffset":20622,"count":0}],"isBlockCoverage":false},{"functionName":"defineHandleReading","ranges":[{"startOffset":20765,"endOffset":21018,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketCloseDestroySSL","ranges":[{"startOffset":21022,"endOffset":21173,"count":0}],"isBlockCoverage":false},{"functionName":"destroySSL","ranges":[{"startOffset":21177,"endOffset":21230,"count":0}],"isBlockCoverage":false},{"functionName":"_destroySSL","ranges":[{"startOffset":21268,"endOffset":21570,"count":0}],"isBlockCoverage":false},{"functionName":"keylogNewListener","ranges":[{"startOffset":21575,"endOffset":21896,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":21900,"endOffset":22214,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._init","ranges":[{"startOffset":22357,"endOffset":27307,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.renegotiate","ranges":[{"startOffset":27346,"endOffset":28641,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.exportKeyingMaterial","ranges":[{"startOffset":28689,"endOffset":29021,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxSendFragment","ranges":[{"startOffset":29067,"endOffset":29192,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._handleTimeout","ranges":[{"startOffset":29234,"endOffset":29305,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._emitTLSError","ranges":[{"startOffset":29346,"endOffset":29436,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._tlsError","ranges":[{"startOffset":29473,"endOffset":29586,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._releaseControl","ranges":[{"startOffset":29629,"endOffset":29791,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._finishInit","ranges":[{"startOffset":29830,"endOffset":30916,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._start","ranges":[{"startOffset":30950,"endOffset":31468,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setServername","ranges":[{"startOffset":31509,"endOffset":31685,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setSession","ranges":[{"startOffset":31723,"endOffset":31865,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerCertificate","ranges":[{"startOffset":31911,"endOffset":32082,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getCertificate","ranges":[{"startOffset":32124,"endOffset":32338,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerX509Certificate","ranges":[{"startOffset":32388,"endOffset":32531,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getX509Certificate","ranges":[{"startOffset":32577,"endOffset":32708,"count":0}],"isBlockCoverage":false},{"functionName":"makeSocketMethodProxy","ranges":[{"startOffset":32748,"endOffset":32952,"count":10}],"isBlockCoverage":true},{"functionName":"socketMethodProxy","ranges":[{"startOffset":32797,"endOffset":32948,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33183,"endOffset":33263,"count":10}],"isBlockCoverage":true},{"functionName":"onServerSocketSecure","ranges":[{"startOffset":33310,"endOffset":33823,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketTLSError","ranges":[{"startOffset":33827,"endOffset":34069,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketKeylog","ranges":[{"startOffset":34073,"endOffset":34162,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":34166,"endOffset":34530,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnectionListener","ranges":[{"startOffset":34534,"endOffset":35446,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":38279,"endOffset":40086,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":40245,"endOffset":40331,"count":0}],"isBlockCoverage":false},{"functionName":"Server.setSecureContext","ranges":[{"startOffset":40374,"endOffset":43397,"count":0}],"isBlockCoverage":false},{"functionName":"Server._getServerData","ranges":[{"startOffset":43438,"endOffset":43526,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setServerData","ranges":[{"startOffset":43567,"endOffset":43646,"count":0}],"isBlockCoverage":false},{"functionName":"getTicketKeys","ranges":[{"startOffset":43686,"endOffset":43768,"count":0}],"isBlockCoverage":false},{"functionName":"setTicketKeys","ranges":[{"startOffset":43808,"endOffset":44009,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44056,"endOffset":46166,"count":0}],"isBlockCoverage":false},{"functionName":"Server.addContext","ranges":[{"startOffset":46292,"endOffset":46756,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":46807,"endOffset":47073,"count":0}],"isBlockCoverage":false},{"functionName":"SNICallback","ranges":[{"startOffset":47078,"endOffset":47406,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConnectArgs","ranges":[{"startOffset":47656,"endOffset":48401,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectSecure","ranges":[{"startOffset":48405,"endOffset":50770,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectEnd","ranges":[{"startOffset":50774,"endOffset":51337,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":51406,"endOffset":54309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"945","url":"node:internal/js_stream_socket","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7735,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":348,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":718,"endOffset":781,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstart","ranges":[{"startOffset":785,"endOffset":850,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstop","ranges":[{"startOffset":854,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"onshutdown","ranges":[{"startOffset":921,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":996,"endOffset":1073,"count":0}],"isBlockCoverage":false},{"functionName":"JSStreamSocket","ranges":[{"startOffset":1848,"endOffset":3597,"count":0}],"isBlockCoverage":false},{"functionName":"get StreamWrap","ranges":[{"startOffset":3741,"endOffset":3792,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":3798,"endOffset":3862,"count":0}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":3868,"endOffset":3928,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":3934,"endOffset":3992,"count":0}],"isBlockCoverage":false},{"functionName":"doShutdown","ranges":[{"startOffset":3998,"endOffset":5025,"count":0}],"isBlockCoverage":false},{"functionName":"finishShutdown","ranges":[{"startOffset":5096,"endOffset":5395,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":5401,"endOffset":6400,"count":0}],"isBlockCoverage":false},{"functionName":"finishWrite","ranges":[{"startOffset":6471,"endOffset":6927,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":6933,"endOffset":7694,"count":0}],"isBlockCoverage":false}]},{"scriptId":"946","url":"node:internal/tls/secure-pair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2078,"count":1}],"isBlockCoverage":false},{"functionName":"DuplexSocket","ranges":[{"startOffset":415,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":514,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":651,"endOffset":862,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":868,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"DuplexPair","ranges":[{"startOffset":997,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"SecurePair","ranges":[{"startOffset":1239,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1878,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"createSecurePair","ranges":[{"startOffset":1990,"endOffset":2075,"count":0}],"isBlockCoverage":false}]},{"scriptId":"947","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/denque/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12497,"count":1}],"isBlockCoverage":true},{"functionName":"Denque","ranges":[{"startOffset":73,"endOffset":348,"count":4},{"startOffset":241,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"peekAt","ranges":[{"startOffset":746,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1125,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1279,"endOffset":1382,"count":0}],"isBlockCoverage":false},{"functionName":"peekFront","ranges":[{"startOffset":1458,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"peekBack","ranges":[{"startOffset":1636,"endOffset":1685,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":1818,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":1982,"endOffset":2173,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":2271,"endOffset":2718,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2862,"endOffset":3178,"count":40},{"startOffset":2933,"endOffset":2950,"count":35},{"startOffset":2950,"endOffset":3077,"count":5},{"startOffset":3077,"endOffset":3098,"count":3},{"startOffset":3099,"endOffset":3139,"count":0},{"startOffset":3141,"endOffset":3161,"count":0},{"startOffset":3161,"endOffset":3177,"count":5}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3270,"endOffset":3712,"count":5},{"startOffset":3322,"endOffset":3341,"count":0},{"startOffset":3475,"endOffset":3503,"count":0},{"startOffset":3525,"endOffset":3556,"count":0},{"startOffset":3558,"endOffset":3581,"count":0},{"startOffset":3613,"endOffset":3644,"count":4},{"startOffset":3644,"endOffset":3710,"count":1}],"isBlockCoverage":true},{"functionName":"pop","ranges":[{"startOffset":3853,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"removeOne","ranges":[{"startOffset":4379,"endOffset":5245,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":5478,"endOffset":7598,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":7948,"endOffset":9691,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":9768,"endOffset":9869,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":9981,"endOffset":10039,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":10137,"endOffset":10192,"count":0}],"isBlockCoverage":false},{"functionName":"_fromArray","ranges":[{"startOffset":10393,"endOffset":10656,"count":0}],"isBlockCoverage":false},{"functionName":"_copyArray","ranges":[{"startOffset":10847,"endOffset":11508,"count":0}],"isBlockCoverage":false},{"functionName":"_growArray","ranges":[{"startOffset":11594,"endOffset":12014,"count":0}],"isBlockCoverage":false},{"functionName":"_shrinkArray","ranges":[{"startOffset":12105,"endOffset":12189,"count":0}],"isBlockCoverage":false},{"functionName":"_nextPowerOf2","ranges":[{"startOffset":12330,"endOffset":12470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"948","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lru-cache/dist/cjs/index-cjs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":364,"count":1}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":128,"endOffset":148,"count":0}],"isBlockCoverage":true}]},{"scriptId":"949","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lru-cache/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47005,"count":1},{"startOffset":263,"endOffset":269,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":317,"endOffset":554,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":575,"endOffset":602,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":650,"endOffset":705,"count":12}],"isBlockCoverage":true},{"functionName":"getUintArray","ranges":[{"startOffset":1220,"endOffset":1537,"count":6},{"startOffset":1248,"endOffset":1254,"count":0},{"startOffset":1291,"endOffset":1303,"count":0},{"startOffset":1375,"endOffset":1537,"count":0}],"isBlockCoverage":true},{"functionName":"ZeroArray","ranges":[{"startOffset":1596,"endOffset":1664,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1667,"endOffset":2417,"count":3}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":1734,"endOffset":1762,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1775,"endOffset":2016,"count":3},{"startOffset":1866,"endOffset":1876,"count":0}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":2021,"endOffset":2298,"count":3},{"startOffset":2113,"endOffset":2200,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":2303,"endOffset":2356,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":2361,"endOffset":2415,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2804,"endOffset":46914,"count":3}],"isBlockCoverage":true},{"functionName":"unsafeExposeInternals","ranges":[{"startOffset":4987,"endOffset":5897,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":6005,"endOffset":6048,"count":0}],"isBlockCoverage":false},{"functionName":"get maxSize","ranges":[{"startOffset":6125,"endOffset":6176,"count":0}],"isBlockCoverage":false},{"functionName":"get calculatedSize","ranges":[{"startOffset":6262,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":6407,"endOffset":6452,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchMethod","ranges":[{"startOffset":6533,"endOffset":6592,"count":0}],"isBlockCoverage":false},{"functionName":"get dispose","ranges":[{"startOffset":6669,"endOffset":6720,"count":0}],"isBlockCoverage":false},{"functionName":"get disposeAfter","ranges":[{"startOffset":6802,"endOffset":6863,"count":0}],"isBlockCoverage":false},{"functionName":"LRUCache","ranges":[{"startOffset":6868,"endOffset":11283,"count":3},{"startOffset":7281,"endOffset":7369,"count":0},{"startOffset":7420,"endOffset":7427,"count":0},{"startOffset":7453,"endOffset":7522,"count":0},{"startOffset":7722,"endOffset":8062,"count":0},{"startOffset":8101,"endOffset":8149,"count":0},{"startOffset":8151,"endOffset":8242,"count":0},{"startOffset":8747,"endOffset":8795,"count":2},{"startOffset":8844,"endOffset":8935,"count":0},{"startOffset":9584,"endOffset":10005,"count":0},{"startOffset":10263,"endOffset":10285,"count":0},{"startOffset":10334,"endOffset":10337,"count":0},{"startOffset":10434,"endOffset":10625,"count":0},{"startOffset":10706,"endOffset":10723,"count":0},{"startOffset":10724,"endOffset":10746,"count":0},{"startOffset":10748,"endOffset":10844,"count":0},{"startOffset":10890,"endOffset":10907,"count":0},{"startOffset":10909,"endOffset":11277,"count":0}],"isBlockCoverage":true},{"functionName":"getRemainingTTL","ranges":[{"startOffset":11363,"endOffset":11444,"count":0}],"isBlockCoverage":false},{"functionName":"#initializeTTLTracking","ranges":[{"startOffset":11449,"endOffset":13908,"count":0}],"isBlockCoverage":false},{"functionName":"#updateItemAge","ranges":[{"startOffset":13986,"endOffset":13995,"count":0}],"isBlockCoverage":false},{"functionName":"#statusTTL","ranges":[{"startOffset":14014,"endOffset":14023,"count":0}],"isBlockCoverage":false},{"functionName":"#setItemTTL","ranges":[{"startOffset":14043,"endOffset":14052,"count":0}],"isBlockCoverage":false},{"functionName":"#isStale","ranges":[{"startOffset":14094,"endOffset":14105,"count":19}],"isBlockCoverage":true},{"functionName":"#initializeSizeTracking","ranges":[{"startOffset":14111,"endOffset":15977,"count":0}],"isBlockCoverage":false},{"functionName":"#removeItemSize","ranges":[{"startOffset":16000,"endOffset":16009,"count":0}],"isBlockCoverage":false},{"functionName":"#addItemSize","ranges":[{"startOffset":16030,"endOffset":16050,"count":8}],"isBlockCoverage":true},{"functionName":"#requireSize","ranges":[{"startOffset":16071,"endOffset":16281,"count":8},{"startOffset":16145,"endOffset":16257,"count":0}],"isBlockCoverage":true},{"functionName":"#indexes","ranges":[{"startOffset":16287,"endOffset":16797,"count":0}],"isBlockCoverage":false},{"functionName":"#rindexes","ranges":[{"startOffset":16802,"endOffset":17313,"count":0}],"isBlockCoverage":false},{"functionName":"#isValidIndex","ranges":[{"startOffset":17318,"endOffset":17448,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":17590,"endOffset":17897,"count":0}],"isBlockCoverage":false},{"functionName":"rentries","ranges":[{"startOffset":18103,"endOffset":18412,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":18555,"endOffset":18799,"count":0}],"isBlockCoverage":false},{"functionName":"rkeys","ranges":[{"startOffset":19003,"endOffset":19249,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":19394,"endOffset":19655,"count":0}],"isBlockCoverage":false},{"functionName":"rvalues","ranges":[{"startOffset":19863,"endOffset":20126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20245,"endOffset":20303,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":20473,"endOffset":20907,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":21183,"endOffset":21546,"count":0}],"isBlockCoverage":false},{"functionName":"rforEach","ranges":[{"startOffset":21721,"endOffset":22086,"count":0}],"isBlockCoverage":false},{"functionName":"purgeStale","ranges":[{"startOffset":22202,"endOffset":22478,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":22605,"endOffset":23555,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":23776,"endOffset":24421,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":24475,"endOffset":27882,"count":8},{"startOffset":24929,"endOffset":24956,"count":0},{"startOffset":24958,"endOffset":25218,"count":0},{"startOffset":25256,"endOffset":25267,"count":2},{"startOffset":25268,"endOffset":25289,"count":6},{"startOffset":25404,"endOffset":25416,"count":2},{"startOffset":25433,"endOffset":25626,"count":6},{"startOffset":25479,"endOffset":25497,"count":0},{"startOffset":25569,"endOffset":25589,"count":0},{"startOffset":25983,"endOffset":26002,"count":0},{"startOffset":26045,"endOffset":27306,"count":0},{"startOffset":27329,"endOffset":27343,"count":0},{"startOffset":27345,"endOffset":27399,"count":0},{"startOffset":27424,"endOffset":27606,"count":0},{"startOffset":27660,"endOffset":27677,"count":0},{"startOffset":27679,"endOffset":27855,"count":0}],"isBlockCoverage":true},{"functionName":"pop","ranges":[{"startOffset":28007,"endOffset":28764,"count":0}],"isBlockCoverage":false},{"functionName":"#evict","ranges":[{"startOffset":28769,"endOffset":29837,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":30137,"endOffset":31074,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":31303,"endOffset":31740,"count":0}],"isBlockCoverage":false},{"functionName":"#backgroundFetch","ranges":[{"startOffset":31745,"endOffset":36845,"count":0}],"isBlockCoverage":false},{"functionName":"#isBackgroundFetch","ranges":[{"startOffset":36850,"endOffset":37137,"count":19},{"startOffset":36934,"endOffset":37011,"count":0},{"startOffset":37012,"endOffset":37067,"count":0},{"startOffset":37068,"endOffset":37129,"count":0}],"isBlockCoverage":true},{"functionName":"fetch","ranges":[{"startOffset":37142,"endOffset":40472,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":40658,"endOffset":42794,"count":27},{"startOffset":40914,"endOffset":42718,"count":19},{"startOffset":41065,"endOffset":41096,"count":0},{"startOffset":41135,"endOffset":41942,"count":0},{"startOffset":42010,"endOffset":42029,"count":0},{"startOffset":42445,"endOffset":42519,"count":0},{"startOffset":42597,"endOffset":42664,"count":0},{"startOffset":42718,"endOffset":42788,"count":8},{"startOffset":42744,"endOffset":42788,"count":0}],"isBlockCoverage":true},{"functionName":"#connect","ranges":[{"startOffset":42799,"endOffset":42875,"count":10}],"isBlockCoverage":true},{"functionName":"#moveToTail","ranges":[{"startOffset":42880,"endOffset":43542,"count":19},{"startOffset":43243,"endOffset":43536,"count":5},{"startOffset":43283,"endOffset":43346,"count":0}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":43663,"endOffset":45592,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":45672,"endOffset":46912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"950","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1115,"count":1}],"isBlockCoverage":false}]},{"scriptId":"951","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7650,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":912,"endOffset":974,"count":0}],"isBlockCoverage":true},{"functionName":"get name","ranges":[{"startOffset":980,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1114,"endOffset":1253,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1259,"endOffset":1425,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1431,"endOffset":1570,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1576,"endOffset":1735,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1741,"endOffset":1892,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":1898,"endOffset":2045,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":2051,"endOffset":2203,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2209,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2401,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2589,"endOffset":2768,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2774,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":2955,"endOffset":3157,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3163,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3362,"endOffset":3523,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3529,"endOffset":3692,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3698,"endOffset":3837,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":3843,"endOffset":3994,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":4000,"endOffset":4151,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4157,"endOffset":4417,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4423,"endOffset":5389,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6286,"endOffset":6907,"count":19}],"isBlockCoverage":true},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":6413,"endOffset":6871,"count":19}],"isBlockCoverage":true},{"functionName":"markResourceTiming","ranges":[{"startOffset":6979,"endOffset":7569,"count":19},{"startOffset":7202,"endOffset":7226,"count":0}],"isBlockCoverage":true}]},{"scriptId":"952","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6494,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1267,"endOffset":1733,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1764,"endOffset":2520,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2526,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2640,"endOffset":2831,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3229,"endOffset":3291,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3297,"endOffset":3408,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3621,"endOffset":3876,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3880,"endOffset":4026,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":4030,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5666,"endOffset":6113,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":6117,"endOffset":6381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"953","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3676,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":762,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1461,"endOffset":1559,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1682,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1905,"endOffset":2004,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2129,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2351,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2581,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2873,"endOffset":3123,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3129,"endOffset":3529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"954","url":"node:internal/structured_clone","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":690,"count":1}],"isBlockCoverage":false},{"functionName":"structuredClone","ranges":[{"startOffset":198,"endOffset":642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"955","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15986,"count":1}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3781,"endOffset":3866,"count":0}],"isBlockCoverage":false},{"functionName":"validateMessagePort","ranges":[{"startOffset":3871,"endOffset":4012,"count":0}],"isBlockCoverage":false},{"functionName":"isMessageEvent","ranges":[{"startOffset":4016,"endOffset":4094,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":4136,"endOffset":4670,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4764,"endOffset":4892,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5009,"endOffset":5139,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5261,"endOffset":5396,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5513,"endOffset":5643,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5759,"endOffset":5888,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6143,"endOffset":6468,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":6614,"endOffset":6761,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":7076,"endOffset":7117,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":7194,"endOffset":7269,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":7459,"endOffset":7598,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7737,"endOffset":8380,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":8390,"endOffset":9759,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":9813,"endOffset":10174,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":10180,"endOffset":10497,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":10552,"endOffset":10706,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":10712,"endOffset":11098,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":11104,"endOffset":11291,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11297,"endOffset":11550,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":11557,"endOffset":11835,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":11839,"endOffset":12023,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageEvent","ranges":[{"startOffset":12027,"endOffset":12124,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":12128,"endOffset":12216,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":12309,"endOffset":12835,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12841,"endOffset":13269,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":13310,"endOffset":13443,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13485,"endOffset":13894,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":13969,"endOffset":14388,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14680,"endOffset":14853,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":15147,"endOffset":15324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"956","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6612,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1393,"endOffset":1455,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1461,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1774,"endOffset":2012,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":2018,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2239,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2468,"endOffset":2599,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2605,"endOffset":2869,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2875,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3145,"endOffset":3372,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3378,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3675,"endOffset":3774,"count":58}],"isBlockCoverage":true},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3780,"endOffset":4104,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":4110,"endOffset":4239,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4245,"endOffset":4480,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":6143,"endOffset":6317,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":6201,"endOffset":6295,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6365,"endOffset":6508,"count":0}],"isBlockCoverage":false}]},{"scriptId":"957","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1587,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":163,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":469,"endOffset":1501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"958","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":646,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":1041,"endOffset":2357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"959","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8434,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":944,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1045,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1113,"endOffset":1543,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1600,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1788,"endOffset":1931,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":1988,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2172,"endOffset":2311,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2368,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2552,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2748,"endOffset":2877,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":2934,"endOffset":3069,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":3126,"endOffset":3273,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3330,"endOffset":3463,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3540,"endOffset":3897,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":3974,"endOffset":4343,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4412,"endOffset":4607,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4676,"endOffset":4883,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4925,"endOffset":5045,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5051,"endOffset":5214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5220,"endOffset":5282,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5288,"endOffset":5555,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5611,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5748,"endOffset":6033,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6075,"endOffset":6230,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6291,"endOffset":6570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6576,"endOffset":6749,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6755,"endOffset":6817,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram","ranges":[{"startOffset":6824,"endOffset":7017,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram.<computed>","ranges":[{"startOffset":7063,"endOffset":7071,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram","ranges":[{"startOffset":7076,"endOffset":7322,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram.<computed>","ranges":[{"startOffset":7378,"endOffset":7386,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7540,"endOffset":8244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"960","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1814,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":665,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":773,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1036,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1358,"endOffset":1769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"961","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packet_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6030,"count":1}],"isBlockCoverage":true},{"functionName":"readPacketLength","ranges":[{"startOffset":100,"endOffset":288,"count":255},{"startOffset":248,"endOffset":287,"count":0}],"isBlockCoverage":true},{"functionName":"PacketParser","ranges":[{"startOffset":313,"endOffset":1163,"count":2},{"startOffset":1099,"endOffset":1124,"count":0}],"isBlockCoverage":true},{"functionName":"_flushLargePacket4","ranges":[{"startOffset":1167,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"_flushLargePacket7","ranges":[{"startOffset":1566,"endOffset":1970,"count":0}],"isBlockCoverage":false},{"functionName":"executeStart","ranges":[{"startOffset":1974,"endOffset":3812,"count":41},{"startOffset":2074,"endOffset":3378,"count":255},{"startOffset":2603,"endOffset":3084,"count":0},{"startOffset":3148,"endOffset":3372,"count":0},{"startOffset":3404,"endOffset":3808,"count":0}],"isBlockCoverage":true},{"functionName":"executePayload","ranges":[{"startOffset":3816,"endOffset":5496,"count":0}],"isBlockCoverage":false},{"functionName":"executeHeader2","ranges":[{"startOffset":5500,"endOffset":5823,"count":0}],"isBlockCoverage":false},{"functionName":"executeHeader3","ranges":[{"startOffset":5827,"endOffset":5995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"962","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/packet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24810,"count":1}],"isBlockCoverage":true},{"functionName":"leftPad","ranges":[{"startOffset":628,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"Packet","ranges":[{"startOffset":1779,"endOffset":2159,"count":299}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":2248,"endOffset":2295,"count":4}],"isBlockCoverage":true},{"functionName":"length","ranges":[{"startOffset":2299,"endOffset":2347,"count":88}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":2351,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":2420,"endOffset":2643,"count":0}],"isBlockCoverage":false},{"functionName":"haveMoreData","ranges":[{"startOffset":2647,"endOffset":2702,"count":2}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":2706,"endOffset":2745,"count":169}],"isBlockCoverage":true},{"functionName":"readInt8","ranges":[{"startOffset":2749,"endOffset":2804,"count":321}],"isBlockCoverage":true},{"functionName":"readInt16","ranges":[{"startOffset":2808,"endOffset":2901,"count":325}],"isBlockCoverage":true},{"functionName":"readInt24","ranges":[{"startOffset":2905,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32","ranges":[{"startOffset":2981,"endOffset":3074,"count":154}],"isBlockCoverage":true},{"functionName":"readSInt8","ranges":[{"startOffset":3078,"endOffset":3143,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt16","ranges":[{"startOffset":3147,"endOffset":3240,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt32","ranges":[{"startOffset":3244,"endOffset":3337,"count":0}],"isBlockCoverage":false},{"functionName":"readInt64JSNumber","ranges":[{"startOffset":3341,"endOffset":3507,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt64JSNumber","ranges":[{"startOffset":3511,"endOffset":3760,"count":0}],"isBlockCoverage":false},{"functionName":"readInt64String","ranges":[{"startOffset":3764,"endOffset":3932,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt64String","ranges":[{"startOffset":3936,"endOffset":4106,"count":0}],"isBlockCoverage":false},{"functionName":"readInt64","ranges":[{"startOffset":4110,"endOffset":4405,"count":0}],"isBlockCoverage":false},{"functionName":"readSInt64","ranges":[{"startOffset":4409,"endOffset":4706,"count":0}],"isBlockCoverage":false},{"functionName":"isEOF","ranges":[{"startOffset":4710,"endOffset":4791,"count":109},{"startOffset":4765,"endOffset":4786,"count":47}],"isBlockCoverage":true},{"functionName":"eofStatusFlags","ranges":[{"startOffset":4795,"endOffset":4870,"count":21}],"isBlockCoverage":true},{"functionName":"eofWarningCount","ranges":[{"startOffset":4874,"endOffset":4950,"count":0}],"isBlockCoverage":false},{"functionName":"readLengthCodedNumber","ranges":[{"startOffset":4954,"endOffset":5177,"count":1033},{"startOffset":5071,"endOffset":5098,"count":1030},{"startOffset":5098,"endOffset":5176,"count":3}],"isBlockCoverage":true},{"functionName":"readLengthCodedNumberSigned","ranges":[{"startOffset":5181,"endOffset":5295,"count":5}],"isBlockCoverage":true},{"functionName":"readLengthCodedNumberExt","ranges":[{"startOffset":5299,"endOffset":6439,"count":3},{"startOffset":5440,"endOffset":6438,"count":0}],"isBlockCoverage":true},{"functionName":"readFloat","ranges":[{"startOffset":6443,"endOffset":6552,"count":0}],"isBlockCoverage":false},{"functionName":"readDouble","ranges":[{"startOffset":6556,"endOffset":6667,"count":0}],"isBlockCoverage":false},{"functionName":"readBuffer","ranges":[{"startOffset":6671,"endOffset":6858,"count":10},{"startOffset":6725,"endOffset":6768,"count":2}],"isBlockCoverage":true},{"functionName":"readDateTime","ranges":[{"startOffset":6896,"endOffset":8220,"count":0}],"isBlockCoverage":false},{"functionName":"readDateTimeString","ranges":[{"startOffset":8224,"endOffset":9145,"count":0}],"isBlockCoverage":false},{"functionName":"readTimeString","ranges":[{"startOffset":9196,"endOffset":10133,"count":0}],"isBlockCoverage":false},{"functionName":"readLengthCodedString","ranges":[{"startOffset":10137,"endOffset":10602,"count":97},{"startOffset":10317,"endOffset":10343,"count":3},{"startOffset":10343,"endOffset":10601,"count":94}],"isBlockCoverage":true},{"functionName":"readLengthCodedBuffer","ranges":[{"startOffset":10606,"endOffset":10763,"count":0}],"isBlockCoverage":false},{"functionName":"readNullTerminatedString","ranges":[{"startOffset":10767,"endOffset":11043,"count":6},{"startOffset":10891,"endOffset":10945,"count":96}],"isBlockCoverage":true},{"functionName":"readString","ranges":[{"startOffset":11064,"endOffset":11438,"count":6},{"startOffset":11124,"endOffset":11158,"count":0},{"startOffset":11160,"endOffset":11212,"count":0}],"isBlockCoverage":true},{"functionName":"parseInt","ranges":[{"startOffset":11442,"endOffset":12923,"count":0}],"isBlockCoverage":false},{"functionName":"parseIntNoBigCheck","ranges":[{"startOffset":13253,"endOffset":13804,"count":19},{"startOffset":13301,"endOffset":13327,"count":0},{"startOffset":13420,"endOffset":13471,"count":0},{"startOffset":13516,"endOffset":13561,"count":0},{"startOffset":13605,"endOffset":13648,"count":0},{"startOffset":13679,"endOffset":13774,"count":21}],"isBlockCoverage":true},{"functionName":"parseGeometryValue","ranges":[{"startOffset":13897,"endOffset":16782,"count":0}],"isBlockCoverage":false},{"functionName":"parseDate","ranges":[{"startOffset":16786,"endOffset":17496,"count":0}],"isBlockCoverage":false},{"functionName":"parseDateTime","ranges":[{"startOffset":17500,"endOffset":17753,"count":0}],"isBlockCoverage":false},{"functionName":"parseFloat","ranges":[{"startOffset":17757,"endOffset":18792,"count":0}],"isBlockCoverage":false},{"functionName":"parseLengthCodedIntNoBigCheck","ranges":[{"startOffset":18796,"endOffset":18899,"count":19}],"isBlockCoverage":true},{"functionName":"parseLengthCodedInt","ranges":[{"startOffset":18903,"endOffset":19022,"count":0}],"isBlockCoverage":false},{"functionName":"parseLengthCodedIntString","ranges":[{"startOffset":19026,"endOffset":19108,"count":0}],"isBlockCoverage":false},{"functionName":"parseLengthCodedFloat","ranges":[{"startOffset":19112,"endOffset":19199,"count":0}],"isBlockCoverage":false},{"functionName":"peekByte","ranges":[{"startOffset":19203,"endOffset":19256,"count":259}],"isBlockCoverage":true},{"functionName":"isAlt","ranges":[{"startOffset":19374,"endOffset":19424,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":19428,"endOffset":19480,"count":255}],"isBlockCoverage":true},{"functionName":"asError","ranges":[{"startOffset":19484,"endOffset":19981,"count":4}],"isBlockCoverage":true},{"functionName":"writeInt32","ranges":[{"startOffset":19985,"endOffset":20073,"count":20}],"isBlockCoverage":true},{"functionName":"writeInt24","ranges":[{"startOffset":20077,"endOffset":20155,"count":41}],"isBlockCoverage":true},{"functionName":"writeInt16","ranges":[{"startOffset":20159,"endOffset":20247,"count":41}],"isBlockCoverage":true},{"functionName":"writeInt8","ranges":[{"startOffset":20251,"endOffset":20332,"count":347}],"isBlockCoverage":true},{"functionName":"writeDouble","ranges":[{"startOffset":20336,"endOffset":20425,"count":2}],"isBlockCoverage":true},{"functionName":"writeBuffer","ranges":[{"startOffset":20429,"endOffset":20516,"count":35}],"isBlockCoverage":true},{"functionName":"writeNull","ranges":[{"startOffset":20520,"endOffset":20593,"count":0}],"isBlockCoverage":false},{"functionName":"writeNullTerminatedString","ranges":[{"startOffset":20634,"endOffset":20844,"count":12},{"startOffset":20748,"endOffset":20785,"count":6}],"isBlockCoverage":true},{"functionName":"writeString","ranges":[{"startOffset":20848,"endOffset":21274,"count":0}],"isBlockCoverage":false},{"functionName":"writeLengthCodedString","ranges":[{"startOffset":21278,"endOffset":21507,"count":71},{"startOffset":21434,"endOffset":21471,"count":63}],"isBlockCoverage":true},{"functionName":"writeLengthCodedBuffer","ranges":[{"startOffset":21511,"endOffset":21652,"count":0}],"isBlockCoverage":false},{"functionName":"writeLengthCodedNumber","ranges":[{"startOffset":21656,"endOffset":22232,"count":79},{"startOffset":21741,"endOffset":22231,"count":0}],"isBlockCoverage":true},{"functionName":"writeDate","ranges":[{"startOffset":22236,"endOffset":23634,"count":0}],"isBlockCoverage":false},{"functionName":"writeHeader","ranges":[{"startOffset":23638,"endOffset":23823,"count":41}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":23827,"endOffset":23915,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":23919,"endOffset":24161,"count":0}],"isBlockCoverage":false},{"functionName":"lengthCodedNumberLength","ranges":[{"startOffset":24172,"endOffset":24350,"count":71},{"startOffset":24242,"endOffset":24349,"count":0}],"isBlockCoverage":true},{"functionName":"lengthCodedStringLength","ranges":[{"startOffset":24361,"endOffset":24542,"count":71}],"isBlockCoverage":true},{"functionName":"MockBuffer","ranges":[{"startOffset":24553,"endOffset":24781,"count":2},{"startOffset":24679,"endOffset":24761,"count":190},{"startOffset":24722,"endOffset":24755,"count":186}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":24585,"endOffset":24599,"count":24}],"isBlockCoverage":true}]},{"scriptId":"963","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":180624,"count":1}],"isBlockCoverage":true}]},{"scriptId":"964","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/long/umd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44122,"count":1},{"startOffset":43975,"endOffset":43988,"count":0},{"startOffset":43990,"endOffset":44030,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44,"endOffset":43935,"count":1},{"startOffset":2292,"endOffset":2328,"count":0},{"startOffset":43923,"endOffset":43932,"count":0}],"isBlockCoverage":true},{"functionName":"Long","ranges":[{"startOffset":2865,"endOffset":3225,"count":9}],"isBlockCoverage":true},{"functionName":"isLong","ranges":[{"startOffset":4568,"endOffset":4642,"count":0}],"isBlockCoverage":false},{"functionName":"ctz32","ranges":[{"startOffset":4742,"endOffset":4840,"count":0}],"isBlockCoverage":false},{"functionName":"fromInt","ranges":[{"startOffset":5387,"endOffset":6034,"count":6},{"startOffset":5475,"endOffset":5741,"count":2},{"startOffset":5609,"endOffset":5626,"count":0},{"startOffset":5741,"endOffset":6030,"count":4},{"startOffset":5818,"endOffset":5906,"count":3},{"startOffset":5881,"endOffset":5898,"count":0},{"startOffset":5948,"endOffset":5952,"count":1},{"startOffset":5953,"endOffset":5956,"count":3},{"startOffset":5983,"endOffset":6006,"count":3}],"isBlockCoverage":true},{"functionName":"fromNumber","ranges":[{"startOffset":6454,"endOffset":6952,"count":0}],"isBlockCoverage":false},{"functionName":"fromBits","ranges":[{"startOffset":7453,"endOffset":7555,"count":9}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":8308,"endOffset":9646,"count":0}],"isBlockCoverage":false},{"functionName":"fromValue","ranges":[{"startOffset":10277,"endOffset":10607,"count":0}],"isBlockCoverage":false},{"functionName":"toInt","ranges":[{"startOffset":13350,"endOffset":13426,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":13626,"endOffset":13794,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":14075,"endOffset":15354,"count":0}],"isBlockCoverage":false},{"functionName":"getHighBits","ranges":[{"startOffset":15511,"endOffset":15561,"count":0}],"isBlockCoverage":false},{"functionName":"getHighBitsUnsigned","ranges":[{"startOffset":15731,"endOffset":15795,"count":0}],"isBlockCoverage":false},{"functionName":"getLowBits","ranges":[{"startOffset":15949,"endOffset":15997,"count":0}],"isBlockCoverage":false},{"functionName":"getLowBitsUnsigned","ranges":[{"startOffset":16164,"endOffset":16226,"count":0}],"isBlockCoverage":false},{"functionName":"getNumBitsAbs","ranges":[{"startOffset":16402,"endOffset":16743,"count":0}],"isBlockCoverage":false},{"functionName":"isZero","ranges":[{"startOffset":16876,"endOffset":16945,"count":0}],"isBlockCoverage":false},{"functionName":"isNegative","ranges":[{"startOffset":17251,"endOffset":17322,"count":0}],"isBlockCoverage":false},{"functionName":"isPositive","ranges":[{"startOffset":17467,"endOffset":17538,"count":0}],"isBlockCoverage":false},{"functionName":"isOdd","ranges":[{"startOffset":17665,"endOffset":17720,"count":0}],"isBlockCoverage":false},{"functionName":"isEven","ranges":[{"startOffset":17849,"endOffset":17905,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":18101,"endOffset":18351,"count":0}],"isBlockCoverage":false},{"functionName":"notEquals","ranges":[{"startOffset":18802,"endOffset":18886,"count":0}],"isBlockCoverage":false},{"functionName":"lessThan","ranges":[{"startOffset":19607,"endOffset":19695,"count":0}],"isBlockCoverage":false},{"functionName":"lessThanOrEqual","ranges":[{"startOffset":20171,"endOffset":20267,"count":0}],"isBlockCoverage":false},{"functionName":"greaterThan","ranges":[{"startOffset":21036,"endOffset":21127,"count":0}],"isBlockCoverage":false},{"functionName":"greaterThanOrEqual","ranges":[{"startOffset":21618,"endOffset":21717,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":22578,"endOffset":23137,"count":0}],"isBlockCoverage":false},{"functionName":"negate","ranges":[{"startOffset":23605,"endOffset":23724,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":24094,"endOffset":24888,"count":0}],"isBlockCoverage":false},{"functionName":"subtract","ranges":[{"startOffset":25103,"endOffset":25242,"count":0}],"isBlockCoverage":false},{"functionName":"multiply","ranges":[{"startOffset":25719,"endOffset":27711,"count":0}],"isBlockCoverage":false},{"functionName":"divide","ranges":[{"startOffset":28255,"endOffset":32146,"count":0}],"isBlockCoverage":false},{"functionName":"modulo","ranges":[{"startOffset":32582,"endOffset":32956,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":33566,"endOffset":33645,"count":0}],"isBlockCoverage":false},{"functionName":"countLeadingZeros","ranges":[{"startOffset":33791,"endOffset":33899,"count":0}],"isBlockCoverage":false},{"functionName":"countTrailingZeros","ranges":[{"startOffset":34262,"endOffset":34360,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":34773,"endOffset":34930,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":35123,"endOffset":35279,"count":0}],"isBlockCoverage":false},{"functionName":"xor","ranges":[{"startOffset":35474,"endOffset":35631,"count":0}],"isBlockCoverage":false},{"functionName":"shiftLeft","ranges":[{"startOffset":35857,"endOffset":36176,"count":0}],"isBlockCoverage":false},{"functionName":"shiftRight","ranges":[{"startOffset":36699,"endOffset":37043,"count":0}],"isBlockCoverage":false},{"functionName":"shiftRightUnsigned","ranges":[{"startOffset":37587,"endOffset":37989,"count":0}],"isBlockCoverage":false},{"functionName":"rotateLeft","ranges":[{"startOffset":38837,"endOffset":39386,"count":0}],"isBlockCoverage":false},{"functionName":"rotateRight","ranges":[{"startOffset":39898,"endOffset":40448,"count":0}],"isBlockCoverage":false},{"functionName":"toSigned","ranges":[{"startOffset":40869,"endOffset":40980,"count":0}],"isBlockCoverage":false},{"functionName":"toUnsigned","ranges":[{"startOffset":41121,"endOffset":41232,"count":0}],"isBlockCoverage":false},{"functionName":"toBytes","ranges":[{"startOffset":41480,"endOffset":41559,"count":0}],"isBlockCoverage":false},{"functionName":"toBytesLE","ranges":[{"startOffset":41758,"endOffset":41958,"count":0}],"isBlockCoverage":false},{"functionName":"toBytesBE","ranges":[{"startOffset":42151,"endOffset":42351,"count":0}],"isBlockCoverage":false},{"functionName":"fromBytes","ranges":[{"startOffset":42701,"endOffset":42833,"count":0}],"isBlockCoverage":false},{"functionName":"fromBytesLE","ranges":[{"startOffset":43134,"endOffset":43328,"count":0}],"isBlockCoverage":false},{"functionName":"fromBytesBE","ranges":[{"startOffset":43623,"endOffset":43817,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44001,"endOffset":44028,"count":0}],"isBlockCoverage":false}]},{"scriptId":"966","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/parsers/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":746,"count":1}],"isBlockCoverage":true},{"functionName":"exports.decode","ranges":[{"startOffset":70,"endOffset":398,"count":463},{"startOffset":155,"endOffset":210,"count":459},{"startOffset":210,"endOffset":270,"count":4},{"startOffset":376,"endOffset":389,"count":0},{"startOffset":390,"endOffset":395,"count":4}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":418,"endOffset":744,"count":183},{"startOffset":538,"endOffset":598,"count":0},{"startOffset":686,"endOffset":705,"count":0},{"startOffset":706,"endOffset":735,"count":0},{"startOffset":736,"endOffset":741,"count":0}],"isBlockCoverage":true}]},{"scriptId":"967","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6318,"count":1},{"startOffset":5704,"endOffset":5716,"count":0},{"startOffset":5813,"endOffset":6119,"count":0},{"startOffset":6142,"endOffset":6317,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":440,"endOffset":732,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":749,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"encodingExists","ranges":[{"startOffset":1356,"endOffset":1494,"count":0}],"isBlockCoverage":false},{"functionName":"getCodec","ranges":[{"startOffset":1734,"endOffset":3444,"count":4},{"startOffset":1798,"endOffset":1840,"count":1},{"startOffset":2124,"endOffset":3442,"count":5},{"startOffset":2205,"endOffset":2218,"count":3},{"startOffset":2218,"endOffset":2313,"count":2},{"startOffset":2313,"endOffset":2417,"count":0},{"startOffset":2431,"endOffset":2760,"count":1},{"startOffset":2547,"endOffset":2581,"count":2},{"startOffset":2774,"endOffset":3299,"count":1},{"startOffset":2876,"endOffset":2908,"count":0},{"startOffset":3313,"endOffset":3426,"count":0}],"isBlockCoverage":true},{"functionName":"iconv._canonicalizeEncoding","ranges":[{"startOffset":3476,"endOffset":3659,"count":4}],"isBlockCoverage":true},{"functionName":"getEncoder","ranges":[{"startOffset":3680,"endOffset":3956,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":3977,"endOffset":4266,"count":4}],"isBlockCoverage":true},{"functionName":"enableStreamingAPI","ranges":[{"startOffset":4706,"endOffset":5520,"count":1},{"startOffset":4790,"endOffset":4797,"count":0}],"isBlockCoverage":true},{"functionName":"encodeStream","ranges":[{"startOffset":5170,"endOffset":5313,"count":0}],"isBlockCoverage":false},{"functionName":"decodeStream","ranges":[{"startOffset":5340,"endOffset":5483,"count":0}],"isBlockCoverage":false},{"functionName":"iconv.encodeStream.iconv.decodeStream","ranges":[{"startOffset":5966,"endOffset":6116,"count":0}],"isBlockCoverage":false}]},{"scriptId":"968","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/lib/bom-handling.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1109,"count":1}],"isBlockCoverage":true},{"functionName":"PrependBOMWrapper","ranges":[{"startOffset":79,"endOffset":179,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.write","ranges":[{"startOffset":217,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.end","ranges":[{"startOffset":394,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper","ranges":[{"startOffset":560,"endOffset":691,"count":4},{"startOffset":683,"endOffset":688,"count":0}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.write","ranges":[{"startOffset":727,"endOffset":1028,"count":4},{"startOffset":817,"endOffset":828,"count":0},{"startOffset":858,"endOffset":987,"count":0}],"isBlockCoverage":true},{"functionName":"StripBOMWrapper.end","ranges":[{"startOffset":1062,"endOffset":1107,"count":4}],"isBlockCoverage":true}]},{"scriptId":"969","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/lib/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3380,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":250,"endOffset":3378,"count":1}],"isBlockCoverage":true},{"functionName":"IconvLiteEncoderStream","ranges":[{"startOffset":408,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._transform","ranges":[{"startOffset":851,"endOffset":1209,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._flush","ranges":[{"startOffset":1257,"endOffset":1464,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream.collect","ranges":[{"startOffset":1513,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream","ranges":[{"startOffset":1857,"endOffset":2082,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._transform","ranges":[{"startOffset":2274,"endOffset":2680,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._flush","ranges":[{"startOffset":2728,"endOffset":2966,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream.collect","ranges":[{"startOffset":3015,"endOffset":3243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"970","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4648,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1821,"endOffset":2175,"count":19},{"startOffset":1954,"endOffset":2173,"count":0}],"isBlockCoverage":true},{"functionName":"ctor.toPacket","ranges":[{"startOffset":2066,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":2280,"endOffset":3089,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":3157,"endOffset":3566,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":3613,"endOffset":4038,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":4049,"endOffset":4621,"count":0}],"isBlockCoverage":false}]},{"scriptId":"971","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/auth_next_factor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":true},{"functionName":"AuthNextFactor","ranges":[{"startOffset":140,"endOffset":241,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":245,"endOffset":617,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":628,"endOffset":880,"count":0}],"isBlockCoverage":false}]},{"scriptId":"972","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/auth_switch_request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1055,"count":1}],"isBlockCoverage":true},{"functionName":"AuthSwitchRequest","ranges":[{"startOffset":196,"endOffset":297,"count":2}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":301,"endOffset":697,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":708,"endOffset":1015,"count":2}],"isBlockCoverage":true}]},{"scriptId":"973","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/auth_switch_request_more_data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":793,"count":1}],"isBlockCoverage":true},{"functionName":"AuthSwitchRequestMoreData","ranges":[{"startOffset":204,"endOffset":249,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":253,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":526,"endOffset":669,"count":0}],"isBlockCoverage":false},{"functionName":"verifyMarker","ranges":[{"startOffset":680,"endOffset":745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"974","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/auth_switch_response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":707,"count":1}],"isBlockCoverage":true},{"functionName":"AuthSwitchResponse","ranges":[{"startOffset":197,"endOffset":314,"count":2},{"startOffset":249,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":318,"endOffset":552,"count":2}],"isBlockCoverage":true},{"functionName":"fromPacket","ranges":[{"startOffset":563,"endOffset":666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"975","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/binary_row.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3273,"count":1}],"isBlockCoverage":true},{"functionName":"BinaryRow","ranges":[{"startOffset":164,"endOffset":224,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":235,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":1518,"endOffset":1946,"count":0}],"isBlockCoverage":false}]},{"scriptId":"976","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2762,"count":1}],"isBlockCoverage":true}]},{"scriptId":"977","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/binlog_dump.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":984,"count":1}],"isBlockCoverage":true},{"functionName":"BinlogDump","ranges":[{"startOffset":318,"endOffset":498,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":502,"endOffset":951,"count":0}],"isBlockCoverage":false}]},{"scriptId":"978","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/commands.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true}]},{"scriptId":"979","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/change_user.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3306,"count":1}],"isBlockCoverage":true},{"functionName":"ChangeUser","ranges":[{"startOffset":400,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"serializeToBuffer","ranges":[{"startOffset":1262,"endOffset":2823,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":2827,"endOffset":3273,"count":0}],"isBlockCoverage":false}]},{"scriptId":"980","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/client.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2453,"count":1}],"isBlockCoverage":true}]},{"scriptId":"981","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/auth_41.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2329,"count":1}],"isBlockCoverage":true},{"functionName":"sha1","ranges":[{"startOffset":719,"endOffset":923,"count":12},{"startOffset":826,"endOffset":854,"count":4},{"startOffset":868,"endOffset":896,"count":4}],"isBlockCoverage":true},{"functionName":"xor","ranges":[{"startOffset":925,"endOffset":1083,"count":4},{"startOffset":1030,"endOffset":1064,"count":80}],"isBlockCoverage":true},{"functionName":"token","ranges":[{"startOffset":1105,"endOffset":1317,"count":4},{"startOffset":1171,"endOffset":1204,"count":0}],"isBlockCoverage":true},{"functionName":"exports.calculateTokenFromPasswordSha","ranges":[{"startOffset":1359,"endOffset":1716,"count":4}],"isBlockCoverage":true},{"functionName":"exports.verifyToken","ranges":[{"startOffset":1774,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"exports.doubleSha1","ranges":[{"startOffset":2023,"endOffset":2076,"count":0}],"isBlockCoverage":false},{"functionName":"xorRotating","ranges":[{"startOffset":2079,"endOffset":2293,"count":0}],"isBlockCoverage":false}]},{"scriptId":"982","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/charset_encodings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3455,"count":1}],"isBlockCoverage":true}]},{"scriptId":"983","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/close_statement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"CloseStatement","ranges":[{"startOffset":141,"endOffset":180,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":217,"endOffset":417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"984","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/column_definition.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9924,"count":1}],"isBlockCoverage":true},{"functionName":"ColumnDefinition","ranges":[{"startOffset":936,"endOffset":2469,"count":147},{"startOffset":2175,"endOffset":2197,"count":24},{"startOffset":2198,"endOffset":2213,"count":123}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":2473,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2869,"endOffset":8232,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":8243,"endOffset":9106,"count":0}],"isBlockCoverage":false},{"functionName":"get db","ranges":[{"startOffset":9164,"endOffset":9202,"count":0}],"isBlockCoverage":false},{"functionName":"addString","ranges":[{"startOffset":9224,"endOffset":9777,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9310,"endOffset":9769,"count":210},{"startOffset":9509,"endOffset":9531,"count":40},{"startOffset":9532,"endOffset":9547,"count":170}],"isBlockCoverage":true}]},{"scriptId":"985","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/execute.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6520,"count":1}],"isBlockCoverage":true},{"functionName":"isJSON","ranges":[{"startOffset":284,"endOffset":458,"count":0}],"isBlockCoverage":false},{"functionName":"toParameter","ranges":[{"startOffset":578,"endOffset":2164,"count":57},{"startOffset":897,"endOffset":989,"count":0},{"startOffset":997,"endOffset":1122,"count":2},{"startOffset":1130,"endOffset":1279,"count":0},{"startOffset":1287,"endOffset":1927,"count":0},{"startOffset":1935,"endOffset":1977,"count":55},{"startOffset":1987,"endOffset":2037,"count":0},{"startOffset":2053,"endOffset":2120,"count":55}],"isBlockCoverage":true},{"functionName":"writer","ranges":[{"startOffset":688,"endOffset":837,"count":55}],"isBlockCoverage":true},{"functionName":"writer","ranges":[{"startOffset":1450,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"Execute","ranges":[{"startOffset":2184,"endOffset":2378,"count":6}],"isBlockCoverage":true},{"functionName":"fromPacket","ranges":[{"startOffset":2389,"endOffset":4229,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":4233,"endOffset":6490,"count":6},{"startOffset":5793,"endOffset":5836,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4902,"endOffset":4967,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5020,"endOffset":5078,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5510,"endOffset":5764,"count":57},{"startOffset":5568,"endOffset":5609,"count":0},{"startOffset":5663,"endOffset":5756,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6139,"endOffset":6264,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6324,"endOffset":6459,"count":57}],"isBlockCoverage":true}]},{"scriptId":"986","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/cursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":102,"count":1}],"isBlockCoverage":true}]},{"scriptId":"987","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/handshake.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3914,"count":1}],"isBlockCoverage":true},{"functionName":"Handshake","ranges":[{"startOffset":240,"endOffset":676,"count":2}],"isBlockCoverage":true},{"functionName":"setScrambleData","ranges":[{"startOffset":680,"endOffset":933,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":937,"endOffset":2033,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":2044,"endOffset":3882,"count":2},{"startOffset":2913,"endOffset":2991,"count":0},{"startOffset":3020,"endOffset":3101,"count":0},{"startOffset":3328,"endOffset":3501,"count":0}],"isBlockCoverage":true}]},{"scriptId":"988","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/handshake_response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5053,"count":1}],"isBlockCoverage":true},{"functionName":"HandshakeResponse","ranges":[{"startOffset":265,"endOffset":1247,"count":2},{"startOffset":321,"endOffset":326,"count":0},{"startOffset":367,"endOffset":372,"count":0},{"startOffset":413,"endOffset":418,"count":0},{"startOffset":736,"endOffset":894,"count":0}],"isBlockCoverage":true},{"functionName":"serializeResponse","ranges":[{"startOffset":1251,"endOffset":3079,"count":4},{"startOffset":1865,"endOffset":2081,"count":0},{"startOffset":2423,"endOffset":2428,"count":0},{"startOffset":2557,"endOffset":2771,"count":8},{"startOffset":2866,"endOffset":3050,"count":8}],"isBlockCoverage":true},{"functionName":"isSet","ranges":[{"startOffset":1297,"endOffset":1345,"count":16}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":3083,"endOffset":3523,"count":2},{"startOffset":3135,"endOffset":3219,"count":0},{"startOffset":3263,"endOffset":3351,"count":0}],"isBlockCoverage":true},{"functionName":"fromPacket","ranges":[{"startOffset":3533,"endOffset":5013,"count":0}],"isBlockCoverage":false}]},{"scriptId":"989","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/prepare_statement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":800,"count":1}],"isBlockCoverage":true},{"functionName":"PrepareStatement","ranges":[{"startOffset":269,"endOffset":422,"count":5}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":426,"endOffset":761,"count":5}],"isBlockCoverage":true}]},{"scriptId":"990","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/prepared_statement_header.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":375,"count":1}],"isBlockCoverage":true},{"functionName":"PreparedStatementHeader","ranges":[{"startOffset":49,"endOffset":310,"count":5}],"isBlockCoverage":true}]},{"scriptId":"991","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"Query","ranges":[{"startOffset":263,"endOffset":416,"count":24}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":420,"endOffset":747,"count":24}],"isBlockCoverage":true}]},{"scriptId":"992","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/register_slave.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1629,"count":1}],"isBlockCoverage":true},{"functionName":"RegisterSlave","ranges":[{"startOffset":312,"endOffset":656,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":660,"endOffset":1593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"993","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/resultset_header.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4574,"count":1}],"isBlockCoverage":true},{"functionName":"ResultSetHeader","ranges":[{"startOffset":440,"endOffset":3935,"count":26},{"startOffset":780,"endOffset":969,"count":21},{"startOffset":874,"endOffset":949,"count":0},{"startOffset":969,"endOffset":1323,"count":5},{"startOffset":1323,"endOffset":1409,"count":0},{"startOffset":1409,"endOffset":1499,"count":5},{"startOffset":1501,"endOffset":3622,"count":3},{"startOffset":1843,"endOffset":1875,"count":2},{"startOffset":1876,"endOffset":1879,"count":1},{"startOffset":1976,"endOffset":2144,"count":2},{"startOffset":2181,"endOffset":3608,"count":2},{"startOffset":2592,"endOffset":2730,"count":0},{"startOffset":2742,"endOffset":3562,"count":0},{"startOffset":3622,"endOffset":3693,"count":2},{"startOffset":3693,"endOffset":3716,"count":5},{"startOffset":3716,"endOffset":3763,"count":2},{"startOffset":3763,"endOffset":3838,"count":5},{"startOffset":3838,"endOffset":3890,"count":1},{"startOffset":3890,"endOffset":3931,"count":4}],"isBlockCoverage":true},{"functionName":"isSet","ranges":[{"startOffset":668,"endOffset":734,"count":10}],"isBlockCoverage":true},{"functionName":"toPacket","ranges":[{"startOffset":4043,"endOffset":4536,"count":0}],"isBlockCoverage":false}]},{"scriptId":"994","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/server_status.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1536,"count":1}],"isBlockCoverage":true}]},{"scriptId":"995","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/encoding_charset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":686,"count":1}],"isBlockCoverage":true}]},{"scriptId":"996","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/session_track.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true}]},{"scriptId":"997","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/ssl_request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":633,"count":1}],"isBlockCoverage":true},{"functionName":"SSLRequest","ranges":[{"startOffset":138,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":255,"endOffset":600,"count":0}],"isBlockCoverage":false}]},{"scriptId":"998","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/packets/text_row.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1196,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":79,"endOffset":139,"count":0}],"isBlockCoverage":false},{"functionName":"fromPacket","ranges":[{"startOffset":150,"endOffset":381,"count":0}],"isBlockCoverage":false},{"functionName":"toPacket","ranges":[{"startOffset":392,"endOffset":1166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"999","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":696,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1000","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/client_handshake.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8522,"count":1}],"isBlockCoverage":true},{"functionName":"flagNames","ranges":[{"startOffset":742,"endOffset":940,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHandshake","ranges":[{"startOffset":984,"endOffset":1125,"count":2}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":1129,"endOffset":1194,"count":2}],"isBlockCoverage":true},{"functionName":"sendSSLRequest","ranges":[{"startOffset":1198,"endOffset":1397,"count":0}],"isBlockCoverage":false},{"functionName":"sendCredentials","ranges":[{"startOffset":1401,"endOffset":2914,"count":2},{"startOffset":1464,"endOffset":1657,"count":0}],"isBlockCoverage":true},{"functionName":"calculateNativePasswordAuthToken","ranges":[{"startOffset":2918,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"handshakeInit","ranges":[{"startOffset":3540,"endOffset":6114,"count":2},{"startOffset":3785,"endOffset":4012,"count":0},{"startOffset":4811,"endOffset":4877,"count":0},{"startOffset":4980,"endOffset":5826,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3602,"endOffset":3685,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5477,"endOffset":5818,"count":0}],"isBlockCoverage":false},{"functionName":"handshakeResult","ranges":[{"startOffset":6118,"endOffset":8485,"count":4},{"startOffset":6319,"endOffset":6334,"count":2},{"startOffset":6335,"endOffset":6353,"count":2},{"startOffset":6355,"endOffset":7678,"count":2},{"startOffset":6446,"endOffset":6531,"count":0},{"startOffset":7392,"endOffset":7672,"count":0},{"startOffset":7678,"endOffset":7701,"count":2},{"startOffset":7701,"endOffset":8024,"count":0},{"startOffset":8024,"endOffset":8406,"count":2},{"startOffset":8251,"endOffset":8400,"count":0},{"startOffset":8406,"endOffset":8430,"count":2},{"startOffset":8430,"endOffset":8464,"count":0},{"startOffset":8464,"endOffset":8484,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1001","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/command.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1264,"count":1}],"isBlockCoverage":true},{"functionName":"Command","ranges":[{"startOffset":142,"endOffset":196,"count":40}],"isBlockCoverage":true},{"functionName":"stateName","ranges":[{"startOffset":222,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":406,"endOffset":1234,"count":295},{"startOffset":456,"endOffset":530,"count":40},{"startOffset":546,"endOffset":565,"count":255},{"startOffset":567,"endOffset":978,"count":4},{"startOffset":655,"endOffset":668,"count":0},{"startOffset":699,"endOffset":790,"count":0},{"startOffset":879,"endOffset":953,"count":0},{"startOffset":978,"endOffset":1158,"count":291},{"startOffset":1158,"endOffset":1185,"count":255},{"startOffset":1185,"endOffset":1233,"count":36}],"isBlockCoverage":true}]},{"scriptId":"1002","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/server_handshake.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6541,"count":1}],"isBlockCoverage":true},{"functionName":"ServerHandshake","ranges":[{"startOffset":255,"endOffset":622,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":626,"endOffset":1052,"count":0}],"isBlockCoverage":false},{"functionName":"readClientReply","ranges":[{"startOffset":1056,"endOffset":2239,"count":0}],"isBlockCoverage":false},{"functionName":"_isStatement","ranges":[{"startOffset":2243,"endOffset":2362,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchCommands","ranges":[{"startOffset":2366,"endOffset":5784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1003","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10077,"count":1}],"isBlockCoverage":true},{"functionName":"Query","ranges":[{"startOffset":506,"endOffset":1126,"count":24}],"isBlockCoverage":true},{"functionName":"Query._unpipeStream","ranges":[{"startOffset":1024,"endOffset":1037,"count":24}],"isBlockCoverage":true},{"functionName":"then","ranges":[{"startOffset":1130,"endOffset":1774,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1850,"endOffset":2357,"count":24},{"startOffset":1912,"endOffset":2019,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":2361,"endOffset":3126,"count":26},{"startOffset":2467,"endOffset":2488,"count":0},{"startOffset":2490,"endOffset":2516,"count":0},{"startOffset":2568,"endOffset":2653,"count":0},{"startOffset":2811,"endOffset":2884,"count":0},{"startOffset":2903,"endOffset":3002,"count":21},{"startOffset":3002,"endOffset":3099,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2930,"endOffset":2992,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3035,"endOffset":3089,"count":5}],"isBlockCoverage":true},{"functionName":"doneInsert","ranges":[{"startOffset":3130,"endOffset":3641,"count":5},{"startOffset":3179,"endOffset":3358,"count":0},{"startOffset":3544,"endOffset":3613,"count":0}],"isBlockCoverage":true},{"functionName":"resultsetHeader","ranges":[{"startOffset":3645,"endOffset":4285,"count":26},{"startOffset":3818,"endOffset":3985,"count":0},{"startOffset":4018,"endOffset":4059,"count":5},{"startOffset":4059,"endOffset":4095,"count":21},{"startOffset":4095,"endOffset":4167,"count":0},{"startOffset":4167,"endOffset":4284,"count":21}],"isBlockCoverage":true},{"functionName":"_streamLocalInfile","ranges":[{"startOffset":4289,"endOffset":6105,"count":0}],"isBlockCoverage":false},{"functionName":"readField","ranges":[{"startOffset":6109,"endOffset":7496,"count":105},{"startOffset":6826,"endOffset":7134,"count":0},{"startOffset":7224,"endOffset":7454,"count":21},{"startOffset":7454,"endOffset":7495,"count":84}],"isBlockCoverage":true},{"functionName":"fieldsEOF","ranges":[{"startOffset":7500,"endOffset":7668,"count":21},{"startOffset":7574,"endOffset":7643,"count":0}],"isBlockCoverage":true},{"functionName":"row","ranges":[{"startOffset":7744,"endOffset":8462,"count":41},{"startOffset":7796,"endOffset":8061,"count":21},{"startOffset":7943,"endOffset":8029,"count":0},{"startOffset":8061,"endOffset":8212,"count":20},{"startOffset":8212,"endOffset":8303,"count":0},{"startOffset":8303,"endOffset":8381,"count":20},{"startOffset":8381,"endOffset":8426,"count":0},{"startOffset":8426,"endOffset":8461,"count":20}],"isBlockCoverage":true},{"functionName":"infileOk","ranges":[{"startOffset":8466,"endOffset":8596,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":8600,"endOffset":9360,"count":0}],"isBlockCoverage":false},{"functionName":"_setTimeout","ranges":[{"startOffset":9364,"endOffset":9578,"count":30},{"startOffset":9402,"endOffset":9574,"count":0}],"isBlockCoverage":true},{"functionName":"_handleTimeoutError","ranges":[{"startOffset":9582,"endOffset":10002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1004","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/parsers/text_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6825,"count":1},{"startOffset":298,"endOffset":328,"count":56}],"isBlockCoverage":true},{"functionName":"readCodeFor","ranges":[{"startOffset":330,"endOffset":2458,"count":17},{"startOffset":457,"endOffset":484,"count":0},{"startOffset":602,"endOffset":620,"count":0},{"startOffset":710,"endOffset":726,"count":0},{"startOffset":731,"endOffset":748,"count":0},{"startOffset":753,"endOffset":769,"count":2},{"startOffset":774,"endOffset":791,"count":2},{"startOffset":796,"endOffset":867,"count":2},{"startOffset":872,"endOffset":1069,"count":0},{"startOffset":1074,"endOffset":1091,"count":0},{"startOffset":1096,"endOffset":1161,"count":0},{"startOffset":1166,"endOffset":1229,"count":0},{"startOffset":1234,"endOffset":1253,"count":0},{"startOffset":1258,"endOffset":1426,"count":0},{"startOffset":1431,"endOffset":1616,"count":0},{"startOffset":1621,"endOffset":1641,"count":0},{"startOffset":1646,"endOffset":1840,"count":0},{"startOffset":1845,"endOffset":1915,"count":0},{"startOffset":1920,"endOffset":1984,"count":0},{"startOffset":1989,"endOffset":2279,"count":0},{"startOffset":2284,"endOffset":2452,"count":15},{"startOffset":2332,"endOffset":2390,"count":0}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":2460,"endOffset":6664,"count":3},{"startOffset":2665,"endOffset":2710,"count":0},{"startOffset":4514,"endOffset":4580,"count":0},{"startOffset":4722,"endOffset":5006,"count":0},{"startOffset":5091,"endOffset":6204,"count":17},{"startOffset":5261,"endOffset":5386,"count":0},{"startOffset":5425,"endOffset":5510,"count":0},{"startOffset":5541,"endOffset":5592,"count":0},{"startOffset":5681,"endOffset":5751,"count":0},{"startOffset":6132,"endOffset":6194,"count":0},{"startOffset":6425,"endOffset":6538,"count":0},{"startOffset":6630,"endOffset":6663,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":2714,"endOffset":3695,"count":105}],"isBlockCoverage":true},{"functionName":"string","ranges":[{"startOffset":2920,"endOffset":3507,"count":0}],"isBlockCoverage":false},{"functionName":"buffer","ranges":[{"startOffset":3523,"endOffset":3596,"count":0}],"isBlockCoverage":false},{"functionName":"geometry","ranges":[{"startOffset":3614,"endOffset":3684,"count":0}],"isBlockCoverage":false},{"functionName":"getTextParser","ranges":[{"startOffset":6666,"endOffset":6791,"count":21}],"isBlockCoverage":true}]},{"scriptId":"1005","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/charsets.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10509,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1006","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1725,"count":1}],"isBlockCoverage":true},{"functionName":"srcEscape","ranges":[{"startOffset":488,"endOffset":573,"count":17}],"isBlockCoverage":true},{"functionName":"highlightFn","ranges":[{"startOffset":931,"endOffset":1156,"count":0}],"isBlockCoverage":false},{"functionName":"printDebugWithCode","ranges":[{"startOffset":1251,"endOffset":1448,"count":0}],"isBlockCoverage":false},{"functionName":"typeMatch","ranges":[{"startOffset":1554,"endOffset":1692,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1007","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/generate-function/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3210,"count":1},{"startOffset":837,"endOffset":875,"count":50}],"isBlockCoverage":true},{"functionName":"isVariable","ranges":[{"startOffset":894,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"s","ranges":[{"startOffset":1000,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":1042,"endOffset":1085,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":1092,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"genfun","ranges":[{"startOffset":1155,"endOffset":3159,"count":3},{"startOffset":3115,"endOffset":3142,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":1232,"endOffset":1350,"count":79},{"startOffset":1305,"endOffset":1319,"count":198}],"isBlockCoverage":true},{"functionName":"pushLine","ranges":[{"startOffset":1369,"endOffset":1751,"count":79},{"startOffset":1426,"endOffset":1467,"count":15},{"startOffset":1469,"endOffset":1536,"count":0},{"startOffset":1585,"endOffset":1637,"count":15},{"startOffset":1637,"endOffset":1679,"count":64},{"startOffset":1679,"endOffset":1731,"count":15},{"startOffset":1731,"endOffset":1750,"count":49}],"isBlockCoverage":true},{"functionName":"line","ranges":[{"startOffset":1766,"endOffset":2089,"count":79},{"startOffset":1796,"endOffset":1807,"count":0},{"startOffset":1867,"endOffset":2004,"count":0}],"isBlockCoverage":true},{"functionName":"line.sym","ranges":[{"startOffset":2148,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"line.property","ranges":[{"startOffset":2312,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"line.toString","ranges":[{"startOffset":2596,"endOffset":2640,"count":3}],"isBlockCoverage":true},{"functionName":"line.toFunction","ranges":[{"startOffset":2662,"endOffset":3089,"count":3},{"startOffset":2696,"endOffset":2706,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2790,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2905,"endOffset":2943,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2970,"endOffset":3015,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1008","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/is-property/is-property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11014,"count":1}],"isBlockCoverage":true},{"functionName":"isProperty","ranges":[{"startOffset":13,"endOffset":10986,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1009","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/parsers/parser_cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1301,"count":1}],"isBlockCoverage":true},{"functionName":"keyFromFields","ranges":[{"startOffset":106,"endOffset":796,"count":21},{"startOffset":325,"endOffset":352,"count":0},{"startOffset":482,"endOffset":500,"count":0},{"startOffset":613,"endOffset":780,"count":105}],"isBlockCoverage":true},{"functionName":"getParser","ranges":[{"startOffset":798,"endOffset":1094,"count":21},{"startOffset":972,"endOffset":996,"count":18},{"startOffset":996,"endOffset":1093,"count":3}],"isBlockCoverage":true},{"functionName":"setMaxCache","ranges":[{"startOffset":1096,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"clearCache","ranges":[{"startOffset":1152,"endOffset":1200,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1010","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/prepare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4053,"count":1}],"isBlockCoverage":true},{"functionName":"PreparedStatementInfo","ranges":[{"startOffset":234,"endOffset":461,"count":5}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":465,"endOffset":547,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":551,"endOffset":804,"count":0}],"isBlockCoverage":false},{"functionName":"Prepare","ranges":[{"startOffset":842,"endOffset":1108,"count":6}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":1112,"endOffset":1662,"count":6},{"startOffset":1320,"endOffset":1421,"count":1},{"startOffset":1421,"endOffset":1661,"count":5}],"isBlockCoverage":true},{"functionName":"prepareHeader","ranges":[{"startOffset":1666,"endOffset":2088,"count":5},{"startOffset":1967,"endOffset":2087,"count":0}],"isBlockCoverage":true},{"functionName":"readParameter","ranges":[{"startOffset":2092,"endOffset":2864,"count":42},{"startOffset":2452,"endOffset":2587,"count":0},{"startOffset":2776,"endOffset":2829,"count":5},{"startOffset":2829,"endOffset":2863,"count":37}],"isBlockCoverage":true},{"functionName":"readField","ranges":[{"startOffset":2868,"endOffset":3224,"count":0}],"isBlockCoverage":false},{"functionName":"parametersEOF","ranges":[{"startOffset":3228,"endOffset":3505,"count":5},{"startOffset":3289,"endOffset":3375,"count":0},{"startOffset":3405,"endOffset":3454,"count":0}],"isBlockCoverage":true},{"functionName":"fieldsEOF","ranges":[{"startOffset":3509,"endOffset":3693,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDone","ranges":[{"startOffset":3697,"endOffset":4023,"count":5}],"isBlockCoverage":true}]},{"scriptId":"1011","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/close_statement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":361,"count":1}],"isBlockCoverage":true},{"functionName":"CloseStatement","ranges":[{"startOffset":143,"endOffset":195,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":199,"endOffset":324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1012","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/execute.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3717,"count":1}],"isBlockCoverage":true},{"functionName":"Execute","ranges":[{"startOffset":241,"endOffset":887,"count":6}],"isBlockCoverage":true},{"functionName":"Execute._unpipeStream","ranges":[{"startOffset":785,"endOffset":798,"count":2}],"isBlockCoverage":true},{"functionName":"buildParserFromFields","ranges":[{"startOffset":891,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1011,"endOffset":1860,"count":6},{"startOffset":1761,"endOffset":1810,"count":0}],"isBlockCoverage":true},{"functionName":"readField","ranges":[{"startOffset":1864,"endOffset":2809,"count":0}],"isBlockCoverage":false},{"functionName":"fieldsEOF","ranges":[{"startOffset":2813,"endOffset":3115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1013","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/parsers/binary_parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6274,"count":1},{"startOffset":356,"endOffset":386,"count":56}],"isBlockCoverage":true},{"functionName":"readCodeFor","ranges":[{"startOffset":388,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":2902,"endOffset":6107,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryParser","ranges":[{"startOffset":6109,"endOffset":6238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1014","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/constants/field_flags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1015","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/ping.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":817,"count":1}],"isBlockCoverage":true},{"functionName":"Ping","ranges":[{"startOffset":306,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":380,"endOffset":598,"count":0}],"isBlockCoverage":false},{"functionName":"pingResponse","ranges":[{"startOffset":602,"endOffset":790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1016","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/register_slave.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":592,"count":1}],"isBlockCoverage":true},{"functionName":"RegisterSlave","ranges":[{"startOffset":133,"endOffset":231,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":235,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"registerResponse","ranges":[{"startOffset":434,"endOffset":556,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1017","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/binlog_dump.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2920,"count":1}],"isBlockCoverage":true},{"functionName":"BinlogEventHeader","ranges":[{"startOffset":147,"endOffset":409,"count":0}],"isBlockCoverage":false},{"functionName":"BinlogDump","ranges":[{"startOffset":450,"endOffset":541,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":545,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"binlogData","ranges":[{"startOffset":732,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"RotateEvent","ranges":[{"startOffset":1346,"endOffset":1558,"count":0}],"isBlockCoverage":false},{"functionName":"FormatDescriptionEvent","ranges":[{"startOffset":1595,"endOffset":1975,"count":0}],"isBlockCoverage":false},{"functionName":"QueryEvent","ranges":[{"startOffset":2000,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"XidEvent","ranges":[{"startOffset":2620,"endOffset":2753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1018","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/change_user.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2691,"count":1}],"isBlockCoverage":true},{"functionName":"ChangeUser","ranges":[{"startOffset":644,"endOffset":1170,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":1173,"endOffset":2455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1019","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/quit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"Quit","ranges":[{"startOffset":193,"endOffset":263,"count":2}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":267,"endOffset":548,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1020","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/connection_config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9318,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionConfig","ranges":[{"startOffset":1624,"endOffset":6831,"count":2},{"startOffset":1684,"endOffset":1743,"count":0},{"startOffset":1777,"endOffset":2049,"count":0},{"startOffset":2081,"endOffset":2565,"count":20},{"startOffset":2146,"endOffset":2155,"count":0},{"startOffset":2191,"endOffset":2559,"count":0},{"startOffset":2667,"endOffset":2681,"count":0},{"startOffset":2733,"endOffset":2761,"count":0},{"startOffset":2777,"endOffset":2784,"count":0},{"startOffset":2903,"endOffset":2915,"count":0},{"startOffset":3138,"endOffset":3158,"count":0},{"startOffset":3159,"endOffset":3171,"count":0},{"startOffset":3456,"endOffset":3480,"count":0},{"startOffset":3665,"endOffset":3673,"count":0},{"startOffset":4220,"endOffset":4752,"count":0},{"startOffset":4799,"endOffset":4809,"count":0},{"startOffset":4965,"endOffset":5010,"count":0},{"startOffset":5301,"endOffset":5321,"count":0},{"startOffset":5374,"endOffset":5380,"count":0},{"startOffset":5435,"endOffset":5622,"count":0},{"startOffset":5641,"endOffset":5934,"count":0},{"startOffset":6010,"endOffset":6062,"count":0},{"startOffset":6393,"endOffset":6398,"count":0}],"isBlockCoverage":true},{"functionName":"mergeFlags","ranges":[{"startOffset":6842,"endOffset":7583,"count":2},{"startOffset":6987,"endOffset":6992,"count":0},{"startOffset":7126,"endOffset":7277,"count":36},{"startOffset":7187,"endOffset":7214,"count":2},{"startOffset":7214,"endOffset":7264,"count":34},{"startOffset":7264,"endOffset":7270,"count":0},{"startOffset":7420,"endOffset":7554,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultFlags","ranges":[{"startOffset":7594,"endOffset":8225,"count":2},{"startOffset":8048,"endOffset":8100,"count":0}],"isBlockCoverage":true},{"functionName":"getCharsetNumber","ranges":[{"startOffset":8236,"endOffset":8426,"count":0}],"isBlockCoverage":false},{"functionName":"getSSLProfile","ranges":[{"startOffset":8437,"endOffset":8698,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":8709,"endOffset":9279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1021","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6271,"count":1}],"isBlockCoverage":true},{"functionName":"spliceConnection","ranges":[{"startOffset":280,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"Pool","ranges":[{"startOffset":516,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":964,"endOffset":1096,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":1100,"endOffset":2403,"count":0}],"isBlockCoverage":false},{"functionName":"releaseConnection","ranges":[{"startOffset":2407,"endOffset":2967,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2971,"endOffset":3683,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":3687,"endOffset":4420,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":4424,"endOffset":4965,"count":0}],"isBlockCoverage":false},{"functionName":"_removeConnection","ranges":[{"startOffset":4969,"endOffset":5250,"count":0}],"isBlockCoverage":false},{"functionName":"_removeIdleTimeoutConnections","ranges":[{"startOffset":5254,"endOffset":5830,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":5834,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":6017,"endOffset":6178,"count":0}],"isBlockCoverage":false},{"functionName":"escapeId","ranges":[{"startOffset":6182,"endOffset":6244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1022","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/pool_connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1869,"count":1}],"isBlockCoverage":true},{"functionName":"PoolConnection","ranges":[{"startOffset":114,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":657,"endOffset":846,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":850,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1016,"endOffset":1407,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1411,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"_removeFromPool","ranges":[{"startOffset":1479,"endOffset":1653,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1023","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/pool_cluster.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6732,"count":1}],"isBlockCoverage":true},{"functionName":"RR","ranges":[{"startOffset":281,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"RANDOM","ranges":[{"startOffset":380,"endOffset":484,"count":0}],"isBlockCoverage":false},{"functionName":"ORDER","ranges":[{"startOffset":488,"endOffset":541,"count":0}],"isBlockCoverage":false},{"functionName":"PoolNamespace","ranges":[{"startOffset":570,"endOffset":720,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":724,"endOffset":1137,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":1259,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":1875,"endOffset":2263,"count":0}],"isBlockCoverage":false},{"functionName":"_getClusterNode","ranges":[{"startOffset":2267,"endOffset":2580,"count":0}],"isBlockCoverage":false},{"functionName":"PoolCluster","ranges":[{"startOffset":2627,"endOffset":3070,"count":0}],"isBlockCoverage":false},{"functionName":"of","ranges":[{"startOffset":3074,"endOffset":3523,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3527,"endOffset":3909,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":3913,"endOffset":4279,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":4283,"endOffset":4924,"count":0}],"isBlockCoverage":false},{"functionName":"_findNodeIds","ranges":[{"startOffset":4928,"endOffset":5558,"count":0}],"isBlockCoverage":false},{"functionName":"_getNode","ranges":[{"startOffset":5562,"endOffset":5616,"count":0}],"isBlockCoverage":false},{"functionName":"_increaseErrorCount","ranges":[{"startOffset":5620,"endOffset":5997,"count":0}],"isBlockCoverage":false},{"functionName":"_decreaseErrorCount","ranges":[{"startOffset":6001,"endOffset":6094,"count":0}],"isBlockCoverage":false},{"functionName":"_getConnection","ranges":[{"startOffset":6098,"endOffset":6643,"count":0}],"isBlockCoverage":false},{"functionName":"_clearFindCaches","ranges":[{"startOffset":6647,"endOffset":6698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1024","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/pool_config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":860,"count":1}],"isBlockCoverage":true},{"functionName":"PoolConfig","ranges":[{"startOffset":97,"endOffset":827,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1025","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/auth_plugins/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1026","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3079,"count":1}],"isBlockCoverage":true},{"functionName":"sha256","ranges":[{"startOffset":524,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"calculateToken","ranges":[{"startOffset":638,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":909,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1107,"endOffset":3077,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1131,"endOffset":3077,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1027","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"bufferFromStr","ranges":[{"startOffset":15,"endOffset":80,"count":0}],"isBlockCoverage":false},{"functionName":"create_mysql_clear_password_plugin","ranges":[{"startOffset":125,"endOffset":399,"count":1}],"isBlockCoverage":true},{"functionName":"mysql_clear_password_plugin","ranges":[{"startOffset":144,"endOffset":399,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1028","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/auth_plugins/mysql_native_password.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":844,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":121,"endOffset":842,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":138,"endOffset":842,"count":2},{"startOffset":209,"endOffset":234,"count":0},{"startOffset":235,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":396,"endOffset":839,"count":2},{"startOffset":540,"endOffset":683,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1029","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/auth_plugins/sha256_password.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1628,"count":1}],"isBlockCoverage":true},{"functionName":"encrypt","ranges":[{"startOffset":272,"endOffset":451,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":470,"endOffset":1626,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":494,"endOffset":1626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1030","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/models/midia.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":964,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":961,"count":1}],"isBlockCoverage":true},{"functionName":"associate","ranges":[{"startOffset":338,"endOffset":479,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1031","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/models/ods.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":868,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":865,"count":1}],"isBlockCoverage":true},{"functionName":"associate","ranges":[{"startOffset":336,"endOffset":513,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1032","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/models/projeto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2106,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":2103,"count":1}],"isBlockCoverage":true},{"functionName":"associate","ranges":[{"startOffset":340,"endOffset":753,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1033","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/models/projeto_ods.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":415,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":412,"count":1}],"isBlockCoverage":true},{"functionName":"associate","ranges":[{"startOffset":150,"endOffset":170,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1034","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/models/usuario.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2980,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":2977,"count":1}],"isBlockCoverage":true},{"functionName":"associate","ranges":[{"startOffset":146,"endOffset":287,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1035","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/services/Services.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1266,"count":1}],"isBlockCoverage":true},{"functionName":"Services","ranges":[{"startOffset":115,"endOffset":186,"count":4}],"isBlockCoverage":true},{"functionName":"buscaRegistros","ranges":[{"startOffset":192,"endOffset":368,"count":1},{"startOffset":321,"endOffset":363,"count":0}],"isBlockCoverage":true},{"functionName":"buscaUmRegistro","ranges":[{"startOffset":374,"endOffset":696,"count":2},{"startOffset":545,"endOffset":691,"count":1}],"isBlockCoverage":true},{"functionName":"criaRegistro","ranges":[{"startOffset":702,"endOffset":852,"count":4},{"startOffset":805,"endOffset":847,"count":3}],"isBlockCoverage":true},{"functionName":"atualizaRegistro","ranges":[{"startOffset":858,"endOffset":1049,"count":4},{"startOffset":1002,"endOffset":1044,"count":3}],"isBlockCoverage":true},{"functionName":"deletaRegistro","ranges":[{"startOffset":1055,"endOffset":1231,"count":1},{"startOffset":1184,"endOffset":1226,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1036","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/services/ProjetoServices.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2893,"count":1}],"isBlockCoverage":true},{"functionName":"ProjetoServices","ranges":[{"startOffset":412,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"buscaProjetoPorId","ranges":[{"startOffset":461,"endOffset":712,"count":0}],"isBlockCoverage":false},{"functionName":"buscaProjetosPorOds","ranges":[{"startOffset":718,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"atualizaProjeto","ranges":[{"startOffset":1289,"endOffset":1440,"count":0}],"isBlockCoverage":false},{"functionName":"atualizaOds","ranges":[{"startOffset":1446,"endOffset":1715,"count":0}],"isBlockCoverage":false},{"functionName":"deletaProjeto","ranges":[{"startOffset":1721,"endOffset":1941,"count":0}],"isBlockCoverage":false},{"functionName":"deletaOds","ranges":[{"startOffset":1947,"endOffset":2119,"count":0}],"isBlockCoverage":false},{"functionName":"criaRelatorioProjetos","ranges":[{"startOffset":2125,"endOffset":2851,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1037","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/utils/escapeRegex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":128,"count":1}],"isBlockCoverage":true},{"functionName":"escapeRegex","ranges":[{"startOffset":0,"endOffset":93,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1038","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/utils/criaRelatorioProjetos.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1674,"count":1}],"isBlockCoverage":true},{"functionName":"criaCabecalhoRelatorio","ranges":[{"startOffset":0,"endOffset":902,"count":0}],"isBlockCoverage":false},{"functionName":"formataLinhaRelatorio","ranges":[{"startOffset":906,"endOffset":1375,"count":0}],"isBlockCoverage":false},{"functionName":"criaRelatorioProjetos","ranges":[{"startOffset":1379,"endOffset":1629,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1039","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/services/OdsServices.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":160,"count":1}],"isBlockCoverage":true},{"functionName":"OdsServices","ranges":[{"startOffset":83,"endOffset":122,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1040","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/services/MidiaServices.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1589,"count":1}],"isBlockCoverage":true},{"functionName":"MidiaServices","ranges":[{"startOffset":153,"endOffset":194,"count":1}],"isBlockCoverage":true},{"functionName":"cadastraMidia","ranges":[{"startOffset":200,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"deletaMidia","ranges":[{"startOffset":790,"endOffset":1162,"count":0}],"isBlockCoverage":false},{"functionName":"deletaMidias","ranges":[{"startOffset":1168,"endOffset":1549,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1041","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":276,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1042","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/decode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":767,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":44,"endOffset":765,"count":14},{"startOffset":90,"endOffset":95,"count":0},{"startOffset":155,"endOffset":171,"count":1},{"startOffset":171,"endOffset":266,"count":13},{"startOffset":266,"endOffset":421,"count":0},{"startOffset":421,"endOffset":745,"count":13},{"startOffset":745,"endOffset":764,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1043","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jws/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":609,"count":1}],"isBlockCoverage":true},{"functionName":"createSign","ranges":[{"startOffset":458,"endOffset":518,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":543,"endOffset":607,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1044","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jws/lib/sign-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2197,"count":1}],"isBlockCoverage":true},{"functionName":"base64url","ranges":[{"startOffset":230,"endOffset":412,"count":26}],"isBlockCoverage":true},{"functionName":"jwsSecuredInput","ranges":[{"startOffset":414,"endOffset":688,"count":13},{"startOffset":490,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"jwsSign","ranges":[{"startOffset":690,"endOffset":1065,"count":13},{"startOffset":805,"endOffset":823,"count":0}],"isBlockCoverage":true},{"functionName":"SignStream","ranges":[{"startOffset":1067,"endOffset":1643,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":1708,"endOffset":2137,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1045","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jws/lib/data-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1242,"count":1}],"isBlockCoverage":true},{"functionName":"DataStream","ranges":[{"startOffset":132,"endOffset":844,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":910,"endOffset":1026,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1056,"endOffset":1210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1046","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jwa/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6501,"count":1}],"isBlockCoverage":true},{"functionName":"checkIsPublicKey","ranges":[{"startOffset":821,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPrivateKey","ranges":[{"startOffset":1407,"endOffset":1632,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsSecretKey","ranges":[{"startOffset":1635,"endOffset":2088,"count":26},{"startOffset":1696,"endOffset":1713,"count":0},{"startOffset":1746,"endOffset":1767,"count":0},{"startOffset":1796,"endOffset":1842,"count":0},{"startOffset":1875,"endOffset":1921,"count":0},{"startOffset":1952,"endOffset":1998,"count":0},{"startOffset":2040,"endOffset":2086,"count":0}],"isBlockCoverage":true},{"functionName":"fromBase64","ranges":[{"startOffset":2090,"endOffset":2211,"count":26}],"isBlockCoverage":true},{"functionName":"toBase64","ranges":[{"startOffset":2213,"endOffset":2491,"count":0}],"isBlockCoverage":false},{"functionName":"typeError","ranges":[{"startOffset":2493,"endOffset":2666,"count":0}],"isBlockCoverage":false},{"functionName":"bufferOrString","ranges":[{"startOffset":2668,"endOffset":2758,"count":26}],"isBlockCoverage":true},{"functionName":"normalizeInput","ranges":[{"startOffset":2760,"endOffset":2875,"count":26},{"startOffset":2827,"endOffset":2857,"count":0}],"isBlockCoverage":true},{"functionName":"createHmacSigner","ranges":[{"startOffset":2877,"endOffset":3163,"count":39}],"isBlockCoverage":true},{"functionName":"sign","ranges":[{"startOffset":2920,"endOffset":3161,"count":26}],"isBlockCoverage":true},{"functionName":"createHmacVerifier","ranges":[{"startOffset":3165,"endOffset":3394,"count":26}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":3210,"endOffset":3392,"count":13}],"isBlockCoverage":true},{"functionName":"createKeySigner","ranges":[{"startOffset":3396,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"createKeyVerifier","ranges":[{"startOffset":3796,"endOffset":4143,"count":0}],"isBlockCoverage":false},{"functionName":"createPSSKeySigner","ranges":[{"startOffset":4145,"endOffset":4588,"count":0}],"isBlockCoverage":false},{"functionName":"createPSSKeyVerifier","ranges":[{"startOffset":4590,"endOffset":5073,"count":0}],"isBlockCoverage":false},{"functionName":"createECDSASigner","ranges":[{"startOffset":5075,"endOffset":5315,"count":0}],"isBlockCoverage":false},{"functionName":"createECDSAVerifer","ranges":[{"startOffset":5317,"endOffset":5608,"count":0}],"isBlockCoverage":false},{"functionName":"createNoneSigner","ranges":[{"startOffset":5610,"endOffset":5687,"count":0}],"isBlockCoverage":false},{"functionName":"createNoneVerifier","ranges":[{"startOffset":5689,"endOffset":5800,"count":0}],"isBlockCoverage":false},{"functionName":"jwa","ranges":[{"startOffset":5819,"endOffset":6499,"count":26},{"startOffset":6275,"endOffset":6325,"count":0},{"startOffset":6349,"endOffset":6360,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1047","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/buffer-equal-constant-time/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1045,"count":1}],"isBlockCoverage":true},{"functionName":"bufferEq","ranges":[{"startOffset":165,"endOffset":671,"count":13},{"startOffset":297,"endOffset":320,"count":0},{"startOffset":512,"endOffset":535,"count":0},{"startOffset":587,"endOffset":651,"count":559}],"isBlockCoverage":true},{"functionName":"bufferEq.install","ranges":[{"startOffset":692,"endOffset":823,"count":0}],"isBlockCoverage":false},{"functionName":"bufferEq.restore","ranges":[{"startOffset":939,"endOffset":1043,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1048","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5009,"count":1}],"isBlockCoverage":true},{"functionName":"base64Url","ranges":[{"startOffset":347,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"signatureAsBuffer","ranges":[{"startOffset":462,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"derToJose","ranges":[{"startOffset":729,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"countPadding","ranges":[{"startOffset":3184,"endOffset":3430,"count":0}],"isBlockCoverage":false},{"functionName":"joseToDer","ranges":[{"startOffset":3432,"endOffset":4940,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1049","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"getParamSize","ranges":[{"startOffset":15,"endOffset":130,"count":3},{"startOffset":103,"endOffset":106,"count":2},{"startOffset":107,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"getParamBytesForAlg","ranges":[{"startOffset":241,"endOffset":416,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1050","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jws/lib/tostring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":262,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":75,"endOffset":260,"count":53},{"startOffset":135,"endOffset":146,"count":27},{"startOffset":146,"endOffset":200,"count":26},{"startOffset":206,"endOffset":228,"count":0},{"startOffset":228,"endOffset":259,"count":26}],"isBlockCoverage":true}]},{"scriptId":"1051","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jws/lib/verify-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3226,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":306,"endOffset":404,"count":26}],"isBlockCoverage":true},{"functionName":"safeJsonParse","ranges":[{"startOffset":406,"endOffset":550,"count":26},{"startOffset":465,"endOffset":478,"count":0},{"startOffset":517,"endOffset":548,"count":0}],"isBlockCoverage":true},{"functionName":"headerFromJWS","ranges":[{"startOffset":552,"endOffset":714,"count":26}],"isBlockCoverage":true},{"functionName":"securedInputFromJWS","ranges":[{"startOffset":716,"endOffset":797,"count":13}],"isBlockCoverage":true},{"functionName":"signatureFromJWS","ranges":[{"startOffset":799,"endOffset":867,"count":26}],"isBlockCoverage":true},{"functionName":"payloadFromJWS","ranges":[{"startOffset":869,"endOffset":1045,"count":13}],"isBlockCoverage":true},{"functionName":"isValidJws","ranges":[{"startOffset":1047,"endOffset":1138,"count":14},{"startOffset":1109,"endOffset":1135,"count":13}],"isBlockCoverage":true},{"functionName":"jwsVerify","ranges":[{"startOffset":1140,"endOffset":1552,"count":13},{"startOffset":1211,"endOffset":1338,"count":0}],"isBlockCoverage":true},{"functionName":"jwsDecode","ranges":[{"startOffset":1554,"endOffset":1988,"count":14},{"startOffset":1603,"endOffset":1608,"count":0},{"startOffset":1671,"endOffset":1683,"count":1},{"startOffset":1683,"endOffset":1743,"count":13},{"startOffset":1743,"endOffset":1755,"count":0},{"startOffset":1755,"endOffset":1824,"count":13},{"startOffset":1824,"endOffset":1836,"count":0},{"startOffset":1842,"endOffset":1987,"count":13}],"isBlockCoverage":true},{"functionName":"VerifyStream","ranges":[{"startOffset":1990,"endOffset":2615,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":2685,"endOffset":3090,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1052","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/verify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8612,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":866,"endOffset":8610,"count":14},{"startOffset":965,"endOffset":977,"count":0},{"startOffset":979,"endOffset":1026,"count":0},{"startOffset":1194,"endOffset":1220,"count":0},{"startOffset":1347,"endOffset":1392,"count":0},{"startOffset":1394,"endOffset":1474,"count":0},{"startOffset":1510,"endOffset":1579,"count":0},{"startOffset":1581,"endOffset":1662,"count":0},{"startOffset":1723,"endOffset":1785,"count":0},{"startOffset":1787,"endOffset":1884,"count":0},{"startOffset":1986,"endOffset":2055,"count":0},{"startOffset":2094,"endOffset":2163,"count":0},{"startOffset":2229,"endOffset":2291,"count":0},{"startOffset":2384,"endOffset":2422,"count":0},{"startOffset":2445,"endOffset":2507,"count":1},{"startOffset":2507,"endOffset":2611,"count":13},{"startOffset":2611,"endOffset":2808,"count":0},{"startOffset":2808,"endOffset":8609,"count":13}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":1239,"endOffset":1311,"count":14},{"startOffset":1276,"endOffset":1286,"count":1},{"startOffset":1286,"endOffset":1310,"count":13}],"isBlockCoverage":true},{"functionName":"getSecret","ranges":[{"startOffset":2834,"endOffset":2928,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2962,"endOffset":8606,"count":13},{"startOffset":3009,"endOffset":3116,"count":0},{"startOffset":3190,"endOffset":3210,"count":0},{"startOffset":3211,"endOffset":3289,"count":0},{"startOffset":3335,"endOffset":3425,"count":0},{"startOffset":3449,"endOffset":3471,"count":0},{"startOffset":3473,"endOffset":3589,"count":0},{"startOffset":3900,"endOffset":3919,"count":0},{"startOffset":3932,"endOffset":4045,"count":0},{"startOffset":4186,"endOffset":4476,"count":0},{"startOffset":4552,"endOffset":4622,"count":0},{"startOffset":4700,"endOffset":4820,"count":0},{"startOffset":4863,"endOffset":4901,"count":0},{"startOffset":4903,"endOffset":5025,"count":0},{"startOffset":5160,"endOffset":5203,"count":0},{"startOffset":5324,"endOffset":5363,"count":0},{"startOffset":5381,"endOffset":5451,"count":0},{"startOffset":5539,"endOffset":5566,"count":0},{"startOffset":5568,"endOffset":5864,"count":0},{"startOffset":5984,"endOffset":6058,"count":0},{"startOffset":6132,"endOffset":6230,"count":0},{"startOffset":6264,"endOffset":6823,"count":0},{"startOffset":6849,"endOffset":7198,"count":0},{"startOffset":7225,"endOffset":7382,"count":0},{"startOffset":7407,"endOffset":7558,"count":0},{"startOffset":7583,"endOffset":7736,"count":0},{"startOffset":7762,"endOffset":8361,"count":0},{"startOffset":8398,"endOffset":8569,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6475,"endOffset":6681,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1053","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/lib/JsonWebTokenError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":428,"count":1}],"isBlockCoverage":true},{"functionName":"JsonWebTokenError","ranges":[{"startOffset":24,"endOffset":265,"count":1},{"startOffset":244,"endOffset":263,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1054","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/lib/NotBeforeError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":362,"count":1}],"isBlockCoverage":true},{"functionName":"NotBeforeError","ranges":[{"startOffset":78,"endOffset":199,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1055","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/lib/TokenExpiredError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":395,"count":1}],"isBlockCoverage":true},{"functionName":"TokenExpiredError","ranges":[{"startOffset":81,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1056","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/lib/timespan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":412,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":42,"endOffset":411,"count":13},{"startOffset":87,"endOffset":119,"count":0},{"startOffset":234,"endOffset":255,"count":0},{"startOffset":315,"endOffset":408,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1057","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":13},{"startOffset":571,"endOffset":791,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":13},{"startOffset":983,"endOffset":1000,"count":0},{"startOffset":1179,"endOffset":1196,"count":0},{"startOffset":1252,"endOffset":1259,"count":0},{"startOffset":1298,"endOffset":1311,"count":0},{"startOffset":1316,"endOffset":1328,"count":0},{"startOffset":1333,"endOffset":1344,"count":0},{"startOffset":1349,"endOffset":1359,"count":0},{"startOffset":1364,"endOffset":1393,"count":0},{"startOffset":1398,"endOffset":1411,"count":0},{"startOffset":1416,"endOffset":1428,"count":0},{"startOffset":1433,"endOffset":1462,"count":0},{"startOffset":1467,"endOffset":1479,"count":0},{"startOffset":1484,"endOffset":1495,"count":0},{"startOffset":1500,"endOffset":1529,"count":0},{"startOffset":1534,"endOffset":1547,"count":0},{"startOffset":1552,"endOffset":1564,"count":0},{"startOffset":1569,"endOffset":1580,"count":0},{"startOffset":1585,"endOffset":1595,"count":0},{"startOffset":1634,"endOffset":1649,"count":0},{"startOffset":1654,"endOffset":1668,"count":0},{"startOffset":1673,"endOffset":1685,"count":0},{"startOffset":1690,"endOffset":1701,"count":0},{"startOffset":1706,"endOffset":1735,"count":0},{"startOffset":1740,"endOffset":1755,"count":0},{"startOffset":1760,"endOffset":1774,"count":0},{"startOffset":1779,"endOffset":1791,"count":0},{"startOffset":1796,"endOffset":1807,"count":0},{"startOffset":1812,"endOffset":1841,"count":0},{"startOffset":1846,"endOffset":1866,"count":0},{"startOffset":1871,"endOffset":1890,"count":0},{"startOffset":1895,"endOffset":1908,"count":0},{"startOffset":1913,"endOffset":1925,"count":0},{"startOffset":1930,"endOffset":1956,"count":0},{"startOffset":1961,"endOffset":1993,"count":0}],"isBlockCoverage":true},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1058","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/lib/validateAsymmetricKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2238,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":458,"endOffset":2237,"count":26},{"startOffset":511,"endOffset":518,"count":0},{"startOffset":584,"endOffset":2235,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1059","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":99,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1060","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":99,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1061","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/lib/psSupported.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":107,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1062","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/jsonwebtoken/sign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9129,"count":1}],"isBlockCoverage":true},{"functionName":"isValid","ranges":[{"startOffset":618,"endOffset":692,"count":13}],"isBlockCoverage":true},{"functionName":"isValid","ranges":[{"startOffset":808,"endOffset":882,"count":0}],"isBlockCoverage":false},{"functionName":"isValid","ranges":[{"startOffset":997,"endOffset":1064,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2339,"endOffset":2886,"count":26},{"startOffset":2434,"endOffset":2518,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2554,"endOffset":2882,"count":39},{"startOffset":2629,"endOffset":2779,"count":26},{"startOffset":2658,"endOffset":2755,"count":0},{"startOffset":2779,"endOffset":2823,"count":13},{"startOffset":2823,"endOffset":2876,"count":0}],"isBlockCoverage":true},{"functionName":"validateOptions","ranges":[{"startOffset":2888,"endOffset":2992,"count":13}],"isBlockCoverage":true},{"functionName":"validatePayload","ranges":[{"startOffset":2994,"endOffset":3102,"count":13}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":3362,"endOffset":9127,"count":13},{"startOffset":3459,"endOffset":3506,"count":0},{"startOffset":3536,"endOffset":3541,"count":0},{"startOffset":3762,"endOffset":3773,"count":0},{"startOffset":3947,"endOffset":3978,"count":0},{"startOffset":3980,"endOffset":4056,"count":0},{"startOffset":4362,"endOffset":4382,"count":0},{"startOffset":4392,"endOffset":4494,"count":0},{"startOffset":4581,"endOffset":4689,"count":0},{"startOffset":4733,"endOffset":5286,"count":0},{"startOffset":5326,"endOffset":5385,"count":0},{"startOffset":5466,"endOffset":5516,"count":0},{"startOffset":5603,"endOffset":5912,"count":0},{"startOffset":5955,"endOffset":5998,"count":0},{"startOffset":6000,"endOffset":6113,"count":0},{"startOffset":6156,"endOffset":6199,"count":0},{"startOffset":6201,"endOffset":6314,"count":0},{"startOffset":6360,"endOffset":6406,"count":0},{"startOffset":6534,"endOffset":6584,"count":0},{"startOffset":6684,"endOffset":6713,"count":0},{"startOffset":6824,"endOffset":7140,"count":0},{"startOffset":7303,"endOffset":7349,"count":0},{"startOffset":7394,"endOffset":7533,"count":0},{"startOffset":8008,"endOffset":8656,"count":0},{"startOffset":8968,"endOffset":8993,"count":0},{"startOffset":8995,"endOffset":9100,"count":0}],"isBlockCoverage":true},{"functionName":"failure","ranges":[{"startOffset":3823,"endOffset":3919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5666,"endOffset":5738,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7581,"endOffset":7918,"count":52},{"startOffset":7686,"endOffset":7914,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8235,"endOffset":8650,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1063","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/utils/token/geraJwt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":270,"count":1}],"isBlockCoverage":true},{"functionName":"geraJwt","ranges":[{"startOffset":40,"endOffset":239,"count":13}],"isBlockCoverage":true}]},{"scriptId":"1064","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/utils/token/verificaJwt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"verificaJwt","ranges":[{"startOffset":96,"endOffset":346,"count":19},{"startOffset":141,"endOffset":154,"count":5},{"startOffset":154,"endOffset":274,"count":14},{"startOffset":274,"endOffset":343,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1065","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/utils/hash/autenticaSenha.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":319,"count":1}],"isBlockCoverage":true},{"functionName":"autenticaSenha","ranges":[{"startOffset":62,"endOffset":281,"count":15}],"isBlockCoverage":true}]},{"scriptId":"1066","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/utils/hash/criaHashComSalt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"criaHashComSalt","ranges":[{"startOffset":124,"endOffset":416,"count":6},{"startOffset":317,"endOffset":413,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1067","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/errors/BadRequestError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1068","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/routes/projetoRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":742,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1069","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/controller/ProjetoController.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4150,"count":1}],"isBlockCoverage":true},{"functionName":"buscaProjetos","ranges":[{"startOffset":319,"endOffset":570,"count":0}],"isBlockCoverage":false},{"functionName":"buscaProjetoPorId","ranges":[{"startOffset":583,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"buscaProjetosPorUsuario","ranges":[{"startOffset":947,"endOffset":1290,"count":0}],"isBlockCoverage":false},{"functionName":"buscaProjetosComFiltro","ranges":[{"startOffset":1303,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"cadastraProjeto","ranges":[{"startOffset":2012,"endOffset":2614,"count":0}],"isBlockCoverage":false},{"functionName":"cadastraMidias","ranges":[{"startOffset":2627,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"atualizaProjeto","ranges":[{"startOffset":3059,"endOffset":3535,"count":0}],"isBlockCoverage":false},{"functionName":"deletaProjeto","ranges":[{"startOffset":3548,"endOffset":3858,"count":0}],"isBlockCoverage":false},{"functionName":"geraRelatorio","ranges":[{"startOffset":3871,"endOffset":4106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1070","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/routes/odsRoutes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":202,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1071","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/controller/OdsController.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":397,"count":1}],"isBlockCoverage":true},{"functionName":"buscaOds","ranges":[{"startOffset":125,"endOffset":357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1072","url":"node:internal/test_runner/reporter/v8-serializer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1503,"count":1}],"isBlockCoverage":false},{"functionName":"v8Reporter","ranges":[{"startOffset":245,"endOffset":1500,"count":1},{"startOffset":478,"endOffset":1497,"count":161},{"startOffset":524,"endOffset":531,"count":36},{"startOffset":557,"endOffset":798,"count":0},{"startOffset":1034,"endOffset":1090,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1073","url":"node:internal/streams/duplexify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8351,"count":1}],"isBlockCoverage":false},{"functionName":"Duplexify","ranges":[{"startOffset":1014,"endOffset":1516,"count":1},{"startOffset":1150,"endOffset":1290,"count":0},{"startOffset":1331,"endOffset":1511,"count":0}],"isBlockCoverage":true},{"functionName":"duplexify","ranges":[{"startOffset":1540,"endOffset":4843,"count":1},{"startOffset":1606,"endOffset":1630,"count":0},{"startOffset":1668,"endOffset":1718,"count":0},{"startOffset":1756,"endOffset":1806,"count":0},{"startOffset":1836,"endOffset":1904,"count":0},{"startOffset":1938,"endOffset":2006,"count":0},{"startOffset":2040,"endOffset":2108,"count":0},{"startOffset":2420,"endOffset":2452,"count":0},{"startOffset":2491,"endOffset":3642,"count":0},{"startOffset":3644,"endOffset":3684,"count":0},{"startOffset":3690,"endOffset":3770,"count":0},{"startOffset":3784,"endOffset":3826,"count":0},{"startOffset":3832,"endOffset":4231,"count":0},{"startOffset":4268,"endOffset":4842,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2595,"endOffset":2730,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2741,"endOffset":2792,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":2959,"endOffset":3205,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4345,"endOffset":4450,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4459,"endOffset":4506,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":4606,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"fromAsyncGen","ranges":[{"startOffset":4848,"endOffset":5780,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5017,"endOffset":5401,"count":1},{"startOffset":5055,"endOffset":5396,"count":162},{"startOffset":5210,"endOffset":5217,"count":1},{"startOffset":5217,"endOffset":5254,"count":161},{"startOffset":5254,"endOffset":5312,"count":0},{"startOffset":5312,"endOffset":5396,"count":161}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":5449,"endOffset":5585,"count":161}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5592,"endOffset":5703,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":5710,"endOffset":5770,"count":0}],"isBlockCoverage":false},{"functionName":"_duplexify","ranges":[{"startOffset":5784,"endOffset":8349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1074","url":"node:cluster","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1405,"count":1}],"isBlockCoverage":false}]},{"scriptId":"1075","url":"node:internal/cluster/primary","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10492,"count":1}],"isBlockCoverage":false},{"functionName":"cluster.setupPrimary","ranges":[{"startOffset":1899,"endOffset":3564,"count":0}],"isBlockCoverage":false},{"functionName":"setupSettingsNT","ranges":[{"startOffset":3666,"endOffset":3741,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerProcess","ranges":[{"startOffset":3745,"endOffset":4572,"count":0}],"isBlockCoverage":false},{"functionName":"removeWorker","ranges":[{"startOffset":4576,"endOffset":4819,"count":0}],"isBlockCoverage":false},{"functionName":"removeHandlesForWorker","ranges":[{"startOffset":4823,"endOffset":4993,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.fork","ranges":[{"startOffset":5012,"endOffset":6679,"count":0}],"isBlockCoverage":false},{"functionName":"emitForkNT","ranges":[{"startOffset":6684,"endOffset":6749,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.disconnect","ranges":[{"startOffset":6774,"endOffset":7160,"count":0}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":7280,"endOffset":7456,"count":0}],"isBlockCoverage":false},{"functionName":"online","ranges":[{"startOffset":7460,"endOffset":7577,"count":0}],"isBlockCoverage":false},{"functionName":"exitedAfterDisconnect","ranges":[{"startOffset":7581,"endOffset":7712,"count":0}],"isBlockCoverage":false},{"functionName":"queryServer","ranges":[{"startOffset":7716,"endOffset":9343,"count":0}],"isBlockCoverage":false},{"functionName":"listening","ranges":[{"startOffset":9347,"endOffset":9639,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":9798,"endOffset":9966,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":9970,"endOffset":10076,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.disconnect","ranges":[{"startOffset":10182,"endOffset":10345,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.destroy","ranges":[{"startOffset":10377,"endOffset":10489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1076","url":"node:internal/cluster/round_robin_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3592,"count":1}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle","ranges":[{"startOffset":392,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.add","ranges":[{"startOffset":1401,"endOffset":2055,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.remove","ranges":[{"startOffset":2096,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.distribute","ranges":[{"startOffset":2520,"endOffset":2954,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.handoff","ranges":[{"startOffset":2996,"endOffset":3589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1077","url":"node:internal/cluster/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1105,"count":1}],"isBlockCoverage":false},{"functionName":"sendHelper","ranges":[{"startOffset":179,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"internal","ranges":[{"startOffset":676,"endOffset":1103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1078","url":"node:internal/cluster/shared_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1147,"count":1}],"isBlockCoverage":false},{"functionName":"SharedHandle","ranges":[{"startOffset":200,"endOffset":694,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.add","ranges":[{"startOffset":727,"endOffset":875,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.remove","ranges":[{"startOffset":912,"endOffset":1144,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1079","url":"node:internal/cluster/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1436,"count":1}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":294,"endOffset":911,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.kill","ranges":[{"startOffset":1051,"endOffset":1114,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.send","ranges":[{"startOffset":1143,"endOffset":1226,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isDead","ranges":[{"startOffset":1257,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isConnected","ranges":[{"startOffset":1384,"endOffset":1433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1080","url":"node:internal/deps/undici/undici","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":509129,"count":1}],"isBlockCoverage":false},{"functionName":"__commonJS","ranges":[{"startOffset":85,"endOffset":226,"count":40}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":98,"endOffset":226,"count":121},{"startOffset":135,"endOffset":209,"count":39}],"isBlockCoverage":true},{"functionName":"lib/core/symbols.js","ranges":[{"startOffset":293,"endOffset":2628,"count":1}],"isBlockCoverage":true},{"functionName":"lib/fetch/symbols.js","ranges":[{"startOffset":2701,"endOffset":2994,"count":1}],"isBlockCoverage":true},{"functionName":"lib/core/errors.js","ranges":[{"startOffset":3063,"endOffset":10491,"count":1}],"isBlockCoverage":true},{"functionName":"UndiciError","ranges":[{"startOffset":3176,"endOffset":3300,"count":2}],"isBlockCoverage":true},{"functionName":"ConnectTimeoutError","ranges":[{"startOffset":3375,"endOffset":3644,"count":0}],"isBlockCoverage":false},{"functionName":"HeadersTimeoutError","ranges":[{"startOffset":3719,"endOffset":3988,"count":0}],"isBlockCoverage":false},{"functionName":"HeadersOverflowError","ranges":[{"startOffset":4064,"endOffset":4337,"count":0}],"isBlockCoverage":false},{"functionName":"BodyTimeoutError","ranges":[{"startOffset":4409,"endOffset":4666,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseStatusCodeError","ranges":[{"startOffset":4745,"endOffset":5193,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidArgumentError","ranges":[{"startOffset":5269,"endOffset":5537,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidReturnValueError","ranges":[{"startOffset":5616,"endOffset":5903,"count":0}],"isBlockCoverage":false},{"functionName":"RequestAbortedError","ranges":[{"startOffset":5978,"endOffset":6224,"count":0}],"isBlockCoverage":false},{"functionName":"InformationalError","ranges":[{"startOffset":6298,"endOffset":6552,"count":0}],"isBlockCoverage":false},{"functionName":"RequestContentLengthMismatchError","ranges":[{"startOffset":6641,"endOffset":6985,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseContentLengthMismatchError","ranges":[{"startOffset":7075,"endOffset":7422,"count":0}],"isBlockCoverage":false},{"functionName":"ClientDestroyedError","ranges":[{"startOffset":7498,"endOffset":7765,"count":0}],"isBlockCoverage":false},{"functionName":"ClientClosedError","ranges":[{"startOffset":7838,"endOffset":8093,"count":0}],"isBlockCoverage":false},{"functionName":"SocketError","ranges":[{"startOffset":8160,"endOffset":8434,"count":2},{"startOffset":8337,"endOffset":8354,"count":0}],"isBlockCoverage":true},{"functionName":"NotSupportedError","ranges":[{"startOffset":8507,"endOffset":8768,"count":0}],"isBlockCoverage":false},{"functionName":"BalancedPoolMissingUpstreamError","ranges":[{"startOffset":8856,"endOffset":9154,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPParserError","ranges":[{"startOffset":9219,"endOffset":9490,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseExceededMaxSizeError","ranges":[{"startOffset":9574,"endOffset":9880,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/util.js","ranges":[{"startOffset":10556,"endOffset":23682,"count":1},{"startOffset":23631,"endOffset":23669,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11074,"endOffset":11090,"count":3}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":11098,"endOffset":11121,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":11127,"endOffset":11270,"count":153},{"startOffset":11170,"endOffset":11196,"count":142},{"startOffset":11197,"endOffset":11230,"count":142},{"startOffset":11231,"endOffset":11262,"count":2}],"isBlockCoverage":true},{"functionName":"isBlobLike","ranges":[{"startOffset":11276,"endOffset":11535,"count":151},{"startOffset":11361,"endOffset":11390,"count":140},{"startOffset":11391,"endOffset":11475,"count":112},{"startOffset":11476,"endOffset":11527,"count":0}],"isBlockCoverage":true},{"functionName":"buildURL","ranges":[{"startOffset":11541,"endOffset":11884,"count":0}],"isBlockCoverage":false},{"functionName":"parseURL","ranges":[{"startOffset":11890,"endOffset":14103,"count":4},{"startOffset":11951,"endOffset":12196,"count":1},{"startOffset":12023,"endOffset":12038,"count":0},{"startOffset":12041,"endOffset":12166,"count":0},{"startOffset":12196,"endOffset":12239,"count":3},{"startOffset":12241,"endOffset":12352,"count":0},{"startOffset":12352,"endOffset":12399,"count":3},{"startOffset":12400,"endOffset":12439,"count":3},{"startOffset":12441,"endOffset":12579,"count":0},{"startOffset":12579,"endOffset":12608,"count":3},{"startOffset":12608,"endOffset":12639,"count":0},{"startOffset":12641,"endOffset":12758,"count":0},{"startOffset":12758,"endOffset":12826,"count":3},{"startOffset":12828,"endOffset":12953,"count":0},{"startOffset":12953,"endOffset":13021,"count":3},{"startOffset":13023,"endOffset":13148,"count":0},{"startOffset":13148,"endOffset":13212,"count":3},{"startOffset":13214,"endOffset":13335,"count":0},{"startOffset":13335,"endOffset":13375,"count":3},{"startOffset":13375,"endOffset":13390,"count":0},{"startOffset":13393,"endOffset":13514,"count":0},{"startOffset":13514,"endOffset":13549,"count":3},{"startOffset":13549,"endOffset":14077,"count":0},{"startOffset":14077,"endOffset":14102,"count":3}],"isBlockCoverage":true},{"functionName":"parseOrigin","ranges":[{"startOffset":14109,"endOffset":14316,"count":4},{"startOffset":14224,"endOffset":14290,"count":0}],"isBlockCoverage":true},{"functionName":"getHostname","ranges":[{"startOffset":14322,"endOffset":14627,"count":0}],"isBlockCoverage":false},{"functionName":"getServerName","ranges":[{"startOffset":14633,"endOffset":14906,"count":39},{"startOffset":14714,"endOffset":14905,"count":0}],"isBlockCoverage":true},{"functionName":"deepClone","ranges":[{"startOffset":14912,"endOffset":14991,"count":2}],"isBlockCoverage":true},{"functionName":"isAsyncIterable","ranges":[{"startOffset":14997,"endOffset":15117,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":15123,"endOffset":15286,"count":84}],"isBlockCoverage":true},{"functionName":"bodyLength","ranges":[{"startOffset":15292,"endOffset":15744,"count":78},{"startOffset":15345,"endOffset":15374,"count":22},{"startOffset":15374,"endOffset":15717,"count":56},{"startOffset":15400,"endOffset":15556,"count":0},{"startOffset":15584,"endOffset":15648,"count":0},{"startOffset":15674,"endOffset":15717,"count":0},{"startOffset":15717,"endOffset":15743,"count":56}],"isBlockCoverage":true},{"functionName":"isDestroyed","ranges":[{"startOffset":15750,"endOffset":15860,"count":2}],"isBlockCoverage":true},{"functionName":"isReadableAborted","ranges":[{"startOffset":15866,"endOffset":16032,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":16038,"endOffset":16602,"count":2},{"startOffset":16126,"endOffset":16153,"count":0},{"startOffset":16283,"endOffset":16329,"count":0},{"startOffset":16369,"endOffset":16508,"count":0},{"startOffset":16548,"endOffset":16595,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16412,"endOffset":16483,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeepAliveTimeout","ranges":[{"startOffset":16659,"endOffset":16817,"count":39},{"startOffset":16803,"endOffset":16809,"count":0}],"isBlockCoverage":true},{"functionName":"parseHeaders","ranges":[{"startOffset":16823,"endOffset":17605,"count":0}],"isBlockCoverage":false},{"functionName":"parseRawHeaders","ranges":[{"startOffset":17611,"endOffset":18520,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":18526,"endOffset":18631,"count":112}],"isBlockCoverage":true},{"functionName":"validateHandler","ranges":[{"startOffset":18637,"endOffset":19875,"count":39},{"startOffset":18742,"endOffset":18822,"count":0},{"startOffset":18875,"endOffset":18954,"count":0},{"startOffset":19005,"endOffset":19082,"count":0},{"startOffset":19169,"endOffset":19249,"count":0},{"startOffset":19294,"endOffset":19442,"count":0},{"startOffset":19504,"endOffset":19587,"count":0},{"startOffset":19639,"endOffset":19719,"count":0},{"startOffset":19775,"endOffset":19859,"count":0}],"isBlockCoverage":true},{"functionName":"isDisturbed","ranges":[{"startOffset":19881,"endOffset":20137,"count":17},{"startOffset":20001,"endOffset":20127,"count":0}],"isBlockCoverage":true},{"functionName":"isErrored","ranges":[{"startOffset":20143,"endOffset":20297,"count":37},{"startOffset":20238,"endOffset":20287,"count":0}],"isBlockCoverage":true},{"functionName":"isReadable","ranges":[{"startOffset":20303,"endOffset":20461,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketInfo","ranges":[{"startOffset":20467,"endOffset":20859,"count":2}],"isBlockCoverage":true},{"functionName":"ReadableStreamFrom","ranges":[{"startOffset":20890,"endOffset":21797,"count":0}],"isBlockCoverage":false},{"functionName":"isFormDataLike","ranges":[{"startOffset":21803,"endOffset":22165,"count":67},{"startOffset":21858,"endOffset":21887,"count":56},{"startOffset":21888,"endOffset":21926,"count":56},{"startOffset":21927,"endOffset":21965,"count":0},{"startOffset":21966,"endOffset":22001,"count":0},{"startOffset":22002,"endOffset":22040,"count":0},{"startOffset":22041,"endOffset":22076,"count":0},{"startOffset":22077,"endOffset":22112,"count":0},{"startOffset":22113,"endOffset":22157,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfAborted","ranges":[{"startOffset":22171,"endOffset":22539,"count":0}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":22605,"endOffset":22828,"count":67},{"startOffset":22712,"endOffset":22827,"count":0}],"isBlockCoverage":true},{"functionName":"lib/fetch/constants.js","ranges":[{"startOffset":23758,"endOffset":27465,"count":1},{"startOffset":26435,"endOffset":26577,"count":0},{"startOffset":26651,"endOffset":27061,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26439,"endOffset":26574,"count":0}],"isBlockCoverage":true},{"functionName":"structuredClone2","ranges":[{"startOffset":26654,"endOffset":27061,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/global.js","ranges":[{"startOffset":27535,"endOffset":28685,"count":1}],"isBlockCoverage":true},{"functionName":"getGlobalOrigin","ranges":[{"startOffset":27663,"endOffset":27738,"count":78}],"isBlockCoverage":true},{"functionName":"setGlobalOrigin","ranges":[{"startOffset":27744,"endOffset":28600,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/util.js","ranges":[{"startOffset":28752,"endOffset":46611,"count":1},{"startOffset":29257,"endOffset":29271,"count":0},{"startOffset":45356,"endOffset":45423,"count":0}],"isBlockCoverage":true},{"functionName":"responseURL","ranges":[{"startOffset":29277,"endOffset":29463,"count":0}],"isBlockCoverage":false},{"functionName":"responseLocationURL","ranges":[{"startOffset":29469,"endOffset":29931,"count":0}],"isBlockCoverage":false},{"functionName":"requestCurrentURL","ranges":[{"startOffset":29937,"endOffset":30040,"count":195}],"isBlockCoverage":true},{"functionName":"requestBadPort","ranges":[{"startOffset":30046,"endOffset":30266,"count":39},{"startOffset":30197,"endOffset":30234,"count":0}],"isBlockCoverage":true},{"functionName":"isErrorLike","ranges":[{"startOffset":30272,"endOffset":30439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidReasonPhrase","ranges":[{"startOffset":30445,"endOffset":30731,"count":39},{"startOffset":30539,"endOffset":30704,"count":0}],"isBlockCoverage":true},{"functionName":"isTokenChar","ranges":[{"startOffset":30737,"endOffset":31029,"count":4350}],"isBlockCoverage":true},{"functionName":"isValidHTTPToken","ranges":[{"startOffset":31035,"endOffset":31379,"count":398},{"startOffset":31133,"endOffset":31166,"count":0},{"startOffset":31218,"endOffset":31352,"count":4350},{"startOffset":31306,"endOffset":31343,"count":0}],"isBlockCoverage":true},{"functionName":"isValidHeaderName","ranges":[{"startOffset":31385,"endOffset":31558,"count":359},{"startOffset":31470,"endOffset":31503,"count":0}],"isBlockCoverage":true},{"functionName":"isValidHeaderValue","ranges":[{"startOffset":31564,"endOffset":31953,"count":359},{"startOffset":31751,"endOffset":31784,"count":0},{"startOffset":31893,"endOffset":31926,"count":0}],"isBlockCoverage":true},{"functionName":"setRequestReferrerPolicyOnRedirect","ranges":[{"startOffset":31959,"endOffset":32556,"count":0}],"isBlockCoverage":false},{"functionName":"crossOriginResourcePolicyCheck","ranges":[{"startOffset":32562,"endOffset":32637,"count":0}],"isBlockCoverage":false},{"functionName":"corsCheck","ranges":[{"startOffset":32643,"endOffset":32697,"count":0}],"isBlockCoverage":false},{"functionName":"TAOCheck","ranges":[{"startOffset":32703,"endOffset":32756,"count":39}],"isBlockCoverage":true},{"functionName":"appendFetchMetadata","ranges":[{"startOffset":32762,"endOffset":32934,"count":39}],"isBlockCoverage":true},{"functionName":"appendRequestOriginHeader","ranges":[{"startOffset":32940,"endOffset":34091,"count":39},{"startOffset":33112,"endOffset":33233,"count":0},{"startOffset":33268,"endOffset":33296,"count":34},{"startOffset":33298,"endOffset":34084,"count":34},{"startOffset":33354,"endOffset":33431,"count":0},{"startOffset":33443,"endOffset":33477,"count":0},{"startOffset":33489,"endOffset":33510,"count":0},{"startOffset":33594,"endOffset":33630,"count":0},{"startOffset":33631,"endOffset":33680,"count":0},{"startOffset":33682,"endOffset":33738,"count":0},{"startOffset":33770,"endOffset":33933,"count":0},{"startOffset":33945,"endOffset":33953,"count":0},{"startOffset":33996,"endOffset":34075,"count":0}],"isBlockCoverage":true},{"functionName":"coarsenedSharedCurrentTime","ranges":[{"startOffset":34097,"endOffset":34206,"count":58}],"isBlockCoverage":true},{"functionName":"createOpaqueTimingInfo","ranges":[{"startOffset":34212,"endOffset":34702,"count":58},{"startOffset":34315,"endOffset":34319,"count":0},{"startOffset":34434,"endOffset":34438,"count":0}],"isBlockCoverage":true},{"functionName":"makePolicyContainer","ranges":[{"startOffset":34708,"endOffset":34832,"count":39}],"isBlockCoverage":true},{"functionName":"clonePolicyContainer","ranges":[{"startOffset":34838,"endOffset":34975,"count":39}],"isBlockCoverage":true},{"functionName":"determineRequestsReferrer","ranges":[{"startOffset":34981,"endOffset":36918,"count":39},{"startOffset":35250,"endOffset":35283,"count":0},{"startOffset":35330,"endOffset":35911,"count":0},{"startOffset":35947,"endOffset":36064,"count":0},{"startOffset":36074,"endOffset":36123,"count":0},{"startOffset":36133,"endOffset":36218,"count":0},{"startOffset":36228,"endOffset":36324,"count":0},{"startOffset":36334,"endOffset":36729,"count":0},{"startOffset":36739,"endOffset":36760,"count":0},{"startOffset":36770,"endOffset":36804,"count":0},{"startOffset":36814,"endOffset":36902,"count":0}],"isBlockCoverage":true},{"functionName":"stripURLForReferrer","ranges":[{"startOffset":36924,"endOffset":37331,"count":0}],"isBlockCoverage":false},{"functionName":"isURLPotentiallyTrustworthy","ranges":[{"startOffset":37337,"endOffset":38332,"count":0}],"isBlockCoverage":false},{"functionName":"bytesMatch","ranges":[{"startOffset":38338,"endOffset":39171,"count":0}],"isBlockCoverage":false},{"functionName":"parseMetadata","ranges":[{"startOffset":39293,"endOffset":39948,"count":0}],"isBlockCoverage":false},{"functionName":"tryUpgradeRequestToAPotentiallyTrustworthyURL","ranges":[{"startOffset":39954,"endOffset":40026,"count":39}],"isBlockCoverage":true},{"functionName":"sameOrigin","ranges":[{"startOffset":40032,"endOffset":40298,"count":39},{"startOffset":40117,"endOffset":40149,"count":0},{"startOffset":40270,"endOffset":40297,"count":0}],"isBlockCoverage":true},{"functionName":"createDeferredPromise","ranges":[{"startOffset":40304,"endOffset":40547,"count":56}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40406,"endOffset":40484,"count":56}],"isBlockCoverage":true},{"functionName":"isAborted","ranges":[{"startOffset":40553,"endOffset":40651,"count":54}],"isBlockCoverage":true},{"functionName":"isCancelled","ranges":[{"startOffset":40657,"endOffset":40806,"count":95}],"isBlockCoverage":true},{"functionName":"normalizeMethod","ranges":[{"startOffset":40812,"endOffset":40953,"count":39},{"startOffset":40937,"endOffset":40945,"count":0}],"isBlockCoverage":true},{"functionName":"serializeJavascriptValueToJSONString","ranges":[{"startOffset":40959,"endOffset":41235,"count":0}],"isBlockCoverage":false},{"functionName":"makeIterator","ranges":[{"startOffset":41341,"endOffset":42225,"count":39}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":41509,"endOffset":42059,"count":39},{"startOffset":41568,"endOffset":41698,"count":0},{"startOffset":41925,"endOffset":42058,"count":0}],"isBlockCoverage":true},{"functionName":"iteratorResult","ranges":[{"startOffset":42231,"endOffset":42620,"count":0}],"isBlockCoverage":false},{"functionName":"fullyReadBody","ranges":[{"startOffset":42626,"endOffset":43060,"count":17},{"startOffset":42937,"endOffset":42998,"count":0}],"isBlockCoverage":true},{"functionName":"successSteps","ranges":[{"startOffset":42716,"endOffset":42767,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42742,"endOffset":42766,"count":17}],"isBlockCoverage":true},{"functionName":"errorSteps","ranges":[{"startOffset":42795,"endOffset":42851,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLike","ranges":[{"startOffset":43119,"endOffset":43403,"count":28},{"startOffset":43187,"endOffset":43261,"count":0},{"startOffset":43309,"endOffset":43395,"count":0}],"isBlockCoverage":true},{"functionName":"isomorphicDecode","ranges":[{"startOffset":43451,"endOffset":43697,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamClose","ranges":[{"startOffset":43703,"endOffset":43929,"count":45},{"startOffset":43797,"endOffset":43922,"count":0}],"isBlockCoverage":true},{"functionName":"isomorphicEncode","ranges":[{"startOffset":43935,"endOffset":44099,"count":28},{"startOffset":44016,"endOffset":44071,"count":58}],"isBlockCoverage":true},{"functionName":"readAllBytes","ranges":[{"startOffset":44105,"endOffset":44769,"count":17},{"startOffset":44243,"endOffset":44762,"count":34},{"startOffset":44369,"endOffset":44438,"count":0},{"startOffset":44458,"endOffset":44584,"count":17},{"startOffset":44584,"endOffset":44688,"count":0},{"startOffset":44688,"endOffset":44762,"count":17}],"isBlockCoverage":true},{"functionName":"urlIsLocal","ranges":[{"startOffset":44775,"endOffset":44965,"count":0}],"isBlockCoverage":false},{"functionName":"urlHasHttpsScheme","ranges":[{"startOffset":44971,"endOffset":45141,"count":39},{"startOffset":45041,"endOffset":45093,"count":0}],"isBlockCoverage":true},{"functionName":"urlIsHttpHttpsScheme","ranges":[{"startOffset":45147,"endOffset":45323,"count":58},{"startOffset":45291,"endOffset":45315,"count":0}],"isBlockCoverage":true},{"functionName":"hasOwn","ranges":[{"startOffset":45360,"endOffset":45422,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/webidl.js","ranges":[{"startOffset":46681,"endOffset":59161,"count":1}],"isBlockCoverage":true},{"functionName":"webidl.errors.exception","ranges":[{"startOffset":46963,"endOffset":47059,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.errors.conversionFailed","ranges":[{"startOffset":47099,"endOffset":47404,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.errors.invalidArgument","ranges":[{"startOffset":47443,"endOffset":47623,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.brandCheck","ranges":[{"startOffset":47650,"endOffset":47900,"count":549},{"startOffset":47697,"endOffset":47705,"count":0},{"startOffset":47738,"endOffset":47800,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.argumentLengthCheck","ranges":[{"startOffset":47936,"endOffset":48200,"count":437},{"startOffset":47994,"endOffset":48193,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.illegalConstructor","ranges":[{"startOffset":48235,"endOffset":48374,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.Type","ranges":[{"startOffset":48400,"endOffset":48937,"count":234},{"startOffset":48450,"endOffset":48498,"count":0},{"startOffset":48508,"endOffset":48552,"count":0},{"startOffset":48562,"endOffset":48604,"count":0},{"startOffset":48614,"endOffset":48656,"count":0},{"startOffset":48666,"endOffset":48708,"count":0},{"startOffset":48718,"endOffset":48760,"count":0},{"startOffset":48770,"endOffset":48786,"count":0},{"startOffset":48840,"endOffset":48882,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.util.ConvertToInt","ranges":[{"startOffset":48971,"endOffset":50891,"count":39},{"startOffset":49094,"endOffset":49291,"count":0},{"startOffset":49413,"endOffset":49534,"count":0},{"startOffset":49581,"endOffset":49607,"count":0},{"startOffset":49647,"endOffset":50237,"count":0},{"startOffset":50290,"endOffset":50507,"count":0},{"startOffset":50546,"endOffset":50564,"count":0},{"startOffset":50634,"endOffset":50663,"count":0},{"startOffset":50777,"endOffset":50811,"count":0},{"startOffset":50813,"endOffset":50867,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.util.IntegerPart","ranges":[{"startOffset":50924,"endOffset":51056,"count":39},{"startOffset":50998,"endOffset":51032,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.sequenceConverter","ranges":[{"startOffset":51090,"endOffset":51881,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51126,"endOffset":51873,"count":39},{"startOffset":51182,"endOffset":51364,"count":0},{"startOffset":51509,"endOffset":51663,"count":0},{"startOffset":51793,"endOffset":51843,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.recordConverter","ranges":[{"startOffset":51913,"endOffset":52936,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51968,"endOffset":52928,"count":39},{"startOffset":52024,"endOffset":52204,"count":0},{"startOffset":52344,"endOffset":52507,"count":51},{"startOffset":52544,"endOffset":52927,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.interfaceConverter","ranges":[{"startOffset":52971,"endOffset":53281,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52999,"endOffset":53273,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.dictionaryConverter","ranges":[{"startOffset":53317,"endOffset":54870,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":53354,"endOffset":54862,"count":78},{"startOffset":53504,"endOffset":53540,"count":0},{"startOffset":53569,"endOffset":53760,"count":0},{"startOffset":53804,"endOffset":54831,"count":663},{"startOffset":53911,"endOffset":54149,"count":0},{"startOffset":54279,"endOffset":54296,"count":78},{"startOffset":54298,"endOffset":54356,"count":78},{"startOffset":54395,"endOffset":54414,"count":585},{"startOffset":54416,"endOffset":54820,"count":184},{"startOffset":54496,"endOffset":54537,"count":0},{"startOffset":54539,"endOffset":54775,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.nullableConverter","ranges":[{"startOffset":54904,"endOffset":55054,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54940,"endOffset":55046,"count":28},{"startOffset":54974,"endOffset":55007,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.converters.DOMString","ranges":[{"startOffset":55091,"endOffset":55364,"count":898},{"startOffset":55138,"endOffset":55169,"count":0},{"startOffset":55171,"endOffset":55201,"count":0},{"startOffset":55236,"endOffset":55332,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.converters.ByteString","ranges":[{"startOffset":55402,"endOffset":55811,"count":898},{"startOffset":55519,"endOffset":55787,"count":14911},{"startOffset":55597,"endOffset":55778,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.converters.boolean","ranges":[{"startOffset":55894,"endOffset":55960,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.any","ranges":[{"startOffset":55991,"endOffset":56028,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.long long","ranges":[{"startOffset":56068,"endOffset":56165,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned long long","ranges":[{"startOffset":56214,"endOffset":56313,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned long","ranges":[{"startOffset":56357,"endOffset":56456,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned short","ranges":[{"startOffset":56501,"endOffset":56612,"count":39}],"isBlockCoverage":true},{"functionName":"webidl.converters.ArrayBuffer","ranges":[{"startOffset":56651,"endOffset":57162,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.TypedArray","ranges":[{"startOffset":57200,"endOffset":57748,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DataView","ranges":[{"startOffset":57784,"endOffset":58278,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BufferSource","ranges":[{"startOffset":58318,"endOffset":58732,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/headers.js","ranges":[{"startOffset":59233,"endOffset":70352,"count":1}],"isBlockCoverage":true},{"functionName":"headerValueNormalize","ranges":[{"startOffset":59733,"endOffset":59969,"count":359},{"startOffset":59888,"endOffset":59889,"count":0}],"isBlockCoverage":true},{"functionName":"fill","ranges":[{"startOffset":59975,"endOffset":60829,"count":78},{"startOffset":60042,"endOffset":60402,"count":39},{"startOffset":60082,"endOffset":60393,"count":0},{"startOffset":60402,"endOffset":60822,"count":39},{"startOffset":60521,"endOffset":60572,"count":51},{"startOffset":60581,"endOffset":60822,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":60853,"endOffset":63261,"count":351}],"isBlockCoverage":true},{"functionName":"HeadersList","ranges":[{"startOffset":60891,"endOffset":61242,"count":351},{"startOffset":60953,"endOffset":61126,"count":117},{"startOffset":61126,"endOffset":61233,"count":234}],"isBlockCoverage":true},{"functionName":"contains","ranges":[{"startOffset":61250,"endOffset":61356,"count":457}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":61364,"endOffset":61489,"count":39}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":61497,"endOffset":62152,"count":546},{"startOffset":61694,"endOffset":61932,"count":0},{"startOffset":62062,"endOffset":62143,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":62160,"endOffset":62443,"count":39},{"startOffset":62316,"endOffset":62363,"count":0}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":62451,"endOffset":62680,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":62688,"endOffset":62854,"count":0}],"isBlockCoverage":false},{"functionName":"HeadersList","ranges":[{"startOffset":62862,"endOffset":62998,"count":39},{"startOffset":62945,"endOffset":62989,"count":0}],"isBlockCoverage":true},{"functionName":"get entries","ranges":[{"startOffset":63006,"endOffset":63254,"count":39},{"startOffset":63159,"endOffset":63209,"count":277}],"isBlockCoverage":true},{"functionName":"Headers","ranges":[{"startOffset":63297,"endOffset":63542,"count":156},{"startOffset":63437,"endOffset":63533,"count":39}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":63550,"endOffset":64492,"count":359},{"startOffset":63887,"endOffset":64061,"count":0},{"startOffset":64099,"endOffset":64268,"count":0},{"startOffset":64312,"endOffset":64369,"count":0},{"startOffset":64415,"endOffset":64427,"count":0}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":64500,"endOffset":65202,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":65210,"endOffset":65660,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":65668,"endOffset":66123,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":66131,"endOffset":67058,"count":0}],"isBlockCoverage":false},{"functionName":"getSetCookie","ranges":[{"startOffset":67066,"endOffset":67265,"count":0}],"isBlockCoverage":false},{"functionName":"Headers","ranges":[{"startOffset":67273,"endOffset":67995,"count":39},{"startOffset":67353,"endOffset":67422,"count":0},{"startOffset":67634,"endOffset":67903,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67504,"endOffset":67534,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":68003,"endOffset":68156,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":68164,"endOffset":68321,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":68329,"endOffset":68491,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":68413,"endOffset":68456,"count":39}],"isBlockCoverage":true},{"functionName":"forEach","ranges":[{"startOffset":68499,"endOffset":68965,"count":0}],"isBlockCoverage":false},{"functionName":"Headers","ranges":[{"startOffset":68973,"endOffset":69107,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.HeadersInit","ranges":[{"startOffset":69782,"endOffset":70265,"count":78},{"startOffset":69876,"endOffset":70043,"count":39},{"startOffset":70043,"endOffset":70264,"count":0}],"isBlockCoverage":true},{"functionName":"node_modules/busboy/lib/utils.js","ranges":[{"startOffset":70434,"endOffset":95305,"count":1}],"isBlockCoverage":true},{"functionName":"parseContentType","ranges":[{"startOffset":70514,"endOffset":71463,"count":0}],"isBlockCoverage":false},{"functionName":"parseContentTypeParams","ranges":[{"startOffset":71469,"endOffset":73974,"count":0}],"isBlockCoverage":false},{"functionName":"parseDisposition","ranges":[{"startOffset":73980,"endOffset":74486,"count":0}],"isBlockCoverage":false},{"functionName":"parseDispositionParams","ranges":[{"startOffset":74492,"endOffset":79099,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":79105,"endOffset":80088,"count":0}],"isBlockCoverage":false},{"functionName":"utf8","ranges":[{"startOffset":80124,"endOffset":80402,"count":0}],"isBlockCoverage":false},{"functionName":"latin1","ranges":[{"startOffset":80419,"endOffset":80612,"count":0}],"isBlockCoverage":false},{"functionName":"utf16le","ranges":[{"startOffset":80630,"endOffset":80844,"count":0}],"isBlockCoverage":false},{"functionName":"base64","ranges":[{"startOffset":80861,"endOffset":81077,"count":0}],"isBlockCoverage":false},{"functionName":"other","ranges":[{"startOffset":81093,"endOffset":81398,"count":0}],"isBlockCoverage":false},{"functionName":"convertToUTF8","ranges":[{"startOffset":81412,"endOffset":81562,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":81568,"endOffset":81967,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/streamsearch/lib/sbmh.js","ranges":[{"startOffset":95391,"endOffset":105912,"count":1}],"isBlockCoverage":true},{"functionName":"memcmp","ranges":[{"startOffset":95476,"endOffset":95670,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH","ranges":[{"startOffset":95702,"endOffset":102131,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":102139,"endOffset":102246,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":102254,"endOffset":102597,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":102605,"endOffset":102779,"count":0}],"isBlockCoverage":false},{"functionName":"feed","ranges":[{"startOffset":102793,"endOffset":105514,"count":0}],"isBlockCoverage":false},{"functionName":"matchNeedle","ranges":[{"startOffset":105520,"endOffset":105878,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/busboy/lib/types/multipart.js","ranges":[{"startOffset":106008,"endOffset":129104,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":106451,"endOffset":106475,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser","ranges":[{"startOffset":106671,"endOffset":106949,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":106957,"endOffset":107204,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":107212,"endOffset":111297,"count":0}],"isBlockCoverage":false},{"functionName":"FileStream","ranges":[{"startOffset":111360,"endOffset":111740,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":111748,"endOffset":111880,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":111926,"endOffset":111952,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":111970,"endOffset":111986,"count":0}],"isBlockCoverage":false},{"functionName":"callAndUnsetCb","ranges":[{"startOffset":112000,"endOffset":112184,"count":0}],"isBlockCoverage":false},{"functionName":"nullDecoder","ranges":[{"startOffset":112190,"endOffset":112249,"count":0}],"isBlockCoverage":false},{"functionName":"Multipart","ranges":[{"startOffset":112303,"endOffset":122449,"count":0}],"isBlockCoverage":false},{"functionName":"detect","ranges":[{"startOffset":122464,"endOffset":122571,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":122579,"endOffset":122741,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":122749,"endOffset":123076,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":123084,"endOffset":123362,"count":0}],"isBlockCoverage":false},{"functionName":"finalcb","ranges":[{"startOffset":123376,"endOffset":123507,"count":0}],"isBlockCoverage":false},{"functionName":"checkEndState","ranges":[{"startOffset":123513,"endOffset":123887,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/busboy/lib/types/urlencoded.js","ranges":[{"startOffset":129202,"endOffset":142391,"count":1}],"isBlockCoverage":true},{"functionName":"URLEncoded","ranges":[{"startOffset":129428,"endOffset":130615,"count":0}],"isBlockCoverage":false},{"functionName":"detect","ranges":[{"startOffset":130630,"endOffset":130751,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":130759,"endOffset":136733,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":136741,"endOffset":137360,"count":0}],"isBlockCoverage":false},{"functionName":"readPctEnc","ranges":[{"startOffset":137374,"endOffset":138509,"count":0}],"isBlockCoverage":false},{"functionName":"skipKeyBytes","ranges":[{"startOffset":138515,"endOffset":139036,"count":0}],"isBlockCoverage":false},{"functionName":"skipValBytes","ranges":[{"startOffset":139042,"endOffset":139514,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/busboy/lib/index.js","ranges":[{"startOffset":142471,"endOffset":144163,"count":1}],"isBlockCoverage":true},{"functionName":"getInstance","ranges":[{"startOffset":142600,"endOffset":143663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":143753,"endOffset":143831,"count":2}],"isBlockCoverage":true},{"functionName":"module2.exports","ranges":[{"startOffset":143857,"endOffset":144157,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/dataURL.js","ranges":[{"startOffset":144235,"endOffset":153619,"count":1}],"isBlockCoverage":true},{"functionName":"dataURLProcessor","ranges":[{"startOffset":144662,"endOffset":145979,"count":0}],"isBlockCoverage":false},{"functionName":"URLSerializer","ranges":[{"startOffset":145985,"endOffset":146273,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePoints","ranges":[{"startOffset":146279,"endOffset":146572,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePointsFast","ranges":[{"startOffset":146578,"endOffset":146948,"count":0}],"isBlockCoverage":false},{"functionName":"stringPercentDecode","ranges":[{"startOffset":146954,"endOffset":147078,"count":0}],"isBlockCoverage":false},{"functionName":"percentDecode","ranges":[{"startOffset":147084,"endOffset":147703,"count":0}],"isBlockCoverage":false},{"functionName":"parseMIMEType","ranges":[{"startOffset":147709,"endOffset":150132,"count":0}],"isBlockCoverage":false},{"functionName":"forgivingBase64","ranges":[{"startOffset":150138,"endOffset":150706,"count":0}],"isBlockCoverage":false},{"functionName":"collectAnHTTPQuotedString","ranges":[{"startOffset":150712,"endOffset":151685,"count":0}],"isBlockCoverage":false},{"functionName":"serializeAMimeType","ranges":[{"startOffset":151691,"endOffset":152255,"count":0}],"isBlockCoverage":false},{"functionName":"isHTTPWhiteSpace","ranges":[{"startOffset":152261,"endOffset":152379,"count":0}],"isBlockCoverage":false},{"functionName":"removeHTTPWhitespace","ranges":[{"startOffset":152385,"endOffset":152790,"count":0}],"isBlockCoverage":false},{"functionName":"isASCIIWhitespace","ranges":[{"startOffset":152796,"endOffset":152932,"count":0}],"isBlockCoverage":false},{"functionName":"removeASCIIWhitespace","ranges":[{"startOffset":152938,"endOffset":153346,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/file.js","ranges":[{"startOffset":153685,"endOffset":159564,"count":1}],"isBlockCoverage":true},{"functionName":"File","ranges":[{"startOffset":154128,"endOffset":155001,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":155009,"endOffset":155105,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":155113,"endOffset":155225,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":155233,"endOffset":155329,"count":0}],"isBlockCoverage":false},{"functionName":"FileLike","ranges":[{"startOffset":155373,"endOffset":155672,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":155680,"endOffset":155805,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":155813,"endOffset":155948,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":155956,"endOffset":156079,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":156087,"endOffset":156208,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":156216,"endOffset":156325,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":156333,"endOffset":156442,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":156450,"endOffset":156550,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":156558,"endOffset":156674,"count":0}],"isBlockCoverage":false},{"functionName":"FileLike","ranges":[{"startOffset":156682,"endOffset":156743,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BlobPart","ranges":[{"startOffset":157073,"endOffset":157449,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultValue","ranges":[{"startOffset":157722,"endOffset":157783,"count":0}],"isBlockCoverage":false},{"functionName":"converter","ranges":[{"startOffset":157964,"endOffset":158193,"count":0}],"isBlockCoverage":false},{"functionName":"processBlobParts","ranges":[{"startOffset":158255,"endOffset":159014,"count":0}],"isBlockCoverage":false},{"functionName":"convertLineEndingsNative","ranges":[{"startOffset":159020,"endOffset":159242,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLike","ranges":[{"startOffset":159248,"endOffset":159504,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/formdata.js","ranges":[{"startOffset":159638,"endOffset":165430,"count":1},{"startOffset":160008,"endOffset":160021,"count":0}],"isBlockCoverage":true},{"functionName":"FormData","ranges":[{"startOffset":160058,"endOffset":160338,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":160346,"endOffset":161064,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":161072,"endOffset":161349,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":161357,"endOffset":161731,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":161739,"endOffset":162036,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":162044,"endOffset":162317,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":162325,"endOffset":163346,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":163354,"endOffset":163532,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":163540,"endOffset":163709,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":163717,"endOffset":163890,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":163898,"endOffset":164367,"count":0}],"isBlockCoverage":false},{"functionName":"makeEntry","ranges":[{"startOffset":164608,"endOffset":165388,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/body.js","ranges":[{"startOffset":165496,"endOffset":179103,"count":1},{"startOffset":166445,"endOffset":166458,"count":0}],"isBlockCoverage":true},{"functionName":"extractBody","ranges":[{"startOffset":166465,"endOffset":171305,"count":28},{"startOffset":166543,"endOffset":166617,"count":0},{"startOffset":166689,"endOffset":166725,"count":0},{"startOffset":166755,"endOffset":166800,"count":0},{"startOffset":167417,"endOffset":170342,"count":0},{"startOffset":170381,"endOffset":170405,"count":0},{"startOffset":170490,"endOffset":171222,"count":0}],"isBlockCoverage":true},{"functionName":"pull","ranges":[{"startOffset":166858,"endOffset":167068,"count":28},{"startOffset":166977,"endOffset":166985,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":167016,"endOffset":167053,"count":28}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":167081,"endOffset":167103,"count":28}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":168066,"endOffset":168143,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeLinefeeds","ranges":[{"startOffset":168181,"endOffset":168226,"count":0}],"isBlockCoverage":false},{"functionName":"action","ranges":[{"startOffset":169481,"endOffset":169701,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":170565,"endOffset":170657,"count":0}],"isBlockCoverage":false},{"functionName":"pull","ranges":[{"startOffset":170670,"endOffset":171089,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":171102,"endOffset":171175,"count":0}],"isBlockCoverage":false},{"functionName":"safelyExtractBody","ranges":[{"startOffset":171311,"endOffset":171719,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBody","ranges":[{"startOffset":171725,"endOffset":172063,"count":0}],"isBlockCoverage":false},{"functionName":"consumeBody","ranges":[{"startOffset":172069,"endOffset":172561,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":172567,"endOffset":172720,"count":17},{"startOffset":172626,"endOffset":172713,"count":0}],"isBlockCoverage":true},{"functionName":"bodyMixinMethods","ranges":[{"startOffset":172726,"endOffset":177278,"count":2}],"isBlockCoverage":true},{"functionName":"blob","ranges":[{"startOffset":172798,"endOffset":173182,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":173193,"endOffset":173347,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":173358,"endOffset":173445,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":173456,"endOffset":173546,"count":17}],"isBlockCoverage":true},{"functionName":"formData","ranges":[{"startOffset":173557,"endOffset":177238,"count":0}],"isBlockCoverage":false},{"functionName":"mixinBody","ranges":[{"startOffset":177284,"endOffset":177394,"count":2}],"isBlockCoverage":true},{"functionName":"specConsumeBody","ranges":[{"startOffset":177400,"endOffset":178185,"count":17},{"startOffset":177603,"endOffset":177663,"count":0},{"startOffset":177994,"endOffset":178078,"count":0}],"isBlockCoverage":true},{"functionName":"errorSteps","ranges":[{"startOffset":177738,"endOffset":177770,"count":0}],"isBlockCoverage":false},{"functionName":"successSteps","ranges":[{"startOffset":177800,"endOffset":177952,"count":17},{"startOffset":177895,"endOffset":177943,"count":0}],"isBlockCoverage":true},{"functionName":"bodyUnusable","ranges":[{"startOffset":178191,"endOffset":178312,"count":17}],"isBlockCoverage":true},{"functionName":"utf8DecodeBytes","ranges":[{"startOffset":178318,"endOffset":178621,"count":17},{"startOffset":178385,"endOffset":178415,"count":0},{"startOffset":178445,"endOffset":178465,"count":0},{"startOffset":178466,"endOffset":178486,"count":0},{"startOffset":178488,"endOffset":178536,"count":0}],"isBlockCoverage":true},{"functionName":"parseJSONFromBytes","ranges":[{"startOffset":178627,"endOffset":178720,"count":17}],"isBlockCoverage":true},{"functionName":"bodyMimeType","ranges":[{"startOffset":178726,"endOffset":178984,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/response.js","ranges":[{"startOffset":179177,"endOffset":192029,"count":1},{"startOffset":180181,"endOffset":180220,"count":0}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":180264,"endOffset":180722,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":180737,"endOffset":181492,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":181507,"endOffset":182607,"count":0}],"isBlockCoverage":false},{"functionName":"Response","ranges":[{"startOffset":182615,"endOffset":183345,"count":39},{"startOffset":182681,"endOffset":182745,"count":0},{"startOffset":183152,"endOffset":183281,"count":0}],"isBlockCoverage":true},{"functionName":"get type","ranges":[{"startOffset":183353,"endOffset":183453,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":183461,"endOffset":183734,"count":0}],"isBlockCoverage":false},{"functionName":"get redirected","ranges":[{"startOffset":183742,"endOffset":183862,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":183870,"endOffset":183974,"count":56}],"isBlockCoverage":true},{"functionName":"get ok","ranges":[{"startOffset":183982,"endOffset":184119,"count":0}],"isBlockCoverage":false},{"functionName":"get statusText","ranges":[{"startOffset":184127,"endOffset":184239,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":184247,"endOffset":184347,"count":0}],"isBlockCoverage":false},{"functionName":"get body","ranges":[{"startOffset":184355,"endOffset":184489,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":184497,"endOffset":184649,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":184657,"endOffset":185441,"count":0}],"isBlockCoverage":false},{"functionName":"cloneResponse","ranges":[{"startOffset":186152,"endOffset":186527,"count":0}],"isBlockCoverage":false},{"functionName":"makeResponse","ranges":[{"startOffset":186533,"endOffset":187026,"count":78},{"startOffset":186897,"endOffset":186932,"count":39},{"startOffset":186933,"endOffset":186952,"count":39},{"startOffset":186985,"endOffset":187004,"count":0}],"isBlockCoverage":true},{"functionName":"makeNetworkError","ranges":[{"startOffset":187032,"endOffset":187339,"count":0}],"isBlockCoverage":false},{"functionName":"makeFilteredResponse","ranges":[{"startOffset":187345,"endOffset":187752,"count":39}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":187521,"endOffset":187601,"count":607},{"startOffset":187567,"endOffset":187577,"count":214},{"startOffset":187578,"endOffset":187589,"count":393}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":187612,"endOffset":187734,"count":95}],"isBlockCoverage":true},{"functionName":"filterResponse","ranges":[{"startOffset":187758,"endOffset":188669,"count":39},{"startOffset":187972,"endOffset":188662,"count":0}],"isBlockCoverage":true},{"functionName":"makeAppropriateNetworkError","ranges":[{"startOffset":188675,"endOffset":188938,"count":0}],"isBlockCoverage":false},{"functionName":"initializeResponse","ranges":[{"startOffset":188944,"endOffset":190229,"count":39},{"startOffset":189073,"endOffset":189179,"count":0},{"startOffset":189302,"endOffset":189368,"count":0},{"startOffset":189645,"endOffset":189668,"count":0},{"startOffset":189670,"endOffset":189729,"count":0},{"startOffset":189747,"endOffset":190222,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.converters.XMLHttpRequestBodyInit","ranges":[{"startOffset":190517,"endOffset":191141,"count":28},{"startOffset":190623,"endOffset":190784,"count":0},{"startOffset":190785,"endOffset":190807,"count":0},{"startOffset":190809,"endOffset":191140,"count":0}],"isBlockCoverage":true},{"functionName":"webidl.converters.BodyInit","ranges":[{"startOffset":191177,"endOffset":191428,"count":28},{"startOffset":191231,"endOffset":191294,"count":0},{"startOffset":191333,"endOffset":191362,"count":0}],"isBlockCoverage":true},{"functionName":"lib/compat/dispatcher-weakref.js","ranges":[{"startOffset":192124,"endOffset":193026,"count":1}],"isBlockCoverage":true},{"functionName":"CompatWeakRef","ranges":[{"startOffset":192291,"endOffset":192349,"count":0}],"isBlockCoverage":false},{"functionName":"deref","ranges":[{"startOffset":192357,"endOffset":192470,"count":0}],"isBlockCoverage":false},{"functionName":"CompatFinalizer","ranges":[{"startOffset":192521,"endOffset":192591,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":192599,"endOffset":192814,"count":0}],"isBlockCoverage":false},{"functionName":"module2.exports","ranges":[{"startOffset":192846,"endOffset":193020,"count":2},{"startOffset":192908,"endOffset":192924,"count":0},{"startOffset":192985,"endOffset":193003,"count":0}],"isBlockCoverage":true},{"functionName":"lib/fetch/request.js","ranges":[{"startOffset":193098,"endOffset":212313,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":194406,"endOffset":194488,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":194525,"endOffset":204255,"count":39},{"startOffset":194587,"endOffset":194618,"count":0},{"startOffset":195375,"endOffset":195488,"count":0},{"startOffset":195546,"endOffset":195674,"count":0},{"startOffset":195779,"endOffset":195914,"count":0},{"startOffset":196086,"endOffset":196123,"count":0},{"startOffset":196125,"endOffset":196173,"count":0},{"startOffset":196208,"endOffset":196296,"count":0},{"startOffset":196328,"endOffset":196373,"count":0},{"startOffset":197252,"endOffset":197309,"count":0},{"startOffset":197683,"endOffset":198154,"count":0},{"startOffset":198200,"endOffset":198269,"count":0},{"startOffset":198324,"endOffset":198365,"count":0},{"startOffset":198450,"endOffset":198619,"count":0},{"startOffset":198734,"endOffset":198797,"count":0},{"startOffset":198834,"endOffset":198885,"count":0},{"startOffset":198934,"endOffset":198967,"count":0},{"startOffset":198969,"endOffset":199073,"count":0},{"startOffset":199113,"endOffset":199170,"count":0},{"startOffset":199210,"endOffset":199235,"count":0},{"startOffset":199237,"endOffset":199304,"count":0},{"startOffset":199345,"endOffset":199413,"count":0},{"startOffset":199537,"endOffset":199629,"count":0},{"startOffset":199700,"endOffset":199792,"count":0},{"startOffset":199927,"endOffset":199972,"count":0},{"startOffset":200161,"endOffset":201299,"count":0},{"startOffset":201528,"endOffset":201762,"count":0},{"startOffset":202060,"endOffset":202186,"count":0},{"startOffset":202321,"endOffset":202341,"count":0},{"startOffset":202382,"endOffset":202402,"count":11},{"startOffset":202404,"endOffset":202462,"count":28},{"startOffset":202464,"endOffset":202558,"count":0},{"startOffset":202621,"endOffset":202927,"count":28},{"startOffset":202837,"endOffset":202916,"count":0},{"startOffset":202970,"endOffset":202982,"count":11},{"startOffset":203021,"endOffset":203054,"count":28},{"startOffset":203056,"endOffset":203489,"count":0},{"startOffset":203562,"endOffset":203582,"count":11},{"startOffset":203584,"endOffset":204206,"count":0}],"isBlockCoverage":true},{"functionName":"get origin","ranges":[{"startOffset":194922,"endOffset":194995,"count":78},{"startOffset":194971,"endOffset":194979,"count":0}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":200604,"endOffset":200768,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":204263,"endOffset":204366,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":204374,"endOffset":204486,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":204494,"endOffset":204593,"count":0}],"isBlockCoverage":false},{"functionName":"get destination","ranges":[{"startOffset":204601,"endOffset":204714,"count":0}],"isBlockCoverage":false},{"functionName":"get referrer","ranges":[{"startOffset":204722,"endOffset":205025,"count":0}],"isBlockCoverage":false},{"functionName":"get referrerPolicy","ranges":[{"startOffset":205033,"endOffset":205152,"count":0}],"isBlockCoverage":false},{"functionName":"get mode","ranges":[{"startOffset":205160,"endOffset":205259,"count":0}],"isBlockCoverage":false},{"functionName":"get credentials","ranges":[{"startOffset":205267,"endOffset":205337,"count":0}],"isBlockCoverage":false},{"functionName":"get cache","ranges":[{"startOffset":205345,"endOffset":205446,"count":0}],"isBlockCoverage":false},{"functionName":"get redirect","ranges":[{"startOffset":205454,"endOffset":205561,"count":0}],"isBlockCoverage":false},{"functionName":"get integrity","ranges":[{"startOffset":205569,"endOffset":205678,"count":0}],"isBlockCoverage":false},{"functionName":"get keepalive","ranges":[{"startOffset":205686,"endOffset":205795,"count":0}],"isBlockCoverage":false},{"functionName":"get isReloadNavigation","ranges":[{"startOffset":205803,"endOffset":205928,"count":0}],"isBlockCoverage":false},{"functionName":"get isHistoryNavigation","ranges":[{"startOffset":205936,"endOffset":206063,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":206071,"endOffset":206168,"count":78}],"isBlockCoverage":true},{"functionName":"get body","ranges":[{"startOffset":206176,"endOffset":206309,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":206317,"endOffset":206468,"count":0}],"isBlockCoverage":false},{"functionName":"get duplex","ranges":[{"startOffset":206476,"endOffset":206566,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":206574,"endOffset":207616,"count":0}],"isBlockCoverage":false},{"functionName":"makeRequest","ranges":[{"startOffset":207655,"endOffset":208974,"count":117},{"startOffset":208838,"endOffset":208873,"count":78},{"startOffset":208874,"endOffset":208893,"count":39}],"isBlockCoverage":true},{"functionName":"cloneRequest","ranges":[{"startOffset":208980,"endOffset":209208,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.RequestInfo","ranges":[{"startOffset":210239,"endOffset":210488,"count":39},{"startOffset":210345,"endOffset":210487,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":211957,"endOffset":212025,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher.js","ranges":[{"startOffset":212385,"endOffset":212804,"count":1}],"isBlockCoverage":true},{"functionName":"dispatch","ranges":[{"startOffset":212546,"endOffset":212612,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":212620,"endOffset":212683,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":212691,"endOffset":212756,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher-base.js","ranges":[{"startOffset":212886,"endOffset":218174,"count":1}],"isBlockCoverage":true},{"functionName":"DispatcherBase","ranges":[{"startOffset":213485,"endOffset":213661,"count":5}],"isBlockCoverage":true},{"functionName":"get destroyed","ranges":[{"startOffset":213669,"endOffset":213729,"count":192}],"isBlockCoverage":true},{"functionName":"get closed","ranges":[{"startOffset":213737,"endOffset":213791,"count":0}],"isBlockCoverage":false},{"functionName":"get interceptors","ranges":[{"startOffset":213799,"endOffset":213865,"count":0}],"isBlockCoverage":false},{"functionName":"set interceptors","ranges":[{"startOffset":213873,"endOffset":214296,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":214304,"endOffset":215471,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":215479,"endOffset":216764,"count":0}],"isBlockCoverage":false},{"functionName":"DispatcherBase","ranges":[{"startOffset":216772,"endOffset":217288,"count":4},{"startOffset":216883,"endOffset":217002,"count":1},{"startOffset":217002,"endOffset":217287,"count":3}],"isBlockCoverage":true},{"functionName":"dispatch","ranges":[{"startOffset":217296,"endOffset":218122,"count":117},{"startOffset":217376,"endOffset":217460,"count":0},{"startOffset":217526,"endOffset":217612,"count":0},{"startOffset":217668,"endOffset":217729,"count":0},{"startOffset":217760,"endOffset":217818,"count":0},{"startOffset":217891,"endOffset":218113,"count":0}],"isBlockCoverage":true},{"functionName":"lib/node/fixed-queue.js","ranges":[{"startOffset":218253,"endOffset":219674,"count":1}],"isBlockCoverage":true},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":218416,"endOffset":218555,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":218563,"endOffset":218625,"count":39}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":218633,"endOffset":218708,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":218716,"endOffset":218816,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":218824,"endOffset":219066,"count":39},{"startOffset":218941,"endOffset":219065,"count":0}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":219124,"endOffset":219208,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":219216,"endOffset":219273,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":219281,"endOffset":219446,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":219454,"endOffset":219661,"count":39},{"startOffset":219584,"endOffset":219630,"count":0}],"isBlockCoverage":true},{"functionName":"lib/pool-stats.js","ranges":[{"startOffset":219746,"endOffset":220464,"count":1}],"isBlockCoverage":true},{"functionName":"PoolStats","ranges":[{"startOffset":219944,"endOffset":220001,"count":1}],"isBlockCoverage":true},{"functionName":"get connected","ranges":[{"startOffset":220009,"endOffset":220076,"count":0}],"isBlockCoverage":false},{"functionName":"get free","ranges":[{"startOffset":220084,"endOffset":220141,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":220149,"endOffset":220212,"count":0}],"isBlockCoverage":false},{"functionName":"get queued","ranges":[{"startOffset":220220,"endOffset":220281,"count":0}],"isBlockCoverage":false},{"functionName":"get running","ranges":[{"startOffset":220289,"endOffset":220352,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":220360,"endOffset":220417,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool-base.js","ranges":[{"startOffset":220534,"endOffset":225800,"count":1}],"isBlockCoverage":true},{"functionName":"PoolBase","ranges":[{"startOffset":221462,"endOffset":222855,"count":1}],"isBlockCoverage":true},{"functionName":"onDrain","ranges":[{"startOffset":221650,"endOffset":222386,"count":39},{"startOffset":221894,"endOffset":222003,"count":0},{"startOffset":222099,"endOffset":222213,"count":0},{"startOffset":222250,"endOffset":222268,"count":0},{"startOffset":222270,"endOffset":222375,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":222316,"endOffset":222332,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase.<computed>","ranges":[{"startOffset":222416,"endOffset":222510,"count":2}],"isBlockCoverage":true},{"functionName":"PoolBase.<computed>","ranges":[{"startOffset":222543,"endOffset":222650,"count":2}],"isBlockCoverage":true},{"functionName":"PoolBase.<computed>","ranges":[{"startOffset":222688,"endOffset":222800,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":222863,"endOffset":222921,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":222929,"endOffset":223036,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":223044,"endOffset":223169,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":223177,"endOffset":223362,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":223370,"endOffset":223543,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":223551,"endOffset":223724,"count":0}],"isBlockCoverage":false},{"functionName":"get stats","ranges":[{"startOffset":223732,"endOffset":223784,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":223792,"endOffset":224061,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":224069,"endOffset":224349,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":224357,"endOffset":224789,"count":39},{"startOffset":224464,"endOffset":224589,"count":0}],"isBlockCoverage":true},{"functionName":"PoolBase","ranges":[{"startOffset":224797,"endOffset":225259,"count":3},{"startOffset":225052,"endOffset":225228,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":225082,"endOffset":225215,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":225267,"endOffset":225638,"count":0}],"isBlockCoverage":false},{"functionName":"lib/timers.js","ranges":[{"startOffset":225864,"endOffset":228008,"count":1}],"isBlockCoverage":true},{"functionName":"onTimeout","ranges":[{"startOffset":226007,"endOffset":226779,"count":2},{"startOffset":226140,"endOffset":226700,"count":79},{"startOffset":226214,"endOffset":226274,"count":2},{"startOffset":226274,"endOffset":226409,"count":77},{"startOffset":226300,"endOffset":226325,"count":0},{"startOffset":226327,"endOffset":226409,"count":0},{"startOffset":226443,"endOffset":226652,"count":77},{"startOffset":226506,"endOffset":226569,"count":75},{"startOffset":226569,"endOffset":226620,"count":2},{"startOffset":226652,"endOffset":226691,"count":2},{"startOffset":226735,"endOffset":226772,"count":1}],"isBlockCoverage":true},{"functionName":"refreshTimeout","ranges":[{"startOffset":226785,"endOffset":227110,"count":2},{"startOffset":226839,"endOffset":226864,"count":1},{"startOffset":226866,"endOffset":227103,"count":1}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":227145,"endOffset":227338,"count":77}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":227346,"endOffset":227575,"count":181},{"startOffset":227390,"endOffset":227541,"count":77},{"startOffset":227457,"endOffset":227483,"count":76},{"startOffset":227485,"endOffset":227530,"count":1}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":227583,"endOffset":227627,"count":77}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":227668,"endOffset":227820,"count":77},{"startOffset":227734,"endOffset":227771,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":227829,"endOffset":227995,"count":79},{"startOffset":227894,"endOffset":227934,"count":77},{"startOffset":227934,"endOffset":227986,"count":2}],"isBlockCoverage":true},{"functionName":"lib/core/request.js","ranges":[{"startOffset":228080,"endOffset":239107,"count":1},{"startOffset":229030,"endOffset":229308,"count":0}],"isBlockCoverage":true},{"functionName":"Request","ranges":[{"startOffset":229343,"endOffset":234404,"count":39},{"startOffset":229649,"endOffset":229729,"count":0},{"startOffset":229755,"endOffset":229818,"count":0},{"startOffset":229819,"endOffset":229842,"count":0},{"startOffset":229844,"endOffset":229953,"count":0},{"startOffset":230001,"endOffset":230080,"count":0},{"startOffset":230122,"endOffset":230204,"count":0},{"startOffset":230249,"endOffset":230330,"count":0},{"startOffset":230352,"endOffset":230382,"count":0},{"startOffset":230384,"endOffset":230467,"count":0},{"startOffset":230504,"endOffset":230563,"count":0},{"startOffset":230565,"endOffset":230646,"count":0},{"startOffset":230680,"endOffset":230733,"count":0},{"startOffset":230735,"endOffset":230813,"count":0},{"startOffset":230841,"endOffset":230870,"count":0},{"startOffset":230872,"endOffset":230944,"count":0},{"startOffset":231143,"endOffset":231184,"count":11},{"startOffset":231184,"endOffset":232023,"count":28},{"startOffset":231215,"endOffset":231256,"count":0},{"startOffset":231287,"endOffset":231353,"count":0},{"startOffset":231389,"endOffset":231516,"count":0},{"startOffset":231555,"endOffset":231634,"count":0},{"startOffset":231670,"endOffset":231745,"count":0},{"startOffset":231806,"endOffset":231830,"count":0},{"startOffset":231873,"endOffset":232023,"count":0},{"startOffset":232156,"endOffset":232184,"count":0},{"startOffset":232310,"endOffset":232322,"count":0},{"startOffset":232374,"endOffset":232384,"count":0},{"startOffset":232429,"endOffset":232436,"count":0},{"startOffset":232600,"endOffset":232875,"count":0},{"startOffset":233022,"endOffset":233123,"count":277},{"startOffset":233134,"endOffset":233257,"count":0},{"startOffset":233303,"endOffset":233944,"count":0},{"startOffset":233976,"endOffset":234003,"count":0},{"startOffset":234004,"endOffset":234016,"count":0},{"startOffset":234018,"endOffset":234132,"count":0},{"startOffset":234328,"endOffset":234395,"count":0}],"isBlockCoverage":true},{"functionName":"onBodySent","ranges":[{"startOffset":234412,"endOffset":234629,"count":28},{"startOffset":234472,"endOffset":234620,"count":0}],"isBlockCoverage":true},{"functionName":"onRequestSent","ranges":[{"startOffset":234637,"endOffset":234780,"count":39},{"startOffset":234702,"endOffset":234771,"count":0}],"isBlockCoverage":true},{"functionName":"onConnect","ranges":[{"startOffset":234788,"endOffset":234930,"count":39}],"isBlockCoverage":true},{"functionName":"onHeaders","ranges":[{"startOffset":234938,"endOffset":235310,"count":39},{"startOffset":235103,"endOffset":235218,"count":0}],"isBlockCoverage":true},{"functionName":"onData","ranges":[{"startOffset":235318,"endOffset":235454,"count":37}],"isBlockCoverage":true},{"functionName":"onUpgrade","ranges":[{"startOffset":235462,"endOffset":235648,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":235656,"endOffset":235931,"count":39},{"startOffset":235790,"endOffset":235869,"count":0}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":235939,"endOffset":236218,"count":0}],"isBlockCoverage":false},{"functionName":"addHeader","ranges":[{"startOffset":236226,"endOffset":236322,"count":0}],"isBlockCoverage":false},{"functionName":"processHeaderValue","ranges":[{"startOffset":236336,"endOffset":236704,"count":246},{"startOffset":236419,"endOffset":236495,"count":0},{"startOffset":236532,"endOffset":236536,"count":0},{"startOffset":236585,"endOffset":236661,"count":0}],"isBlockCoverage":true},{"functionName":"processHeader","ranges":[{"startOffset":236710,"endOffset":239070,"count":277},{"startOffset":236797,"endOffset":236819,"count":0},{"startOffset":236822,"endOffset":236898,"count":0},{"startOffset":236924,"endOffset":236951,"count":0},{"startOffset":237005,"endOffset":237036,"count":0},{"startOffset":237038,"endOffset":237207,"count":0},{"startOffset":237248,"endOffset":237268,"count":184},{"startOffset":237269,"endOffset":237310,"count":39},{"startOffset":237312,"endOffset":237517,"count":31},{"startOffset":237420,"endOffset":237508,"count":0},{"startOffset":237517,"endOffset":239063,"count":246},{"startOffset":237556,"endOffset":237576,"count":39},{"startOffset":237577,"endOffset":237616,"count":39},{"startOffset":237618,"endOffset":237722,"count":39},{"startOffset":237722,"endOffset":239063,"count":207},{"startOffset":237750,"endOffset":237794,"count":0},{"startOffset":237796,"endOffset":237883,"count":0},{"startOffset":237911,"endOffset":237948,"count":39},{"startOffset":237950,"endOffset":238252,"count":0},{"startOffset":238280,"endOffset":238317,"count":39},{"startOffset":238319,"endOffset":238399,"count":0},{"startOffset":238426,"endOffset":238460,"count":0},{"startOffset":238462,"endOffset":238539,"count":0},{"startOffset":238566,"endOffset":238599,"count":39},{"startOffset":238601,"endOffset":238680,"count":0},{"startOffset":238722,"endOffset":238795,"count":0},{"startOffset":238836,"endOffset":238976,"count":0}],"isBlockCoverage":true},{"functionName":"lib/core/connect.js","ranges":[{"startOffset":239178,"endOffset":244512,"count":1},{"startOffset":240504,"endOffset":241231,"count":0}],"isBlockCoverage":true},{"functionName":"WeakSessionCache","ranges":[{"startOffset":239548,"endOffset":240084,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":239763,"endOffset":240071,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":240094,"endOffset":240225,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":240235,"endOffset":240487,"count":0}],"isBlockCoverage":false},{"functionName":"SimpleSessionCache","ranges":[{"startOffset":240570,"endOffset":240728,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":240738,"endOffset":240820,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":240830,"endOffset":241214,"count":0}],"isBlockCoverage":false},{"functionName":"buildConnector","ranges":[{"startOffset":241237,"endOffset":243779,"count":1},{"startOffset":241353,"endOffset":241419,"count":0},{"startOffset":241421,"endOffset":241528,"count":0},{"startOffset":241660,"endOffset":241679,"count":0},{"startOffset":241715,"endOffset":241720,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":241746,"endOffset":243771,"count":2},{"startOffset":241906,"endOffset":242630,"count":0},{"startOffset":242864,"endOffset":242869,"count":0},{"startOffset":242964,"endOffset":242984,"count":0},{"startOffset":243076,"endOffset":243107,"count":0},{"startOffset":243327,"endOffset":243344,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":242531,"endOffset":242617,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":243225,"endOffset":243255,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":243358,"endOffset":243542,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":243556,"endOffset":243736,"count":2},{"startOffset":243625,"endOffset":243725,"count":0}],"isBlockCoverage":true},{"functionName":"setupTimeout","ranges":[{"startOffset":243785,"endOffset":244364,"count":2},{"startOffset":243858,"endOffset":243904,"count":0}],"isBlockCoverage":true},{"functionName":"s1","ranges":[{"startOffset":243876,"endOffset":243894,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":243985,"endOffset":244222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":244248,"endOffset":244356,"count":4}],"isBlockCoverage":true},{"functionName":"onConnectTimeout","ranges":[{"startOffset":244370,"endOffset":244468,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/utils.js","ranges":[{"startOffset":244582,"endOffset":245028,"count":1}],"isBlockCoverage":true},{"functionName":"enumToMap","ranges":[{"startOffset":244743,"endOffset":244986,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":244824,"endOffset":244958,"count":92},{"startOffset":244908,"endOffset":244949,"count":46}],"isBlockCoverage":true},{"functionName":"lib/llhttp/constants.js","ranges":[{"startOffset":245106,"endOffset":256808,"count":1},{"startOffset":253340,"endOffset":253457,"count":26},{"startOffset":254889,"endOffset":254931,"count":128},{"startOffset":255411,"endOffset":255492,"count":224},{"startOffset":255435,"endOffset":255485,"count":223}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":245911,"endOffset":247587,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":247660,"endOffset":247824,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":247895,"endOffset":248483,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":248565,"endOffset":248816,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":248916,"endOffset":251397,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":252864,"endOffset":252983,"count":46},{"startOffset":252902,"endOffset":252976,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":253009,"endOffset":253193,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":255561,"endOffset":255576,"count":224}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":255686,"endOffset":256438,"count":1}],"isBlockCoverage":true},{"functionName":"lib/handler/RedirectHandler.js","ranges":[{"startOffset":256898,"endOffset":262505,"count":1}],"isBlockCoverage":true},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":257315,"endOffset":257406,"count":0}],"isBlockCoverage":false},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":257414,"endOffset":257566,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectHandler","ranges":[{"startOffset":257617,"endOffset":259060,"count":0}],"isBlockCoverage":false},{"functionName":"onConnect","ranges":[{"startOffset":259068,"endOffset":259191,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":259199,"endOffset":259310,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":259318,"endOffset":259381,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaders","ranges":[{"startOffset":259389,"endOffset":260463,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":260471,"endOffset":260600,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":260608,"endOffset":260850,"count":0}],"isBlockCoverage":false},{"functionName":"onBodySent","ranges":[{"startOffset":260858,"endOffset":260980,"count":0}],"isBlockCoverage":false},{"functionName":"parseLocation","ranges":[{"startOffset":260994,"endOffset":261316,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRemoveHeader","ranges":[{"startOffset":261322,"endOffset":261739,"count":0}],"isBlockCoverage":false},{"functionName":"cleanRequestHeaders","ranges":[{"startOffset":261745,"endOffset":262460,"count":0}],"isBlockCoverage":false},{"functionName":"lib/interceptor/redirectInterceptor.js","ranges":[{"startOffset":262607,"endOffset":263357,"count":1}],"isBlockCoverage":true},{"functionName":"createRedirectInterceptor","ranges":[{"startOffset":262747,"endOffset":263302,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":262843,"endOffset":263294,"count":3}],"isBlockCoverage":true},{"functionName":"Intercept","ranges":[{"startOffset":262875,"endOffset":263284,"count":78},{"startOffset":263073,"endOffset":263283,"count":0}],"isBlockCoverage":true},{"functionName":"lib/llhttp/llhttp-wasm.js","ranges":[{"startOffset":263438,"endOffset":338186,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/llhttp_simd-wasm.js","ranges":[{"startOffset":338277,"endOffset":413010,"count":1}],"isBlockCoverage":true},{"functionName":"lib/client.js","ranges":[{"startOffset":413074,"endOffset":462549,"count":1},{"startOffset":415233,"endOffset":415476,"count":0}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":415533,"endOffset":421801,"count":3},{"startOffset":416270,"endOffset":416376,"count":0},{"startOffset":416416,"endOffset":416542,"count":0},{"startOffset":416583,"endOffset":416710,"count":0},{"startOffset":416748,"endOffset":416860,"count":0},{"startOffset":416906,"endOffset":417029,"count":0},{"startOffset":417065,"endOffset":417099,"count":0},{"startOffset":417101,"endOffset":417181,"count":0},{"startOffset":417214,"endOffset":417247,"count":0},{"startOffset":417249,"endOffset":417326,"count":0},{"startOffset":417363,"endOffset":417422,"count":0},{"startOffset":417424,"endOffset":417505,"count":0},{"startOffset":417544,"endOffset":417608,"count":0},{"startOffset":417610,"endOffset":417693,"count":0},{"startOffset":417735,"endOffset":417805,"count":0},{"startOffset":417807,"endOffset":417893,"count":0},{"startOffset":417941,"endOffset":417987,"count":0},{"startOffset":417989,"endOffset":418081,"count":0},{"startOffset":418118,"endOffset":418178,"count":0},{"startOffset":418180,"endOffset":418288,"count":0},{"startOffset":418322,"endOffset":418376,"count":0},{"startOffset":418378,"endOffset":418483,"count":0},{"startOffset":418548,"endOffset":418579,"count":0},{"startOffset":418581,"endOffset":418679,"count":0},{"startOffset":418717,"endOffset":418779,"count":0},{"startOffset":418781,"endOffset":418881,"count":0},{"startOffset":418924,"endOffset":418996,"count":0},{"startOffset":418998,"endOffset":419103,"count":0},{"startOffset":419138,"endOffset":419207,"count":0},{"startOffset":419209,"endOffset":419312,"count":0},{"startOffset":419350,"endOffset":419413,"count":0},{"startOffset":419415,"endOffset":419515,"count":0},{"startOffset":419568,"endOffset":419661,"count":0},{"startOffset":419663,"endOffset":419778,"count":0},{"startOffset":419824,"endOffset":420161,"count":0},{"startOffset":420206,"endOffset":420228,"count":0},{"startOffset":420229,"endOffset":420266,"count":0},{"startOffset":420267,"endOffset":420288,"count":0},{"startOffset":420503,"endOffset":420515,"count":0},{"startOffset":420651,"endOffset":420669,"count":0},{"startOffset":420743,"endOffset":420764,"count":0},{"startOffset":420850,"endOffset":420877,"count":0},{"startOffset":421038,"endOffset":421052,"count":0},{"startOffset":421222,"endOffset":421226,"count":0},{"startOffset":421284,"endOffset":421297,"count":0},{"startOffset":421361,"endOffset":421377,"count":0},{"startOffset":421458,"endOffset":421479,"count":0},{"startOffset":421677,"endOffset":421694,"count":0}],"isBlockCoverage":true},{"functionName":"get pipelining","ranges":[{"startOffset":421809,"endOffset":421871,"count":0}],"isBlockCoverage":false},{"functionName":"set pipelining","ranges":[{"startOffset":421879,"endOffset":421976,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":421984,"endOffset":422068,"count":229}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":422076,"endOffset":422158,"count":270}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":422166,"endOffset":422247,"count":552}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":422255,"endOffset":422367,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":422375,"endOffset":422588,"count":216},{"startOffset":422453,"endOffset":422513,"count":211},{"startOffset":422492,"endOffset":422512,"count":183},{"startOffset":422514,"endOffset":422556,"count":188},{"startOffset":422551,"endOffset":422555,"count":0},{"startOffset":422557,"endOffset":422578,"count":80}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":422596,"endOffset":422680,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":422688,"endOffset":423297,"count":39},{"startOffset":422753,"endOffset":422773,"count":0},{"startOffset":422903,"endOffset":422915,"count":0},{"startOffset":422963,"endOffset":422995,"count":28},{"startOffset":422997,"endOffset":423084,"count":28},{"startOffset":423084,"endOffset":423133,"count":11},{"startOffset":423163,"endOffset":423188,"count":28},{"startOffset":423189,"endOffset":423203,"count":28},{"startOffset":423205,"endOffset":423250,"count":28}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":423305,"endOffset":423525,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":423533,"endOffset":424258,"count":0}],"isBlockCoverage":false},{"functionName":"lazyllhttp","ranges":[{"startOffset":424421,"endOffset":426786,"count":1},{"startOffset":424508,"endOffset":424531,"count":0},{"startOffset":424673,"endOffset":424799,"count":0}],"isBlockCoverage":true},{"functionName":"wasm_on_url","ranges":[{"startOffset":424891,"endOffset":424944,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_status","ranges":[{"startOffset":424973,"endOffset":425240,"count":39}],"isBlockCoverage":true},{"functionName":"wasm_on_message_begin","ranges":[{"startOffset":425276,"endOffset":425409,"count":39}],"isBlockCoverage":true},{"functionName":"wasm_on_header_field","ranges":[{"startOffset":425444,"endOffset":425716,"count":308}],"isBlockCoverage":true},{"functionName":"wasm_on_header_value","ranges":[{"startOffset":425751,"endOffset":426023,"count":308}],"isBlockCoverage":true},{"functionName":"wasm_on_headers_complete","ranges":[{"startOffset":426062,"endOffset":426290,"count":39}],"isBlockCoverage":true},{"functionName":"wasm_on_body","ranges":[{"startOffset":426317,"endOffset":426582,"count":37}],"isBlockCoverage":true},{"functionName":"wasm_on_message_complete","ranges":[{"startOffset":426621,"endOffset":426757,"count":39}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":427134,"endOffset":428058,"count":2}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":428066,"endOffset":428657,"count":116},{"startOffset":428168,"endOffset":428523,"count":77},{"startOffset":428354,"endOffset":428407,"count":0},{"startOffset":428420,"endOffset":428474,"count":0},{"startOffset":428523,"endOffset":428648,"count":39}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":428665,"endOffset":429182,"count":0}],"isBlockCoverage":false},{"functionName":"readMore","ranges":[{"startOffset":429190,"endOffset":429409,"count":41},{"startOffset":429232,"endOffset":429243,"count":80},{"startOffset":429245,"endOffset":429400,"count":80},{"startOffset":429323,"endOffset":429357,"count":41},{"startOffset":429357,"endOffset":429400,"count":39}],"isBlockCoverage":true},{"functionName":"execute","ranges":[{"startOffset":429417,"endOffset":431250,"count":39},{"startOffset":429627,"endOffset":429864,"count":1},{"startOffset":429662,"endOffset":429720,"count":0},{"startOffset":430180,"endOffset":430230,"count":0},{"startOffset":430466,"endOffset":430529,"count":0},{"startOffset":430571,"endOffset":430667,"count":0},{"startOffset":430705,"endOffset":431167,"count":0},{"startOffset":431179,"endOffset":431241,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":431258,"endOffset":431596,"count":2}],"isBlockCoverage":true},{"functionName":"onStatus","ranges":[{"startOffset":431604,"endOffset":431671,"count":39}],"isBlockCoverage":true},{"functionName":"onMessageBegin","ranges":[{"startOffset":431679,"endOffset":431934,"count":39},{"startOffset":431771,"endOffset":431805,"count":0},{"startOffset":431891,"endOffset":431925,"count":0}],"isBlockCoverage":true},{"functionName":"onHeaderField","ranges":[{"startOffset":431942,"endOffset":432228,"count":308},{"startOffset":432082,"endOffset":432180,"count":0}],"isBlockCoverage":true},{"functionName":"onHeaderValue","ranges":[{"startOffset":432236,"endOffset":433003,"count":308},{"startOffset":432395,"endOffset":432493,"count":0},{"startOffset":432569,"endOffset":432617,"count":78},{"startOffset":432619,"endOffset":432676,"count":39},{"startOffset":432676,"endOffset":432955,"count":269},{"startOffset":432704,"endOffset":432752,"count":39},{"startOffset":432754,"endOffset":432812,"count":39},{"startOffset":432812,"endOffset":432955,"count":230},{"startOffset":432840,"endOffset":432892,"count":37},{"startOffset":432894,"endOffset":432955,"count":37}],"isBlockCoverage":true},{"functionName":"trackHeader","ranges":[{"startOffset":433011,"endOffset":433205,"count":616},{"startOffset":433118,"endOffset":433196,"count":0}],"isBlockCoverage":true},{"functionName":"onUpgrade","ranges":[{"startOffset":433213,"endOffset":434508,"count":0}],"isBlockCoverage":false},{"functionName":"onHeadersComplete","ranges":[{"startOffset":434516,"endOffset":437408,"count":39},{"startOffset":434668,"endOffset":434702,"count":0},{"startOffset":434788,"endOffset":434822,"count":0},{"startOffset":434928,"endOffset":435056,"count":0},{"startOffset":435078,"endOffset":435097,"count":0},{"startOffset":435099,"endOffset":435226,"count":0},{"startOffset":435378,"endOffset":435475,"count":0},{"startOffset":435575,"endOffset":435596,"count":0},{"startOffset":435686,"endOffset":435811,"count":0},{"startOffset":435855,"endOffset":435963,"count":0},{"startOffset":435986,"endOffset":436094,"count":0},{"startOffset":436358,"endOffset":436364,"count":0},{"startOffset":436564,"endOffset":436618,"count":0},{"startOffset":436710,"endOffset":436810,"count":0},{"startOffset":436821,"endOffset":436873,"count":0},{"startOffset":437014,"endOffset":437098,"count":0},{"startOffset":437139,"endOffset":437172,"count":0},{"startOffset":437204,"endOffset":437237,"count":0},{"startOffset":437270,"endOffset":437347,"count":0},{"startOffset":437370,"endOffset":437394,"count":0}],"isBlockCoverage":true},{"functionName":"onBody","ranges":[{"startOffset":437416,"endOffset":438332,"count":37},{"startOffset":437532,"endOffset":437566,"count":0},{"startOffset":437915,"endOffset":437963,"count":0},{"startOffset":437965,"endOffset":438068,"count":0},{"startOffset":438169,"endOffset":438227,"count":0},{"startOffset":438239,"endOffset":438323,"count":0}],"isBlockCoverage":true},{"functionName":"onMessageComplete","ranges":[{"startOffset":438340,"endOffset":440187,"count":39},{"startOffset":438507,"endOffset":438542,"count":0},{"startOffset":438544,"endOffset":438578,"count":0},{"startOffset":438601,"endOffset":438632,"count":0},{"startOffset":439083,"endOffset":439114,"count":0},{"startOffset":439171,"endOffset":439215,"count":37},{"startOffset":439217,"endOffset":439326,"count":0},{"startOffset":439393,"endOffset":439464,"count":0},{"startOffset":439551,"endOffset":439723,"count":0},{"startOffset":439751,"endOffset":439871,"count":0},{"startOffset":439896,"endOffset":439921,"count":0},{"startOffset":439923,"endOffset":440043,"count":0},{"startOffset":440133,"endOffset":440178,"count":0}],"isBlockCoverage":true},{"functionName":"onParserTimeout","ranges":[{"startOffset":440201,"endOffset":440942,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketReadable","ranges":[{"startOffset":440948,"endOffset":441053,"count":41}],"isBlockCoverage":true},{"functionName":"onSocketError","ranges":[{"startOffset":441059,"endOffset":441412,"count":2},{"startOffset":441229,"endOffset":441249,"count":0},{"startOffset":441250,"endOffset":441276,"count":0},{"startOffset":441278,"endOffset":441342,"count":0}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":441418,"endOffset":441887,"count":2},{"startOffset":441549,"endOffset":441880,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketEnd","ranges":[{"startOffset":441893,"endOffset":442180,"count":2},{"startOffset":441990,"endOffset":442016,"count":0},{"startOffset":442018,"endOffset":442082,"count":0}],"isBlockCoverage":true},{"functionName":"onSocketClose","ranges":[{"startOffset":442186,"endOffset":443297,"count":2},{"startOffset":442281,"endOffset":442308,"count":0},{"startOffset":442309,"endOffset":442342,"count":0},{"startOffset":442344,"endOffset":442398,"count":0},{"startOffset":442492,"endOffset":442546,"count":0},{"startOffset":442608,"endOffset":442880,"count":0},{"startOffset":442911,"endOffset":442941,"count":0},{"startOffset":442943,"endOffset":443115,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":443303,"endOffset":446986,"count":2},{"startOffset":443500,"endOffset":443687,"count":0},{"startOffset":443773,"endOffset":444100,"count":0},{"startOffset":444605,"endOffset":444731,"count":0},{"startOffset":444762,"endOffset":444856,"count":1},{"startOffset":445490,"endOffset":445858,"count":0},{"startOffset":445925,"endOffset":446956,"count":0}],"isBlockCoverage":true},{"functionName":"socket","ranges":[{"startOffset":444156,"endOffset":444571,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":444404,"endOffset":444558,"count":2},{"startOffset":444446,"endOffset":444490,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":444650,"endOffset":444670,"count":0}],"isBlockCoverage":false},{"functionName":"emitDrain","ranges":[{"startOffset":446992,"endOffset":447111,"count":39}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":447117,"endOffset":447501,"count":110},{"startOffset":447185,"endOffset":447212,"count":0},{"startOffset":447341,"endOffset":447494,"count":0}],"isBlockCoverage":true},{"functionName":"_resume","ranges":[{"startOffset":447507,"endOffset":451041,"count":110},{"startOffset":447560,"endOffset":451034,"count":188},{"startOffset":447593,"endOffset":447667,"count":0},{"startOffset":447704,"endOffset":447721,"count":0},{"startOffset":447723,"endOffset":447833,"count":0},{"startOffset":447895,"endOffset":447915,"count":184},{"startOffset":447917,"endOffset":448887,"count":182},{"startOffset":447955,"endOffset":448105,"count":76},{"startOffset":447990,"endOffset":448005,"count":38},{"startOffset":448007,"endOffset":448092,"count":38},{"startOffset":448105,"endOffset":448223,"count":106},{"startOffset":448130,"endOffset":448143,"count":37},{"startOffset":448145,"endOffset":448223,"count":37},{"startOffset":448260,"endOffset":448443,"count":76},{"startOffset":448325,"endOffset":448430,"count":38},{"startOffset":448443,"endOffset":448876,"count":106},{"startOffset":448474,"endOffset":448509,"count":67},{"startOffset":448511,"endOffset":448876,"count":67},{"startOffset":448579,"endOffset":448863,"count":39},{"startOffset":448720,"endOffset":448745,"count":0},{"startOffset":448916,"endOffset":448963,"count":108},{"startOffset":448963,"endOffset":449207,"count":80},{"startOffset":448999,"endOffset":449207,"count":39},{"startOffset":449022,"endOffset":449123,"count":0},{"startOffset":449207,"endOffset":449245,"count":149},{"startOffset":449245,"endOffset":449276,"count":108},{"startOffset":449276,"endOffset":449331,"count":41},{"startOffset":449331,"endOffset":449335,"count":0},{"startOffset":449338,"endOffset":449369,"count":0},{"startOffset":449369,"endOffset":449480,"count":41},{"startOffset":449480,"endOffset":449525,"count":0},{"startOffset":449527,"endOffset":449849,"count":0},{"startOffset":449849,"endOffset":449884,"count":41},{"startOffset":449884,"endOffset":449915,"count":0},{"startOffset":449915,"endOffset":449938,"count":41},{"startOffset":449938,"endOffset":449997,"count":2},{"startOffset":449997,"endOffset":450047,"count":39},{"startOffset":450048,"endOffset":450065,"count":39},{"startOffset":450066,"endOffset":450086,"count":39},{"startOffset":450088,"endOffset":450119,"count":0},{"startOffset":450119,"endOffset":450154,"count":39},{"startOffset":450154,"endOffset":450176,"count":0},{"startOffset":450178,"endOffset":450209,"count":0},{"startOffset":450209,"endOffset":450244,"count":39},{"startOffset":450244,"endOffset":450296,"count":0},{"startOffset":450298,"endOffset":450329,"count":0},{"startOffset":450329,"endOffset":450371,"count":39},{"startOffset":450371,"endOffset":450409,"count":0},{"startOffset":450411,"endOffset":450707,"count":0},{"startOffset":450707,"endOffset":450742,"count":39},{"startOffset":450742,"endOffset":450812,"count":0},{"startOffset":450814,"endOffset":450845,"count":0},{"startOffset":450845,"endOffset":450901,"count":39},{"startOffset":450903,"endOffset":450949,"count":39},{"startOffset":450949,"endOffset":451025,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":450448,"endOffset":450501,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":450515,"endOffset":450592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":450604,"endOffset":450662,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":451047,"endOffset":454928,"count":39},{"startOffset":451216,"endOffset":451236,"count":33},{"startOffset":451237,"endOffset":451258,"count":8},{"startOffset":451276,"endOffset":451310,"count":28},{"startOffset":451312,"endOffset":451345,"count":0},{"startOffset":451431,"endOffset":451489,"count":28},{"startOffset":451521,"endOffset":451539,"count":11},{"startOffset":451541,"endOffset":451582,"count":8},{"startOffset":451625,"endOffset":451667,"count":31},{"startOffset":451669,"endOffset":451914,"count":0},{"startOffset":452260,"endOffset":452327,"count":0},{"startOffset":452356,"endOffset":452389,"count":0},{"startOffset":452420,"endOffset":452462,"count":0},{"startOffset":452507,"endOffset":452549,"count":0},{"startOffset":452576,"endOffset":452619,"count":0},{"startOffset":452652,"endOffset":452697,"count":0},{"startOffset":452699,"endOffset":452741,"count":0},{"startOffset":452763,"endOffset":452808,"count":0},{"startOffset":452900,"endOffset":452950,"count":0},{"startOffset":453027,"endOffset":453106,"count":0},{"startOffset":453215,"endOffset":453275,"count":0},{"startOffset":453383,"endOffset":453470,"count":0},{"startOffset":453489,"endOffset":453806,"count":11},{"startOffset":453525,"endOffset":453610,"count":3},{"startOffset":453610,"endOffset":453763,"count":8},{"startOffset":453806,"endOffset":454901,"count":28},{"startOffset":453837,"endOffset":454250,"count":0},{"startOffset":454283,"endOffset":454583,"count":0},{"startOffset":454614,"endOffset":454720,"count":0},{"startOffset":454861,"endOffset":454901,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":451994,"endOffset":452248,"count":0}],"isBlockCoverage":false},{"functionName":"writeStream","ranges":[{"startOffset":454934,"endOffset":456803,"count":0}],"isBlockCoverage":false},{"functionName":"writeBlob","ranges":[{"startOffset":456809,"endOffset":457620,"count":0}],"isBlockCoverage":false},{"functionName":"writeIterable","ranges":[{"startOffset":457626,"endOffset":458820,"count":28},{"startOffset":457765,"endOffset":457790,"count":0},{"startOffset":458501,"endOffset":458550,"count":0},{"startOffset":458588,"endOffset":458637,"count":0},{"startOffset":458681,"endOffset":458733,"count":0}],"isBlockCoverage":true},{"functionName":"onDrain","ranges":[{"startOffset":457865,"endOffset":458007,"count":0}],"isBlockCoverage":false},{"functionName":"waitForDrain","ranges":[{"startOffset":458036,"endOffset":458248,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncWriter","ranges":[{"startOffset":458859,"endOffset":459233,"count":28}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":459241,"endOffset":460824,"count":28},{"startOffset":459389,"endOffset":459434,"count":0},{"startOffset":459466,"endOffset":459503,"count":0},{"startOffset":459570,"endOffset":459606,"count":0},{"startOffset":459682,"endOffset":459887,"count":0},{"startOffset":459979,"endOffset":460029,"count":0},{"startOffset":460069,"endOffset":460163,"count":0},{"startOffset":460322,"endOffset":460400,"count":0},{"startOffset":460559,"endOffset":460794,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":460832,"endOffset":462035,"count":28},{"startOffset":461042,"endOffset":461087,"count":0},{"startOffset":461119,"endOffset":461150,"count":0},{"startOffset":461184,"endOffset":461391,"count":0},{"startOffset":461425,"endOffset":461489,"count":0},{"startOffset":461561,"endOffset":461788,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":462043,"endOffset":462299,"count":0}],"isBlockCoverage":false},{"functionName":"errorRequest","ranges":[{"startOffset":462313,"endOffset":462513,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool.js","ranges":[{"startOffset":462609,"endOffset":465441,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":463161,"endOffset":463247,"count":3}],"isBlockCoverage":true},{"functionName":"Pool","ranges":[{"startOffset":463296,"endOffset":464974,"count":1},{"startOffset":463637,"endOffset":463690,"count":0},{"startOffset":463692,"endOffset":463770,"count":0},{"startOffset":463815,"endOffset":463901,"count":0},{"startOffset":463931,"endOffset":463963,"count":0},{"startOffset":463964,"endOffset":463994,"count":0},{"startOffset":463996,"endOffset":464094,"count":0},{"startOffset":464308,"endOffset":464324,"count":0},{"startOffset":464391,"endOffset":464445,"count":0},{"startOffset":464558,"endOffset":464586,"count":0},{"startOffset":464587,"endOffset":464630,"count":0},{"startOffset":464631,"endOffset":464658,"count":0},{"startOffset":464891,"endOffset":464920,"count":0}],"isBlockCoverage":true},{"functionName":"Pool","ranges":[{"startOffset":464982,"endOffset":465399,"count":78},{"startOffset":465118,"endOffset":465160,"count":75},{"startOffset":465160,"endOffset":465194,"count":3},{"startOffset":465194,"endOffset":465239,"count":0},{"startOffset":465241,"endOffset":465398,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":465049,"endOffset":465090,"count":171}],"isBlockCoverage":true},{"functionName":"lib/agent.js","ranges":[{"startOffset":465503,"endOffset":470394,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":466388,"endOffset":466532,"count":1},{"startOffset":466473,"endOffset":466499,"count":0}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":466588,"endOffset":468630,"count":1},{"startOffset":466741,"endOffset":466827,"count":0},{"startOffset":466857,"endOffset":466889,"count":0},{"startOffset":466890,"endOffset":466920,"count":0},{"startOffset":466922,"endOffset":467020,"count":0},{"startOffset":467093,"endOffset":467193,"count":0},{"startOffset":467215,"endOffset":467247,"count":0},{"startOffset":467249,"endOffset":467298,"count":0},{"startOffset":467351,"endOffset":467380,"count":0},{"startOffset":467381,"endOffset":467425,"count":0},{"startOffset":467426,"endOffset":467454,"count":0},{"startOffset":467634,"endOffset":467663,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":467866,"endOffset":468048,"count":1}],"isBlockCoverage":true},{"functionName":"Agent.<computed>","ranges":[{"startOffset":468106,"endOffset":468200,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":468230,"endOffset":468326,"count":2}],"isBlockCoverage":true},{"functionName":"Agent.<computed>","ranges":[{"startOffset":468359,"endOffset":468468,"count":2}],"isBlockCoverage":true},{"functionName":"Agent.<computed>","ranges":[{"startOffset":468506,"endOffset":468620,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":468638,"endOffset":468888,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":468896,"endOffset":469727,"count":39},{"startOffset":469004,"endOffset":469033,"count":0},{"startOffset":469086,"endOffset":469197,"count":0},{"startOffset":469274,"endOffset":469287,"count":38},{"startOffset":469288,"endOffset":469294,"count":1},{"startOffset":469322,"endOffset":469666,"count":1}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":469735,"endOffset":470031,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":470039,"endOffset":470351,"count":0}],"isBlockCoverage":false},{"functionName":"lib/global.js","ranges":[{"startOffset":470459,"endOffset":471323,"count":1}],"isBlockCoverage":true},{"functionName":"setGlobalDispatcher","ranges":[{"startOffset":470770,"endOffset":471141,"count":1},{"startOffset":470867,"endOffset":470957,"count":0}],"isBlockCoverage":true},{"functionName":"getGlobalDispatcher","ranges":[{"startOffset":471147,"endOffset":471230,"count":40}],"isBlockCoverage":true},{"functionName":"lib/fetch/index.js","ranges":[{"startOffset":471391,"endOffset":508557,"count":1}],"isBlockCoverage":true},{"functionName":"Fetch","ranges":[{"startOffset":473462,"endOffset":473682,"count":39}],"isBlockCoverage":true},{"functionName":"terminate","ranges":[{"startOffset":473690,"endOffset":473910,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":473918,"endOffset":474288,"count":0}],"isBlockCoverage":false},{"functionName":"fetch2","ranges":[{"startOffset":474302,"endOffset":476535,"count":39},{"startOffset":474566,"endOffset":474635,"count":0},{"startOffset":474723,"endOffset":474828,"count":0},{"startOffset":474909,"endOffset":474928,"count":0},{"startOffset":474961,"endOffset":475013,"count":0}],"isBlockCoverage":true},{"functionName":"requestObject.signal.addEventListener.once","ranges":[{"startOffset":475202,"endOffset":475405,"count":0}],"isBlockCoverage":false},{"functionName":"handleFetchDone","ranges":[{"startOffset":475455,"endOffset":475511,"count":19}],"isBlockCoverage":true},{"functionName":"processResponse","ranges":[{"startOffset":475544,"endOffset":476302,"count":39},{"startOffset":475589,"endOffset":475620,"count":0},{"startOffset":475652,"endOffset":475768,"count":0},{"startOffset":475809,"endOffset":475934,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeAndReportTiming","ranges":[{"startOffset":476541,"endOffset":477414,"count":19},{"startOffset":476648,"endOffset":476667,"count":0},{"startOffset":476669,"endOffset":476696,"count":0},{"startOffset":476735,"endOffset":476762,"count":0},{"startOffset":476948,"endOffset":476975,"count":0},{"startOffset":477008,"endOffset":477035,"count":0}],"isBlockCoverage":true},{"functionName":"markResourceTiming","ranges":[{"startOffset":477420,"endOffset":477703,"count":19},{"startOffset":477541,"endOffset":477578,"count":0}],"isBlockCoverage":true},{"functionName":"abortFetch","ranges":[{"startOffset":477709,"endOffset":478539,"count":0}],"isBlockCoverage":false},{"functionName":"fetching","ranges":[{"startOffset":478545,"endOffset":480762,"count":39},{"startOffset":479643,"endOffset":479665,"count":28},{"startOffset":479764,"endOffset":479783,"count":0},{"startOffset":479797,"endOffset":479813,"count":0},{"startOffset":480130,"endOffset":480208,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":480648,"endOffset":480715,"count":0}],"isBlockCoverage":false},{"functionName":"mainFetch","ranges":[{"startOffset":480768,"endOffset":484745,"count":39},{"startOffset":480932,"endOffset":480974,"count":0},{"startOffset":480976,"endOffset":481043,"count":0},{"startOffset":481157,"endOffset":481217,"count":0},{"startOffset":482667,"endOffset":482703,"count":0},{"startOffset":482820,"endOffset":482832,"count":0},{"startOffset":482953,"endOffset":483231,"count":0},{"startOffset":483293,"endOffset":483303,"count":0},{"startOffset":483383,"endOffset":483453,"count":0},{"startOffset":483586,"endOffset":483620,"count":0},{"startOffset":483621,"endOffset":483655,"count":0},{"startOffset":483656,"endOffset":483693,"count":0},{"startOffset":483695,"endOffset":483764,"count":0},{"startOffset":483914,"endOffset":484008,"count":2},{"startOffset":484039,"endOffset":484677,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":481526,"endOffset":482631,"count":39},{"startOffset":481689,"endOffset":481723,"count":0},{"startOffset":481724,"endOffset":481788,"count":0},{"startOffset":481905,"endOffset":482630,"count":0}],"isBlockCoverage":true},{"functionName":"processBodyError","ranges":[{"startOffset":484075,"endOffset":484137,"count":0}],"isBlockCoverage":false},{"functionName":"processBody","ranges":[{"startOffset":484322,"endOffset":484591,"count":0}],"isBlockCoverage":false},{"functionName":"schemeFetch","ranges":[{"startOffset":484751,"endOffset":487297,"count":39},{"startOffset":484829,"endOffset":484871,"count":0},{"startOffset":484873,"endOffset":484941,"count":0},{"startOffset":485080,"endOffset":485176,"count":0},{"startOffset":485186,"endOffset":486333,"count":0},{"startOffset":486343,"endOffset":486949,"count":0},{"startOffset":486959,"endOffset":487050,"count":0},{"startOffset":487206,"endOffset":487281,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":487153,"endOffset":487183,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResponse","ranges":[{"startOffset":487303,"endOffset":487537,"count":17},{"startOffset":487446,"endOffset":487530,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":487472,"endOffset":487519,"count":0}],"isBlockCoverage":false},{"functionName":"fetchFinale","ranges":[{"startOffset":487543,"endOffset":489341,"count":39},{"startOffset":487633,"endOffset":487829,"count":0},{"startOffset":488246,"endOffset":488293,"count":2},{"startOffset":488293,"endOffset":488852,"count":37},{"startOffset":488912,"endOffset":489334,"count":0}],"isBlockCoverage":true},{"functionName":"processResponseEndOfBody","ranges":[{"startOffset":487870,"endOffset":488081,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":488007,"endOffset":488059,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":488157,"endOffset":488200,"count":39}],"isBlockCoverage":true},{"functionName":"identityTransformAlgorithm","ranges":[{"startOffset":488345,"endOffset":488418,"count":17}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":488486,"endOffset":488508,"count":37}],"isBlockCoverage":true},{"functionName":"size","ranges":[{"startOffset":488628,"endOffset":488672,"count":37}],"isBlockCoverage":true},{"functionName":"size","ranges":[{"startOffset":488698,"endOffset":488742,"count":0}],"isBlockCoverage":false},{"functionName":"processBody","ranges":[{"startOffset":488943,"endOffset":489021,"count":0}],"isBlockCoverage":false},{"functionName":"processBodyError","ranges":[{"startOffset":489057,"endOffset":489127,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":489193,"endOffset":489216,"count":0}],"isBlockCoverage":false},{"functionName":"httpFetch","ranges":[{"startOffset":489347,"endOffset":490983,"count":39},{"startOffset":489862,"endOffset":489907,"count":0},{"startOffset":489909,"endOffset":489973,"count":0},{"startOffset":490030,"endOffset":490087,"count":0},{"startOffset":490178,"endOffset":490294,"count":0},{"startOffset":490296,"endOffset":490351,"count":0},{"startOffset":490411,"endOffset":490911,"count":0}],"isBlockCoverage":true},{"functionName":"httpRedirectFetch","ranges":[{"startOffset":490989,"endOffset":493419,"count":0}],"isBlockCoverage":false},{"functionName":"httpNetworkOrCacheFetch","ranges":[{"startOffset":493425,"endOffset":498425,"count":39},{"startOffset":493823,"endOffset":493905,"count":0},{"startOffset":494258,"endOffset":494283,"count":28},{"startOffset":494284,"endOffset":494290,"count":11},{"startOffset":494372,"endOffset":494419,"count":11},{"startOffset":494421,"endOffset":494472,"count":3},{"startOffset":494507,"endOffset":494591,"count":28},{"startOffset":494637,"endOffset":494732,"count":31},{"startOffset":494766,"endOffset":494790,"count":28},{"startOffset":494792,"endOffset":494802,"count":0},{"startOffset":494851,"endOffset":494958,"count":0},{"startOffset":495494,"endOffset":495545,"count":0},{"startOffset":495590,"endOffset":495650,"count":0},{"startOffset":495651,"endOffset":495704,"count":0},{"startOffset":495706,"endOffset":495787,"count":0},{"startOffset":495867,"endOffset":496163,"count":0},{"startOffset":496218,"endOffset":496300,"count":0},{"startOffset":496432,"endOffset":496527,"count":0},{"startOffset":496929,"endOffset":496995,"count":0},{"startOffset":497167,"endOffset":497199,"count":34},{"startOffset":497200,"endOffset":497232,"count":34},{"startOffset":497234,"endOffset":497246,"count":17},{"startOffset":497277,"endOffset":497310,"count":0},{"startOffset":497312,"endOffset":497324,"count":0},{"startOffset":497523,"endOffset":497574,"count":0},{"startOffset":497676,"endOffset":497961,"count":0},{"startOffset":497997,"endOffset":498021,"count":0},{"startOffset":498022,"endOffset":498078,"count":0},{"startOffset":498080,"endOffset":498349,"count":0},{"startOffset":498384,"endOffset":498394,"count":0}],"isBlockCoverage":true},{"functionName":"httpNetworkFetch","ranges":[{"startOffset":498431,"endOffset":508435,"count":39},{"startOffset":498583,"endOffset":498629,"count":0},{"startOffset":499229,"endOffset":499236,"count":0},{"startOffset":499286,"endOffset":499296,"count":0},{"startOffset":499376,"endOffset":499414,"count":11},{"startOffset":499416,"endOffset":499496,"count":0},{"startOffset":499528,"endOffset":500645,"count":28},{"startOffset":500786,"endOffset":500879,"count":0},{"startOffset":501102,"endOffset":501332,"count":0},{"startOffset":501552,"endOffset":501626,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":498735,"endOffset":498939,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":499442,"endOffset":499485,"count":0}],"isBlockCoverage":false},{"functionName":"processBodyChunk","ranges":[{"startOffset":499564,"endOffset":499775,"count":28},{"startOffset":499631,"endOffset":499666,"count":0},{"startOffset":499743,"endOffset":499763,"count":0}],"isBlockCoverage":true},{"functionName":"processEndOfBody","ranges":[{"startOffset":499811,"endOffset":500025,"count":28},{"startOffset":499860,"endOffset":499895,"count":0},{"startOffset":499948,"endOffset":500014,"count":0}],"isBlockCoverage":true},{"functionName":"processBodyError","ranges":[{"startOffset":500061,"endOffset":500327,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":500352,"endOffset":500633,"count":28},{"startOffset":500560,"endOffset":500622,"count":0}],"isBlockCoverage":true},{"functionName":"fetchParams.controller.next","ranges":[{"startOffset":500986,"endOffset":501007,"count":54}],"isBlockCoverage":true},{"functionName":"pullAlgorithm","ranges":[{"startOffset":501362,"endOffset":501420,"count":54}],"isBlockCoverage":true},{"functionName":"cancelAlgorithm","ranges":[{"startOffset":501453,"endOffset":501522,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":501679,"endOffset":501774,"count":39}],"isBlockCoverage":true},{"functionName":"pull","ranges":[{"startOffset":501785,"endOffset":501864,"count":54}],"isBlockCoverage":true},{"functionName":"cancel","ranges":[{"startOffset":501875,"endOffset":501950,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":501999,"endOffset":502039,"count":0}],"isBlockCoverage":false},{"functionName":"fetchParams.controller.resume","ranges":[{"startOffset":502184,"endOffset":503421,"count":54},{"startOffset":502402,"endOffset":502440,"count":0},{"startOffset":502467,"endOffset":502475,"count":17},{"startOffset":502476,"endOffset":502483,"count":37},{"startOffset":502498,"endOffset":502733,"count":0},{"startOffset":502767,"endOffset":502925,"count":17},{"startOffset":502925,"endOffset":502984,"count":37},{"startOffset":502985,"endOffset":502989,"count":0},{"startOffset":503017,"endOffset":503106,"count":0},{"startOffset":503106,"endOffset":503218,"count":37},{"startOffset":503218,"endOffset":503302,"count":0},{"startOffset":503302,"endOffset":503401,"count":37}],"isBlockCoverage":true},{"functionName":"onAborted","ranges":[{"startOffset":503430,"endOffset":503986,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":504018,"endOffset":508428,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":504189,"endOffset":508417,"count":39},{"startOffset":504401,"endOffset":504438,"count":0},{"startOffset":504576,"endOffset":504589,"count":0}],"isBlockCoverage":true},{"functionName":"onConnect","ranges":[{"startOffset":504671,"endOffset":505041,"count":39},{"startOffset":504789,"endOffset":504889,"count":0}],"isBlockCoverage":true},{"functionName":"onHeaders","ranges":[{"startOffset":505054,"endOffset":506976,"count":39},{"startOffset":505138,"endOffset":505177,"count":0},{"startOffset":505346,"endOffset":505788,"count":308},{"startOffset":505541,"endOffset":505637,"count":0},{"startOffset":505681,"endOffset":505732,"count":0},{"startOffset":505788,"endOffset":505942,"count":308},{"startOffset":505954,"endOffset":505988,"count":0},{"startOffset":506101,"endOffset":506115,"count":37},{"startOffset":506117,"endOffset":506648,"count":37},{"startOffset":506164,"endOffset":506633,"count":0},{"startOffset":506810,"endOffset":506870,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":505603,"endOffset":505618,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":506845,"endOffset":506869,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":506895,"endOffset":506919,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":506989,"endOffset":507241,"count":37},{"startOffset":507051,"endOffset":507090,"count":0}],"isBlockCoverage":true},{"functionName":"onComplete","ranges":[{"startOffset":507254,"endOffset":507481,"count":39}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":507494,"endOffset":507760,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":507773,"endOffset":508405,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":508648,"endOffset":508816,"count":39},{"startOffset":508738,"endOffset":508813,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1081","url":"node:worker_threads","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":728,"count":1}],"isBlockCoverage":false}]},{"scriptId":"1082","url":"node:internal/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16945,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2562,"endOffset":2589,"count":0}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":3091,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironmentData","ranges":[{"startOffset":3182,"endOffset":3334,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentData","ranges":[{"startOffset":3338,"endOffset":3411,"count":0}],"isBlockCoverage":false},{"functionName":"assignEnvironmentData","ranges":[{"startOffset":3415,"endOffset":3570,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":3613,"endOffset":9519,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9525,"endOffset":10173,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10179,"endOffset":10277,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10283,"endOffset":10456,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10462,"endOffset":11381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11387,"endOffset":11871,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":11877,"endOffset":12026,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":12032,"endOffset":12890,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":12896,"endOffset":13007,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":13013,"endOffset":13130,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":13136,"endOffset":13239,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":13245,"endOffset":13305,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":13311,"endOffset":13373,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":13379,"endOffset":13441,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":13447,"endOffset":13587,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":13593,"endOffset":14113,"count":0}],"isBlockCoverage":false},{"functionName":"InternalWorker","ranges":[{"startOffset":14314,"endOffset":14395,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageSync","ranges":[{"startOffset":14401,"endOffset":14481,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":14488,"endOffset":14820,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":14897,"endOffset":15525,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":15529,"endOffset":15823,"count":0}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":15827,"endOffset":16652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1083","url":"node:util/types","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":67,"count":1}],"isBlockCoverage":false}]},{"scriptId":"1084","url":"node:internal/webstreams/readablestream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":93902,"count":1}],"isBlockCoverage":false},{"functionName":"lazyReadableReleasedError","ranges":[{"startOffset":3077,"endOffset":3436,"count":45},{"startOffset":3138,"endOffset":3171,"count":44},{"startOffset":3171,"endOffset":3435,"count":1}],"isBlockCoverage":true},{"functionName":"lazyReadableReleasingError","ranges":[{"startOffset":3440,"endOffset":3805,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":3850,"endOffset":3942,"count":6}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5431,"endOffset":17586,"count":104}],"isBlockCoverage":false},{"functionName":"ReadableStream","ranges":[{"startOffset":5587,"endOffset":7217,"count":104},{"startOffset":5672,"endOffset":5732,"count":0},{"startOffset":6588,"endOffset":6837,"count":0},{"startOffset":6885,"endOffset":6938,"count":0}],"isBlockCoverage":true},{"functionName":"ReadableStream.<computed>","ranges":[{"startOffset":6134,"endOffset":6142,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7223,"endOffset":7286,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7292,"endOffset":7363,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7369,"endOffset":7442,"count":0}],"isBlockCoverage":false},{"functionName":"get locked","ranges":[{"startOffset":7500,"endOffset":7648,"count":17},{"startOffset":7556,"endOffset":7601,"count":0}],"isBlockCoverage":true},{"functionName":"cancel","ranges":[{"startOffset":7729,"endOffset":8061,"count":0}],"isBlockCoverage":false},{"functionName":"getReader","ranges":[{"startOffset":8177,"endOffset":8756,"count":17},{"startOffset":8254,"endOffset":8299,"count":0},{"startOffset":8554,"endOffset":8755,"count":0}],"isBlockCoverage":true},{"functionName":"pipeThrough","ranges":[{"startOffset":8897,"endOffset":10335,"count":37},{"startOffset":8987,"endOffset":9032,"count":0},{"startOffset":9114,"endOffset":9239,"count":0},{"startOffset":9321,"endOffset":9446,"count":0},{"startOffset":9810,"endOffset":9872,"count":0},{"startOffset":9921,"endOffset":9991,"count":0},{"startOffset":10042,"endOffset":10112,"count":0}],"isBlockCoverage":true},{"functionName":"pipeTo","ranges":[{"startOffset":10471,"endOffset":11589,"count":0}],"isBlockCoverage":false},{"functionName":"tee","ranges":[{"startOffset":11643,"endOffset":11786,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11906,"endOffset":16038,"count":28},{"startOffset":11980,"endOffset":12025,"count":0}],"isBlockCoverage":true},{"functionName":"nextSteps","ranges":[{"startOffset":12649,"endOffset":13621,"count":56},{"startOffset":12698,"endOffset":12754,"count":0},{"startOffset":12805,"endOffset":12952,"count":0}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultReaderRead","ranges":[{"startOffset":13061,"endOffset":13180,"count":28}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultReaderRead","ranges":[{"startOffset":13191,"endOffset":13387,"count":28}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultReaderRead","ranges":[{"startOffset":13398,"endOffset":13571,"count":0}],"isBlockCoverage":false},{"functionName":"returnSteps","ranges":[{"startOffset":13629,"endOffset":14461,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":15122,"endOffset":15730,"count":56},{"startOffset":15486,"endOffset":15564,"count":28},{"startOffset":15606,"endOffset":15670,"count":28},{"startOffset":15671,"endOffset":15695,"count":28}],"isBlockCoverage":true},{"functionName":"return","ranges":[{"startOffset":15741,"endOffset":15957,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectSetPrototypeOf","ranges":[{"startOffset":15968,"endOffset":16008,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16044,"endOffset":16358,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16364,"endOffset":17172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17178,"endOffset":17361,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17367,"endOffset":17583,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredReadableStream","ranges":[{"startOffset":18096,"endOffset":18605,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredReadableStream.<computed>","ranges":[{"startOffset":18659,"endOffset":18667,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":18672,"endOffset":20738,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableStreamBYOBRequest","ranges":[{"startOffset":21009,"endOffset":21293,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultReadRequest","ranges":[{"startOffset":21327,"endOffset":21392,"count":34}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21398,"endOffset":21473,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21479,"endOffset":21559,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21565,"endOffset":21622,"count":0}],"isBlockCoverage":false},{"functionName":"get promise","ranges":[{"startOffset":21628,"endOffset":21674,"count":34}],"isBlockCoverage":true},{"functionName":"ReadIntoRequest","ranges":[{"startOffset":21708,"endOffset":21773,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21779,"endOffset":21854,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21860,"endOffset":21934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21940,"endOffset":21997,"count":0}],"isBlockCoverage":false},{"functionName":"get promise","ranges":[{"startOffset":22003,"endOffset":22049,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":22056,"endOffset":24344,"count":82}],"isBlockCoverage":false},{"functionName":"ReadableStreamDefaultReader","ranges":[{"startOffset":22192,"endOffset":22575,"count":82},{"startOffset":22257,"endOffset":22324,"count":0}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":22675,"endOffset":23137,"count":34},{"startOffset":22738,"endOffset":22812,"count":0},{"startOffset":22857,"endOffset":22991,"count":0}],"isBlockCoverage":true},{"functionName":"releaseLock","ranges":[{"startOffset":23143,"endOffset":23382,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":23446,"endOffset":23634,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":23713,"endOffset":24103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24109,"endOffset":24341,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":24643,"endOffset":27797,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":28090,"endOffset":29343,"count":0}],"isBlockCoverage":false},{"functionName":"get desiredSize","ranges":[{"startOffset":28302,"endOffset":28391,"count":37}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":28397,"endOffset":28604,"count":45},{"startOffset":28480,"endOffset":28550,"count":0}],"isBlockCoverage":true},{"functionName":"enqueue","ranges":[{"startOffset":28651,"endOffset":28886,"count":65},{"startOffset":28753,"endOffset":28823,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29126,"endOffset":29219,"count":116}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29225,"endOffset":29240,"count":45}],"isBlockCoverage":true},{"functionName":"createReadableStreamDefaultController","ranges":[{"startOffset":29651,"endOffset":29893,"count":104}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29735,"endOffset":29836,"count":104}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":29897,"endOffset":33210,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableByteStreamController","ranges":[{"startOffset":33549,"endOffset":33782,"count":0}],"isBlockCoverage":false},{"functionName":"createTeeReadableStream","ranges":[{"startOffset":33786,"endOffset":34635,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamPipeTo","ranges":[{"startOffset":35083,"endOffset":40855,"count":37},{"startOffset":35491,"endOffset":35545,"count":0},{"startOffset":35646,"endOffset":35783,"count":0},{"startOffset":39456,"endOffset":39674,"count":0},{"startOffset":40544,"endOffset":40823,"count":0}],"isBlockCoverage":true},{"functionName":"finalize","ranges":[{"startOffset":36017,"endOffset":36310,"count":17},{"startOffset":36190,"endOffset":36220,"count":0},{"startOffset":36247,"endOffset":36269,"count":0}],"isBlockCoverage":true},{"functionName":"waitForCurrentWrite","ranges":[{"startOffset":36316,"endOffset":36479,"count":17},{"startOffset":36446,"endOffset":36474,"count":0}],"isBlockCoverage":true},{"functionName":"shutdownWithAnAction","ranges":[{"startOffset":36485,"endOffset":37053,"count":17},{"startOffset":36573,"endOffset":36580,"count":0},{"startOffset":36853,"endOffset":37052,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36797,"endOffset":36829,"count":0}],"isBlockCoverage":false},{"functionName":"complete","ranges":[{"startOffset":36878,"endOffset":37048,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36957,"endOffset":36996,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37007,"endOffset":37039,"count":0}],"isBlockCoverage":false},{"functionName":"shutdown","ranges":[{"startOffset":37059,"endOffset":37459,"count":0}],"isBlockCoverage":false},{"functionName":"abortAlgorithm","ranges":[{"startOffset":37465,"endOffset":38403,"count":0}],"isBlockCoverage":false},{"functionName":"watchErrored","ranges":[{"startOffset":38409,"endOffset":38617,"count":74},{"startOffset":38510,"endOffset":38545,"count":0}],"isBlockCoverage":true},{"functionName":"watchClosed","ranges":[{"startOffset":38623,"endOffset":38802,"count":37},{"startOffset":38722,"endOffset":38731,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38787,"endOffset":38795,"count":0}],"isBlockCoverage":false},{"functionName":"step","ranges":[{"startOffset":38808,"endOffset":39323,"count":74},{"startOffset":38862,"endOffset":38874,"count":0},{"startOffset":38915,"endOffset":39322,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38940,"endOffset":39316,"count":54}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultReaderRead","ranges":[{"startOffset":39042,"endOffset":39224,"count":37}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultReaderRead","ranges":[{"startOffset":39247,"endOffset":39266,"count":17}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":39329,"endOffset":39424,"count":37},{"startOffset":39417,"endOffset":39418,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39762,"endOffset":39957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40014,"endOffset":40213,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40271,"endOffset":40447,"count":17},{"startOffset":40425,"endOffset":40446,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40350,"endOffset":40416,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40711,"endOffset":40752,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamTee","ranges":[{"startOffset":40859,"endOffset":41092,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultTee","ranges":[{"startOffset":41096,"endOffset":43986,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamTee","ranges":[{"startOffset":43990,"endOffset":52176,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerConvertPullIntoDescriptor","ranges":[{"startOffset":52180,"endOffset":52656,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLocked","ranges":[{"startOffset":52660,"endOffset":52751,"count":526}],"isBlockCoverage":true},{"functionName":"readableStreamCancel","ranges":[{"startOffset":52755,"endOffset":53496,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamClose","ranges":[{"startOffset":53500,"endOffset":54002,"count":62},{"startOffset":53745,"endOffset":53752,"count":0},{"startOffset":53914,"endOffset":53955,"count":34}],"isBlockCoverage":true},{"functionName":"readableStreamError","ranges":[{"startOffset":54006,"endOffset":54911,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamHasDefaultReader","ranges":[{"startOffset":54915,"endOffset":55167,"count":434},{"startOffset":55048,"endOffset":55061,"count":0}],"isBlockCoverage":true},{"functionName":"readableStreamGetNumReadRequests","ranges":[{"startOffset":55171,"endOffset":55337,"count":230}],"isBlockCoverage":true},{"functionName":"readableStreamHasBYOBReader","ranges":[{"startOffset":55341,"endOffset":55587,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamGetNumReadIntoRequests","ranges":[{"startOffset":55591,"endOffset":55762,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFulfillReadRequest","ranges":[{"startOffset":55766,"endOffset":56375,"count":54},{"startOffset":56309,"endOffset":56331,"count":0}],"isBlockCoverage":true},{"functionName":"readableStreamFulfillReadIntoRequest","ranges":[{"startOffset":56379,"endOffset":56772,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamAddReadRequest","ranges":[{"startOffset":56776,"endOffset":57018,"count":88}],"isBlockCoverage":true},{"functionName":"readableStreamAddReadIntoRequest","ranges":[{"startOffset":57022,"endOffset":57287,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericCancel","ranges":[{"startOffset":57291,"endOffset":57482,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericInitialize","ranges":[{"startOffset":57486,"endOffset":58174,"count":82},{"startOffset":57752,"endOffset":57915,"count":0},{"startOffset":57921,"endOffset":58166,"count":0}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultReaderRelease","ranges":[{"startOffset":58178,"endOffset":58384,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderErrorReadRequests","ranges":[{"startOffset":58388,"endOffset":58613,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderRelease","ranges":[{"startOffset":58617,"endOffset":58821,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderErrorReadIntoRequests","ranges":[{"startOffset":58825,"endOffset":59063,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericRelease","ranges":[{"startOffset":59067,"endOffset":59744,"count":45},{"startOffset":59351,"endOffset":59413,"count":0}],"isBlockCoverage":true},{"functionName":"readableStreamBYOBReaderRead","ranges":[{"startOffset":59748,"endOffset":60165,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderRead","ranges":[{"startOffset":60169,"endOffset":60622,"count":144},{"startOffset":60389,"endOffset":60447,"count":28},{"startOffset":60453,"endOffset":60538,"count":0},{"startOffset":60544,"endOffset":60614,"count":116}],"isBlockCoverage":true},{"functionName":"setupReadableStreamBYOBReader","ranges":[{"startOffset":60626,"endOffset":61079,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultReader","ranges":[{"startOffset":61083,"endOffset":61351,"count":82},{"startOffset":61187,"endOffset":61253,"count":0}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultControllerClose","ranges":[{"startOffset":61355,"endOffset":61711,"count":62},{"startOffset":61490,"endOffset":61497,"count":0},{"startOffset":61584,"endOffset":61708,"count":34}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultControllerEnqueue","ranges":[{"startOffset":61715,"endOffset":62485,"count":82},{"startOffset":61859,"endOffset":61866,"count":0},{"startOffset":61960,"endOffset":62010,"count":54},{"startOffset":62012,"endOffset":62079,"count":54},{"startOffset":62079,"endOffset":62418,"count":28},{"startOffset":62307,"endOffset":62413,"count":0}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultControllerHasBackpressure","ranges":[{"startOffset":62489,"endOffset":62631,"count":17}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultControllerCanCloseOrEnqueue","ranges":[{"startOffset":62635,"endOffset":62855,"count":579}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":62859,"endOffset":63186,"count":240},{"startOffset":63060,"endOffset":63088,"count":0},{"startOffset":63094,"endOffset":63118,"count":0}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultControllerShouldCallPull","ranges":[{"startOffset":63190,"endOffset":63702,"count":308},{"startOffset":63423,"endOffset":63436,"count":0},{"startOffset":63477,"endOffset":63527,"count":176},{"startOffset":63529,"endOffset":63553,"count":105},{"startOffset":63553,"endOffset":63701,"count":203}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultControllerCallPullIfNeeded","ranges":[{"startOffset":63706,"endOffset":64436,"count":291},{"startOffset":63849,"endOffset":63856,"count":158},{"startOffset":63856,"endOffset":63892,"count":133},{"startOffset":63892,"endOffset":63953,"count":17},{"startOffset":63953,"endOffset":64435,"count":116}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64132,"endOffset":64358,"count":99},{"startOffset":64224,"endOffset":64351,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64365,"endOffset":64431,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":64440,"endOffset":64661,"count":62}],"isBlockCoverage":true},{"functionName":"readableStreamDefaultControllerError","ranges":[{"startOffset":64665,"endOffset":64971,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCancelSteps","ranges":[{"startOffset":64975,"endOffset":65256,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerPullSteps","ranges":[{"startOffset":65260,"endOffset":65894,"count":116},{"startOffset":65421,"endOffset":65773,"count":28},{"startOffset":65640,"endOffset":65722,"count":0},{"startOffset":65773,"endOffset":65893,"count":88}],"isBlockCoverage":true},{"functionName":"setupReadableStreamDefaultController","ranges":[{"startOffset":65898,"endOffset":66913,"count":104}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66621,"endOffset":66835,"count":104}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66842,"endOffset":66908,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultControllerFromSource","ranges":[{"startOffset":66917,"endOffset":67683,"count":104},{"startOffset":67281,"endOffset":67298,"count":0},{"startOffset":67385,"endOffset":67401,"count":0},{"startOffset":67439,"endOffset":67483,"count":76},{"startOffset":67484,"endOffset":67502,"count":28}],"isBlockCoverage":true},{"functionName":"readableByteStreamControllerClose","ranges":[{"startOffset":67687,"endOffset":68428,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCommitPullIntoDescriptor","ranges":[{"startOffset":68432,"endOffset":69021,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerInvalidateBYOBRequest","ranges":[{"startOffset":69025,"endOffset":69324,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClearAlgorithms","ranges":[{"startOffset":69328,"endOffset":69497,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClearPendingPullIntos","ranges":[{"startOffset":69501,"endOffset":69687,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerGetDesiredSize","ranges":[{"startOffset":69691,"endOffset":70008,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerShouldCallPull","ranges":[{"startOffset":70012,"endOffset":70683,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerHandleQueueDrain","ranges":[{"startOffset":70687,"endOffset":71117,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerPullInto","ranges":[{"startOffset":71121,"endOffset":73198,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInternal","ranges":[{"startOffset":73202,"endOffset":74049,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespond","ranges":[{"startOffset":74053,"endOffset":74857,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInClosedState","ranges":[{"startOffset":74861,"endOffset":75397,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillHeadPullIntoDescriptor","ranges":[{"startOffset":75401,"endOffset":75713,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueue","ranges":[{"startOffset":75717,"endOffset":78102,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueClonedChunkToQueue","ranges":[{"startOffset":78106,"endOffset":78603,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueChunkToQueue","ranges":[{"startOffset":78607,"endOffset":78900,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueDetachedPullIntoToQueue","ranges":[{"startOffset":78904,"endOffset":79354,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillPullIntoDescriptorFromQueue","ranges":[{"startOffset":79358,"endOffset":81390,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ranges":[{"startOffset":81394,"endOffset":82008,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInReadableState","ranges":[{"startOffset":82012,"endOffset":83478,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondWithNewView","ranges":[{"startOffset":83482,"endOffset":84910,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerShiftPendingPullInto","ranges":[{"startOffset":84914,"endOffset":85108,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCallPullIfNeeded","ranges":[{"startOffset":85112,"endOffset":85830,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerError","ranges":[{"startOffset":85834,"endOffset":86200,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCancelSteps","ranges":[{"startOffset":86204,"endOffset":86510,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillReadRequestFromQueue","ranges":[{"startOffset":86514,"endOffset":87009,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerProcessReadRequestsUsingQueue","ranges":[{"startOffset":87013,"endOffset":87513,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerPullSteps","ranges":[{"startOffset":87517,"endOffset":88663,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableByteStreamController","ranges":[{"startOffset":88667,"endOffset":89793,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableByteStreamControllerFromSource","ranges":[{"startOffset":89797,"endOffset":90757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1085","url":"node:internal/webstreams/writablestream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38941,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWritableReleasedError","ranges":[{"startOffset":1655,"endOffset":2106,"count":17},{"startOffset":1716,"endOffset":1749,"count":16},{"startOffset":1749,"endOffset":2105,"count":1}],"isBlockCoverage":true},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":2151,"endOffset":2243,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3208,"endOffset":7836,"count":37}],"isBlockCoverage":false},{"functionName":"WritableStream","ranges":[{"startOffset":3360,"endOffset":4967,"count":37},{"startOffset":3478,"endOffset":3535,"count":0}],"isBlockCoverage":true},{"functionName":"WritableStream.<computed>","ranges":[{"startOffset":4610,"endOffset":4618,"count":0}],"isBlockCoverage":false},{"functionName":"get locked","ranges":[{"startOffset":5025,"endOffset":5173,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":5252,"endOffset":5582,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5633,"endOffset":6104,"count":0}],"isBlockCoverage":false},{"functionName":"getWriter","ranges":[{"startOffset":6169,"endOffset":6379,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6385,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6552,"endOffset":7419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7425,"endOffset":7608,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7614,"endOffset":7833,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredWritableStream","ranges":[{"startOffset":8107,"endOffset":9447,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredWritableStream.<computed>","ranges":[{"startOffset":9501,"endOffset":9509,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9514,"endOffset":13220,"count":37}],"isBlockCoverage":false},{"functionName":"WritableStreamDefaultWriter","ranges":[{"startOffset":9650,"endOffset":10120,"count":37},{"startOffset":9715,"endOffset":9782,"count":0}],"isBlockCoverage":true},{"functionName":"get closed","ranges":[{"startOffset":10184,"endOffset":10372,"count":0}],"isBlockCoverage":false},{"functionName":"get desiredSize","ranges":[{"startOffset":10429,"endOffset":10779,"count":0}],"isBlockCoverage":false},{"functionName":"get ready","ranges":[{"startOffset":10843,"endOffset":11030,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":11109,"endOffset":11510,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":11561,"endOffset":12144,"count":0}],"isBlockCoverage":false},{"functionName":"releaseLock","ranges":[{"startOffset":12150,"endOffset":12477,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":12555,"endOffset":12954,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12960,"endOffset":13217,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13618,"endOffset":14692,"count":0}],"isBlockCoverage":false},{"functionName":"createWritableStreamDefaultController","ranges":[{"startOffset":14931,"endOffset":15137,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15015,"endOffset":15090,"count":37}],"isBlockCoverage":true},{"functionName":"isWritableStreamLocked","ranges":[{"startOffset":15386,"endOffset":15477,"count":111}],"isBlockCoverage":true},{"functionName":"setupWritableStreamDefaultWriter","ranges":[{"startOffset":15481,"endOffset":17313,"count":37},{"startOffset":15585,"endOffset":15651,"count":0},{"startOffset":15878,"endOffset":15945,"count":0},{"startOffset":16165,"endOffset":16450,"count":0},{"startOffset":16456,"endOffset":16754,"count":0},{"startOffset":16760,"endOffset":17200,"count":0}],"isBlockCoverage":true},{"functionName":"setClosedPromiseToNewPromise","ranges":[{"startOffset":17211,"endOffset":17310,"count":37}],"isBlockCoverage":true},{"functionName":"writableStreamAbort","ranges":[{"startOffset":17317,"endOffset":18139,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamClose","ranges":[{"startOffset":18143,"endOffset":18836,"count":17},{"startOffset":18327,"endOffset":18429,"count":0},{"startOffset":18461,"endOffset":18484,"count":0},{"startOffset":18698,"endOffset":18721,"count":0},{"startOffset":18728,"endOffset":18761,"count":0}],"isBlockCoverage":true},{"functionName":"writableStreamUpdateBackpressure","ranges":[{"startOffset":18840,"endOffset":19333,"count":91},{"startOffset":19086,"endOffset":19133,"count":54},{"startOffset":19135,"endOffset":19283,"count":54},{"startOffset":19160,"endOffset":19223,"count":37},{"startOffset":19223,"endOffset":19278,"count":17}],"isBlockCoverage":true},{"functionName":"writableStreamStartErroring","ranges":[{"startOffset":19337,"endOffset":19931,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamRejectCloseAndClosedPromiseIfNeeded","ranges":[{"startOffset":19935,"endOffset":20712,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamMarkFirstWriteRequestInFlight","ranges":[{"startOffset":20716,"endOffset":21029,"count":37}],"isBlockCoverage":true},{"functionName":"writableStreamMarkCloseRequestInFlight","ranges":[{"startOffset":21033,"endOffset":21410,"count":17}],"isBlockCoverage":true},{"functionName":"writableStreamHasOperationMarkedInFlight","ranges":[{"startOffset":21414,"endOffset":21710,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightWriteWithError","ranges":[{"startOffset":21714,"endOffset":22182,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightWrite","ranges":[{"startOffset":22186,"endOffset":22486,"count":17}],"isBlockCoverage":true},{"functionName":"writableStreamFinishInFlightCloseWithError","ranges":[{"startOffset":22490,"endOffset":23323,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightClose","ranges":[{"startOffset":23327,"endOffset":24411,"count":17},{"startOffset":23669,"endOffset":24105,"count":0}],"isBlockCoverage":true},{"functionName":"writableStreamFinishErroring","ranges":[{"startOffset":24415,"endOffset":25876,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDealWithRejection","ranges":[{"startOffset":25880,"endOffset":26160,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamCloseQueuedOrInFlight","ranges":[{"startOffset":26164,"endOffset":26389,"count":307},{"startOffset":26370,"endOffset":26388,"count":0}],"isBlockCoverage":true},{"functionName":"writableStreamAddWriteRequest","ranges":[{"startOffset":26393,"endOffset":26759,"count":37}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultWriterWrite","ranges":[{"startOffset":26763,"endOffset":27778,"count":37},{"startOffset":27090,"endOffset":27194,"count":0},{"startOffset":27276,"endOffset":27325,"count":0},{"startOffset":27402,"endOffset":27504,"count":0},{"startOffset":27541,"endOffset":27590,"count":0}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultWriterRelease","ranges":[{"startOffset":27782,"endOffset":28271,"count":17}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultWriterGetDesiredSize","ranges":[{"startOffset":28275,"endOffset":28638,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterEnsureReadyPromiseRejected","ranges":[{"startOffset":28642,"endOffset":29022,"count":17},{"startOffset":28777,"endOffset":28826,"count":0}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultWriterEnsureClosedPromiseRejected","ranges":[{"startOffset":29026,"endOffset":29407,"count":17},{"startOffset":29162,"endOffset":29211,"count":0}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultWriterCloseWithErrorPropagation","ranges":[{"startOffset":29411,"endOffset":29913,"count":17},{"startOffset":29688,"endOffset":29712,"count":0},{"startOffset":29748,"endOffset":29797,"count":0},{"startOffset":29831,"endOffset":29854,"count":0}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultWriterClose","ranges":[{"startOffset":29917,"endOffset":30090,"count":17}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultWriterAbort","ranges":[{"startOffset":30094,"endOffset":30283,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerWrite","ranges":[{"startOffset":30287,"endOffset":30889,"count":37},{"startOffset":30436,"endOffset":30539,"count":0}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultControllerProcessWrite","ranges":[{"startOffset":30893,"endOffset":31937,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31196,"endOffset":31721,"count":17},{"startOffset":31347,"endOffset":31370,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31728,"endOffset":31930,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerProcessClose","ranges":[{"startOffset":31941,"endOffset":32514,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32387,"endOffset":32434,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32441,"endOffset":32509,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":32518,"endOffset":32710,"count":91}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultControllerGetChunkSize","ranges":[{"startOffset":32714,"endOffset":33019,"count":37},{"startOffset":32911,"endOffset":33016,"count":0}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultControllerErrorIfNeeded","ranges":[{"startOffset":33023,"endOffset":33257,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerError","ranges":[{"startOffset":33261,"endOffset":33539,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerClose","ranges":[{"startOffset":33543,"endOffset":33729,"count":17}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":33733,"endOffset":34004,"count":17}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultControllerGetBackpressure","ranges":[{"startOffset":34008,"endOffset":34154,"count":91}],"isBlockCoverage":true},{"functionName":"writableStreamDefaultControllerAdvanceQueueIfNeeded","ranges":[{"startOffset":34158,"endOffset":34768,"count":108},{"startOffset":34393,"endOffset":34400,"count":0},{"startOffset":34447,"endOffset":34509,"count":0},{"startOffset":34539,"endOffset":34632,"count":54},{"startOffset":34632,"endOffset":34688,"count":17},{"startOffset":34688,"endOffset":34765,"count":37}],"isBlockCoverage":true},{"functionName":"setupWritableStreamDefaultControllerFromSink","ranges":[{"startOffset":34772,"endOffset":35642,"count":37},{"startOffset":35154,"endOffset":35171,"count":0},{"startOffset":35247,"endOffset":35264,"count":0},{"startOffset":35340,"endOffset":35353,"count":0},{"startOffset":35429,"endOffset":35442,"count":0}],"isBlockCoverage":true},{"functionName":"setupWritableStreamDefaultController","ranges":[{"startOffset":35646,"endOffset":37003,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36537,"endOffset":36770,"count":37},{"startOffset":36595,"endOffset":36647,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36777,"endOffset":36998,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1086","url":"node:internal/webstreams/transformstream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16384,"count":1}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":1488,"endOffset":1580,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2407,"endOffset":5948,"count":37}],"isBlockCoverage":false},{"functionName":"TransformStream","ranges":[{"startOffset":2623,"endOffset":4426,"count":37},{"startOffset":2923,"endOffset":3043,"count":0},{"startOffset":3081,"endOffset":3201,"count":0},{"startOffset":4283,"endOffset":4328,"count":0}],"isBlockCoverage":true},{"functionName":"get readable","ranges":[{"startOffset":4491,"endOffset":4636,"count":37},{"startOffset":4550,"endOffset":4596,"count":0}],"isBlockCoverage":true},{"functionName":"get writable","ranges":[{"startOffset":4701,"endOffset":4846,"count":37},{"startOffset":4760,"endOffset":4806,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4852,"endOffset":5063,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5069,"endOffset":5724,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5730,"endOffset":5816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5822,"endOffset":5945,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredTransformStream","ranges":[{"startOffset":6160,"endOffset":6636,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredTransformStream.<computed>","ranges":[{"startOffset":6691,"endOffset":6699,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6704,"endOffset":8197,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":7376,"endOffset":7591,"count":17},{"startOffset":7464,"endOffset":7527,"count":0}],"isBlockCoverage":true},{"functionName":"createTransformStreamDefaultController","ranges":[{"startOffset":8511,"endOffset":8725,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8596,"endOffset":8672,"count":37}],"isBlockCoverage":true},{"functionName":"defaultTransformAlgorithm","ranges":[{"startOffset":8891,"endOffset":9018,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTransformStream","ranges":[{"startOffset":9022,"endOffset":10390,"count":37}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":9262,"endOffset":9302,"count":37}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":9309,"endOffset":9401,"count":37}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":9408,"endOffset":9502,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":9509,"endOffset":9589,"count":17}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":9753,"endOffset":9793,"count":37}],"isBlockCoverage":true},{"functionName":"pull","ranges":[{"startOffset":9800,"endOffset":9880,"count":34}],"isBlockCoverage":true},{"functionName":"cancel","ranges":[{"startOffset":9887,"endOffset":10010,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamError","ranges":[{"startOffset":10394,"endOffset":10668,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamErrorWritableAndUnblockWrite","ranges":[{"startOffset":10672,"endOffset":11058,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamSetBackpressure","ranges":[{"startOffset":11062,"endOffset":11412,"count":88},{"startOffset":11252,"endOffset":11298,"count":51}],"isBlockCoverage":true},{"functionName":"setupTransformStreamDefaultController","ranges":[{"startOffset":11416,"endOffset":11760,"count":37}],"isBlockCoverage":true},{"functionName":"setupTransformStreamDefaultControllerFromTransformer","ranges":[{"startOffset":11764,"endOffset":12324,"count":37},{"startOffset":11964,"endOffset":11992,"count":0},{"startOffset":12030,"endOffset":12043,"count":0}],"isBlockCoverage":true},{"functionName":"transformStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":12328,"endOffset":12505,"count":17}],"isBlockCoverage":true},{"functionName":"transformStreamDefaultControllerEnqueue","ranges":[{"startOffset":12509,"endOffset":13345,"count":17},{"startOffset":12835,"endOffset":12894,"count":0},{"startOffset":12981,"endOffset":13107,"count":0}],"isBlockCoverage":true},{"functionName":"transformStreamDefaultControllerError","ranges":[{"startOffset":13349,"endOffset":13478,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerPerformTransform","ranges":[{"startOffset":13482,"endOffset":13817,"count":17},{"startOffset":13715,"endOffset":13814,"count":0}],"isBlockCoverage":true},{"functionName":"transformStreamDefaultControllerTerminate","ranges":[{"startOffset":13821,"endOffset":14296,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkWriteAlgorithm","ranges":[{"startOffset":14300,"endOffset":15099,"count":37},{"startOffset":15017,"endOffset":15098,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14664,"endOffset":15010,"count":17},{"startOffset":14802,"endOffset":14837,"count":0}],"isBlockCoverage":true},{"functionName":"transformStreamDefaultSinkAbortAlgorithm","ranges":[{"startOffset":15103,"endOffset":15220,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkCloseAlgorithm","ranges":[{"startOffset":15224,"endOffset":15899,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15599,"endOffset":15781,"count":17},{"startOffset":15665,"endOffset":15700,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15788,"endOffset":15894,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSourcePullAlgorithm","ranges":[{"startOffset":15903,"endOffset":16177,"count":34}],"isBlockCoverage":true}]},{"scriptId":"1087","url":"node:stream/web","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1350,"count":1}],"isBlockCoverage":false}]},{"scriptId":"1088","url":"node:internal/webstreams/encoding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6474,"count":1}],"isBlockCoverage":false},{"functionName":"isTextEncoderStream","ranges":[{"startOffset":902,"endOffset":1042,"count":0}],"isBlockCoverage":false},{"functionName":"isTextDecoderStream","ranges":[{"startOffset":1046,"endOffset":1186,"count":0}],"isBlockCoverage":false},{"functionName":"TextEncoderStream","ranges":[{"startOffset":1219,"endOffset":2810,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":2867,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":3082,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":3300,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3459,"endOffset":3788,"count":0}],"isBlockCoverage":false},{"functionName":"TextDecoderStream","ranges":[{"startOffset":3962,"endOffset":4537,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":4594,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":4802,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":5004,"endOffset":5156,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":5221,"endOffset":5374,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":5439,"endOffset":5592,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5598,"endOffset":6005,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1089","url":"node:internal/webstreams/compression","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3926,"count":1}],"isBlockCoverage":false},{"functionName":"lazyZlib","ranges":[{"startOffset":469,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"isCompressionStream","ranges":[{"startOffset":810,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"isDecompressionStream","ranges":[{"startOffset":954,"endOffset":1098,"count":0}],"isBlockCoverage":false},{"functionName":"CompressionStream","ranges":[{"startOffset":1184,"endOffset":1608,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":1673,"endOffset":1826,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":1891,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2050,"endOffset":2331,"count":0}],"isBlockCoverage":false},{"functionName":"DecompressionStream","ranges":[{"startOffset":2422,"endOffset":2850,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":2915,"endOffset":3072,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":3137,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3300,"endOffset":3587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1090","url":"node:internal/webstreams/adapters","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26240,"count":1}],"isBlockCoverage":false},{"functionName":"newWritableStreamFromStreamWritable","ranges":[{"startOffset":2003,"endOffset":5184,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamWritableFromWritableStream","ranges":[{"startOffset":5417,"endOffset":9903,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableStreamFromStreamReadable","ranges":[{"startOffset":10124,"endOffset":12722,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamReadableFromReadableStream","ranges":[{"startOffset":12949,"endOffset":14905,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableWritablePairFromDuplex","ranges":[{"startOffset":15135,"endOffset":16354,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamDuplexFromReadableWritablePair","ranges":[{"startOffset":16639,"endOffset":22078,"count":0}],"isBlockCoverage":false},{"functionName":"newWritableStreamFromStreamBase","ranges":[{"startOffset":22301,"endOffset":24210,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableStreamFromStreamBase","ranges":[{"startOffset":24327,"endOffset":25898,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1091","url":"node:dns","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9245,"count":1}],"isBlockCoverage":false},{"functionName":"onlookup","ranges":[{"startOffset":2790,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"onlookupall","ranges":[{"startOffset":3148,"endOffset":3674,"count":2},{"startOffset":3199,"endOffset":3281,"count":0},{"startOffset":3361,"endOffset":3488,"count":4},{"startOffset":3566,"endOffset":3587,"count":0},{"startOffset":3589,"endOffset":3671,"count":0}],"isBlockCoverage":true},{"functionName":"lookup","ranges":[{"startOffset":3784,"endOffset":6480,"count":2},{"startOffset":4059,"endOffset":4107,"count":0},{"startOffset":4146,"endOffset":4276,"count":0},{"startOffset":4340,"endOffset":4506,"count":0},{"startOffset":4757,"endOffset":5080,"count":0},{"startOffset":5235,"endOffset":5341,"count":0},{"startOffset":5367,"endOffset":5583,"count":0},{"startOffset":5649,"endOffset":5873,"count":0},{"startOffset":6035,"endOffset":6045,"count":0},{"startOffset":6146,"endOffset":6245,"count":0},{"startOffset":6273,"endOffset":6462,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupservice","ranges":[{"startOffset":6632,"endOffset":6986,"count":0}],"isBlockCoverage":false},{"functionName":"lookupService","ranges":[{"startOffset":6992,"endOffset":7819,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolverSetServers","ranges":[{"startOffset":7978,"endOffset":8283,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9098,"endOffset":9231,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1092","url":"node:internal/dns/callback_resolver","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2891,"count":1}],"isBlockCoverage":false},{"functionName":"onresolve","ranges":[{"startOffset":661,"endOffset":1128,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":1132,"endOffset":2094,"count":13}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":1168,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2363,"endOffset":2850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1094","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/encodings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1},{"startOffset":546,"endOffset":709,"count":8},{"startOffset":613,"endOffset":707,"count":408}],"isBlockCoverage":true}]},{"scriptId":"1095","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/encodings/internal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6113,"count":1},{"startOffset":1579,"endOffset":1623,"count":0}],"isBlockCoverage":true},{"functionName":"InternalCodec","ranges":[{"startOffset":571,"endOffset":1182,"count":1},{"startOffset":742,"endOffset":779,"count":0},{"startOffset":815,"endOffset":1180,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder.end","ranges":[{"startOffset":1609,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder","ranges":[{"startOffset":1626,"endOffset":1711,"count":31}],"isBlockCoverage":true},{"functionName":"InternalEncoder","ranges":[{"startOffset":1879,"endOffset":1949,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.write","ranges":[{"startOffset":1985,"endOffset":2041,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.end","ranges":[{"startOffset":2075,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64","ranges":[{"startOffset":2227,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.write","ranges":[{"startOffset":2342,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.end","ranges":[{"startOffset":2608,"endOffset":2670,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8","ranges":[{"startOffset":2790,"endOffset":2839,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.write","ranges":[{"startOffset":2880,"endOffset":3698,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.end","ranges":[{"startOffset":3737,"endOffset":3751,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8","ranges":[{"startOffset":3886,"endOffset":4056,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8.write","ranges":[{"startOffset":4097,"endOffset":5958,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8.end","ranges":[{"startOffset":5997,"endOffset":6112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1096","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/encodings/utf16.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5011,"count":1}],"isBlockCoverage":true},{"functionName":"Utf16BECodec","ranges":[{"startOffset":254,"endOffset":281,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder","ranges":[{"startOffset":439,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.write","ranges":[{"startOffset":503,"endOffset":689,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.end","ranges":[{"startOffset":722,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder","ranges":[{"startOffset":755,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.write","ranges":[{"startOffset":847,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.end","ranges":[{"startOffset":1364,"endOffset":1378,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Codec","ranges":[{"startOffset":1920,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder","ranges":[{"startOffset":2113,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.write","ranges":[{"startOffset":2349,"endOffset":2402,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.end","ranges":[{"startOffset":2433,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder","ranges":[{"startOffset":2497,"endOffset":2686,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.write","ranges":[{"startOffset":2719,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.end","ranges":[{"startOffset":3418,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":3821,"endOffset":5008,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1097","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/encodings/utf7.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9215,"count":1},{"startOffset":1342,"endOffset":1400,"count":256}],"isBlockCoverage":true},{"functionName":"Utf7Codec","ranges":[{"startOffset":311,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder","ranges":[{"startOffset":583,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.write","ranges":[{"startOffset":685,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.end","ranges":[{"startOffset":1091,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder","ranges":[{"startOffset":1124,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.write","ranges":[{"startOffset":1536,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.end","ranges":[{"startOffset":3349,"endOffset":3592,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPCodec","ranges":[{"startOffset":4130,"endOffset":4201,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder","ranges":[{"startOffset":4365,"endOffset":4535,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.write","ranges":[{"startOffset":4571,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.end","ranges":[{"startOffset":6283,"endOffset":6744,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder","ranges":[{"startOffset":6763,"endOffset":6891,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.write","ranges":[{"startOffset":7014,"endOffset":8935,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.end","ranges":[{"startOffset":8969,"endOffset":9212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1098","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/encodings/sbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2191,"count":1}],"isBlockCoverage":true},{"functionName":"SBCSCodec","ranges":[{"startOffset":248,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder","ranges":[{"startOffset":1293,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.write","ranges":[{"startOffset":1403,"endOffset":1574,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.end","ranges":[{"startOffset":1604,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder","ranges":[{"startOffset":1621,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.write","ranges":[{"startOffset":1731,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.end","ranges":[{"startOffset":2176,"endOffset":2190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1099","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/encodings/sbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4184,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1100","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/encodings/sbcs-data-generated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18865,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1101","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/encodings/dbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21415,"count":1},{"startOffset":522,"endOffset":554,"count":256}],"isBlockCoverage":true},{"functionName":"DBCSCodec","ranges":[{"startOffset":614,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getDecodeTrieNode","ranges":[{"startOffset":5438,"endOffset":6214,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._addDecodeChunk","ranges":[{"startOffset":6255,"endOffset":8486,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getEncodeBucket","ranges":[{"startOffset":8546,"endOffset":8814,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeChar","ranges":[{"startOffset":8853,"endOffset":9204,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeSequence","ranges":[{"startOffset":9247,"endOffset":10426,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._fillEncodeTable","ranges":[{"startOffset":10467,"endOffset":11039,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder","ranges":[{"startOffset":11125,"endOffset":11442,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.write","ranges":[{"startOffset":11474,"endOffset":16174,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.end","ranges":[{"startOffset":16204,"endOffset":17110,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder","ranges":[{"startOffset":17259,"endOffset":17580,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.write","ranges":[{"startOffset":17612,"endOffset":20538,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.end","ranges":[{"startOffset":20568,"endOffset":21017,"count":0}],"isBlockCoverage":false},{"functionName":"findIdx","ranges":[{"startOffset":21094,"endOffset":21413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1102","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/iconv-lite/encodings/dbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8288,"count":1}],"isBlockCoverage":true},{"functionName":"table","ranges":[{"startOffset":2563,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3052,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3996,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4205,"endOffset":4300,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4732,"endOffset":4827,"count":0}],"isBlockCoverage":false},{"functionName":"gb18030","ranges":[{"startOffset":4846,"endOffset":4907,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":5275,"endOffset":5327,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":7815,"endOffset":7867,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":8064,"endOffset":8160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1103","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/encodings/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1},{"startOffset":569,"endOffset":732,"count":9},{"startOffset":636,"endOffset":730,"count":416}],"isBlockCoverage":true}]},{"scriptId":"1104","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/encodings/internal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6307,"count":1},{"startOffset":1579,"endOffset":1623,"count":0}],"isBlockCoverage":true},{"functionName":"InternalCodec","ranges":[{"startOffset":571,"endOffset":1182,"count":1},{"startOffset":742,"endOffset":779,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder.end","ranges":[{"startOffset":1609,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder","ranges":[{"startOffset":1626,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder.write","ranges":[{"startOffset":1755,"endOffset":1880,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoder.end","ranges":[{"startOffset":1914,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder","ranges":[{"startOffset":2073,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.write","ranges":[{"startOffset":2179,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoder.end","ranges":[{"startOffset":2269,"endOffset":2283,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64","ranges":[{"startOffset":2421,"endOffset":2494,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.write","ranges":[{"startOffset":2536,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderBase64.end","ranges":[{"startOffset":2802,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8","ranges":[{"startOffset":2984,"endOffset":3033,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.write","ranges":[{"startOffset":3074,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEncoderCesu8.end","ranges":[{"startOffset":3931,"endOffset":3945,"count":0}],"isBlockCoverage":false},{"functionName":"InternalDecoderCesu8","ranges":[{"startOffset":4080,"endOffset":4250,"count":4}],"isBlockCoverage":true},{"functionName":"InternalDecoderCesu8.write","ranges":[{"startOffset":4291,"endOffset":6152,"count":4},{"startOffset":4445,"endOffset":6060,"count":54},{"startOffset":4565,"endOffset":4687,"count":0},{"startOffset":4809,"endOffset":5208,"count":0},{"startOffset":5218,"endOffset":6054,"count":0}],"isBlockCoverage":true},{"functionName":"InternalDecoderCesu8.end","ranges":[{"startOffset":6191,"endOffset":6306,"count":4},{"startOffset":6257,"endOffset":6288,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1105","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/encodings/utf32.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9982,"count":1}],"isBlockCoverage":true},{"functionName":"Utf32Codec","ranges":[{"startOffset":176,"endOffset":305,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Encoder","ranges":[{"startOffset":584,"endOffset":681,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Encoder.write","ranges":[{"startOffset":714,"endOffset":2557,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Encoder.end","ranges":[{"startOffset":2589,"endOffset":2935,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Decoder","ranges":[{"startOffset":2954,"endOffset":3112,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Decoder.write","ranges":[{"startOffset":3145,"endOffset":4771,"count":0}],"isBlockCoverage":false},{"functionName":"_writeCodepoint","ranges":[{"startOffset":4774,"endOffset":5541,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32Decoder.end","ranges":[{"startOffset":5573,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoCodec","ranges":[{"startOffset":6097,"endOffset":6164,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoEncoder","ranges":[{"startOffset":6289,"endOffset":6525,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoEncoder.write","ranges":[{"startOffset":6562,"endOffset":6615,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoEncoder.end","ranges":[{"startOffset":6651,"endOffset":6696,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoDecoder","ranges":[{"startOffset":6715,"endOffset":6905,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoDecoder.write","ranges":[{"startOffset":6942,"endOffset":7730,"count":0}],"isBlockCoverage":false},{"functionName":"Utf32AutoDecoder.end","ranges":[{"startOffset":7766,"endOffset":8319,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":8322,"endOffset":9981,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1106","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/encodings/utf16.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5502,"count":1}],"isBlockCoverage":true},{"functionName":"Utf16BECodec","ranges":[{"startOffset":254,"endOffset":281,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder","ranges":[{"startOffset":439,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.write","ranges":[{"startOffset":503,"endOffset":689,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEEncoder.end","ranges":[{"startOffset":722,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder","ranges":[{"startOffset":755,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.write","ranges":[{"startOffset":847,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16BEDecoder.end","ranges":[{"startOffset":1364,"endOffset":1406,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Codec","ranges":[{"startOffset":1948,"endOffset":2016,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder","ranges":[{"startOffset":2141,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.write","ranges":[{"startOffset":2377,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Encoder.end","ranges":[{"startOffset":2461,"endOffset":2506,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder","ranges":[{"startOffset":2525,"endOffset":2712,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.write","ranges":[{"startOffset":2745,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"Utf16Decoder.end","ranges":[{"startOffset":3571,"endOffset":4123,"count":0}],"isBlockCoverage":false},{"functionName":"detectEncoding","ranges":[{"startOffset":4125,"endOffset":5499,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1107","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/encodings/utf7.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9283,"count":1},{"startOffset":1342,"endOffset":1400,"count":256}],"isBlockCoverage":true},{"functionName":"Utf7Codec","ranges":[{"startOffset":311,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder","ranges":[{"startOffset":583,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.write","ranges":[{"startOffset":685,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Encoder.end","ranges":[{"startOffset":1091,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder","ranges":[{"startOffset":1124,"endOffset":1248,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.write","ranges":[{"startOffset":1536,"endOffset":3353,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7Decoder.end","ranges":[{"startOffset":3383,"endOffset":3626,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPCodec","ranges":[{"startOffset":4164,"endOffset":4235,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder","ranges":[{"startOffset":4399,"endOffset":4569,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.write","ranges":[{"startOffset":4605,"endOffset":6283,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPEncoder.end","ranges":[{"startOffset":6317,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder","ranges":[{"startOffset":6797,"endOffset":6925,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.write","ranges":[{"startOffset":7048,"endOffset":9003,"count":0}],"isBlockCoverage":false},{"functionName":"Utf7IMAPDecoder.end","ranges":[{"startOffset":9037,"endOffset":9280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1108","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/encodings/sbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2191,"count":1}],"isBlockCoverage":true},{"functionName":"SBCSCodec","ranges":[{"startOffset":248,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder","ranges":[{"startOffset":1293,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.write","ranges":[{"startOffset":1403,"endOffset":1574,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSEncoder.end","ranges":[{"startOffset":1604,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder","ranges":[{"startOffset":1621,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.write","ranges":[{"startOffset":1731,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"SBCSDecoder.end","ranges":[{"startOffset":2176,"endOffset":2190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1109","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/encodings/sbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4449,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1110","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/encodings/sbcs-data-generated.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18865,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1111","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/encodings/dbcs-codec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23065,"count":1},{"startOffset":522,"endOffset":554,"count":256}],"isBlockCoverage":true},{"functionName":"DBCSCodec","ranges":[{"startOffset":614,"endOffset":6184,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getDecodeTrieNode","ranges":[{"startOffset":6333,"endOffset":7110,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._addDecodeChunk","ranges":[{"startOffset":7151,"endOffset":9382,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._getEncodeBucket","ranges":[{"startOffset":9442,"endOffset":9710,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeChar","ranges":[{"startOffset":9749,"endOffset":10100,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._setEncodeSequence","ranges":[{"startOffset":10143,"endOffset":11322,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSCodec._fillEncodeTable","ranges":[{"startOffset":11363,"endOffset":12464,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder","ranges":[{"startOffset":12550,"endOffset":12867,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.write","ranges":[{"startOffset":12899,"endOffset":17831,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSEncoder.end","ranges":[{"startOffset":17861,"endOffset":18767,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder","ranges":[{"startOffset":18916,"endOffset":19226,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.write","ranges":[{"startOffset":19258,"endOffset":22162,"count":0}],"isBlockCoverage":false},{"functionName":"DBCSDecoder.end","ranges":[{"startOffset":22192,"endOffset":22674,"count":0}],"isBlockCoverage":false},{"functionName":"findIdx","ranges":[{"startOffset":22751,"endOffset":23063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1112","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/node_modules/iconv-lite/encodings/dbcs-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9386,"count":1}],"isBlockCoverage":true},{"functionName":"table","ranges":[{"startOffset":2563,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3052,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":3996,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4205,"endOffset":4300,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4732,"endOffset":4827,"count":0}],"isBlockCoverage":false},{"functionName":"gb18030","ranges":[{"startOffset":4846,"endOffset":4907,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":5275,"endOffset":5327,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":7815,"endOffset":7867,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":8064,"endOffset":8160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1113","url":"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/mysql2/lib/commands/auth_switch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3590,"count":1}],"isBlockCoverage":true},{"functionName":"warnLegacyAuthSwitch","ranges":[{"startOffset":858,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"authSwitchPluginError","ranges":[{"startOffset":999,"endOffset":1184,"count":0}],"isBlockCoverage":false},{"functionName":"authSwitchRequest","ranges":[{"startOffset":1186,"endOffset":2622,"count":2},{"startOffset":1388,"endOffset":1432,"count":0},{"startOffset":1628,"endOffset":1673,"count":0},{"startOffset":1678,"endOffset":2025,"count":0},{"startOffset":2120,"endOffset":2319,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1829,"endOffset":2007,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2443,"endOffset":2557,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2565,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"authSwitchRequestMoreData","ranges":[{"startOffset":2624,"endOffset":3517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1114","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":525,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":524,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38,"endOffset":518,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":81,"endOffset":236,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":241,"endOffset":511,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":412,"endOffset":482,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1115","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":970,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":969,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38,"endOffset":963,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":81,"endOffset":236,"count":17},{"startOffset":170,"endOffset":230,"count":68}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":241,"endOffset":956,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":396,"endOffset":456,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":539,"endOffset":609,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":704,"endOffset":774,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":857,"endOffset":927,"count":15}],"isBlockCoverage":true}]},{"scriptId":"1116","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2234,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2233,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38,"endOffset":2227,"count":1}],"isBlockCoverage":true},{"functionName":"TextRow","ranges":[{"startOffset":81,"endOffset":236,"count":3},{"startOffset":170,"endOffset":230,"count":36}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":241,"endOffset":2220,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":396,"endOffset":456,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":539,"endOffset":609,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":698,"endOffset":768,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":853,"endOffset":923,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1014,"endOffset":1084,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1165,"endOffset":1235,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1330,"endOffset":1400,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1497,"endOffset":1567,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1654,"endOffset":1724,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1811,"endOffset":1881,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1969,"endOffset":2040,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2120,"endOffset":2191,"count":4}],"isBlockCoverage":true}]},{"scriptId":"1117","url":"node:internal/util/comparisons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18420,"count":1}],"isBlockCoverage":false},{"functionName":"areSimilarRegExps","ranges":[{"startOffset":1291,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"areSimilarFloatArrays","ranges":[{"startOffset":1439,"endOffset":1688,"count":0}],"isBlockCoverage":false},{"functionName":"areSimilarTypedArrays","ranges":[{"startOffset":1692,"endOffset":1948,"count":0}],"isBlockCoverage":false},{"functionName":"areEqualArrayBuffers","ranges":[{"startOffset":1952,"endOffset":2111,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualBoxedPrimitive","ranges":[{"startOffset":2115,"endOffset":2998,"count":0}],"isBlockCoverage":false},{"functionName":"innerDeepEqual","ranges":[{"startOffset":3588,"endOffset":7910,"count":13},{"startOffset":3728,"endOffset":3793,"count":12},{"startOffset":3753,"endOffset":3776,"count":0},{"startOffset":3777,"endOffset":3787,"count":0},{"startOffset":3793,"endOffset":4192,"count":1},{"startOffset":3901,"endOffset":3963,"count":0},{"startOffset":4158,"endOffset":4187,"count":0},{"startOffset":4192,"endOffset":4551,"count":0},{"startOffset":4551,"endOffset":4682,"count":1},{"startOffset":4682,"endOffset":4707,"count":0},{"startOffset":4707,"endOffset":4737,"count":1},{"startOffset":4737,"endOffset":5221,"count":0},{"startOffset":5221,"endOffset":7847,"count":1},{"startOffset":5330,"endOffset":7847,"count":0},{"startOffset":7847,"endOffset":7909,"count":0}],"isBlockCoverage":true},{"functionName":"getEnumerables","ranges":[{"startOffset":7914,"endOffset":8059,"count":0}],"isBlockCoverage":false},{"functionName":"keyCheck","ranges":[{"startOffset":8063,"endOffset":11430,"count":1},{"startOffset":8761,"endOffset":8863,"count":12},{"startOffset":8823,"endOffset":8856,"count":0},{"startOffset":9015,"endOffset":9044,"count":0},{"startOffset":9165,"endOffset":9833,"count":0},{"startOffset":9943,"endOffset":10005,"count":0},{"startOffset":10007,"endOffset":10044,"count":0},{"startOffset":10094,"endOffset":10225,"count":0},{"startOffset":10227,"endOffset":10251,"count":0},{"startOffset":10563,"endOffset":11354,"count":0},{"startOffset":11356,"endOffset":11429,"count":0}],"isBlockCoverage":true},{"functionName":"setHasEqualElement","ranges":[{"startOffset":11434,"endOffset":11881,"count":0}],"isBlockCoverage":false},{"functionName":"findLooseMatchingPrimitives","ranges":[{"startOffset":12236,"endOffset":12760,"count":0}],"isBlockCoverage":false},{"functionName":"setMightHaveLoosePrim","ranges":[{"startOffset":12764,"endOffset":12962,"count":0}],"isBlockCoverage":false},{"functionName":"mapMightHaveLoosePrim","ranges":[{"startOffset":12966,"endOffset":13364,"count":0}],"isBlockCoverage":false},{"functionName":"setEquiv","ranges":[{"startOffset":13368,"endOffset":14627,"count":0}],"isBlockCoverage":false},{"functionName":"mapHasEqualEntry","ranges":[{"startOffset":14631,"endOffset":15255,"count":0}],"isBlockCoverage":false},{"functionName":"mapEquiv","ranges":[{"startOffset":15259,"endOffset":16862,"count":0}],"isBlockCoverage":false},{"functionName":"objEquiv","ranges":[{"startOffset":16866,"endOffset":18173,"count":1},{"startOffset":17055,"endOffset":17156,"count":12},{"startOffset":17116,"endOffset":17149,"count":0},{"startOffset":17199,"endOffset":17926,"count":0},{"startOffset":17962,"endOffset":18039,"count":0},{"startOffset":18075,"endOffset":18152,"count":0}],"isBlockCoverage":true},{"functionName":"isDeepEqual","ranges":[{"startOffset":18177,"endOffset":18260,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepStrictEqual","ranges":[{"startOffset":18264,"endOffset":18354,"count":1}],"isBlockCoverage":true}]}],"timestamp":66676.01771,"source-map-cache":{"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/index.js":{"lineLengths":[13,40,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/index.js"],"sourcesContent":["'use strict';\n\n/**\n  * A Sequelize module that contains the sequelize entry point.\n  *\n  * @module sequelize\n  */\n\n/** Exports the sequelize entry point. */\nmodule.exports = require('./sequelize');\n"],"mappings":";AASA,OAAO,UAAU,QAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/sequelize.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,27,29,59,51,28,33,33,42,43,48,45,44,44,44,44,33,52,64,34,53,74,59,49,68,55,79,54,17,54,15,65,25,83,130,18,31,53,60,39,107,71,71,7,30,63,7,26,37,7,26,51,39,33,57,7,27,34,45,9,37,64,16,50,39,17,59,49,25,13,11,9,7,65,86,7,12,30,48,5,54,35,20,26,30,24,22,17,16,15,25,38,27,22,20,25,18,15,29,16,14,15,16,43,9,8,50,27,25,28,23,27,32,32,16,32,78,5,48,40,5,82,158,5,40,35,41,5,36,19,57,57,65,45,45,30,38,34,28,44,48,56,60,49,6,16,32,21,48,14,19,46,14,19,46,14,20,47,14,22,49,14,20,47,14,17,44,14,23,50,14,14,155,5,37,72,57,39,85,68,43,5,54,21,47,60,42,3,18,56,3,16,32,3,21,32,3,23,31,3,47,34,29,39,6,36,17,3,20,37,59,5,49,3,24,80,3,29,78,45,51,5,46,25,5,29,71,5,35,114,120,7,24,59,41,14,38,7,5,166,32,37,37,5,34,34,46,105,9,42,7,32,38,95,9,32,7,33,24,7,5,21,47,87,5,31,72,5,23,23,111,5,36,97,226,24,20,7,6,95,30,61,64,7,25,134,60,43,39,9,7,70,11,59,27,52,17,58,35,63,9,7,21,3,33,107,63,78,5,80,61,5,23,25,25,117,44,3,17,53,3,39,72,3,33,66,3,37,70,3,33,66,3,23,123,53,7,24,54,117,7,5,24,53,5,24,31,5,48,39,12,73,27,61,7,23,35,34,7,5,24,52,5,16,3,50,41,65,55,36,9,9,13,5,51,107,5,51,98,5,3,27,77,60,55,66,208,5,66,66,74,9,5,37,33,38,12,72,5,3,23,37,53,34,7,5,77,23,41,34,7,5,41,65,55,36,9,9,13,5,51,45,104,57,99,10,5,51,32,5,3,31,30,16,18,29,16,75,11,3,34,67,3,12,74,31,5,27,3,26,34,3,19,30,3,26,37,3,23,34,3,23,30,3,22,29,3,40,51,3,41,52,3,44,40,29,23,5,55,24,50,25,5,42,49,17,11,49,21,13,39,26,9,18,7,33,20,7,3,21,103,52,24,16,3,22,30,12,18,12,43,15,3,16,16,30,97,21,44,40,7,12,29,5,26,37,37,38,7,93,57,7,31,5,3,11,42,3,27,62,54,33,49,5,42,23,76,7,40,66,7,5,16,3,33,38,38,5,24,23,60,74,145,62,7,5,51,29,81,14,49,7,37,66,7,5,21,3,1,38,40,42,48,40,38,42,44,64,45,19,9,46,3,3,34,24,18,34,34,36,42,67,64,24,42,32,26,28,40,32,35,44,1,34,70,46,25,35,44,51,44,1,27,37,35,37,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/sequelize.js"],"sourcesContent":["'use strict';\n\nconst url = require('url');\nconst path = require('path');\nconst pgConnectionString = require('pg-connection-string');\nconst retry = require('retry-as-promised').default;\nconst _ = require('lodash');\n\nconst Utils = require('./utils');\nconst Model = require('./model');\nconst DataTypes = require('./data-types');\nconst Deferrable = require('./deferrable');\nconst ModelManager = require('./model-manager');\nconst Transaction = require('./transaction');\nconst QueryTypes = require('./query-types');\nconst TableHints = require('./table-hints');\nconst IndexHints = require('./index-hints');\nconst sequelizeErrors = require('./errors');\nconst Hooks = require('./hooks');\nconst Association = require('./associations/index');\nconst Validator = require('./utils/validator-extras').validator;\nconst Op = require('./operators');\nconst deprecations = require('./utils/deprecations');\nconst { QueryInterface } = require('./dialects/abstract/query-interface');\nconst { BelongsTo } = require('./associations/belongs-to');\nconst HasOne = require('./associations/has-one');\nconst { BelongsToMany } = require('./associations/belongs-to-many');\nconst { HasMany } = require('./associations/has-many');\nconst { withSqliteForeignKeysOff } = require('./dialects/sqlite/sqlite-utils');\nconst { injectReplacements } = require('./utils/sql');\n\n/**\n * This is the main class, the entry point to sequelize.\n */\nclass Sequelize {\n  /**\n   * Instantiate sequelize with name of database, username and password.\n   *\n   * @example\n   * // without password / with blank password\n   * const sequelize = new Sequelize('database', 'username', null, {\n   *   dialect: 'mysql'\n   * })\n   *\n   * // with password and options\n   * const sequelize = new Sequelize('my_database', 'john', 'doe', {\n   *   dialect: 'postgres'\n   * })\n   *\n   * // with database, username, and password in the options object\n   * const sequelize = new Sequelize({ database, username, password, dialect: 'mssql' });\n   *\n   * // with uri\n   * const sequelize = new Sequelize('mysql://localhost:3306/database', {})\n   *\n   * // option examples\n   * const sequelize = new Sequelize('database', 'username', 'password', {\n   *   // the sql dialect of the database\n   *   // currently supported: 'mysql', 'sqlite', 'postgres', 'mssql'\n   *   dialect: 'mysql',\n   *\n   *   // custom host; default: localhost\n   *   host: 'my.server.tld',\n   *   // for postgres, you can also specify an absolute path to a directory\n   *   // containing a UNIX socket to connect over\n   *   // host: '/sockets/psql_sockets'.\n   *\n   *   // custom port; default: dialect default\n   *   port: 12345,\n   *\n   *   // custom protocol; default: 'tcp'\n   *   // postgres only, useful for Heroku\n   *   protocol: null,\n   *\n   *   // disable logging or provide a custom logging function; default: console.log\n   *   logging: false,\n   *\n   *   // you can also pass any dialect options to the underlying dialect library\n   *   // - default is empty\n   *   // - currently supported: 'mysql', 'postgres', 'mssql'\n   *   dialectOptions: {\n   *     socketPath: '/Applications/MAMP/tmp/mysql/mysql.sock',\n   *     supportBigNumbers: true,\n   *     bigNumberStrings: true\n   *   },\n   *\n   *   // the storage engine for sqlite\n   *   // - default ':memory:'\n   *   storage: 'path/to/database.sqlite',\n   *\n   *   // disable inserting undefined values as NULL\n   *   // - default: false\n   *   omitNull: true,\n   *\n   *   // a flag for using a native library or not.\n   *   // in the case of 'pg' -- set this to true will allow SSL support\n   *   // - default: false\n   *   native: true,\n   *\n   *   // A flag that defines if connection should be over ssl or not\n   *   // - default: undefined\n   *   ssl: true,\n   *\n   *   // Specify options, which are used when sequelize.define is called.\n   *   // The following example:\n   *   //   define: { timestamps: false }\n   *   // is basically the same as:\n   *   //   Model.init(attributes, { timestamps: false });\n   *   //   sequelize.define(name, attributes, { timestamps: false });\n   *   // so defining the timestamps for each model will be not necessary\n   *   define: {\n   *     underscored: false,\n   *     freezeTableName: false,\n   *     charset: 'utf8',\n   *     dialectOptions: {\n   *       collate: 'utf8_general_ci'\n   *     },\n   *     timestamps: true\n   *   },\n   *\n   *   // similar for sync: you can define this to always force sync for models\n   *   sync: { force: true },\n   *\n   *   // pool configuration used to pool database connections\n   *   pool: {\n   *     max: 5,\n   *     idle: 30000,\n   *     acquire: 60000,\n   *   },\n   *\n   *   // isolation level of each transaction\n   *   // defaults to dialect default\n   *   isolationLevel: Transaction.ISOLATION_LEVELS.REPEATABLE_READ\n   * })\n   *\n   * @param {string}   [database] The name of the database\n   * @param {string}   [username=null] The username which is used to authenticate against the database.\n   * @param {string}   [password=null] The password which is used to authenticate against the database. Supports SQLCipher encryption for SQLite.\n   * @param {object}   [options={}] An object with options.\n   * @param {string}   [options.host='localhost'] The host of the relational database.\n   * @param {number}   [options.port] The port of the relational database.\n   * @param {string}   [options.username=null] The username which is used to authenticate against the database.\n   * @param {string}   [options.password=null] The password which is used to authenticate against the database.\n   * @param {string}   [options.database=null] The name of the database.\n   * @param {string}   [options.dialect] The dialect of the database you are connecting to. One of mysql, postgres, sqlite, db2, mariadb and mssql.\n   * @param {string}   [options.dialectModule=null] If specified, use this dialect library. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify 'require(\"pg.js\")' here\n   * @param {string}   [options.dialectModulePath=null] If specified, load the dialect library from this path. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify '/path/to/pg.js' here\n   * @param {object}   [options.dialectOptions] An object of additional options, which are passed directly to the connection library\n   * @param {string}   [options.storage] Only used by sqlite. Defaults to ':memory:'\n   * @param {string}   [options.protocol='tcp'] The protocol of the relational database.\n   * @param {object}   [options.define={}] Default options for model definitions. See {@link Model.init}.\n   * @param {object}   [options.query={}] Default options for sequelize.query\n   * @param {string}   [options.schema=null] A schema to use\n   * @param {object}   [options.set={}] Default options for sequelize.set\n   * @param {object}   [options.sync={}] Default options for sequelize.sync\n   * @param {string}   [options.timezone='+00:00'] The timezone used when converting a date from the database into a JavaScript date. The timezone is also used to SET TIMEZONE when connecting to the server, to ensure that the result of NOW, CURRENT_TIMESTAMP and other time related functions have in the right timezone. For best cross platform performance use the format +/-HH:MM. Will also accept string versions of timezones used by moment.js (e.g. 'America/Los_Angeles'); this is useful to capture daylight savings time changes.\n   * @param {string|boolean} [options.clientMinMessages='warning'] (Deprecated) The PostgreSQL `client_min_messages` session parameter. Set to `false` to not override the database's default.\n   * @param {boolean}  [options.standardConformingStrings=true] The PostgreSQL `standard_conforming_strings` session parameter. Set to `false` to not set the option. WARNING: Setting this to false may expose vulnerabilities and is not recommended!\n   * @param {Function} [options.logging=console.log] A function that gets executed every time Sequelize would log something. Function may receive multiple parameters but only first one is printed by `console.log`. To print all values use `(...msg) => console.log(msg)`\n   * @param {boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {boolean}  [options.omitNull=false] A flag that defines if null values should be passed as values to CREATE/UPDATE SQL queries or not.\n   * @param {boolean}  [options.native=false] A flag that defines if native library shall be used or not. Currently only has an effect for postgres\n   * @param {boolean}  [options.ssl=undefined] A flag that defines if connection should be over ssl or not\n   * @param {boolean}  [options.replication=false] Use read / write replication. To enable replication, pass an object, with two properties, read and write. Write should be an object (a single server for handling writes), and read an array of object (several servers to handle reads). Each read/write server can have the following properties: `host`, `port`, `username`, `password`, `database`\n   * @param {object}   [options.pool] sequelize connection pool configuration\n   * @param {number}   [options.pool.max=5] Maximum number of connection in pool\n   * @param {number}   [options.pool.min=0] Minimum number of connection in pool\n   * @param {number}   [options.pool.idle=10000] The maximum time, in milliseconds, that a connection can be idle before being released.\n   * @param {number}   [options.pool.acquire=60000] The maximum time, in milliseconds, that pool will try to get connection before throwing error\n   * @param {number}   [options.pool.evict=1000] The time interval, in milliseconds, after which sequelize-pool will remove idle connections.\n   * @param {Function} [options.pool.validate] A function that validates a connection. Called with client. The default function checks that client is an object, and that its state is not disconnected\n   * @param {number}   [options.pool.maxUses=Infinity] The number of times a connection can be used before discarding it for a replacement, [`used for eventual cluster rebalancing`](https://github.com/sequelize/sequelize-pool).\n   * @param {boolean}  [options.quoteIdentifiers=true] Set to `false` to make table names and attributes case-insensitive on Postgres and skip double quoting of them.  WARNING: Setting this to false may expose vulnerabilities and is not recommended!\n   * @param {string}   [options.transactionType='DEFERRED'] Set the default transaction type. See `Sequelize.Transaction.TYPES` for possible options. Sqlite only.\n   * @param {string}   [options.isolationLevel] Set the default transaction isolation level. See `Sequelize.Transaction.ISOLATION_LEVELS` for possible options.\n   * @param {object}   [options.retry] Set of flags that control when a query is automatically retried. Accepts all options for [`retry-as-promised`](https://github.com/mickhansen/retry-as-promised).\n   * @param {Array}    [options.retry.match] Only retry a query if the error matches one of these strings.\n   * @param {number}   [options.retry.max] How many times a failing query is automatically retried.  Set to 0 to disable retrying on SQL_BUSY error.\n   * @param {boolean}  [options.typeValidation=false] Run built-in type validators on insert and update, and select with where clause, e.g. validate that arguments passed to integer fields are integer-like.\n   * @param {object}   [options.operatorsAliases] String based operator alias. Pass object to limit set of aliased operators.\n   * @param {object}   [options.hooks] An object of global hook functions that are called before and after certain lifecycle events. Global hooks will run after any model-specific hooks defined for the same event (See `Sequelize.Model.init()` for a list).  Additionally, `beforeConnect()`, `afterConnect()`, `beforeDisconnect()`, and `afterDisconnect()` hooks may be defined here.\n   * @param {boolean}  [options.minifyAliases=false] A flag that defines if aliases should be minified (mostly useful to avoid Postgres alias character limit of 64)\n   * @param {boolean}  [options.logQueryParameters=false] A flag that defines if show bind parameters in log.\n   */\n  constructor(database, username, password, options) {\n    let config;\n\n    if (arguments.length === 1 && typeof database === 'object') {\n      // new Sequelize({ ... options })\n      options = database;\n      config = _.pick(options, 'host', 'port', 'database', 'username', 'password');\n    } else if (arguments.length === 1 && typeof database === 'string' || arguments.length === 2 && typeof username === 'object') {\n      // new Sequelize(URI, { ... options })\n\n      config = {};\n      options = username || {};\n\n      const urlParts = url.parse(arguments[0], true);\n\n      options.dialect = urlParts.protocol.replace(/:$/, '');\n      options.host = urlParts.hostname;\n\n      if (options.dialect === 'sqlite' && urlParts.pathname && !urlParts.pathname.startsWith('/:memory')) {\n        const storagePath = path.join(options.host, urlParts.pathname);\n        options.storage = path.resolve(options.storage || storagePath);\n      }\n\n      if (urlParts.pathname) {\n        config.database = urlParts.pathname.replace(/^\\//, '');\n      }\n\n      if (urlParts.port) {\n        options.port = urlParts.port;\n      }\n\n      if (urlParts.auth) {\n        const authParts = urlParts.auth.split(':');\n\n        config.username = authParts[0];\n\n        if (authParts.length > 1)\n          config.password = authParts.slice(1).join(':');\n      }\n\n      if (urlParts.query) {\n        // Allow host query argument to override the url host.\n        // Enables specifying domain socket hosts which cannot be specified via the typical\n        // host part of a url.\n        if (urlParts.query.host) {\n          options.host = urlParts.query.host;\n        }\n\n        if (options.dialectOptions) {\n          Object.assign(options.dialectOptions, urlParts.query);\n        } else {\n          options.dialectOptions = urlParts.query;\n          if (urlParts.query.options) {\n            try {\n              const o = JSON.parse(urlParts.query.options);\n              options.dialectOptions.options = o;\n            } catch (e) {\n              // Nothing to do, string is not a valid JSON\n              // an thus does not need any further processing\n            }\n          }\n        }\n      }\n\n      // For postgres, we can use this helper to load certs directly from the\n      // connection string.\n      if (['postgres', 'postgresql'].includes(options.dialect)) {\n        Object.assign(options.dialectOptions, pgConnectionString.parse(arguments[0]));\n      }\n    } else {\n      // new Sequelize(database, username, password, { ... options })\n      options = options || {};\n      config = { database, username, password };\n    }\n\n    Sequelize.runHooks('beforeInit', config, options);\n\n    this.options = {\n      dialect: null,\n      dialectModule: null,\n      dialectModulePath: null,\n      host: 'localhost',\n      protocol: 'tcp',\n      define: {},\n      query: {},\n      sync: {},\n      timezone: '+00:00',\n      standardConformingStrings: true,\n      // eslint-disable-next-line no-console\n      logging: console.log,\n      omitNull: false,\n      native: false,\n      replication: false,\n      ssl: undefined,\n      pool: {},\n      quoteIdentifiers: true,\n      hooks: {},\n      retry: {\n        max: 5,\n        match: [\n          'SQLITE_BUSY: database is locked'\n        ]\n      },\n      transactionType: Transaction.TYPES.DEFERRED,\n      isolationLevel: null,\n      databaseVersion: 0,\n      typeValidation: false,\n      benchmark: false,\n      minifyAliases: false,\n      logQueryParameters: false,\n      attributeBehavior: 'throw',\n      ...options\n    };\n\n    if (!this.options.dialect) {\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n    }\n\n    if (this.options.dialect === 'postgresql') {\n      this.options.dialect = 'postgres';\n    }\n\n    if (this.options.dialect === 'sqlite' && this.options.timezone !== '+00:00') {\n      throw new Error('Setting a custom timezone is not supported by SQLite, dates are always returned as UTC. Please remove the custom timezone parameter.');\n    }\n\n    if (this.options.logging === true) {\n      deprecations.noTrueLogging();\n      // eslint-disable-next-line no-console\n      this.options.logging = console.log;\n    }\n\n    this._setupHooks(options.hooks);\n\n    this.config = {\n      database: config.database || this.options.database,\n      username: config.username || this.options.username,\n      password: config.password || this.options.password || null,\n      host: config.host || this.options.host,\n      port: config.port || this.options.port,\n      pool: this.options.pool,\n      protocol: this.options.protocol,\n      native: this.options.native,\n      ssl: this.options.ssl,\n      replication: this.options.replication,\n      dialectModule: this.options.dialectModule,\n      dialectModulePath: this.options.dialectModulePath,\n      keepDefaultTimezone: this.options.keepDefaultTimezone,\n      dialectOptions: this.options.dialectOptions\n    };\n\n    let Dialect;\n    // Requiring the dialect in a switch-case to keep the\n    // require calls static. (Browserify fix)\n    switch (this.getDialect()) {\n      case 'mariadb':\n        Dialect = require('./dialects/mariadb');\n        break;\n      case 'mssql':\n        Dialect = require('./dialects/mssql');\n        break;\n      case 'mysql':\n        Dialect = require('./dialects/mysql');\n        break;\n      case 'oracle':\n        Dialect = require('./dialects/oracle');\n        break;\n      case 'postgres':\n        Dialect = require('./dialects/postgres');\n        break;\n      case 'sqlite':\n        Dialect = require('./dialects/sqlite');\n        break;\n      case 'db2':\n        Dialect = require('./dialects/db2');\n        break;\n      case 'snowflake':\n        Dialect = require('./dialects/snowflake');\n        break;\n      default:\n        throw new Error(`The dialect ${this.getDialect()} is not supported. Supported dialects: mssql, mariadb, mysql, oracle, postgres, db2 and sqlite.`);\n    }\n\n    this.dialect = new Dialect(this);\n    this.dialect.queryGenerator.typeValidation = options.typeValidation;\n\n    if (_.isPlainObject(this.options.operatorsAliases)) {\n      deprecations.noStringOperators();\n      this.dialect.queryGenerator.setOperatorsAliases(this.options.operatorsAliases);\n    } else if (typeof this.options.operatorsAliases === 'boolean') {\n      deprecations.noBoolOperatorAliases();\n    }\n\n    this.queryInterface = this.dialect.queryInterface;\n\n    /**\n     * Models are stored here under the name given to `sequelize.define`\n     */\n    this.models = {};\n    this.modelManager = new ModelManager(this);\n    this.connectionManager = this.dialect.connectionManager;\n\n    Sequelize.runHooks('afterInit', this);\n  }\n\n  /**\n   * Refresh data types and parsers.\n   *\n   * @private\n   */\n  refreshTypes() {\n    this.connectionManager.refreshTypeParser(DataTypes);\n  }\n\n  /**\n   * Returns the specified dialect.\n   *\n   * @returns {string} The specified dialect.\n   */\n  getDialect() {\n    return this.options.dialect;\n  }\n\n  /**\n   * Returns the database name.\n   *\n   * @returns {string} The database name.\n   */\n  getDatabaseName() {\n    return this.config.database;\n  }\n\n  /**\n   * Returns an instance of QueryInterface.\n   *\n   * @returns {QueryInterface} An instance (singleton) of QueryInterface.\n   */\n  getQueryInterface() {\n    return this.queryInterface;\n  }\n\n  /**\n   * Define a new model, representing a table in the database.\n   *\n   * The table columns are defined by the object that is given as the second argument. Each key of the object represents a column\n   *\n   * @param {string} modelName The name of the model. The model will be stored in `sequelize.models` under this name\n   * @param {object} attributes An object, where each attribute is a column of the table. See {@link Model.init}\n   * @param {object} [options] These options are merged with the default define options provided to the Sequelize constructor and passed to Model.init()\n   *\n   * @see\n   * {@link Model.init} for a more comprehensive specification of the `options` and `attributes` objects.\n   * @see\n   * <a href=\"/master/manual/model-basics.html\">Model Basics</a> guide\n   *\n   * @returns {Model} Newly defined model\n   *\n   * @example\n   * sequelize.define('modelName', {\n   *   columnA: {\n   *       type: Sequelize.BOOLEAN,\n   *       validate: {\n   *         is: [\"[a-z]\",'i'],        // will only allow letters\n   *         max: 23,                  // only allow values <= 23\n   *         isIn: {\n   *           args: [['en', 'zh']],\n   *           msg: \"Must be English or Chinese\"\n   *         }\n   *       },\n   *       field: 'column_a'\n   *   },\n   *   columnB: Sequelize.STRING,\n   *   columnC: 'MY VERY OWN COLUMN TYPE'\n   * });\n   *\n   * sequelize.models.modelName // The model will now be available in models under the name given to define\n   */\n  define(modelName, attributes, options = {}) {\n    options.modelName = modelName;\n    options.sequelize = this;\n\n    const model = class extends Model {};\n\n    model.init(attributes, options);\n\n    return model;\n  }\n\n  /**\n   * Fetch a Model which is already defined\n   *\n   * @param {string} modelName The name of a model defined with Sequelize.define\n   *\n   * @throws Will throw an error if the model is not defined (that is, if sequelize#isDefined returns false)\n   * @returns {Model} Specified model\n   */\n  model(modelName) {\n    if (!this.isDefined(modelName)) {\n      throw new Error(`${modelName} has not been defined`);\n    }\n\n    return this.modelManager.getModel(modelName);\n  }\n\n  /**\n   * Checks whether a model with the given name is defined\n   *\n   * @param {string} modelName The name of a model defined with Sequelize.define\n   *\n   * @returns {boolean} Returns true if model is already defined, otherwise false\n   */\n  isDefined(modelName) {\n    return !!this.modelManager.models.find(model => model.name === modelName);\n  }\n\n  /**\n   * Execute a query on the DB, optionally bypassing all the Sequelize goodness.\n   *\n   * By default, the function will return two arguments: an array of results, and a metadata object, containing number of affected rows etc.\n   *\n   * If you are running a type of query where you don't need the metadata, for example a `SELECT` query, you can pass in a query type to make sequelize format the results:\n   *\n   * ```js\n   * const [results, metadata] = await sequelize.query('SELECT...'); // Raw query - use array destructuring\n   *\n   * const results = await sequelize.query('SELECT...', { type: sequelize.QueryTypes.SELECT }); // SELECT query - no destructuring\n   * ```\n   *\n   * @param {string}          sql\n   * @param {object}          [options={}] Query options.\n   * @param {boolean}         [options.raw] If true, sequelize will not try to format the results of the query, or build an instance of a model from the result\n   * @param {Transaction}     [options.transaction=null] The transaction that the query should be executed under\n   * @param {QueryTypes}      [options.type='RAW'] The type of query you are executing. The query type affects how results are formatted before they are passed back. The type is a string, but `Sequelize.QueryTypes` is provided as convenience shortcuts.\n   * @param {boolean}         [options.nest=false] If true, transforms objects with `.` separated property names into nested objects using [dottie.js](https://github.com/mickhansen/dottie.js). For example { 'user.username': 'john' } becomes { user: { username: 'john' }}. When `nest` is true, the query type is assumed to be `'SELECT'`, unless otherwise specified\n   * @param {boolean}         [options.plain=false] Sets the query type to `SELECT` and return a single row\n   * @param {object|Array}    [options.replacements] Either an object of named parameter replacements in the format `:param` or an array of unnamed replacements to replace `?` in your SQL.\n   * @param {object|Array}    [options.bind] Either an object of named bind parameter in the format `_param` or an array of unnamed bind parameter to replace `$1, $2, ...` in your SQL.\n   * @param {boolean}         [options.useMaster=false] Force the query to use the write pool, regardless of the query type.\n   * @param {Function}        [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Model}           [options.instance] A sequelize model instance whose Model is to be used to build the query result\n   * @param {typeof Model}    [options.model] A sequelize model used to build the returned model instances\n   * @param {object}          [options.retry] Set of flags that control when a query is automatically retried. Accepts all options for [`retry-as-promised`](https://github.com/mickhansen/retry-as-promised).\n   * @param {Array}           [options.retry.match] Only retry a query if the error matches one of these strings.\n   * @param {Integer}         [options.retry.max] How many times a failing query is automatically retried.\n   * @param {string}          [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean}         [options.supportsSearchPath] If false do not prepend the query with the search_path (Postgres only)\n   * @param {boolean}         [options.mapToModel=false] Map returned fields to model's fields if `options.model` or `options.instance` is present. Mapping will occur before building the model instance.\n   * @param {object}          [options.fieldMap] Map returned fields to arbitrary names for `SELECT` query type.\n   * @param {boolean}         [options.rawErrors=false] Set to `true` to cause errors coming from the underlying connection/database library to be propagated unmodified and unformatted. Else, the default behavior (=false) is to reinterpret errors as sequelize.errors.BaseError objects.\n   *\n   * @returns {Promise}\n   *\n   * @see {@link Model.build} for more information about instance option.\n   */\n\n  async query(sql, options) {\n    options = { ...this.options.query, ...options };\n\n    if (options.instance && !options.model) {\n      options.model = options.instance.constructor;\n    }\n\n    if (!options.instance && !options.model) {\n      options.raw = true;\n    }\n\n    // map raw fields to model attributes\n    if (options.mapToModel) {\n      options.fieldMap = _.get(options, 'model.fieldAttributeMap', {});\n    }\n\n    options = _.defaults(options, {\n      // eslint-disable-next-line no-console\n      logging: Object.prototype.hasOwnProperty.call(this.options, 'logging') ? this.options.logging : console.log,\n      searchPath: Object.prototype.hasOwnProperty.call(this.options, 'searchPath') ? this.options.searchPath : 'DEFAULT'\n    });\n\n    if (!options.type) {\n      if (options.model || options.nest || options.plain) {\n        options.type = QueryTypes.SELECT;\n      } else {\n        options.type = QueryTypes.RAW;\n      }\n    }\n\n    //if dialect doesn't support search_path or dialect option\n    //to prepend searchPath is not true delete the searchPath option\n    if (\n      !this.dialect.supports.searchPath ||\n      !this.options.dialectOptions ||\n      !this.options.dialectOptions.prependSearchPath ||\n      options.supportsSearchPath === false\n    ) {\n      delete options.searchPath;\n    } else if (!options.searchPath) {\n      //if user wants to always prepend searchPath (dialectOptions.preprendSearchPath = true)\n      //then set to DEFAULT if none is provided\n      options.searchPath = 'DEFAULT';\n    }\n\n    if (typeof sql === 'object') {\n      if (sql.values !== undefined) {\n        if (options.replacements !== undefined) {\n          throw new Error('Both `sql.values` and `options.replacements` cannot be set at the same time');\n        }\n        options.replacements = sql.values;\n      }\n\n      if (sql.bind !== undefined) {\n        if (options.bind !== undefined) {\n          throw new Error('Both `sql.bind` and `options.bind` cannot be set at the same time');\n        }\n        options.bind = sql.bind;\n      }\n\n      if (sql.query !== undefined) {\n        sql = sql.query;\n      }\n    }\n\n    sql = sql.trim();\n\n    if (options.replacements && options.bind) {\n      throw new Error('Both `replacements` and `bind` cannot be set at the same time');\n    }\n\n    if (options.replacements) {\n      sql = injectReplacements(sql, this.dialect, options.replacements);\n    }\n\n    let bindParameters;\n\n    if (options.bind) {\n      [sql, bindParameters] = this.dialect.Query.formatBindParameters(sql, options.bind, this.options.dialect);\n    }\n\n    const checkTransaction = () => {\n      if (options.transaction && options.transaction.finished && !options.completesTransaction) {\n        const error = new Error(`${options.transaction.finished} has been called on this transaction(${options.transaction.id}), you can no longer use it. (The rejected query is attached as the 'sql' property of this error)`);\n        error.sql = sql;\n        throw error;\n      }\n    };\n\n    const retryOptions = { ...this.options.retry, ...options.retry };\n\n    return retry(async () => {\n      if (options.transaction === undefined && Sequelize._cls) {\n        options.transaction = Sequelize._cls.get('transaction');\n      }\n\n      checkTransaction();\n\n      const connection = await (options.transaction ? options.transaction.connection : this.connectionManager.getConnection(options));\n\n      if (this.options.dialect === 'db2' && options.alter) {\n        if (options.alter.drop === false) {\n          connection.dropTable = false;\n        }\n      }\n      const query = new this.dialect.Query(connection, this, options);\n\n      try {\n        await this.runHooks('beforeQuery', options, query);\n        checkTransaction();\n        return await query.run(sql, bindParameters);\n      } finally {\n        await this.runHooks('afterQuery', options, query);\n        if (!options.transaction) {\n          this.connectionManager.releaseConnection(connection);\n        }\n      }\n    }, retryOptions);\n  }\n\n  /**\n   * Execute a query which would set an environment or user variable. The variables are set per connection, so this function needs a transaction.\n   * Only works for MySQL or MariaDB.\n   *\n   * @param {object}        variables Object with multiple variables.\n   * @param {object}        [options] query options.\n   * @param {Transaction}   [options.transaction] The transaction that the query should be executed under\n   *\n   * @memberof Sequelize\n   *\n   * @returns {Promise}\n   */\n  async set(variables, options) {\n\n    // Prepare options\n    options = { ...this.options.set, ...typeof options === 'object' && options };\n\n    if (!['mysql', 'mariadb'].includes(this.options.dialect)) {\n      throw new Error('sequelize.set is only supported for mysql or mariadb');\n    }\n    if (!options.transaction || !(options.transaction instanceof Transaction) ) {\n      throw new TypeError('options.transaction is required');\n    }\n\n    // Override some options, since this isn't a SELECT\n    options.raw = true;\n    options.plain = true;\n    options.type = 'SET';\n\n    // Generate SQL Query\n    const query =\n      `SET ${\n        _.map(variables, (v, k) => `@${k} := ${typeof v === 'string' ? `\"${v}\"` : v}`).join(', ')}`;\n\n    return await this.query(query, options);\n  }\n\n  /**\n   * Escape value.\n   *\n   * @param {string} value string value to escape\n   *\n   * @returns {string}\n   */\n  escape(value) {\n    return this.dialect.queryGenerator.escape(value);\n  }\n\n  /**\n   * Create a new database schema.\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this command will do nothing.\n   *\n   * @see\n   * {@link Model.schema}\n   *\n   * @param {string} schema Name of the schema\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async createSchema(schema, options) {\n    return await this.getQueryInterface().createSchema(schema, options);\n  }\n\n  /**\n   * Show all defined schemas\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this will show all tables.\n   *\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async showAllSchemas(options) {\n    return await this.getQueryInterface().showAllSchemas(options);\n  }\n\n  /**\n   * Drop a single schema\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this drop a table matching the schema name\n   *\n   * @param {string} schema Name of the schema\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async dropSchema(schema, options) {\n    return await this.getQueryInterface().dropSchema(schema, options);\n  }\n\n  /**\n   * Drop all schemas.\n   *\n   * **Note:** this is a schema in the [postgres sense of the word](http://www.postgresql.org/docs/9.1/static/ddl-schemas.html),\n   * not a database table. In mysql and sqlite, this is the equivalent of drop all tables.\n   *\n   * @param {object} [options={}] query options\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async dropAllSchemas(options) {\n    return await this.getQueryInterface().dropAllSchemas(options);\n  }\n\n  /**\n   * Sync all defined models to the DB.\n   *\n   * @param {object} [options={}] sync options\n   * @param {boolean} [options.force=false] If force is true, each Model will run `DROP TABLE IF EXISTS`, before it tries to create its own table\n   * @param {RegExp} [options.match] Match a regex against the database name before syncing, a safety check for cases where force: true is used in tests but not live code\n   * @param {boolean|Function} [options.logging=console.log] A function that logs sql queries, or false for no logging\n   * @param {string} [options.schema='public'] The schema that the tables should be created in. This can be overridden for each table in sequelize.define\n   * @param {string} [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean} [options.hooks=true] If hooks is true then beforeSync, afterSync, beforeBulkSync, afterBulkSync hooks will be called\n   * @param {boolean|object} [options.alter=false] Alters tables to fit models. Provide an object for additional configuration. Not recommended for production use. If not further configured deletes data in columns that were removed or had their type changed in the model.\n   * @param {boolean} [options.alter.drop=true] Prevents any drop statements while altering a table when set to `false`\n   *\n   * @returns {Promise}\n   */\n  async sync(options) {\n    options = {\n      ...this.options,\n      ...this.options.sync,\n      ...options,\n      hooks: options ? options.hooks !== false : true\n    };\n\n    if (options.match) {\n      if (!options.match.test(this.config.database)) {\n        throw new Error(`Database \"${this.config.database}\" does not match sync match parameter \"${options.match}\"`);\n      }\n    }\n\n    if (options.hooks) {\n      await this.runHooks('beforeBulkSync', options);\n    }\n\n    if (options.force) {\n      await this.drop(options);\n    }\n\n    // no models defined, just authenticate\n    if (this.modelManager.models.length === 0) {\n      await this.authenticate(options);\n    } else {\n      const models = this.modelManager.getModelsTopoSortedByForeignKey();\n      if (models == null) {\n        return this._syncModelsWithCyclicReferences(options);\n      }\n\n      // reverse to start with the one model that does not depend on anything\n      models.reverse();\n\n      // Topologically sort by foreign key constraints to give us an appropriate\n      // creation order\n      for (const model of models) {\n        await model.sync(options);\n      }\n    }\n\n    if (options.hooks) {\n      await this.runHooks('afterBulkSync', options);\n    }\n\n    return this;\n  }\n\n  /**\n   * Used instead of sync() when two models reference each-other, so their foreign keys cannot be created immediately.\n   *\n   * @param {object} options - sync options\n   * @private\n   */\n  async _syncModelsWithCyclicReferences(options) {\n    if (this.dialect.name === 'sqlite') {\n      // Optimisation: no need to do this in two passes in SQLite because we can temporarily disable foreign keys\n      await withSqliteForeignKeysOff(this, options, async () => {\n        for (const model of this.modelManager.models) {\n          await model.sync(options);\n        }\n      });\n\n      return;\n    }\n\n    // create all tables, but don't create foreign key constraints\n    for (const model of this.modelManager.models) {\n      await model.sync({ ...options, withoutForeignKeyConstraints: true });\n    }\n\n    // add foreign key constraints\n    for (const model of this.modelManager.models) {\n      await model.sync({ ...options, force: false, alter: true });\n    }\n  }\n\n  /**\n   * Truncate all tables defined through the sequelize models.\n   * This is done by calling `Model.truncate()` on each model.\n   *\n   * @param {object} [options] The options passed to Model.destroy in addition to truncate\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   * @returns {Promise}\n   *\n   * @see\n   * {@link Model.truncate} for more information\n   */\n  async truncate(options) {\n    const sortedModels = this.modelManager.getModelsTopoSortedByForeignKey();\n    const models = sortedModels || this.modelManager.models;\n    const hasCyclicDependencies = sortedModels == null;\n\n    // we have cyclic dependencies, cascade must be enabled.\n    if (hasCyclicDependencies && (!options || !options.cascade)) {\n      throw new Error('Sequelize#truncate: Some of your models have cyclic references (foreign keys). You need to use the \"cascade\" option to be able to delete rows from models that have cyclic references.');\n    }\n\n    // TODO [>=7]: throw if options.cascade is specified but unsupported in the given dialect.\n    if (hasCyclicDependencies && this.dialect.name === 'sqlite') {\n      // Workaround: SQLite does not support options.cascade, but we can disable its foreign key constraints while we\n      // truncate all tables.\n      return withSqliteForeignKeysOff(this, options, async () => {\n        await Promise.all(models.map(model => model.truncate(options)));\n      });\n    }\n\n    if (options && options.cascade) {\n      for (const model of models) await model.truncate(options);\n    } else {\n      await Promise.all(models.map(model => model.truncate(options)));\n    }\n  }\n\n  /**\n   * Drop all tables defined through this sequelize instance.\n   * This is done by calling Model.drop on each model.\n   *\n   * @see\n   * {@link Model.drop} for options\n   *\n   * @param {object} [options] The options passed to each call to Model.drop\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   *\n   * @returns {Promise}\n   */\n  async drop(options) {\n    // if 'cascade' is specified, we don't have to worry about cyclic dependencies.\n    if (options && options.cascade) {\n      for (const model of this.modelManager.models) {\n        await model.drop(options);\n      }\n    }\n\n    const sortedModels = this.modelManager.getModelsTopoSortedByForeignKey();\n\n    // no cyclic dependency between models, we can delete them in an order that will not cause an error.\n    if (sortedModels) {\n      for (const model of sortedModels) {\n        await model.drop(options);\n      }\n    }\n\n    if (this.dialect.name === 'sqlite') {\n      // Optimisation: no need to do this in two passes in SQLite because we can temporarily disable foreign keys\n      await withSqliteForeignKeysOff(this, options, async () => {\n        for (const model of this.modelManager.models) {\n          await model.drop(options);\n        }\n      });\n\n      return;\n    }\n\n    // has cyclic dependency: we first remove each foreign key, then delete each model.\n    for (const model of this.modelManager.models) {\n      const tableName = model.getTableName();\n      const foreignKeys = await this.queryInterface.getForeignKeyReferencesForTable(tableName, options);\n\n      await Promise.all(foreignKeys.map(foreignKey => {\n        return this.queryInterface.removeConstraint(tableName, foreignKey.constraintName, options);\n      }));\n    }\n\n    for (const model of this.modelManager.models) {\n      await model.drop(options);\n    }\n  }\n\n  /**\n   * Test the connection by trying to authenticate. It runs `SELECT 1+1 AS result` query.\n   *\n   * @param {object} [options={}] query options\n   *\n   * @returns {Promise}\n   */\n  async authenticate(options) {\n    options = {\n      raw: true,\n      plain: true,\n      type: QueryTypes.SELECT,\n      ...options\n    };\n\n    await this.query(this.dialect.queryGenerator.authTestQuery(), options);\n\n    return;\n  }\n\n  async databaseVersion(options) {\n    return await this.getQueryInterface().databaseVersion(options);\n  }\n\n  /**\n   * Get the fn for random based on the dialect\n   *\n   * @returns {Sequelize.fn}\n   */\n  random() {\n    if (['postgres', 'sqlite', 'snowflake'].includes(this.getDialect())) {\n      return this.fn('RANDOM');\n    }\n    return this.fn('RAND');\n  }\n\n  /**\n   * Creates an object representing a database function. This can be used in search queries, both in where and order parts, and as default values in column definitions.\n   * If you want to refer to columns in your function, you should use `sequelize.col`, so that the columns are properly interpreted as columns and not a strings.\n   *\n   * @see\n   * {@link Model.findAll}\n   * @see\n   * {@link Sequelize.define}\n   * @see\n   * {@link Sequelize.col}\n   *\n   * @param {string} fn The function you want to call\n   * @param {any} args All further arguments will be passed as arguments to the function\n   *\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   * @returns {Sequelize.fn}\n   *\n   * @example <caption>Convert a user's username to upper case</caption>\n   * instance.update({\n   *   username: sequelize.fn('upper', sequelize.col('username'))\n   * });\n   */\n  static fn(fn, ...args) {\n    return new Utils.Fn(fn, args);\n  }\n\n  /**\n   * Creates an object which represents a column in the DB, this allows referencing another column in your query. This is often useful in conjunction with `sequelize.fn`, since raw string arguments to fn will be escaped.\n   *\n   * @see\n   * {@link Sequelize#fn}\n   *\n   * @param {string} col The name of the column\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.col}\n   */\n  static col(col) {\n    return new Utils.Col(col);\n  }\n\n  /**\n   * Creates an object representing a call to the cast function.\n   *\n   * @param {any} val The value to cast\n   * @param {string} type The type to cast it to\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.cast}\n   */\n  static cast(val, type) {\n    return new Utils.Cast(val, type);\n  }\n\n  /**\n   * Creates an object representing a literal, i.e. something that will not be escaped.\n   *\n   * @param {any} val literal value\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.literal}\n   */\n  static literal(val) {\n    return new Utils.Literal(val);\n  }\n\n  /**\n   * An AND query\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {...string|object} args Each argument will be joined by AND\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.and}\n   */\n  static and(...args) {\n    return { [Op.and]: args };\n  }\n\n  /**\n   * An OR query\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {...string|object} args Each argument will be joined by OR\n   * @since v2.0.0-dev3\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.or}\n   */\n  static or(...args) {\n    return { [Op.or]: args };\n  }\n\n  /**\n   * Creates an object representing nested where conditions for postgres/sqlite/mysql json data-type.\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {string|object} conditionsOrPath A hash containing strings/numbers or other nested hash, a string using dot notation or a string using postgres/sqlite/mysql json syntax.\n   * @param {string|number|boolean} [value] An optional value to compare against. Produces a string of the form \"<json path> = '<value>'\".\n   * @memberof Sequelize\n   *\n   * @returns {Sequelize.json}\n   */\n  static json(conditionsOrPath, value) {\n    return new Utils.Json(conditionsOrPath, value);\n  }\n\n  /**\n   * A way of specifying attr = condition.\n   *\n   * The attr can either be an object taken from `Model.rawAttributes` (for example `Model.rawAttributes.id` or `Model.rawAttributes.name`). The\n   * attribute should be defined in your model definition. The attribute can also be an object from one of the sequelize utility functions (`sequelize.fn`, `sequelize.col` etc.)\n   *\n   * For string attributes, use the regular `{ where: { attr: something }}` syntax. If you don't want your string to be escaped, use `sequelize.literal`.\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {object} attr The attribute, which can be either an attribute object from `Model.rawAttributes` or a sequelize object, for example an instance of `sequelize.fn`. For simple string attributes, use the POJO syntax\n   * @param {symbol} [comparator='Op.eq'] operator\n   * @param {string|object} logic The condition. Can be both a simply type, or a further condition (`or`, `and`, `.literal` etc.)\n   * @since v2.0.0-dev3\n   */\n  static where(attr, comparator, logic) {\n    return new Utils.Where(attr, comparator, logic);\n  }\n\n  /**\n   * Start a transaction. When using transactions, you should pass the transaction in the options argument in order for the query to happen under that transaction @see {@link Transaction}\n   *\n   * If you have [CLS](https://github.com/Jeff-Lewis/cls-hooked) enabled, the transaction will automatically be passed to any query that runs within the callback\n   *\n   * @example\n   *\n   * try {\n   *   const transaction = await sequelize.transaction();\n   *   const user = await User.findOne(..., { transaction });\n   *   await user.update(..., { transaction });\n   *   await transaction.commit();\n   * } catch {\n   *   await transaction.rollback()\n   * }\n   *\n   * @example <caption>A syntax for automatically committing or rolling back based on the promise chain resolution is also supported</caption>\n   *\n   * try {\n   *   await sequelize.transaction(transaction => { // Note that we pass a callback rather than awaiting the call with no arguments\n   *     const user = await User.findOne(..., {transaction});\n   *     await user.update(..., {transaction});\n   *   });\n   *   // Committed\n   * } catch(err) {\n   *   // Rolled back\n   *   console.error(err);\n   * }\n   * @example <caption>To enable CLS, add it do your project, create a namespace and set it on the sequelize constructor:</caption>\n   *\n   * const cls = require('cls-hooked');\n   * const namespace = cls.createNamespace('....');\n   * const Sequelize = require('sequelize');\n   * Sequelize.useCLS(namespace);\n   *\n   * // Note, that CLS is enabled for all sequelize instances, and all instances will share the same namespace\n   *\n   * @param {object}   [options] Transaction options\n   * @param {string}   [options.type='DEFERRED'] See `Sequelize.Transaction.TYPES` for possible options. Sqlite only.\n   * @param {string}   [options.isolationLevel] See `Sequelize.Transaction.ISOLATION_LEVELS` for possible options\n   * @param {string}   [options.deferrable] Sets the constraints to be deferred or immediately checked. See `Sequelize.Deferrable`. PostgreSQL Only\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Function} [autoCallback] The callback is called with the transaction object, and should return a promise. If the promise is resolved, the transaction commits; if the promise rejects, the transaction rolls back\n   *\n   * @returns {Promise}\n   */\n  async transaction(options, autoCallback) {\n    if (typeof options === 'function') {\n      autoCallback = options;\n      options = undefined;\n    }\n\n    const transaction = new Transaction(this, options);\n\n    if (!autoCallback) {\n      await transaction.prepareEnvironment(/* cls */ false);\n      return transaction;\n    }\n\n    // autoCallback provided\n    return Sequelize._clsRun(async () => {\n      await transaction.prepareEnvironment(/* cls */ true);\n\n      let result;\n      try {\n        result = await autoCallback(transaction);\n      } catch (err) {\n        try {\n          await transaction.rollback();\n        } catch (ignore) {\n          // ignore, because 'rollback' will already print the error before killing the connection\n        }\n\n        throw err;\n      }\n\n      await transaction.commit();\n      return result;\n    });\n  }\n\n  /**\n   * Use CLS (Continuation Local Storage) with Sequelize. With Continuation\n   * Local Storage, all queries within the transaction callback will\n   * automatically receive the transaction object.\n   *\n   * CLS namespace provided is stored as `Sequelize._cls`\n   *\n   * @param {object} ns CLS namespace\n   * @returns {object} Sequelize constructor\n   */\n  static useCLS(ns) {\n    // check `ns` is valid CLS namespace\n    if (!ns || typeof ns !== 'object' || typeof ns.bind !== 'function' || typeof ns.run !== 'function') throw new Error('Must provide CLS namespace');\n\n    // save namespace as `Sequelize._cls`\n    Sequelize._cls = ns;\n\n    // return Sequelize for chaining\n    return this;\n  }\n\n  /**\n   * Run function in CLS context.\n   * If no CLS context in use, just runs the function normally\n   *\n   * @private\n   * @param {Function} fn Function to run\n   * @returns {*} Return value of function\n   */\n  static _clsRun(fn) {\n    const ns = Sequelize._cls;\n    if (!ns) return fn();\n\n    let res;\n    ns.run(context => res = fn(context));\n    return res;\n  }\n\n  log(...args) {\n    let options;\n\n    const last = _.last(args);\n\n    if (last && _.isPlainObject(last) && Object.prototype.hasOwnProperty.call(last, 'logging')) {\n      options = last;\n\n      // remove options from set of logged arguments if options.logging is equal to console.log\n      // eslint-disable-next-line no-console\n      if (options.logging === console.log) {\n        args.splice(args.length - 1, 1);\n      }\n    } else {\n      options = this.options;\n    }\n\n    if (options.logging) {\n      if (options.logging === true) {\n        deprecations.noTrueLogging();\n        // eslint-disable-next-line no-console\n        options.logging = console.log;\n      }\n\n      // second argument is sql-timings, when benchmarking option enabled\n      // eslint-disable-next-line no-console\n      if ((this.options.benchmark || options.benchmark) && options.logging === console.log) {\n        args = [`${args[0]} Elapsed time: ${args[1]}ms`];\n      }\n\n      options.logging(...args);\n    }\n  }\n\n  /**\n   * Close all connections used by this sequelize instance, and free all references so the instance can be garbage collected.\n   *\n   * Normally this is done on process exit, so you only need to call this method if you are creating multiple instances, and want\n   * to garbage collect some of them.\n   *\n   * @returns {Promise}\n   */\n  close() {\n    return this.connectionManager.close();\n  }\n\n  normalizeDataType(Type) {\n    let type = typeof Type === 'function' ? new Type() : Type;\n    const dialectTypes = this.dialect.DataTypes || {};\n\n    if (dialectTypes[type.key]) {\n      type = dialectTypes[type.key].extend(type);\n    }\n\n    if (type instanceof DataTypes.ARRAY) {\n      if (!type.type) {\n        throw new Error('ARRAY is missing type definition for its values.');\n      }\n      if (dialectTypes[type.type.key]) {\n        type.type = dialectTypes[type.type.key].extend(type.type);\n      }\n    }\n\n    return type;\n  }\n\n  normalizeAttribute(attribute) {\n    if (!_.isPlainObject(attribute)) {\n      attribute = { type: attribute };\n    }\n\n    if (!attribute.type) return attribute;\n\n    attribute.type = this.normalizeDataType(attribute.type);\n\n    if (Object.prototype.hasOwnProperty.call(attribute, 'defaultValue')) {\n      if (typeof attribute.defaultValue === 'function' &&\n        [DataTypes.NOW, DataTypes.UUIDV1, DataTypes.UUIDV4].includes(attribute.defaultValue)\n      ) {\n        attribute.defaultValue = new attribute.defaultValue();\n      }\n    }\n\n    if (attribute.type instanceof DataTypes.ENUM) {\n      // The ENUM is a special case where the type is an object containing the values\n      if (attribute.values) {\n        attribute.type.values = attribute.type.options.values = attribute.values;\n      } else {\n        attribute.values = attribute.type.values;\n      }\n\n      if (!attribute.values.length) {\n        throw new Error('Values for ENUM have not been defined.');\n      }\n    }\n\n    return attribute;\n  }\n}\n\n// Aliases\nSequelize.prototype.fn = Sequelize.fn;\nSequelize.prototype.col = Sequelize.col;\nSequelize.prototype.cast = Sequelize.cast;\nSequelize.prototype.literal = Sequelize.literal;\nSequelize.prototype.and = Sequelize.and;\nSequelize.prototype.or = Sequelize.or;\nSequelize.prototype.json = Sequelize.json;\nSequelize.prototype.where = Sequelize.where;\nSequelize.prototype.validate = Sequelize.prototype.authenticate;\n\n/**\n * Sequelize version number.\n */\n// To avoid any errors on startup when this field is unused, only resolve it as needed.\n// this is to prevent any potential issues on startup with unusual environments (eg, bundled code)\n// where relative paths may fail that are unnecessary.\nObject.defineProperty(Sequelize, 'version', {\n  enumerable: true,\n  get() {\n    return require('../package.json').version;\n  }\n});\n\nSequelize.options = { hooks: {} };\n\n/**\n * @private\n */\nSequelize.Utils = Utils;\n\n/**\n * Operators symbols to be used for querying data\n *\n * @see  {@link Operators}\n */\nSequelize.Op = Op;\n\n/**\n * Available table hints to be used for querying data in mssql for table hints\n *\n * @see {@link TableHints}\n */\nSequelize.TableHints = TableHints;\n\n/**\n * Available index hints to be used for querying data in mysql for index hints\n *\n * @see {@link IndexHints}\n */\nSequelize.IndexHints = IndexHints;\n\n/**\n * A reference to the sequelize transaction class. Use this to access isolationLevels and types when creating a transaction\n *\n * @see {@link Transaction}\n * @see {@link Sequelize.transaction}\n */\nSequelize.Transaction = Transaction;\n\n/**\n * A reference to Sequelize constructor from sequelize. Useful for accessing DataTypes, Errors etc.\n *\n * @see {@link Sequelize}\n */\nSequelize.prototype.Sequelize = Sequelize;\n\n/**\n * Available query types for use with `sequelize.query`\n *\n * @see {@link QueryTypes}\n */\nSequelize.prototype.QueryTypes = Sequelize.QueryTypes = QueryTypes;\n\n/**\n * Exposes the validator.js object, so you can extend it with custom validation functions. The validator is exposed both on the instance, and on the constructor.\n *\n * @see https://github.com/chriso/validator.js\n */\nSequelize.prototype.Validator = Sequelize.Validator = Validator;\n\nSequelize.Model = Model;\n\nSequelize.QueryInterface = QueryInterface;\nSequelize.BelongsTo = BelongsTo;\nSequelize.HasOne = HasOne;\nSequelize.HasMany = HasMany;\nSequelize.BelongsToMany = BelongsToMany;\n\nSequelize.DataTypes = DataTypes;\nfor (const dataType in DataTypes) {\n  Sequelize[dataType] = DataTypes[dataType];\n}\n\n/**\n * A reference to the deferrable collection. Use this to access the different deferrable options.\n *\n * @see {@link Transaction.Deferrable}\n * @see {@link Sequelize#transaction}\n */\nSequelize.Deferrable = Deferrable;\n\n/**\n * A reference to the sequelize association class.\n *\n * @see {@link Association}\n */\nSequelize.prototype.Association = Sequelize.Association = Association;\n\n/**\n * Provide alternative version of `inflection` module to be used by `Utils.pluralize` etc.\n *\n * @param {object} _inflection - `inflection` module\n */\nSequelize.useInflection = Utils.useInflection;\n\n/**\n * Allow hooks to be defined on Sequelize + on sequelize instance as universal hooks to run on all models\n * and on Sequelize/sequelize methods e.g. Sequelize(), Sequelize#define()\n */\nHooks.applyTo(Sequelize);\nHooks.applyTo(Sequelize.prototype);\n\n/**\n * Expose various errors available\n */\n\n// expose alias to BaseError\nSequelize.Error = sequelizeErrors.BaseError;\n\nfor (const error of Object.keys(sequelizeErrors)) {\n  Sequelize[error] = sequelizeErrors[error];\n}\n\nmodule.exports = Sequelize;\nmodule.exports.Sequelize = Sequelize;\nmodule.exports.default = Sequelize;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,42,42,28,53,34,34,41,55,39,82,82,37,27,1,38,37,19,18,27,3,16,1,32,40,19,18,29,3,16,1,38,27,26,56,1,34,30,58,66,67,42,7,25,5,5,1,38,18,20,32,35,29,27,30,76,50,72,50,16,30,9,7,7,3,16,1,22,44,62,1,30,24,75,1,28,26,36,1,32,27,37,1,34,25,35,1,30,31,24,67,1,24,58,24,77,1,54,36,18,41,55,20,5,48,18,5,51,26,5,5,1,30,43,64,85,92,3,38,17,1,44,46,42,59,35,20,82,55,7,18,7,3,56,61,3,17,1,50,48,19,39,55,58,74,63,37,7,168,53,38,24,7,49,57,39,76,11,11,7,7,3,20,1,48,56,20,30,77,117,67,14,40,7,5,3,16,1,48,29,90,1,34,34,73,1,48,52,113,1,46,41,36,24,44,25,5,15,3,42,20,3,42,20,3,39,24,3,29,25,3,31,37,3,15,1,40,39,25,17,3,39,17,3,79,17,3,37,1,54,60,20,26,46,17,21,33,100,25,7,7,19,3,16,1,60,111,23,23,31,25,3,11,1,18,22,30,32,35,56,1,28,35,35,50,1,34,35,30,17,26,40,39,65,62,48,14,55,7,7,24,3,38,1,46,23,1,42,34,25,12,17,21,3,11,38,3,1,16,35,29,12,26,17,5,19,3,1,18,36,32,12,19,36,30,3,1,20,39,20,12,19,3,1,26,36,40,12,39,41,12,35,18,27,7,5,3,1,20,37,45,12,27,25,23,5,31,33,23,3,1,22,28,78,1,36,30,52,1,40,30,70,1,40,28,67,1,36,50,43,1,44,34,30,37,37,5,16,1,48,39,26,31,17,30,47,34,123,36,9,9,5,5,16,1,28,38,26,36,61,114,64,3,15,1,30,33,44,1,32,35,49,37,28,5,18,5,1,46,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/utils.js"],"sourcesContent":["'use strict';\n\nconst DataTypes = require('./data-types');\nconst SqlString = require('./sql-string');\nconst _ = require('lodash');\nconst baseIsNative = require('lodash/_baseIsNative');\nconst uuidv1 = require('uuid').v1;\nconst uuidv4 = require('uuid').v4;\nconst operators = require('./operators');\nconst operatorsSet = new Set(Object.values(operators));\n\nlet inflection = require('inflection');\n\nexports.classToInvokable = require('./utils/class-to-invokable').classToInvokable;\nexports.joinSQLFragments = require('./utils/join-sql-fragments').joinSQLFragments;\n\nfunction useInflection(_inflection) {\n  inflection = _inflection;\n}\nexports.useInflection = useInflection;\n\nfunction camelizeIf(str, condition) {\n  let result = str;\n\n  if (condition) {\n    result = camelize(str);\n  }\n\n  return result;\n}\nexports.camelizeIf = camelizeIf;\n\nfunction underscoredIf(str, condition) {\n  let result = str;\n\n  if (condition) {\n    result = underscore(str);\n  }\n\n  return result;\n}\nexports.underscoredIf = underscoredIf;\n\nfunction isPrimitive(val) {\n  const type = typeof val;\n  return ['string', 'number', 'boolean'].includes(type);\n}\nexports.isPrimitive = isPrimitive;\n\n// Same concept as _.merge, but don't overwrite properties that have already been assigned\nfunction mergeDefaults(a, b) {\n  return _.mergeWith(a, b, (objectValue, sourceValue) => {\n    // If it's an object, let _ handle it this time, we will be called again for each property\n    if (!_.isPlainObject(objectValue) && objectValue !== undefined) {\n      // _.isNative includes a check for core-js and throws an error if present.\n      // Depending on _baseIsNative bypasses the core-js check.\n      if (_.isFunction(objectValue) && baseIsNative(objectValue)) {\n        return sourceValue || objectValue;\n      }\n      return objectValue;\n    }\n  });\n}\nexports.mergeDefaults = mergeDefaults;\n\n// An alternative to _.merge, which doesn't clone its arguments\n// Cloning is a bad idea because options arguments may contain references to sequelize\n// models - which again reference database libs which don't like to be cloned (in particular pg-native)\nfunction merge() {\n  const result = {};\n\n  for (const obj of arguments) {\n    _.forOwn(obj, (value, key) => {\n      if (value !== undefined) {\n        if (!result[key]) {\n          result[key] = value;\n        } else if (_.isPlainObject(value) && _.isPlainObject(result[key])) {\n          result[key] = merge(result[key], value);\n        } else if (Array.isArray(value) && Array.isArray(result[key])) {\n          result[key] = value.concat(result[key]);\n        } else {\n          result[key] = value;\n        }\n      }\n    });\n  }\n\n  return result;\n}\nexports.merge = merge;\n\nfunction spliceStr(str, index, count, add) {\n  return str.slice(0, index) + add + str.slice(index + count);\n}\nexports.spliceStr = spliceStr;\n\nfunction camelize(str) {\n  return str.trim().replace(/[-_\\s]+(.)?/g, (match, c) => c.toUpperCase());\n}\nexports.camelize = camelize;\n\nfunction underscore(str) {\n  return inflection.underscore(str);\n}\nexports.underscore = underscore;\n\nfunction singularize(str) {\n  return inflection.singularize(str);\n}\nexports.singularize = singularize;\n\nfunction pluralize(str) {\n  return inflection.pluralize(str);\n}\nexports.pluralize = pluralize;\n\n/**\n * @deprecated use {@link injectReplacements} instead. This method has been removed in v7.\n *\n * @param {unknown[]} arr - first item is the SQL, following items are the positional replacements.\n * @param {AbstractDialect} dialect\n */\nfunction format(arr, dialect) {\n  const timeZone = null;\n  // Make a clone of the array beacuse format modifies the passed args\n  return SqlString.format(arr[0], arr.slice(1), timeZone, dialect);\n}\nexports.format = format;\n\n/**\n * @deprecated use {@link injectReplacements} instead. This method has been removed in v7.\n *\n * @param {string} sql\n * @param {object} parameters\n * @param {AbstractDialect} dialect\n */\nfunction formatNamedParameters(sql, parameters, dialect) {\n  const timeZone = null;\n  return SqlString.formatNamedParameters(sql, parameters, timeZone, dialect);\n}\nexports.formatNamedParameters = formatNamedParameters;\n\nfunction cloneDeep(obj, onlyPlain) {\n  obj = obj || {};\n  return _.cloneDeepWith(obj, elem => {\n    // Do not try to customize cloning of arrays or POJOs\n    if (Array.isArray(elem) || _.isPlainObject(elem)) {\n      return undefined;\n    }\n\n    // If we specified to clone only plain objects & arrays, we ignore everyhing else\n    // In any case, don't clone stuff that's an object, but not a plain one - fx example sequelize models and instances\n    if (onlyPlain || typeof elem === 'object') {\n      return elem;\n    }\n\n    // Preserve special data-types like `fn` across clones. _.get() is used for checking up the prototype chain\n    if (elem && typeof elem.clone === 'function') {\n      return elem.clone();\n    }\n  });\n}\nexports.cloneDeep = cloneDeep;\n\n/* Expand and normalize finder options */\nfunction mapFinderOptions(options, Model) {\n  if (options.attributes && Array.isArray(options.attributes)) {\n    options.attributes = Model._injectDependentVirtualAttributes(options.attributes);\n    options.attributes = options.attributes.filter(v => !Model._virtualAttributes.has(v));\n  }\n\n  mapOptionFieldNames(options, Model);\n\n  return options;\n}\nexports.mapFinderOptions = mapFinderOptions;\n\n/* Used to map field names in attributes and where conditions */\nfunction mapOptionFieldNames(options, Model) {\n  if (Array.isArray(options.attributes)) {\n    options.attributes = options.attributes.map(attr => {\n      // Object lookups will force any variable to strings, we don't want that for special objects etc\n      if (typeof attr !== 'string') return attr;\n      // Map attributes to aliased syntax attributes\n      if (Model.rawAttributes[attr] && attr !== Model.rawAttributes[attr].field) {\n        return [Model.rawAttributes[attr].field, attr];\n      }\n      return attr;\n    });\n  }\n\n  if (options.where && _.isPlainObject(options.where)) {\n    options.where = mapWhereFieldNames(options.where, Model);\n  }\n\n  return options;\n}\nexports.mapOptionFieldNames = mapOptionFieldNames;\n\nfunction mapWhereFieldNames(attributes, Model) {\n  if (attributes) {\n    attributes = cloneDeep(attributes);\n    getComplexKeys(attributes).forEach(attribute => {\n      const rawAttribute = Model.rawAttributes[attribute];\n\n      if (rawAttribute && rawAttribute.field !== rawAttribute.fieldName) {\n        attributes[rawAttribute.field] = attributes[attribute];\n        delete attributes[attribute];\n      }\n\n      if (_.isPlainObject(attributes[attribute])\n        && !(rawAttribute && (\n          rawAttribute.type instanceof DataTypes.HSTORE\n          || rawAttribute.type instanceof DataTypes.JSON))) { // Prevent renaming of HSTORE & JSON fields\n        attributes[attribute] = mapOptionFieldNames({\n          where: attributes[attribute]\n        }, Model).where;\n      }\n\n      if (Array.isArray(attributes[attribute])) {\n        attributes[attribute].forEach((where, index) => {\n          if (_.isPlainObject(where)) {\n            attributes[attribute][index] = mapWhereFieldNames(where, Model);\n          }\n        });\n      }\n\n    });\n  }\n\n  return attributes;\n}\nexports.mapWhereFieldNames = mapWhereFieldNames;\n\n/* Used to map field names in values */\nfunction mapValueFieldNames(dataValues, fields, Model) {\n  const values = {};\n\n  for (const attr of fields) {\n    if (dataValues[attr] !== undefined && !Model._virtualAttributes.has(attr)) {\n      // Field name mapping\n      if (Model.rawAttributes[attr] && Model.rawAttributes[attr].field && Model.rawAttributes[attr].field !== attr) {\n        values[Model.rawAttributes[attr].field] = dataValues[attr];\n      } else {\n        values[attr] = dataValues[attr];\n      }\n    }\n  }\n\n  return values;\n}\nexports.mapValueFieldNames = mapValueFieldNames;\n\nfunction isColString(value) {\n  return typeof value === 'string' && value[0] === '$' && value[value.length - 1] === '$';\n}\nexports.isColString = isColString;\n\nfunction canTreatArrayAsAnd(arr) {\n  return arr.some(arg => _.isPlainObject(arg) || arg instanceof Where);\n}\nexports.canTreatArrayAsAnd = canTreatArrayAsAnd;\n\nfunction combineTableNames(tableName1, tableName2) {\n  return tableName1.toLowerCase() < tableName2.toLowerCase() ? tableName1 + tableName2 : tableName2 + tableName1;\n}\nexports.combineTableNames = combineTableNames;\n\nfunction toDefaultValue(value, dialect) {\n  if (typeof value === 'function') {\n    const tmp = value();\n    if (tmp instanceof DataTypes.ABSTRACT) {\n      return tmp.toSql();\n    }\n    return tmp;\n  }\n  if (value instanceof DataTypes.UUIDV1) {\n    return uuidv1();\n  }\n  if (value instanceof DataTypes.UUIDV4) {\n    return uuidv4();\n  }\n  if (value instanceof DataTypes.NOW) {\n    return now(dialect);\n  }\n  if (Array.isArray(value)) {\n    return value.slice();\n  }\n  if (_.isPlainObject(value)) {\n    return { ...value };\n  }\n  return value;\n}\nexports.toDefaultValue = toDefaultValue;\n\n/**\n * Determine if the default value provided exists and can be described\n * in a db schema using the DEFAULT directive.\n *\n * @param  {*} value Any default value.\n * @returns {boolean} yes / no.\n * @private\n */\nfunction defaultValueSchemable(value) {\n  if (value === undefined) { return false; }\n\n  // TODO this will be schemable when all supported db\n  // have been normalized for this case\n  if (value instanceof DataTypes.NOW) { return false; }\n\n  if (value instanceof DataTypes.UUIDV1 || value instanceof DataTypes.UUIDV4) { return false; }\n\n  return typeof value !== 'function';\n}\nexports.defaultValueSchemable = defaultValueSchemable;\n\nfunction removeNullValuesFromHash(hash, omitNull, options) {\n  let result = hash;\n\n  options = options || {};\n  options.allowNull = options.allowNull || [];\n\n  if (omitNull) {\n    const _hash = {};\n\n    _.forIn(hash, (val, key) => {\n      if (options.allowNull.includes(key) || key.endsWith('Id') || val !== null && val !== undefined) {\n        _hash[key] = val;\n      }\n    });\n\n    result = _hash;\n  }\n\n  return result;\n}\nexports.removeNullValuesFromHash = removeNullValuesFromHash;\n\nconst dialects = new Set(['mariadb', 'mysql', 'postgres', 'sqlite', 'mssql', 'db2', 'oracle']);\n\nfunction now(dialect) {\n  const d = new Date();\n  if (!dialects.has(dialect)) {\n    d.setMilliseconds(0);\n  }\n  return d;\n}\nexports.now = now;\n\n// Note: Use the `quoteIdentifier()` and `escape()` methods on the\n// `QueryInterface` instead for more portable code.\n\nconst TICK_CHAR = '`';\nexports.TICK_CHAR = TICK_CHAR;\n\nfunction addTicks(s, tickChar) {\n  tickChar = tickChar || TICK_CHAR;\n  return tickChar + removeTicks(s, tickChar) + tickChar;\n}\nexports.addTicks = addTicks;\n\nfunction removeTicks(s, tickChar) {\n  tickChar = tickChar || TICK_CHAR;\n  return s.replace(new RegExp(tickChar, 'g'), '');\n}\nexports.removeTicks = removeTicks;\n\n/**\n * Receives a tree-like object and returns a plain object which depth is 1.\n *\n * - Input:\n *\n *  {\n *    name: 'John',\n *    address: {\n *      street: 'Fake St. 123',\n *      coordinates: {\n *        longitude: 55.6779627,\n *        latitude: 12.5964313\n *      }\n *    }\n *  }\n *\n * - Output:\n *\n *  {\n *    name: 'John',\n *    address.street: 'Fake St. 123',\n *    address.coordinates.latitude: 55.6779627,\n *    address.coordinates.longitude: 12.5964313\n *  }\n *\n * @param {object} value an Object\n * @returns {object} a flattened object\n * @private\n */\nfunction flattenObjectDeep(value) {\n  if (!_.isPlainObject(value)) return value;\n  const flattenedObj = {};\n\n  function flattenObject(obj, subPath) {\n    Object.keys(obj).forEach(key => {\n      const pathToProperty = subPath ? `${subPath}.${key}` : key;\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        flattenObject(obj[key], pathToProperty);\n      } else {\n        flattenedObj[pathToProperty] = _.get(obj, key);\n      }\n    });\n    return flattenedObj;\n  }\n\n  return flattenObject(value, undefined);\n}\nexports.flattenObjectDeep = flattenObjectDeep;\n\n/**\n * Utility functions for representing SQL functions, and columns that should be escaped.\n * Please do not use these functions directly, use Sequelize.fn and Sequelize.col instead.\n *\n * @private\n */\nclass SequelizeMethod {}\nexports.SequelizeMethod = SequelizeMethod;\n\nclass Fn extends SequelizeMethod {\n  constructor(fn, args) {\n    super();\n    this.fn = fn;\n    this.args = args;\n  }\n  clone() {\n    return new Fn(this.fn, this.args);\n  }\n}\nexports.Fn = Fn;\n\nclass Col extends SequelizeMethod {\n  constructor(col, ...args) {\n    super();\n    if (args.length > 0) {\n      col = args;\n    }\n    this.col = col;\n  }\n}\nexports.Col = Col;\n\nclass Cast extends SequelizeMethod {\n  constructor(val, type, json) {\n    super();\n    this.val = val;\n    this.type = (type || '').trim();\n    this.json = json || false;\n  }\n}\nexports.Cast = Cast;\n\nclass Literal extends SequelizeMethod {\n  constructor(val) {\n    super();\n    this.val = val;\n  }\n}\nexports.Literal = Literal;\n\nclass Json extends SequelizeMethod {\n  constructor(conditionsOrPath, value) {\n    super();\n    if (_.isObject(conditionsOrPath)) {\n      this.conditions = conditionsOrPath;\n    } else {\n      this.path = conditionsOrPath;\n      if (value) {\n        this.value = value;\n      }\n    }\n  }\n}\nexports.Json = Json;\n\nclass Where extends SequelizeMethod {\n  constructor(attribute, comparator, logic) {\n    super();\n    if (logic === undefined) {\n      logic = comparator;\n      comparator = '=';\n    }\n\n    this.attribute = attribute;\n    this.comparator = comparator;\n    this.logic = logic;\n  }\n}\nexports.Where = Where;\n\n//Collection of helper methods to make it easier to work with symbol operators\n\n/**\n * getOperators\n *\n * @param  {object} obj\n * @returns {Array<symbol>} All operators properties of obj\n * @private\n */\nfunction getOperators(obj) {\n  return Object.getOwnPropertySymbols(obj).filter(s => operatorsSet.has(s));\n}\nexports.getOperators = getOperators;\n\n/**\n * getComplexKeys\n *\n * @param  {object} obj\n * @returns {Array<string|symbol>} All keys including operators\n * @private\n */\nfunction getComplexKeys(obj) {\n  return getOperators(obj).concat(Object.keys(obj));\n}\nexports.getComplexKeys = getComplexKeys;\n\n/**\n * getComplexSize\n *\n * @param  {object|Array} obj\n * @returns {number}      Length of object properties including operators if obj is array returns its length\n * @private\n */\nfunction getComplexSize(obj) {\n  return Array.isArray(obj) ? obj.length : getComplexKeys(obj).length;\n}\nexports.getComplexSize = getComplexSize;\n\n/**\n * Returns true if a where clause is empty, even with Symbols\n *\n * @param  {object} obj\n * @returns {boolean}\n * @private\n */\nfunction isWhereEmpty(obj) {\n  return !!obj && _.isEmpty(obj) && getOperators(obj).length === 0;\n}\nexports.isWhereEmpty = isWhereEmpty;\n\n/**\n * Returns ENUM name by joining table and column name\n *\n * @param {string} tableName\n * @param {string} columnName\n * @returns {string}\n * @private\n */\nfunction generateEnumName(tableName, columnName) {\n  return `enum_${tableName}_${columnName}`;\n}\nexports.generateEnumName = generateEnumName;\n\n/**\n * Returns an new Object which keys are camelized\n *\n * @param {object} obj\n * @returns {string}\n * @private\n */\nfunction camelizeObjectKeys(obj) {\n  const newObj = new Object();\n  Object.keys(obj).forEach(key => {\n    newObj[camelize(key)] = obj[key];\n  });\n  return newObj;\n}\nexports.camelizeObjectKeys = camelizeObjectKeys;\n\n/**\n * Assigns own and inherited enumerable string and symbol keyed properties of source\n * objects to the destination object.\n *\n * https://lodash.com/docs/4.17.4#defaults\n *\n * **Note:** This method mutates `object`.\n *\n * @param {object} object The destination object.\n * @param {...object} [sources] The source objects.\n * @returns {object} Returns `object`.\n * @private\n */\nfunction defaults(object, ...sources) {\n  object = Object(object);\n\n  sources.forEach(source => {\n    if (source) {\n      source = Object(source);\n\n      getComplexKeys(source).forEach(key => {\n        const value = object[key];\n        if (\n          value === undefined ||\n            _.eq(value, Object.prototype[key]) &&\n            !Object.prototype.hasOwnProperty.call(object, key)\n\n        ) {\n          object[key] = source[key];\n        }\n      });\n    }\n  });\n\n  return object;\n}\nexports.defaults = defaults;\n\n/**\n *\n * @param {object} index\n * @param {Array}  index.fields\n * @param {string} [index.name]\n * @param {string|object} tableName\n *\n * @returns {object}\n * @private\n */\nfunction nameIndex(index, tableName) {\n  if (tableName.tableName) tableName = tableName.tableName;\n\n  if (!Object.prototype.hasOwnProperty.call(index, 'name')) {\n    const fields = index.fields.map(\n      field => typeof field === 'string' ? field : field.name || field.attribute\n    );\n    index.name = underscore(`${tableName}_${fields.join('_')}`);\n  }\n\n  return index;\n}\nexports.nameIndex = nameIndex;\n\n/**\n * Checks if 2 arrays intersect.\n *\n * @param {Array} arr1\n * @param {Array} arr2\n * @private\n */\nfunction intersects(arr1, arr2) {\n  return arr1.some(v => arr2.includes(v));\n}\nexports.intersects = intersects;\n\n/**\n * Stringify a value as JSON with some differences:\n * - bigints are stringified as a json string. (`safeStringifyJson({ val: 1n })` outputs `'{ \"val\": \"1\" }'`).\n *   This is because of a decision by TC39 to not support bigint in JSON.stringify https://github.com/tc39/proposal-bigint/issues/24\n *\n * @param {any} value the value to stringify.\n * @returns {string} the resulting json.\n */\nfunction safeStringifyJson(value /* : any */) /* : string */ {\n  return JSON.stringify(value, (key, value) => {\n    if (typeof value === 'bigint') {\n      return String(value);\n    }\n\n    return value;\n  });\n}\n\nexports.safeStringifyJson = safeStringifyJson;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/data-types.js":{"lineLengths":[13,29,28,27,44,64,44,33,45,20,67,67,16,21,31,3,11,20,3,29,26,45,5,17,3,29,26,45,5,61,3,21,21,3,27,26,28,27,20,5,3,26,37,3,1,37,31,31,12,79,27,34,41,3,11,29,33,30,7,3,19,70,87,20,7,96,5,16,3,16,24,31,16,3,23,29,3,1,27,31,70,3,11,29,30,30,7,3,1,29,23,12,71,27,40,3,11,41,18,26,20,28,18,26,14,24,5,3,19,36,96,5,16,3,1,31,11,20,3,19,36,96,5,16,3,1,31,29,12,38,17,23,8,5,27,34,38,38,40,32,38,3,11,26,23,35,47,39,7,20,5,25,28,5,25,28,5,18,3,19,44,115,5,16,3,22,138,20,5,48,31,5,18,3,18,26,33,16,3,18,26,33,16,3,25,31,3,25,31,3,1,30,19,42,115,5,16,3,1,31,1,32,1,33,1,30,1,28,33,72,3,19,44,95,5,16,3,1,27,33,72,3,1,29,33,72,3,1,30,33,78,3,11,41,87,5,21,3,19,46,97,5,16,3,1,25,16,17,23,19,5,27,40,31,5,17,4,21,37,4,30,49,3,2,47,53,1,32,11,24,3,19,46,97,5,16,3,20,45,57,25,7,32,30,75,7,30,64,7,5,17,3,1,44,29,11,18,3,1,29,23,12,71,27,40,3,11,22,3,19,43,94,5,16,3,29,87,29,5,17,3,36,169,19,5,62,19,5,16,3,33,27,47,51,7,61,5,26,3,29,33,48,5,52,3,1,33,11,18,3,20,45,3,29,59,48,5,17,3,36,62,19,5,62,19,5,16,3,1,31,19,34,96,5,16,3,1,33,14,16,3,21,33,3,1,30,1,28,1,29,23,12,71,27,40,3,11,41,18,26,20,28,18,26,14,24,5,3,19,63,94,5,16,3,21,34,33,35,14,46,7,5,38,29,3,16,23,3,30,34,33,35,14,46,7,5,36,3,1,30,30,24,12,69,25,38,48,46,5,40,27,3,19,32,95,5,29,94,5,16,3,1,29,28,104,94,5,16,3,1,31,28,104,94,5,16,3,1,31,28,107,96,5,16,3,1,32,35,12,41,36,33,25,3,1,29,24,12,26,84,48,75,12,6,33,27,3,19,39,115,5,16,3,1,30,21,12,60,27,87,3,11,36,3,19,32,95,5,16,3,24,60,3,1,33,27,12,66,27,29,29,3,30,90,3,30,93,3,1,34,34,27,12,66,27,29,29,3,30,90,3,30,93,3,1,35,29,19,67,94,5,16,3,1,29,19,62,94,5,16,3,1,32,19,70,97,5,16,3,1,33,19,36,96,5,16,3,1,36,11,9,7,7,9,10,11,12,10,9,8,7,7,11,10,6,7,10,19,7,9,9,9,17,8,10,8,7,8,7,29,9,11,12,7,7,10,9,10,2,39,63,24,49,3,3,22,75,69,73,71,69,65,77,71,46,38,40,24,50,5,5,1,54,40,48,5,1,37,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/data-types.js"],"sourcesContent":["'use strict';\n\nconst util = require('util');\nconst _ = require('lodash');\nconst wkx = require('wkx');\nconst sequelizeErrors = require('./errors');\nconst Validator = require('./utils/validator-extras').validator;\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\nconst { logger } = require('./utils/logger');\nconst warnings = {};\nconst { classToInvokable } = require('./utils/class-to-invokable');\nconst { joinSQLFragments } = require('./utils/join-sql-fragments');\n\nclass ABSTRACT {\n  toString(options) {\n    return this.toSql(options);\n  }\n  toSql() {\n    return this.key;\n  }\n  stringify(value, options) {\n    if (this._stringify) {\n      return this._stringify(value, options);\n    }\n    return value;\n  }\n  bindParam(value, options) {\n    if (this._bindParam) {\n      return this._bindParam(value, options);\n    }\n    return options.bindParam(this.stringify(value, options));\n  }\n  static toString() {\n    return this.name;\n  }\n  static warn(link, text) {\n    if (!warnings[text]) {\n      warnings[text] = true;\n      logger.warn(`${text} \\n>> Check: ${link}`);\n    }\n  }\n  static extend(oldType) {\n    return new this(oldType.options);\n  }\n}\n\nABSTRACT.prototype.dialectTypes = '';\n\n/**\n * STRING A variable length string\n */\nclass STRING extends ABSTRACT {\n  /**\n   * @param {number} [length=255] length of string\n   * @param {boolean} [binary=false] Is this binary?\n   */\n  constructor(length, binary) {\n    super();\n    const options = typeof length === 'object' && length || { length, binary };\n    this.options = options;\n    this._binary = options.binary;\n    this._length = options.length || 255;\n  }\n  toSql() {\n    return joinSQLFragments([\n      `VARCHAR(${this._length})`,\n      this._binary && 'BINARY'\n    ]);\n  }\n  validate(value) {\n    if (Object.prototype.toString.call(value) !== '[object String]') {\n      if (this.options.binary && Buffer.isBuffer(value) || typeof value === 'number') {\n        return true;\n      }\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n\n  get BINARY() {\n    this._binary = true;\n    this.options.binary = true;\n    return this;\n  }\n\n  static get BINARY() {\n    return new this().BINARY;\n  }\n}\n\n/**\n * CHAR A fixed length string\n */\nclass CHAR extends STRING {\n  /**\n   * @param {number} [length=255] length of string\n   * @param {boolean} [binary=false] Is this binary?\n   */\n  constructor(length, binary) {\n    super(typeof length === 'object' && length || { length, binary });\n  }\n  toSql() {\n    return joinSQLFragments([\n      `CHAR(${this._length})`,\n      this._binary && 'BINARY'\n    ]);\n  }\n}\n\n/**\n * Unlimited length TEXT column\n */\nclass TEXT extends ABSTRACT {\n  /**\n   * @param {string} [length=''] could be tiny, medium, long.\n   */\n  constructor(length) {\n    super();\n    const options = typeof length === 'object' && length || { length };\n    this.options = options;\n    this._length = options.length || '';\n  }\n  toSql() {\n    switch (this._length.toLowerCase()) {\n      case 'tiny':\n        return 'TINYTEXT';\n      case 'medium':\n        return 'MEDIUMTEXT';\n      case 'long':\n        return 'LONGTEXT';\n      default:\n        return this.key;\n    }\n  }\n  validate(value) {\n    if (typeof value !== 'string') {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n}\n\n/**\n * An unlimited length case-insensitive text column.\n * Original case is preserved but acts case-insensitive when comparing values (such as when finding or unique constraints).\n * Only available in Postgres and SQLite.\n *\n */\nclass CITEXT extends ABSTRACT {\n  toSql() {\n    return 'CITEXT';\n  }\n  validate(value) {\n    if (typeof value !== 'string') {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n}\n\n/**\n * Base number type which is used to build other types\n */\nclass NUMBER extends ABSTRACT {\n  /**\n   * @param {object} options type options\n   * @param {string|number} [options.length] length of type, like `INT(4)`\n   * @param {boolean} [options.zerofill] Is zero filled?\n   * @param {boolean} [options.unsigned] Is unsigned?\n   * @param {string|number} [options.decimals] number of decimal points, used with length `FLOAT(5, 4)`\n   * @param {string|number} [options.precision] defines precision for decimal type\n   * @param {string|number} [options.scale] defines scale for decimal type\n   */\n  constructor(options = {}) {\n    super();\n    if (typeof options === 'number') {\n      options = {\n        length: options\n      };\n    }\n    this.options = options;\n    this._length = options.length;\n    this._zerofill = options.zerofill;\n    this._decimals = options.decimals;\n    this._precision = options.precision;\n    this._scale = options.scale;\n    this._unsigned = options.unsigned;\n  }\n  toSql() {\n    let result = this.key;\n    if (this._length) {\n      result += `(${this._length}`;\n      if (typeof this._decimals === 'number') {\n        result += `,${this._decimals}`;\n      }\n      result += ')';\n    }\n    if (this._unsigned) {\n      result += ' UNSIGNED';\n    }\n    if (this._zerofill) {\n      result += ' ZEROFILL';\n    }\n    return result;\n  }\n  validate(value) {\n    if (!Validator.isFloat(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format(`%j is not a valid ${this.key.toLowerCase()}`, value));\n    }\n    return true;\n  }\n  _stringify(number) {\n    if (typeof number === 'number' || typeof number === 'bigint' || typeof number === 'boolean' || number === null || number === undefined) {\n      return number;\n    }\n    if (typeof number.toString === 'function') {\n      return number.toString();\n    }\n    return number;\n  }\n\n  get UNSIGNED() {\n    this._unsigned = true;\n    this.options.unsigned = true;\n    return this;\n  }\n\n  get ZEROFILL() {\n    this._zerofill = true;\n    this.options.zerofill = true;\n    return this;\n  }\n\n  static get UNSIGNED() {\n    return new this().UNSIGNED;\n  }\n\n  static get ZEROFILL() {\n    return new this().ZEROFILL;\n  }\n}\n\n/**\n * A 32 bit integer\n */\nclass INTEGER extends NUMBER {\n  validate(value) {\n    if (!Validator.isInt(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format(`%j is not a valid ${this.key.toLowerCase()}`, value));\n    }\n    return true;\n  }\n}\n\n/**\n * A 8 bit integer\n */\nclass TINYINT extends INTEGER {\n}\n\n/**\n * A 16 bit integer\n */\nclass SMALLINT extends INTEGER {\n}\n\n/**\n * A 24 bit integer\n */\nclass MEDIUMINT extends INTEGER {\n}\n\n/**\n * A 64 bit integer\n */\nclass BIGINT extends INTEGER {\n}\n\n/**\n * Floating point number (4-byte precision).\n */\nclass FLOAT extends NUMBER {\n  /**\n   * @param {string|number} [length] length of type, like `FLOAT(4)`\n   * @param {string|number} [decimals] number of decimal points, used with length `FLOAT(5, 4)`\n   */\n  constructor(length, decimals) {\n    super(typeof length === 'object' && length || { length, decimals });\n  }\n  validate(value) {\n    if (!Validator.isFloat(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid float', value));\n    }\n    return true;\n  }\n}\n\n/**\n * Floating point number (4-byte precision).\n */\nclass REAL extends NUMBER {\n  /**\n   * @param {string|number} [length] length of type, like `REAL(4)`\n   * @param {string|number} [decimals] number of decimal points, used with length `REAL(5, 4)`\n   */\n  constructor(length, decimals) {\n    super(typeof length === 'object' && length || { length, decimals });\n  }\n}\n\n/**\n * Floating point number (8-byte precision).\n */\nclass DOUBLE extends NUMBER {\n  /**\n   * @param {string|number} [length] length of type, like `DOUBLE PRECISION(25)`\n   * @param {string|number} [decimals] number of decimal points, used with length `DOUBLE PRECISION(25, 10)`\n   */\n  constructor(length, decimals) {\n    super(typeof length === 'object' && length || { length, decimals });\n  }\n}\n\n/**\n * Decimal type, variable precision, take length as specified by user\n */\nclass DECIMAL extends NUMBER {\n  /**\n   * @param {string|number} [precision] defines precision\n   * @param {string|number} [scale] defines scale\n   */\n  constructor(precision, scale) {\n    super(typeof precision === 'object' && precision || { precision, scale });\n  }\n  toSql() {\n    if (this._precision || this._scale) {\n      return `DECIMAL(${[this._precision, this._scale].filter(_.identity).join(',')})`;\n    }\n    return 'DECIMAL';\n  }\n  validate(value) {\n    if (!Validator.isDecimal(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid decimal', value));\n    }\n    return true;\n  }\n}\n\n// TODO: Create intermediate class\nconst protoExtensions = {\n  escape: false,\n  _value(value) {\n    if (isNaN(value)) {\n      return 'NaN';\n    }\n    if (!isFinite(value)) {\n      const sign = value < 0 ? '-' : '';\n      return `${sign}Infinity`;\n    }\n\n    return value;\n  },\n  _stringify(value) {\n    return `'${this._value(value)}'`;\n  },\n  _bindParam(value, options) {\n    return options.bindParam(this._value(value));\n  }\n};\n\nfor (const floating of [FLOAT, DOUBLE, REAL]) {\n  Object.assign(floating.prototype, protoExtensions);\n}\n\n/**\n * A boolean / tinyint column, depending on dialect\n */\nclass BOOLEAN extends ABSTRACT {\n  toSql() {\n    return 'TINYINT(1)';\n  }\n  validate(value) {\n    if (!Validator.isBoolean(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid boolean', value));\n    }\n    return true;\n  }\n  _sanitize(value) {\n    if (value !== null && value !== undefined) {\n      if (Buffer.isBuffer(value) && value.length === 1) {\n        // Bit fields are returned as buffers\n        value = value[0];\n      }\n      const type = typeof value;\n      if (type === 'string') {\n        // Only take action on valid boolean strings.\n        return value === 'true' ? true : value === 'false' ? false : value;\n      }\n      if (type === 'number') {\n        // Only take action on valid boolean integers.\n        return value === 1 ? true : value === 0 ? false : value;\n      }\n    }\n    return value;\n  }\n}\n\n\nBOOLEAN.parse = BOOLEAN.prototype._sanitize;\n\n/**\n * A time column\n *\n */\nclass TIME extends ABSTRACT {\n  toSql() {\n    return 'TIME';\n  }\n}\n\n/**\n * Date column with timezone, default is UTC\n */\nclass DATE extends ABSTRACT {\n  /**\n   * @param {string|number} [length] precision to allow storing milliseconds\n   */\n  constructor(length) {\n    super();\n    const options = typeof length === 'object' && length || { length };\n    this.options = options;\n    this._length = options.length || '';\n  }\n  toSql() {\n    return 'DATETIME';\n  }\n  validate(value) {\n    if (!Validator.isDate(String(value))) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid date', value));\n    }\n    return true;\n  }\n  _sanitize(value, options) {\n    if ((!options || options && !options.raw) && !(value instanceof Date) && !!value) {\n      return new Date(value);\n    }\n    return value;\n  }\n  _isChanged(value, originalValue) {\n    if (originalValue && !!value &&\n      (value === originalValue ||\n        value instanceof Date && originalValue instanceof Date && value.getTime() === originalValue.getTime())) {\n      return false;\n    }\n    // not changed when set to same empty value\n    if (!originalValue && !value && originalValue === value) {\n      return false;\n    }\n    return true;\n  }\n  _applyTimezone(date, options) {\n    if (options.timezone) {\n      if (momentTz.tz.zone(options.timezone)) {\n        return momentTz(date).tz(options.timezone);\n      }\n      return date = moment(date).utcOffset(options.timezone);\n    }\n    return momentTz(date);\n  }\n  _stringify(date, options) {\n    if (!moment.isMoment(date)) {\n      date = this._applyTimezone(date, options);\n    }\n    // Z here means current timezone, _not_ UTC\n    return date.format('YYYY-MM-DD HH:mm:ss.SSS Z');\n  }\n}\n\n/**\n * A date only column (no timestamp)\n */\nclass DATEONLY extends ABSTRACT {\n  toSql() {\n    return 'DATE';\n  }\n  _stringify(date) {\n    return moment(date).format('YYYY-MM-DD');\n  }\n  _sanitize(value, options) {\n    if ((!options || options && !options.raw) && !!value) {\n      return moment(value).format('YYYY-MM-DD');\n    }\n    return value;\n  }\n  _isChanged(value, originalValue) {\n    if (originalValue && !!value && originalValue === value) {\n      return false;\n    }\n    // not changed when set to same empty value\n    if (!originalValue && !value && originalValue === value) {\n      return false;\n    }\n    return true;\n  }\n}\n\n/**\n * A key / value store column. Only available in Postgres.\n */\nclass HSTORE extends ABSTRACT {\n  validate(value) {\n    if (!_.isPlainObject(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid hstore', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A JSON string column. Available in MySQL, Postgres and SQLite\n */\nclass JSONTYPE extends ABSTRACT {\n  validate() {\n    return true;\n  }\n  _stringify(value) {\n    return JSON.stringify(value);\n  }\n}\n\n/**\n * A binary storage JSON column. Only available in Postgres.\n */\nclass JSONB extends JSONTYPE {\n}\n\n/**\n * A default value of the current timestamp\n */\nclass NOW extends ABSTRACT {\n}\n\n/**\n * Binary storage\n */\nclass BLOB extends ABSTRACT {\n  /**\n   * @param {string} [length=''] could be tiny, medium, long.\n   */\n  constructor(length) {\n    super();\n    const options = typeof length === 'object' && length || { length };\n    this.options = options;\n    this._length = options.length || '';\n  }\n  toSql() {\n    switch (this._length.toLowerCase()) {\n      case 'tiny':\n        return 'TINYBLOB';\n      case 'medium':\n        return 'MEDIUMBLOB';\n      case 'long':\n        return 'LONGBLOB';\n      default:\n        return this.key;\n    }\n  }\n  validate(value) {\n    if (typeof value !== 'string' && !Buffer.isBuffer(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid blob', value));\n    }\n    return true;\n  }\n  _stringify(value) {\n    if (!Buffer.isBuffer(value)) {\n      if (Array.isArray(value)) {\n        value = Buffer.from(value);\n      }\n      else {\n        value = Buffer.from(value.toString());\n      }\n    }\n    const hex = value.toString('hex');\n    return this._hexify(hex);\n  }\n  _hexify(hex) {\n    return `X'${hex}'`;\n  }\n  _bindParam(value, options) {\n    if (!Buffer.isBuffer(value)) {\n      if (Array.isArray(value)) {\n        value = Buffer.from(value);\n      }\n      else {\n        value = Buffer.from(value.toString());\n      }\n    }\n    return options.bindParam(value);\n  }\n}\n\n\nBLOB.prototype.escape = false;\n\n/**\n * Range types are data types representing a range of values of some element type (called the range's subtype).\n * Only available in Postgres. See [the Postgres documentation](http://www.postgresql.org/docs/9.4/static/rangetypes.html) for more details\n */\nclass RANGE extends ABSTRACT {\n  /**\n   * @param {ABSTRACT} subtype A subtype for range, like RANGE(DATE)\n   */\n  constructor(subtype) {\n    super();\n    const options = _.isPlainObject(subtype) ? subtype : { subtype };\n    if (!options.subtype)\n      options.subtype = new INTEGER();\n    if (typeof options.subtype === 'function') {\n      options.subtype = new options.subtype();\n    }\n    this._subtype = options.subtype.key;\n    this.options = options;\n  }\n  validate(value) {\n    if (!Array.isArray(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid range', value));\n    }\n    if (value.length !== 2) {\n      throw new sequelizeErrors.ValidationError('A range must be an array with two elements');\n    }\n    return true;\n  }\n}\n\n/**\n * A column storing a unique universal identifier.\n * Use with `UUIDV1` or `UUIDV4` for default values.\n */\nclass UUID extends ABSTRACT {\n  validate(value, options) {\n    if (typeof value !== 'string' || !Validator.isUUID(value) && (!options || !options.acceptStrings)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuid', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A default unique universal identifier generated following the UUID v1 standard\n */\nclass UUIDV1 extends ABSTRACT {\n  validate(value, options) {\n    if (typeof value !== 'string' || !Validator.isUUID(value) && (!options || !options.acceptStrings)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuid', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A default unique universal identifier generated following the UUID v4 standard\n */\nclass UUIDV4 extends ABSTRACT {\n  validate(value, options) {\n    if (typeof value !== 'string' || !Validator.isUUID(value, 4) && (!options || !options.acceptStrings)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid uuidv4', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A virtual value that is not stored in the DB. This could for example be useful if you want to provide a default value in your model that is returned to the user but not stored in the DB.\n *\n * You could also use it to validate a value before permuting and storing it. VIRTUAL also takes a return type and dependency fields as arguments\n * If a virtual attribute is present in `attributes` it will automatically pull in the extra fields as well.\n * Return type is mostly useful for setups that rely on types like GraphQL.\n *\n * @example <caption>Checking password length before hashing it</caption>\n * sequelize.define('user', {\n *   password_hash: DataTypes.STRING,\n *   password: {\n *     type: DataTypes.VIRTUAL,\n *     set: function (val) {\n *        // Remember to set the data value, otherwise it won't be validated\n *        this.setDataValue('password', val);\n *        this.setDataValue('password_hash', this.salt + val);\n *      },\n *      validate: {\n *         isLongEnough: function (val) {\n *           if (val.length < 7) {\n *             throw new Error(\"Please choose a longer password\")\n *          }\n *       }\n *     }\n *   }\n * })\n *\n * # In the above code the password is stored plainly in the password field so it can be validated, but is never stored in the DB.\n *\n * @example <caption>Virtual with dependency fields</caption>\n * {\n *   active: {\n *     type: new DataTypes.VIRTUAL(DataTypes.BOOLEAN, ['createdAt']),\n *     get: function() {\n *       return this.get('createdAt') > Date.now() - (7 * 24 * 60 * 60 * 1000)\n *     }\n *   }\n * }\n *\n */\nclass VIRTUAL extends ABSTRACT {\n  /**\n   * @param {ABSTRACT} [ReturnType] return type for virtual type\n   * @param {Array} [fields] array of fields this virtual type is dependent on\n   */\n  constructor(ReturnType, fields) {\n    super();\n    if (typeof ReturnType === 'function')\n      ReturnType = new ReturnType();\n    this.returnType = ReturnType;\n    this.fields = fields;\n  }\n}\n\n/**\n * An enumeration, Postgres Only\n *\n * @example\n * DataTypes.ENUM('value', 'another value')\n * DataTypes.ENUM(['value', 'another value'])\n * DataTypes.ENUM({\n *   values: ['value', 'another value']\n * })\n */\nclass ENUM extends ABSTRACT {\n  /**\n   * @param {...any|{ values: any[] }|any[]} args either array of values or options object with values array. It also supports variadic values\n   */\n  constructor(...args) {\n    super();\n    const value = args[0];\n    const options = typeof value === 'object' && !Array.isArray(value) && value || {\n      values: args.reduce((result, element) => {\n        return result.concat(Array.isArray(element) ? element : [element]);\n      }, [])\n    };\n    this.values = options.values;\n    this.options = options;\n  }\n  validate(value) {\n    if (!this.values.includes(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid choice in %j', value, this.values));\n    }\n    return true;\n  }\n}\n\n/**\n * An array of `type`. Only available in Postgres.\n *\n * @example\n * DataTypes.ARRAY(DataTypes.DECIMAL)\n */\nclass ARRAY extends ABSTRACT {\n  /**\n   * @param {ABSTRACT} type type of array values\n   */\n  constructor(type) {\n    super();\n    const options = _.isPlainObject(type) ? type : { type };\n    this.options = options;\n    this.type = typeof options.type === 'function' ? new options.type() : options.type;\n  }\n  toSql() {\n    return `${this.type.toSql()}[]`;\n  }\n  validate(value) {\n    if (!Array.isArray(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid array', value));\n    }\n    return true;\n  }\n  static is(obj, type) {\n    return obj instanceof ARRAY && obj.type instanceof type;\n  }\n}\n\n/**\n * A column storing Geometry information.\n * It is only available in PostgreSQL (with PostGIS), MariaDB or MySQL.\n *\n * GeoJSON is accepted as input and returned as output.\n *\n * In PostGIS, the GeoJSON is parsed using the PostGIS function `ST_GeomFromGeoJSON`.\n * In MySQL it is parsed using the function `ST_GeomFromText`.\n *\n * Therefore, one can just follow the [GeoJSON spec](https://tools.ietf.org/html/rfc7946) for handling geometry objects.  See the following examples:\n *\n * @example <caption>Defining a Geometry type attribute</caption>\n * DataTypes.GEOMETRY\n * DataTypes.GEOMETRY('POINT')\n * DataTypes.GEOMETRY('POINT', 4326)\n *\n * @example <caption>Create a new point</caption>\n * const point = { type: 'Point', coordinates: [-76.984722, 39.807222]}; // GeoJson format: [lng, lat]\n *\n * User.create({username: 'username', geometry: point });\n *\n * @example <caption>Create a new linestring</caption>\n * const line = { type: 'LineString', 'coordinates': [ [100.0, 0.0], [101.0, 1.0] ] };\n *\n * User.create({username: 'username', geometry: line });\n *\n * @example <caption>Create a new polygon</caption>\n * const polygon = { type: 'Polygon', coordinates: [\n *                 [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\n *                   [100.0, 1.0], [100.0, 0.0] ]\n *                 ]};\n *\n * User.create({username: 'username', geometry: polygon });\n *\n * @example <caption>Create a new point with a custom SRID</caption>\n * const point = {\n *   type: 'Point',\n *   coordinates: [-76.984722, 39.807222], // GeoJson format: [lng, lat]\n *   crs: { type: 'name', properties: { name: 'EPSG:4326'} }\n * };\n *\n * User.create({username: 'username', geometry: point })\n *\n *\n * @see {@link DataTypes.GEOGRAPHY}\n */\nclass GEOMETRY extends ABSTRACT {\n  /**\n   * @param {string} [type] Type of geometry data\n   * @param {string} [srid] SRID of type\n   */\n  constructor(type, srid) {\n    super();\n    const options = _.isPlainObject(type) ? type : { type, srid };\n    this.options = options;\n    this.type = options.type;\n    this.srid = options.srid;\n  }\n  _stringify(value, options) {\n    return `ST_GeomFromText(${options.escape(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n  _bindParam(value, options) {\n    return `ST_GeomFromText(${options.bindParam(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n}\n\nGEOMETRY.prototype.escape = false;\n\n/**\n * A geography datatype represents two dimensional spacial objects in an elliptic coord system.\n *\n * __The difference from geometry and geography type:__\n *\n * PostGIS 1.5 introduced a new spatial type called geography, which uses geodetic measurement instead of Cartesian measurement.\n * Coordinate points in the geography type are always represented in WGS 84 lon lat degrees (SRID 4326),\n * but measurement functions and relationships ST_Distance, ST_DWithin, ST_Length, and ST_Area always return answers in meters or assume inputs in meters.\n *\n * __What is best to use? It depends:__\n *\n * When choosing between the geometry and geography type for data storage, you should consider what you’ll be using it for.\n * If all you do are simple measurements and relationship checks on your data, and your data covers a fairly large area, then most likely you’ll be better off storing your data using the new geography type.\n * Although the new geography data type can cover the globe, the geometry type is far from obsolete.\n * The geometry type has a much richer set of functions than geography, relationship checks are generally faster, and it has wider support currently across desktop and web-mapping tools\n *\n * @example <caption>Defining a Geography type attribute</caption>\n * DataTypes.GEOGRAPHY\n * DataTypes.GEOGRAPHY('POINT')\n * DataTypes.GEOGRAPHY('POINT', 4326)\n */\nclass GEOGRAPHY extends ABSTRACT {\n  /**\n   * @param {string} [type] Type of geography data\n   * @param {string} [srid] SRID of type\n   */\n  constructor(type, srid) {\n    super();\n    const options = _.isPlainObject(type) ? type : { type, srid };\n    this.options = options;\n    this.type = options.type;\n    this.srid = options.srid;\n  }\n  _stringify(value, options) {\n    return `ST_GeomFromText(${options.escape(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n  _bindParam(value, options) {\n    return `ST_GeomFromText(${options.bindParam(wkx.Geometry.parseGeoJSON(value).toWkt())})`;\n  }\n}\n\n\nGEOGRAPHY.prototype.escape = false;\n\n/**\n * The cidr type holds an IPv4 or IPv6 network specification. Takes 7 or 19 bytes.\n *\n * Only available for Postgres\n */\nclass CIDR extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string' || !Validator.isIPRange(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid CIDR', value));\n    }\n    return true;\n  }\n}\n\n/**\n * The INET type holds an IPv4 or IPv6 host address, and optionally its subnet. Takes 7 or 19 bytes\n *\n * Only available for Postgres\n */\nclass INET extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string' || !Validator.isIP(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid INET', value));\n    }\n    return true;\n  }\n}\n\n/**\n * The MACADDR type stores MAC addresses. Takes 6 bytes\n *\n * Only available for Postgres\n *\n */\nclass MACADDR extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string' || !Validator.isMACAddress(value)) {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid MACADDR', value));\n    }\n    return true;\n  }\n}\n\n/**\n * The TSVECTOR type stores text search vectors.\n *\n * Only available for Postgres\n *\n */\nclass TSVECTOR extends ABSTRACT {\n  validate(value) {\n    if (typeof value !== 'string') {\n      throw new sequelizeErrors.ValidationError(util.format('%j is not a valid string', value));\n    }\n    return true;\n  }\n}\n\n/**\n * A convenience class holding commonly used data types. The data types are used when defining a new model using `Sequelize.define`, like this:\n * ```js\n * sequelize.define('model', {\n *   column: DataTypes.INTEGER\n * })\n * ```\n * When defining a model you can just as easily pass a string as type, but often using the types defined here is beneficial. For example, using `DataTypes.BLOB`, mean\n * that that column will be returned as an instance of `Buffer` when being fetched by sequelize.\n *\n * To provide a length for the data type, you can invoke it like a function: `INTEGER(2)`\n *\n * Some data types have special properties that can be accessed in order to change the data type.\n * For example, to get an unsigned integer with zerofill you can do `DataTypes.INTEGER.UNSIGNED.ZEROFILL`.\n * The order you access the properties in do not matter, so `DataTypes.INTEGER.ZEROFILL.UNSIGNED` is fine as well.\n *\n * * All number types (`INTEGER`, `BIGINT`, `FLOAT`, `DOUBLE`, `REAL`, `DECIMAL`) expose the properties `UNSIGNED` and `ZEROFILL`\n * * The `CHAR` and `STRING` types expose the `BINARY` property\n *\n * Three of the values provided here (`NOW`, `UUIDV1` and `UUIDV4`) are special default values, that should not be used to define types. Instead they are used as shorthands for\n * defining default values. For example, to get a uuid field with a default value generated following v1 of the UUID standard:\n * ```js\n * sequelize.define('model', {\n *   uuid: {\n *     type: DataTypes.UUID,\n *     defaultValue: DataTypes.UUIDV1,\n *     primaryKey: true\n *   }\n * })\n * ```\n * There may be times when you want to generate your own UUID conforming to some other algorithm. This is accomplished\n * using the defaultValue property as well, but instead of specifying one of the supplied UUID types, you return a value\n * from a function.\n * ```js\n * sequelize.define('model', {\n *   uuid: {\n *     type: DataTypes.UUID,\n *     defaultValue: function() {\n *       return generateMyId()\n *     },\n *     primaryKey: true\n *   }\n * })\n * ```\n */\nconst DataTypes = module.exports = {\n  ABSTRACT,\n  STRING,\n  CHAR,\n  TEXT,\n  NUMBER,\n  TINYINT,\n  SMALLINT,\n  MEDIUMINT,\n  INTEGER,\n  BIGINT,\n  FLOAT,\n  TIME,\n  DATE,\n  DATEONLY,\n  BOOLEAN,\n  NOW,\n  BLOB,\n  DECIMAL,\n  NUMERIC: DECIMAL,\n  UUID,\n  UUIDV1,\n  UUIDV4,\n  HSTORE,\n  JSON: JSONTYPE,\n  JSONB,\n  VIRTUAL,\n  ARRAY,\n  ENUM,\n  RANGE,\n  REAL,\n  'DOUBLE PRECISION': DOUBLE,\n  DOUBLE,\n  GEOMETRY,\n  GEOGRAPHY,\n  CIDR,\n  INET,\n  MACADDR,\n  CITEXT,\n  TSVECTOR\n};\n\n_.each(DataTypes, (dataType, name) => {\n  // guard for aliases\n  if (!Object.prototype.hasOwnProperty.call(dataType, 'key')) {\n    dataType.types = {};\n    dataType.key = dataType.prototype.key = name;\n  }\n});\n\nconst dialectMap = {};\ndialectMap.postgres = require('./dialects/postgres/data-types')(DataTypes);\ndialectMap.mysql = require('./dialects/mysql/data-types')(DataTypes);\ndialectMap.mariadb = require('./dialects/mariadb/data-types')(DataTypes);\ndialectMap.sqlite = require('./dialects/sqlite/data-types')(DataTypes);\ndialectMap.mssql = require('./dialects/mssql/data-types')(DataTypes);\ndialectMap.db2 = require('./dialects/db2/data-types')(DataTypes);\ndialectMap.snowflake = require('./dialects/snowflake/data-types')(DataTypes);\ndialectMap.oracle = require('./dialects/oracle/data-types')(DataTypes);\n\nconst dialectList = Object.values(dialectMap);\n\nfor (const dataTypes of dialectList) {\n  _.each(dataTypes, (DataType, key) => {\n    if (!DataType.key) {\n      DataType.key = DataType.prototype.key = key;\n    }\n  });\n}\n\n// Wrap all data types to not require `new`\nfor (const dataTypes of [DataTypes, ...dialectList]) {\n  _.each(dataTypes, (DataType, key) => {\n    dataTypes[key] = classToInvokable(DataType);\n  });\n}\n\nObject.assign(DataTypes, dialectMap);\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/index.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,62,55,59,60,45,58,87,57,72,75,53,62,60,76,79,63,71,53,72,66,47,66,51,70,72,57,73,85,80,3,60,68,70,74,74,72,78,76,68,82,62,82,72,89,115,99,103,91,99,99,101,105,75,97,97,78,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/index.ts"],"sourcesContent":["export { default as BaseError } from './base-error';\n\nexport { default as DatabaseError } from './database-error';\nexport { default as AggregateError } from './aggregate-error';\nexport { default as AssociationError } from './association-error';\nexport { default as BulkRecordError } from './bulk-record-error';\nexport { default as ConnectionError } from './connection-error';\nexport { default as EagerLoadingError } from './eager-loading-error';\nexport { default as EmptyResultError } from './empty-result-error';\nexport { default as InstanceError } from './instance-error';\nexport { default as OptimisticLockError } from './optimistic-lock-error';\nexport { default as QueryError } from './query-error';\nexport { default as SequelizeScopeError } from './sequelize-scope-error';\nexport {\n  default as ValidationError,\n  ValidationErrorItem,\n  ValidationErrorItemOrigin,\n  ValidationErrorItemType\n} from './validation-error';\n\nexport { default as AccessDeniedError } from './connection/access-denied-error';\nexport { default as ConnectionAcquireTimeoutError } from './connection/connection-acquire-timeout-error';\nexport { default as ConnectionRefusedError } from './connection/connection-refused-error';\nexport { default as ConnectionTimedOutError } from './connection/connection-timed-out-error';\nexport { default as HostNotFoundError } from './connection/host-not-found-error';\nexport { default as HostNotReachableError } from './connection/host-not-reachable-error';\nexport { default as InvalidConnectionError } from './connection/invalid-connection-error';\n\nexport { default as ExclusionConstraintError } from './database/exclusion-constraint-error';\nexport { default as ForeignKeyConstraintError } from './database/foreign-key-constraint-error';\nexport { default as TimeoutError } from './database/timeout-error';\nexport { default as UnknownConstraintError } from './database/unknown-constraint-error';\n\nexport { default as UniqueConstraintError } from './validation/unique-constraint-error';\n\nexport { AsyncQueueError } from '../dialects/mssql/async-queue';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqC;AAErC,4BAAyC;AACzC,6BAA0C;AAC1C,+BAA4C;AAC5C,+BAA2C;AAC3C,8BAA2C;AAC3C,iCAA6C;AAC7C,gCAA4C;AAC5C,4BAAyC;AACzC,mCAA+C;AAC/C,yBAAsC;AACtC,mCAA+C;AAC/C,8BAKO;AAEP,iCAA6C;AAC7C,8CAAyD;AACzD,sCAAkD;AAClD,wCAAmD;AACnD,kCAA6C;AAC7C,sCAAiD;AACjD,sCAAkD;AAElD,wCAAoD;AACpD,0CAAqD;AACrD,2BAAwC;AACxC,sCAAkD;AAElD,qCAAiD;AAEjD,yBAAgC;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/base-error.js":{"lineLengths":[38,82,33,25,23,66,2,19,35,3,31,24,19,37,3,1,35,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/base-error.ts"],"sourcesContent":["export interface ErrorOptions {\n  stack?: string;\n}\n\nexport interface CommonErrorProperties {\n  /** The database specific error which triggered this one */\n  readonly parent: Error;\n\n  /** The database specific error which triggered this one */\n  readonly original: Error;\n\n  /** The SQL that triggered the error */\n  readonly sql: string;\n}\n\n/**\n * The Base Error all Sequelize Errors inherit from.\n *\n * Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor.\n * All sequelize errors inherit from the base JS error object.\n *\n * This means that errors can be accessed using `Sequelize.ValidationError`\n */\nabstract class BaseError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = 'SequelizeBaseError';\n  }\n}\n\nexport default BaseError;\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAuBA,wBAAiC,MAAM;AAAA,EACrC,YAAY,SAAkB;AAC5B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,qBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/database-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,39,3,60,55,37,26,34,36,31,38,11,41,25,27,26,65,24,33,5,3,1,43,42,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/database-error.ts"],"sourcesContent":["import BaseError, { CommonErrorProperties, ErrorOptions } from './base-error';\n\nexport interface DatabaseErrorParent\n  extends Error,\n    Pick<CommonErrorProperties, 'sql'> {\n  /** The parameters for the sql that triggered the error */\n  readonly parameters?: object;\n}\n\nexport interface DatabaseErrorSubclassOptions extends ErrorOptions {\n  parent?: DatabaseErrorParent;\n  message?: string;\n}\n\n/**\n * A base class for all database related errors.\n */\nclass DatabaseError\n  extends BaseError\n  implements DatabaseErrorParent, CommonErrorProperties\n{\n  parent: Error;\n  original: Error;\n  sql: string;\n  parameters: object;\n\n  /**\n   * @param parent The database specific error which triggered this one\n   * @param options\n   */\n  constructor(parent: DatabaseErrorParent, options: ErrorOptions = {}) {\n    super(parent.message);\n    this.name = 'SequelizeDatabaseError';\n\n    this.parent = parent;\n    this.original = parent;\n\n    this.sql = parent.sql;\n    this.parameters = parent.parameters ?? {};\n\n    if (options.stack) {\n      this.stack = options.stack;\n    }\n  }\n}\n\nexport default DatabaseError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAA+D;AAiB/D,4BACU,0BAEV;AAAA,EAUE,YAAY,QAA6B,UAAwB,IAAI;AACnE,UAAM,OAAO;AAVf;AACA;AACA;AACA;AAxBF;AAgCI,SAAK,OAAO;AAEZ,SAAK,SAAS;AACd,SAAK,WAAW;AAEhB,SAAK,MAAM,OAAO;AAClB,SAAK,aAAa,aAAO,eAAP,YAAqB;AAEvC,QAAI,QAAQ,OAAO;AACjB,WAAK,QAAQ,QAAQ;AAAA;AAAA;AAAA;AAK3B,IAAO,yBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/aggregate-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,40,3,60,56,23,12,34,25,33,3,14,39,228,2,19,3,1,45,43,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/aggregate-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * A wrapper for multiple Errors\n *\n * @param errors The aggregated errors that occurred\n */\nclass AggregateError extends BaseError {\n  /** the aggregated errors that occurred */\n  readonly errors: Array<AggregateError | Error>;\n\n  constructor(errors: Array<AggregateError | Error>) {\n    super();\n    this.errors = errors;\n    this.name = 'AggregateError';\n  }\n\n  toString(): string {\n    const message = `AggregateError of:\\n${this.errors\n      .map((error: Error | AggregateError) =>\n        error === this\n          ? '[Circular AggregateError]'\n          : error instanceof AggregateError\n            ? String(error).replace(/\\n$/, '').replace(/^/gm, '  ')\n            : String(error).replace(/^/gm, '    ').substring(2)\n      )\n      .join('\\n')}\\n`;\n    return message;\n  }\n}\n\nexport default AggregateError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAOtB,6BAA6B,0BAAU;AAAA,EAIrC,YAAY,QAAuC;AACjD;AAHO;AAIP,SAAK,SAAS;AACd,SAAK,OAAO;AAAA;AAAA,EAGd,WAAmB;AACjB,UAAM,UAAU;AAAA,EAAuB,KAAK,OACzC,IAAI,CAAC,UACJ,UAAU,OACN,8BACA,iBAAiB,iBACf,OAAO,OAAO,QAAQ,OAAO,IAAI,QAAQ,OAAO,QAChD,OAAO,OAAO,QAAQ,OAAO,QAAQ,UAAU,IAEtD,KAAK;AAAA;AACR,WAAO;AAAA;AAAA;AAIX,IAAO,0BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/association-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,42,3,60,58,24,19,44,3,1,49,45,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/association-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when an association is improperly constructed (see message for details)\n */\nclass AssociationError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeAssociationError';\n  }\n}\n\nexport default AssociationError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,+BAA+B,0BAAU;AAAA,EACvC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,4BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/bulk-record-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,42,3,60,57,30,25,34,34,43,24,25,3,1,48,45,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/bulk-record-error.ts"],"sourcesContent":["import type { Model } from '..';\nimport BaseError from './base-error';\n\n/**\n * Thrown when bulk operation fails, it represent per record level error.\n * Used with AggregateError\n *\n * @param error Error for a given record/instance\n * @param record DAO instance that error belongs to\n */\nclass BulkRecordError extends BaseError {\n  errors: Error;\n  record: Model;\n\n  constructor(error: Error, record: Model) {\n    super(error.message);\n    this.name = 'SequelizeBulkRecordError';\n    this.errors = error;\n    this.record = record;\n  }\n}\n\nexport default BulkRecordError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,wBAAsB;AAStB,8BAA8B,0BAAU;AAAA,EAItC,YAAY,OAAc,QAAe;AACvC,UAAM,MAAM;AAJd;AACA;AAIE,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,SAAS;AAAA;AAAA;AAIlB,IAAO,4BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,41,3,60,57,23,40,34,36,43,25,27,3,1,47,44,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/connection-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * A base class for all connection related errors.\n */\nclass ConnectionError extends BaseError {\n  /** The connection specific error which triggered this one */\n  parent: Error;\n  original: Error;\n\n  constructor(parent: Error) {\n    super(parent ? parent.message : '');\n    this.name = 'SequelizeConnectionError';\n    this.parent = parent;\n    this.original = parent;\n  }\n}\n\nexport default ConnectionError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,8BAA8B,0BAAU;AAAA,EAKtC,YAAY,QAAe;AACzB,UAAM,SAAS,OAAO,UAAU;AAJlC;AACA;AAIE,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,WAAW;AAAA;AAAA;AAIpB,IAAO,2BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/eager-loading-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,44,3,60,59,24,19,45,3,1,52,47,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/eager-loading-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when an include statement is improperly constructed (see message for details)\n */\nclass EagerLoadingError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeEagerLoadingError';\n  }\n}\n\nexport default EagerLoadingError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,gCAAgC,0BAAU;AAAA,EACxC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,8BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/empty-result-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,43,3,60,58,24,19,44,3,1,50,46,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/empty-result-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when a record was not found, Usually used with rejectOnEmpty mode (see message for details)\n */\nclass EmptyResultError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeEmptyResultError';\n  }\n}\n\nexport default EmptyResultError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,+BAA+B,0BAAU;AAAA,EACvC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,6BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/instance-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,39,3,60,55,24,19,41,3,1,43,42,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/instance-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when a some problem occurred with Instance methods (see message for details)\n */\nclass InstanceError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeInstanceError';\n  }\n}\n\nexport default InstanceError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,4BAA4B,0BAAU;AAAA,EACpC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,yBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/optimistic-lock-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,46,3,60,61,24,28,109,27,37,34,33,47,39,33,31,3,1,56,49,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/optimistic-lock-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\ninterface OptimisticLockErrorOptions {\n  message?: string;\n\n  /** The name of the model on which the update was attempted */\n  modelName?: string;\n\n  /** The values of the attempted update */\n  values?: Record<string, unknown>;\n  where?: Record<string, unknown>;\n}\n\n/**\n * Thrown when attempting to update a stale model instance\n */\nclass OptimisticLockError extends BaseError {\n  modelName: string | undefined;\n  values: Record<string, unknown> | undefined;\n  where: Record<string, unknown> | undefined;\n\n  constructor(options: OptimisticLockErrorOptions) {\n    options = options || {};\n    options.message =\n      options.message ||\n      `Attempting to update a stale model instance: ${options.modelName}`;\n\n    super(options.message);\n    this.name = 'SequelizeOptimisticLockError';\n    this.modelName = options.modelName;\n    this.values = options.values;\n    this.where = options.where;\n  }\n}\n\nexport default OptimisticLockError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAgBtB,kCAAkC,0BAAU;AAAA,EAK1C,YAAY,SAAqC;AAC/C,cAAU,WAAW;AACrB,YAAQ,UACN,QAAQ,WACR,gDAAgD,QAAQ;AAE1D,UAAM,QAAQ;AAVhB;AACA;AACA;AASE,SAAK,OAAO;AACZ,SAAK,YAAY,QAAQ;AACzB,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA;AAAA;AAIzB,IAAO,gCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/query-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,36,3,60,52,24,19,38,3,1,37,39,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/query-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Thrown when a query is passed invalid options (see message for details)\n */\nclass QueryError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeQueryError';\n  }\n}\n\nexport default QueryError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,yBAAyB,0BAAU;AAAA,EACjC,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,sBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/sequelize-scope-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,46,3,60,61,24,19,38,3,1,56,49,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/sequelize-scope-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * Scope Error. Thrown when the sequelize cannot query the specified scope.\n */\nclass SequelizeScopeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeScopeError';\n  }\n}\n\nexport default SequelizeScopeError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAKtB,kCAAkC,0BAAU;AAAA,EAC1C,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,gCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/validation-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,49,61,57,41,3,60,78,57,56,54,60,34,34,82,46,42,54,36,36,27,83,35,32,32,33,34,36,40,41,41,33,21,29,49,23,37,45,40,38,15,51,27,14,57,64,62,33,27,9,7,5,3,39,56,3,24,36,3,45,60,61,29,56,69,64,87,5,51,16,5,79,3,1,77,73,57,46,19,34,43,38,31,18,29,66,103,5,24,33,5,3,13,51,32,28,7,21,11,3,1,47,44,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/validation-error.ts"],"sourcesContent":["import type { Model } from '..';\nimport type { ErrorOptions } from './base-error';\nimport BaseError from './base-error';\n\n/**\n * An enum that is used internally by the `ValidationErrorItem` class\n * that maps current `type` strings (as given to ValidationErrorItem.constructor()) to\n * our new `origin` values.\n */\nexport enum ValidationErrorItemType {\n  'notnull violation' = 'CORE',\n  'string violation' = 'CORE',\n  'unique violation' = 'DB',\n  'validation error' = 'FUNCTION',\n}\n\n/**\n * An enum that defines valid ValidationErrorItem `origin` values\n */\nexport enum ValidationErrorItemOrigin {\n  /**\n   * specifies errors that originate from the sequelize \"core\"\n   */\n  CORE = 'CORE',\n\n  /**\n   * specifies validation errors that originate from the storage engine\n   */\n  DB = 'DB',\n\n  /**\n   * specifies validation errors that originate from validator functions (both built-in and custom) defined for a given attribute\n   */\n  FUNCTION = 'FUNCTION',\n}\n\n/**\n * Validation Error Item\n * Instances of this class are included in the `ValidationError.errors` property.\n */\nexport class ValidationErrorItem {\n  /**\n   * @deprecated Will be removed in v7\n   */\n  static TypeStringMap = ValidationErrorItemType;\n\n  /**\n   * @deprecated Will be removed in v7\n   */\n  static Origins = ValidationErrorItemOrigin;\n\n  /**\n   * An error message\n   */\n  readonly message: string;\n\n  /**\n   * The type/origin of the validation error\n   */\n  readonly type: keyof typeof ValidationErrorItemType | null;\n\n  /**\n   * The field that triggered the validation error\n   */\n  readonly path: string | null;\n\n  /**\n   * The value that generated the error\n   */\n  readonly value: string | null;\n\n  readonly origin: keyof typeof ValidationErrorItemOrigin | null;\n\n  /**\n   * The DAO instance that caused the validation error\n   */\n  readonly instance: Model | null;\n\n  /**\n   * A validation \"key\", used for identification\n   */\n  readonly validatorKey: string | null;\n\n  /**\n   * Property name of the BUILT-IN validator function that caused the validation error (e.g. \"in\" or \"len\"), if applicable\n   */\n  readonly validatorName: string | null;\n\n  /**\n   * Parameters used with the BUILT-IN validator function, if applicable\n   */\n  readonly validatorArgs: unknown[];\n\n  /**\n   * Creates a new ValidationError item. Instances of this class are included in the `ValidationError.errors` property.\n   *\n   * @param message An error message\n   * @param type The type/origin of the validation error\n   * @param path The field that triggered the validation error\n   * @param value The value that generated the error\n   * @param instance the DAO instance that caused the validation error\n   * @param validatorKey a validation \"key\", used for identification\n   * @param fnName property name of the BUILT-IN validator function that caused the validation error (e.g. \"in\" or \"len\"), if applicable\n   * @param fnArgs parameters used with the BUILT-IN validator function, if applicable\n   */\n  constructor(\n    message: string,\n    type:\n      | keyof typeof ValidationErrorItemType\n      | keyof typeof ValidationErrorItemOrigin,\n    path: string,\n    value: string,\n    instance: Model,\n    validatorKey: string,\n    fnName: string,\n    fnArgs: unknown[]\n  ) {\n    this.message = message || '';\n    this.type = null;\n    this.path = path || null;\n\n    this.value = value !== undefined ? value : null;\n\n    this.origin = null;\n\n    this.instance = instance || null;\n\n    this.validatorKey = validatorKey || null;\n\n    this.validatorName = fnName || null;\n\n    this.validatorArgs = fnArgs || [];\n\n    if (type) {\n      if (this.isValidationErrorItemOrigin(type)) {\n        this.origin = type;\n      } else {\n        const lowercaseType = this.normalizeString(type);\n        const realType = ValidationErrorItemType[lowercaseType];\n\n        if (realType && ValidationErrorItemOrigin[realType]) {\n          this.origin = realType;\n          this.type = type;\n        }\n      }\n    }\n\n    // This doesn't need captureStackTrace because it's not a subclass of Error\n  }\n\n  private isValidationErrorItemOrigin(\n    origin:\n      | keyof typeof ValidationErrorItemOrigin\n      | keyof typeof ValidationErrorItemType\n  ): origin is keyof typeof ValidationErrorItemOrigin {\n    return (\n      ValidationErrorItemOrigin[\n        origin as keyof typeof ValidationErrorItemOrigin\n      ] !== undefined\n    );\n  }\n\n  private normalizeString<T extends string>(str: T): T {\n    return str.toLowerCase().trim() as T;\n  }\n\n  /**\n   * return a lowercase, trimmed string \"key\" that identifies the validator.\n   *\n   * Note: the string will be empty if the instance has neither a valid `validatorKey` property nor a valid `validatorName` property\n   *\n   * @param useTypeAsNS controls whether the returned value is \"namespace\",\n   *                    this parameter is ignored if the validator's `type` is not one of ValidationErrorItem.Origins\n   * @param NSSeparator a separator string for concatenating the namespace, must be not be empty,\n   *                    defaults to \".\" (fullstop). only used and validated if useTypeAsNS is TRUE.\n   * @throws {Error}    thrown if NSSeparator is found to be invalid.\n   */\n  getValidatorKey(useTypeAsNS: boolean, NSSeparator: string): string {\n    const useTANS = useTypeAsNS === undefined || !!useTypeAsNS;\n    const NSSep = NSSeparator === undefined ? '.' : NSSeparator;\n\n    const type = this.origin;\n    const key = this.validatorKey || this.validatorName;\n    const useNS = useTANS && type && ValidationErrorItemOrigin[type];\n\n    if (useNS && (typeof NSSep !== 'string' || !NSSep.length)) {\n      throw new Error('Invalid namespace separator given, must be a non-empty string');\n    }\n\n    if (!(typeof key === 'string' && key.length)) {\n      return '';\n    }\n\n    return (useNS ? [this.origin, key].join(NSSep) : key).toLowerCase().trim();\n  }\n}\n\n/**\n * Validation Error. Thrown when the sequelize validation has failed. The error contains an `errors` property,\n * which is an array with 1 or more ValidationErrorItems, one for each validation that failed.\n *\n * @param message Error message\n * @param errors Array of ValidationErrorItem objects describing the validation errors\n */\nclass ValidationError extends BaseError {\n  /** Array of ValidationErrorItem objects describing the validation errors */\n  readonly errors: ValidationErrorItem[];\n\n  constructor(\n    message: string,\n    errors: ValidationErrorItem[],\n    options: ErrorOptions = {}\n  ) {\n    super(message);\n    this.name = 'SequelizeValidationError';\n    this.message = 'Validation Error';\n    this.errors = errors || [];\n\n    // Use provided error message if available...\n    if (message) {\n      this.message = message;\n\n      // ... otherwise create a concatenated message out of existing errors.\n    } else if (this.errors.length > 0 && this.errors[0].message) {\n      this.message = this.errors\n        .map(\n          (err: ValidationErrorItem) =>\n            `${err.type || err.origin}: ${err.message}`\n        )\n        .join(',\\n');\n    }\n\n    // Allow overriding the stack if the original stacktrace is uninformative\n    if (options.stack) {\n      this.stack = options.stack;\n    }\n  }\n\n  /**\n   * Gets all validation error items for the path / field specified.\n   *\n   * @param {string} path The path to be checked for error items\n   *\n   * @returns {Array<ValidationErrorItem>} Validation error items for the specified path\n   */\n  get(path: string): ValidationErrorItem[] {\n    return this.errors.reduce<ValidationErrorItem[]>((reduced, error) => {\n      if (error.path === path) {\n        reduced.push(error);\n      }\n      return reduced;\n    }, []);\n  }\n}\n\nexport default ValidationError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,wBAAsB;AAOf,IAAK,0BAAL,kBAAK,6BAAL;AACL,kDAAsB;AACtB,iDAAqB;AACrB,iDAAqB;AACrB,iDAAqB;AAJX;AAAA;AAUL,IAAK,4BAAL,kBAAK,+BAAL;AAIL,uCAAO;AAKP,qCAAK;AAKL,2CAAW;AAdD;AAAA;AAqBL,0BAA0B;AAAA,EAiE/B,YACE,SACA,MAGA,MACA,OACA,UACA,cACA,QACA,QACA;AA9DO;AAKA;AAKA;AAKA;AAEA;AAKA;AAKA;AAKA;AAKA;AA0BP,SAAK,UAAU,WAAW;AAC1B,SAAK,OAAO;AACZ,SAAK,OAAO,QAAQ;AAEpB,SAAK,QAAQ,UAAU,SAAY,QAAQ;AAE3C,SAAK,SAAS;AAEd,SAAK,WAAW,YAAY;AAE5B,SAAK,eAAe,gBAAgB;AAEpC,SAAK,gBAAgB,UAAU;AAE/B,SAAK,gBAAgB,UAAU;AAE/B,QAAI,MAAM;AACR,UAAI,KAAK,4BAA4B,OAAO;AAC1C,aAAK,SAAS;AAAA,aACT;AACL,cAAM,gBAAgB,KAAK,gBAAgB;AAC3C,cAAM,WAAW,wBAAwB;AAEzC,YAAI,YAAY,0BAA0B,WAAW;AACnD,eAAK,SAAS;AACd,eAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAQZ,4BACN,QAGkD;AAClD,WACE,0BACE,YACI;AAAA;AAAA,EAIF,gBAAkC,KAAW;AACnD,WAAO,IAAI,cAAc;AAAA;AAAA,EAc3B,gBAAgB,aAAsB,aAA6B;AACjE,UAAM,UAAU,gBAAgB,UAAa,CAAC,CAAC;AAC/C,UAAM,QAAQ,gBAAgB,SAAY,MAAM;AAEhD,UAAM,OAAO,KAAK;AAClB,UAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,UAAM,QAAQ,WAAW,QAAQ,0BAA0B;AAE3D,QAAI,SAAU,QAAO,UAAU,YAAY,CAAC,MAAM,SAAS;AACzD,YAAM,IAAI,MAAM;AAAA;AAGlB,QAAI,CAAE,QAAO,QAAQ,YAAY,IAAI,SAAS;AAC5C,aAAO;AAAA;AAGT,WAAQ,SAAQ,CAAC,KAAK,QAAQ,KAAK,KAAK,SAAS,KAAK,cAAc;AAAA;AAAA;AArJ/D,cAJF,qBAIE,iBAAgB;AAKhB,cATF,qBASE,WAAU;AA2JnB,8BAA8B,0BAAU;AAAA,EAItC,YACE,SACA,QACA,UAAwB,IACxB;AACA,UAAM;AAPC;AAQP,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,SAAS,UAAU;AAGxB,QAAI,SAAS;AACX,WAAK,UAAU;AAAA,eAGN,KAAK,OAAO,SAAS,KAAK,KAAK,OAAO,GAAG,SAAS;AAC3D,WAAK,UAAU,KAAK,OACjB,IACC,CAAC,QACC,GAAG,IAAI,QAAQ,IAAI,WAAW,IAAI,WAErC,KAAK;AAAA;AAIV,QAAI,QAAQ,OAAO;AACjB,WAAK,QAAQ,QAAQ;AAAA;AAAA;AAAA,EAWzB,IAAI,MAAqC;AACvC,WAAO,KAAK,OAAO,OAA8B,CAAC,SAAS,UAAU;AACnE,UAAI,MAAM,SAAS,MAAM;AACvB,gBAAQ,KAAK;AAAA;AAEf,aAAO;AAAA,OACN;AAAA;AAAA;AAIP,IAAO,2BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/access-denied-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,44,3,73,65,23,18,45,3,1,52,47,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/connection/access-denied-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database is refused due to insufficient privileges\n */\nclass AccessDeniedError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeAccessDeniedError';\n  }\n}\n\nexport default AccessDeniedError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,gCAAgC,gCAAgB;AAAA,EAC9C,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,8BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/connection-acquire-timeout-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,57,3,73,77,23,18,57,3,1,77,60,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/connection/connection-acquire-timeout-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when connection is not acquired due to timeout\n */\nclass ConnectionAcquireTimeoutError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeConnectionAcquireTimeoutError';\n  }\n}\n\nexport default ConnectionAcquireTimeoutError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,4CAA4C,gCAAgB;AAAA,EAC1D,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,2CAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/connection-refused-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,49,3,73,70,23,18,50,3,1,62,52,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/connection/connection-refused-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database is refused\n */\nclass ConnectionRefusedError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeConnectionRefusedError';\n  }\n}\n\nexport default ConnectionRefusedError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,qCAAqC,gCAAgB;AAAA,EACnD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/connection-timed-out-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,51,3,73,71,23,18,51,3,1,65,54,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/connection/connection-timed-out-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database times out\n */\nclass ConnectionTimedOutError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeConnectionTimedOutError';\n  }\n}\n\nexport default ConnectionTimedOutError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,sCAAsC,gCAAgB;AAAA,EACpD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,qCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/host-not-found-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,45,3,73,65,23,18,45,3,1,53,48,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/connection/host-not-found-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database has a hostname that was not found\n */\nclass HostNotFoundError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeHostNotFoundError';\n  }\n}\n\nexport default HostNotFoundError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,gCAAgC,gCAAgB;AAAA,EAC9C,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,+BAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/host-not-reachable-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,49,3,73,69,23,18,49,3,1,61,52,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/connection/host-not-reachable-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database has a hostname that was not reachable\n */\nclass HostNotReachableError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeHostNotReachableError';\n  }\n}\n\nexport default HostNotReachableError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,oCAAoC,gCAAgB;AAAA,EAClD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/connection/invalid-connection-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,49,3,73,70,23,18,50,3,1,62,52,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/connection/invalid-connection-error.ts"],"sourcesContent":["import ConnectionError from '../connection-error';\n\n/**\n * Thrown when a connection to a database has invalid values for any of the connection parameters\n */\nclass InvalidConnectionError extends ConnectionError {\n  constructor(parent: Error) {\n    super(parent);\n    this.name = 'SequelizeInvalidConnectionError';\n  }\n}\n\nexport default InvalidConnectionError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAK5B,qCAAqC,gCAAgB;AAAA,EACnD,YAAY,QAAe;AACzB,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/database/exclusion-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,51,3,69,70,24,28,74,52,38,34,33,52,67,41,33,31,3,1,66,54,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/database/exclusion-constraint-error.ts"],"sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\ninterface ExclusionConstraintErrorOptions {\n  constraint?: string;\n  fields?: Record<string, string | number>;\n  table?: string;\n}\n\n/**\n * Thrown when an exclusion constraint is violated in the database\n */\nclass ExclusionConstraintError extends DatabaseError implements ExclusionConstraintErrorOptions {\n  constraint: string | undefined;\n  fields: Record<string, string | number> | undefined;\n  table: string | undefined;\n\n  constructor(\n    options: DatabaseErrorSubclassOptions & ExclusionConstraintErrorOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeExclusionConstraintError';\n\n    this.message = options.message || options.parent.message || '';\n    this.constraint = options.constraint;\n    this.fields = options.fields;\n    this.table = options.table;\n  }\n}\n\nexport default ExclusionConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,4BAA4D;AAW5D,uCAAuC,8BAAyD;AAAA,EAK9F,YACE,SACA;AACA,cAAU,WAAW;AACrB,YAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AAEjE,UAAM,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAVzC;AACA;AACA;AASE,SAAK,OAAO;AAEZ,SAAK,UAAU,QAAQ,WAAW,QAAQ,OAAO,WAAW;AAC5D,SAAK,aAAa,QAAQ;AAC1B,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA;AAAA;AAIzB,IAAO,qCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/database/foreign-key-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,43,53,3,69,64,41,39,27,27,71,24,28,74,52,33,34,33,33,35,53,81,33,31,31,31,35,3,1,69,56,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/database/foreign-key-constraint-error.ts"],"sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\nexport enum RelationshipType {\n  parent = 'parent',\n  child = 'child',\n}\n\ninterface ForeignKeyConstraintErrorOptions {\n  table?: string;\n  fields?: { [field: string]: string };\n  value?: unknown;\n  index?: string;\n  reltype?: RelationshipType;\n}\n\n/**\n * Thrown when a foreign key constraint is violated in the database\n */\nclass ForeignKeyConstraintError extends DatabaseError {\n  table: string | undefined;\n  fields: { [field: string]: string } | undefined;\n  value: unknown;\n  index: string | undefined;\n  reltype: RelationshipType | undefined;\n\n  constructor(\n    options: ForeignKeyConstraintErrorOptions & DatabaseErrorSubclassOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeForeignKeyConstraintError';\n\n    this.message =\n      options.message || options.parent.message || 'Database Error';\n    this.fields = options.fields;\n    this.table = options.table;\n    this.value = options.value;\n    this.index = options.index;\n    this.reltype = options.reltype;\n  }\n}\n\nexport default ForeignKeyConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA4D;AAErD,IAAK,mBAAL,kBAAK,sBAAL;AACL,gCAAS;AACT,+BAAQ;AAFE;AAAA;AAgBZ,wCAAwC,8BAAc;AAAA,EAOpD,YACE,SACA;AACA,cAAU,WAAW;AACrB,YAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AAEjE,UAAM,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAZzC;AACA;AACA;AACA;AACA;AASE,SAAK,OAAO;AAEZ,SAAK,UACH,QAAQ,WAAW,QAAQ,OAAO,WAAW;AAC/C,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AACrB,SAAK,QAAQ,QAAQ;AACrB,SAAK,QAAQ,QAAQ;AACrB,SAAK,UAAU,QAAQ;AAAA;AAAA;AAI3B,IAAO,uCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/database/timeout-error.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,38,3,69,58,37,27,40,3,1,41,41,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/database/timeout-error.ts"],"sourcesContent":["import { ErrorOptions } from '../base-error';\nimport DatabaseError, { DatabaseErrorParent } from '../database-error';\n\n/**\n * Thrown when a database query times out because of a deadlock\n */\nclass TimeoutError extends DatabaseError {\n  constructor(parent: DatabaseErrorParent, options: ErrorOptions = {}) {\n    super(parent, options);\n    this.name = 'SequelizeTimeoutError';\n  }\n}\n\nexport default TimeoutError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,4BAAmD;AAKnD,2BAA2B,8BAAc;AAAA,EACvC,YAAY,QAA6B,UAAwB,IAAI;AACnE,UAAM,QAAQ;AACd,SAAK,OAAO;AAAA;AAAA;AAIhB,IAAO,wBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/database/unknown-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,49,3,69,68,24,28,74,52,38,34,33,50,80,41,33,31,3,1,62,52,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/database/unknown-constraint-error.ts"],"sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\ninterface UnknownConstraintErrorOptions {\n  constraint?: string;\n  fields?: Record<string, string | number>;\n  table?: string;\n}\n\n/**\n * Thrown when constraint name is not found in the database\n */\nclass UnknownConstraintError extends DatabaseError implements UnknownConstraintErrorOptions {\n  constraint: string | undefined;\n  fields: Record<string, string | number> | undefined;\n  table: string | undefined;\n\n  constructor(\n    options: UnknownConstraintErrorOptions & DatabaseErrorSubclassOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeUnknownConstraintError';\n\n    this.message = options.message || 'The specified constraint does not exist';\n    this.constraint = options.constraint;\n    this.fields = options.fields;\n    this.table = options.table;\n  }\n}\n\nexport default UnknownConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,4BAA4D;AAW5D,qCAAqC,8BAAuD;AAAA,EAK1F,YACE,SACA;AACA,cAAU,WAAW;AACrB,YAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AAEjE,UAAM,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAVzC;AACA;AACA;AASE,SAAK,OAAO;AAEZ,SAAK,UAAU,QAAQ,WAAW;AAClC,SAAK,aAAa,QAAQ;AAC1B,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA;AAAA;AAIzB,IAAO,mCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/errors/validation/unique-constraint-error.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,48,3,73,69,24,19,45,93,86,61,69,34,36,34,31,49,58,33,35,34,3,1,60,51,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/errors/validation/unique-constraint-error.ts"],"sourcesContent":["import { CommonErrorProperties, ErrorOptions } from '../base-error';\nimport ValidationError, { ValidationErrorItem } from '../validation-error';\n\ninterface UniqueConstraintErrorParent\n  extends Error,\n    Pick<CommonErrorProperties, 'sql'> {}\n\nexport interface UniqueConstraintErrorOptions extends ErrorOptions {\n  parent?: UniqueConstraintErrorParent;\n  original?: UniqueConstraintErrorParent;\n  errors?: ValidationErrorItem[];\n  fields?: Record<string, unknown>;\n  message?: string;\n}\n\n/**\n * Thrown when a unique constraint is violated in the database\n */\nclass UniqueConstraintError extends ValidationError implements CommonErrorProperties {\n  readonly parent: UniqueConstraintErrorParent;\n  readonly original: UniqueConstraintErrorParent;\n  readonly fields: Record<string, unknown>;\n  readonly sql: string;\n\n  constructor(options: UniqueConstraintErrorOptions) {\n    options = options ?? {};\n    options.parent = options.parent ?? { sql: '', name: '', message: '' };\n    options.message =\n      options.message || options.parent.message || 'Validation Error';\n    options.errors = options.errors ?? [];\n    super(options.message, options.errors, { stack: options.stack });\n\n    this.name = 'SequelizeUniqueConstraintError';\n    this.fields = options.fields ?? {};\n    this.parent = options.parent;\n    this.original = options.parent;\n    this.sql = options.parent.sql;\n  }\n}\n\nexport default UniqueConstraintError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,8BAAqD;AAiBrD,oCAAoC,gCAAiD;AAAA,EAMnF,YAAY,SAAuC;AAxBrD;AAyBI,cAAU,4BAAW;AACrB,YAAQ,SAAS,cAAQ,WAAR,YAAkB,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS;AACjE,YAAQ,UACN,QAAQ,WAAW,QAAQ,OAAO,WAAW;AAC/C,YAAQ,SAAS,cAAQ,WAAR,YAAkB;AACnC,UAAM,QAAQ,SAAS,QAAQ,QAAQ,EAAE,OAAO,QAAQ;AAXjD;AACA;AACA;AACA;AAUP,SAAK,OAAO;AACZ,SAAK,SAAS,cAAQ,WAAR,YAAkB;AAChC,SAAK,SAAS,QAAQ;AACtB,SAAK,WAAW,QAAQ;AACxB,SAAK,MAAM,QAAQ,OAAO;AAAA;AAAA;AAI9B,IAAO,kCAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mssql/async-queue.js":{"lineLengths":[29,38,55,51,41,51,160,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,41,36,3,71,83,57,24,19,43,3,1,18,17,36,34,41,38,24,32,6,3,11,23,151,3,26,45,48,36,26,147,9,53,9,7,3,1,37,39,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/mssql/async-queue.ts"],"sourcesContent":["import BaseError from '../../errors/base-error';\nimport ConnectionError from '../../errors/connection-error';\n\n/**\n * Thrown when a connection to a database is closed while an operation is in progress\n */\nexport class AsyncQueueError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SequelizeAsyncQueueError';\n  }\n}\n\nclass AsyncQueue {\n  previous: Promise<unknown>;\n  closed: boolean;\n  rejectCurrent: (reason?: any) => void;\n\n  constructor() {\n    this.previous = Promise.resolve();\n    this.closed = false;\n    this.rejectCurrent = () => {\n      /** do nothing */\n    };\n  }\n\n  close() {\n    this.closed = true;\n    this.rejectCurrent(\n      new ConnectionError(\n        new AsyncQueueError(\n          'the connection was closed before this query could finish executing'\n        )\n      )\n    );\n  }\n\n  enqueue(asyncFunction: (...args: any[]) => Promise<unknown>) {\n    // This outer promise might seems superflous since down below we return asyncFunction().then(resolve, reject).\n    // However, this ensures that this.previous will never be a rejected promise so the queue will\n    // always keep going, while still communicating rejection from asyncFunction to the user.\n    return new Promise((resolve, reject) => {\n      this.previous = this.previous.then(() => {\n        this.rejectCurrent = reject;\n        if (this.closed) {\n          return reject(\n            new ConnectionError(\n              new AsyncQueueError(\n                'the connection was closed before this query could be executed'\n              )\n            )\n          );\n        }\n        return asyncFunction().then(resolve, reject);\n      });\n    });\n  }\n}\n\nexport default AsyncQueue;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsB;AACtB,8BAA4B;AAKrB,8BAA8B,0BAAU;AAAA,EAC7C,YAAY,SAAiB;AAC3B,UAAM;AACN,SAAK,OAAO;AAAA;AAAA;AAIhB,iBAAiB;AAAA,EAKf,cAAc;AAJd;AACA;AACA;AAGE,SAAK,WAAW,QAAQ;AACxB,SAAK,SAAS;AACd,SAAK,gBAAgB,MAAM;AAAA;AAAA;AAAA,EAK7B,QAAQ;AACN,SAAK,SAAS;AACd,SAAK,cACH,IAAI,gCACF,IAAI,gBACF;AAAA;AAAA,EAMR,QAAQ,eAAqD;AAI3D,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAK,WAAW,KAAK,SAAS,KAAK,MAAM;AACvC,aAAK,gBAAgB;AACrB,YAAI,KAAK,QAAQ;AACf,iBAAO,OACL,IAAI,gCACF,IAAI,gBACF;AAAA;AAKR,eAAO,gBAAgB,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAM7C,IAAO,sBAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/validator-extras.js":{"lineLengths":[13,28,52,33,20,20,20,16,4,17,39,4,22,40,4,14,27,4,15,29,4,15,29,4,22,35,4,34,14,76,47,5,30,4,37,48,4,18,97,4,17,35,42,4,17,35,42,4,32,50,4,23,40,4,26,37,4,31,47,3,2,32,78,115,2,35,40,2,40,26,3,37,41,40,22,17,3,32,46,2,30,44,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/utils/validator-extras.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst validator = _.cloneDeep(require('validator'));\nconst moment = require('moment');\n\nconst extensions = {\n  extend(name, fn) {\n    this[name] = fn;\n\n    return this;\n  },\n  notEmpty(str) {\n    return !str.match(/^[\\s\\t\\r\\n]*$/);\n  },\n  len(str, min, max) {\n    return this.isLength(str, min, max);\n  },\n  isUrl(str) {\n    return this.isURL(str);\n  },\n  isIPv6(str) {\n    return this.isIP(str, 6);\n  },\n  isIPv4(str) {\n    return this.isIP(str, 4);\n  },\n  notIn(str, values) {\n    return !this.isIn(str, values);\n  },\n  regex(str, pattern, modifiers) {\n    str += '';\n    if (Object.prototype.toString.call(pattern).slice(8, -1) !== 'RegExp') {\n      pattern = new RegExp(pattern, modifiers);\n    }\n    return str.match(pattern);\n  },\n  notRegex(str, pattern, modifiers) {\n    return !this.regex(str, pattern, modifiers);\n  },\n  isDecimal(str) {\n    return str !== '' && !!str.match(/^(?:-?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][+-]?(?:[0-9]+))?$/);\n  },\n  min(str, val) {\n    const number = parseFloat(str);\n    return isNaN(number) || number >= val;\n  },\n  max(str, val) {\n    const number = parseFloat(str);\n    return isNaN(number) || number <= val;\n  },\n  not(str, pattern, modifiers) {\n    return this.notRegex(str, pattern, modifiers);\n  },\n  contains(str, elem) {\n    return !!elem && str.includes(elem);\n  },\n  notContains(str, elem) {\n    return !this.contains(str, elem);\n  },\n  is(str, pattern, modifiers) {\n    return this.regex(str, pattern, modifiers);\n  }\n};\nexports.extensions = extensions;\n\n// instance based validators\nvalidator.isImmutable = function(value, validatorArgs, field, modelInstance) {\n  return modelInstance.isNewRecord || modelInstance.dataValues[field] === modelInstance._previousDataValues[field];\n};\n\n// extra validators\nvalidator.notNull = function(val) {\n  return val !== null && val !== undefined;\n};\n\n// https://github.com/chriso/validator.js/blob/6.2.0/validator.js\n_.forEach(extensions, (extend, key) => {\n  validator[key] = extend;\n});\n\n// map isNull to isEmpty\n// https://github.com/chriso/validator.js/commit/e33d38a26ee2f9666b319adb67c7fc0d3dea7125\nvalidator.isNull = validator.isEmpty;\n\n// isDate removed in 7.0.0\n// https://github.com/chriso/validator.js/commit/095509fc707a4dc0e99f85131df1176ad6389fc9\nvalidator.isDate = function(dateString) {\n  // avoid http://momentjs.com/guides/#/warnings/js-date/\n  // by doing a preliminary check on `dateString`\n  const parsed = Date.parse(dateString);\n  if (isNaN(parsed)) {\n    // fail if we can't parse it\n    return false;\n  }\n  // otherwise convert to ISO 8601 as moment prefers\n  // http://momentjs.com/docs/#/parsing/string/\n  const date = new Date(parsed);\n  return moment(date.toISOString()).isValid();\n};\n\nexports.validator = validator;\n"],"mappings":";AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,YAAY,EAAE,UAAU,QAAQ;AACtC,MAAM,SAAS,QAAQ;AAEvB,MAAM,aAAa;AAAA,EACjB,OAAO,MAAM,IAAI;AACf,SAAK,QAAQ;AAEb,WAAO;AAAA;AAAA,EAET,SAAS,KAAK;AACZ,WAAO,CAAC,IAAI,MAAM;AAAA;AAAA,EAEpB,IAAI,KAAK,KAAK,KAAK;AACjB,WAAO,KAAK,SAAS,KAAK,KAAK;AAAA;AAAA,EAEjC,MAAM,KAAK;AACT,WAAO,KAAK,MAAM;AAAA;AAAA,EAEpB,OAAO,KAAK;AACV,WAAO,KAAK,KAAK,KAAK;AAAA;AAAA,EAExB,OAAO,KAAK;AACV,WAAO,KAAK,KAAK,KAAK;AAAA;AAAA,EAExB,MAAM,KAAK,QAAQ;AACjB,WAAO,CAAC,KAAK,KAAK,KAAK;AAAA;AAAA,EAEzB,MAAM,KAAK,SAAS,WAAW;AAC7B,WAAO;AACP,QAAI,OAAO,UAAU,SAAS,KAAK,SAAS,MAAM,GAAG,QAAQ,UAAU;AACrE,gBAAU,IAAI,OAAO,SAAS;AAAA;AAEhC,WAAO,IAAI,MAAM;AAAA;AAAA,EAEnB,SAAS,KAAK,SAAS,WAAW;AAChC,WAAO,CAAC,KAAK,MAAM,KAAK,SAAS;AAAA;AAAA,EAEnC,UAAU,KAAK;AACb,WAAO,QAAQ,MAAM,CAAC,CAAC,IAAI,MAAM;AAAA;AAAA,EAEnC,IAAI,KAAK,KAAK;AACZ,UAAM,SAAS,WAAW;AAC1B,WAAO,MAAM,WAAW,UAAU;AAAA;AAAA,EAEpC,IAAI,KAAK,KAAK;AACZ,UAAM,SAAS,WAAW;AAC1B,WAAO,MAAM,WAAW,UAAU;AAAA;AAAA,EAEpC,IAAI,KAAK,SAAS,WAAW;AAC3B,WAAO,KAAK,SAAS,KAAK,SAAS;AAAA;AAAA,EAErC,SAAS,KAAK,MAAM;AAClB,WAAO,CAAC,CAAC,QAAQ,IAAI,SAAS;AAAA;AAAA,EAEhC,YAAY,KAAK,MAAM;AACrB,WAAO,CAAC,KAAK,SAAS,KAAK;AAAA;AAAA,EAE7B,GAAG,KAAK,SAAS,WAAW;AAC1B,WAAO,KAAK,MAAM,KAAK,SAAS;AAAA;AAAA;AAGpC,QAAQ,aAAa;AAGrB,UAAU,cAAc,SAAS,OAAO,eAAe,OAAO,eAAe;AAC3E,SAAO,cAAc,eAAe,cAAc,WAAW,WAAW,cAAc,oBAAoB;AAAA;AAI5G,UAAU,UAAU,SAAS,KAAK;AAChC,SAAO,QAAQ,QAAQ,QAAQ;AAAA;AAIjC,EAAE,QAAQ,YAAY,CAAC,QAAQ,QAAQ;AACrC,YAAU,OAAO;AAAA;AAKnB,UAAU,SAAS,UAAU;AAI7B,UAAU,SAAS,SAAS,YAAY;AAGtC,QAAM,SAAS,KAAK,MAAM;AAC1B,MAAI,MAAM,SAAS;AAEjB,WAAO;AAAA;AAIT,QAAM,OAAO,IAAI,KAAK;AACtB,SAAO,OAAO,KAAK,eAAe;AAAA;AAGpC,QAAQ,YAAY;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/logger.js":{"lineLengths":[29,38,55,51,55,41,51,57,160,32,33,35,40,26,46,37,42,5,11,2,82,38,18,26,69,34,44,51,71,36,5,16,2,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,42,72,15,2,19,23,22,3,48,46,14,24,34,83,34,13,13,3,17,65,3,18,47,24,14,7,3,22,71,3,1,28,34,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/utils/logger.ts"],"sourcesContent":["/**\n * @file Sequelize module for debug and deprecation messages.\n * It require a `context` for which messages will be printed.\n *\n * @module logging\n * @access package\n */\nimport nodeDebug from 'debug';\nimport util from 'util';\n\n/**\n * The configuration for sequelize's logging interface.\n *\n * @access package\n */\nexport interface LoggerConfig {\n  /**\n   * The context which the logger should log in.\n   *\n   * @default 'sequelize'\n   */\n  context?: string;\n}\n\nexport class Logger {\n  protected config: LoggerConfig;\n\n  constructor({ context = 'sequelize', ...rest }: Partial<LoggerConfig> = {}) {\n    this.config = {\n      context,\n      ...rest\n    };\n  }\n\n  /**\n   * Logs a warning in the logger's context.\n   *\n   * @param message The message of the warning.\n   */\n  warn(message: string): void {\n    console.warn(`(${this.config.context}) Warning: ${message}`);\n  }\n\n  /**\n   * Uses node's util.inspect to stringify a value.\n   *\n   * @param value The value which should be inspected.\n   * @returns The string of the inspected value.\n   */\n  inspect(value: unknown): string {\n    return util.inspect(value, {\n      showHidden: false,\n      depth: 1\n    });\n  }\n\n  /**\n   * Gets a debugger for a context.\n   *\n   * @param name The name of the context.\n   * @returns A debugger interace which can be used to debug.\n   */\n  debugContext(name: string): nodeDebug.Debugger {\n    return nodeDebug(`${this.config.context}:${name}`);\n  }\n}\n\nexport const logger = new Logger();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAOA,mBAAsB;AACtB,kBAAiB;AAgBV,aAAa;AAAA,EAGlB,YAAY,KAA4D,IAAI;AAFlE;AAEE,iBAAE,YAAU,gBAAZ,IAA4B,iBAA5B,IAA4B,CAA1B;AACZ,SAAK,SAAS;AAAA,MACZ;AAAA,OACG;AAAA;AAAA,EASP,KAAK,SAAuB;AAC1B,YAAQ,KAAK,IAAI,KAAK,OAAO,qBAAqB;AAAA;AAAA,EASpD,QAAQ,OAAwB;AAC9B,WAAO,oBAAK,QAAQ,OAAO;AAAA,MACzB,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA;AAAA,EAUX,aAAa,MAAkC;AAC7C,WAAO,0BAAU,GAAG,KAAK,OAAO,WAAW;AAAA;AAAA;AAIxC,MAAM,SAAS,IAAI;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/class-to-invokable.js":{"lineLengths":[38,82,33,25,23,66,2,19,42,3,34,27,36,32,6,30,32,5,5,1,46,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/utils/class-to-invokable.ts"],"sourcesContent":["/**\n * Utility type for a class which can be called in addion to being used as a constructor.\n */\ninterface Invokeable<Args extends Array<any>, Instance> {\n  (...args: Args): Instance;\n  new (...args: Args): Instance;\n}\n\n/**\n * Wraps a constructor to not need the `new` keyword using a proxy.\n * Only used for data types.\n *\n * @param {ProxyConstructor} Class The class instance to wrap as invocable.\n * @returns {Proxy} Wrapped class instance.\n * @private\n */\nexport function classToInvokable<Args extends Array<any>, Instance extends object>(\n  Class: new (...args: Args) => Instance\n): Invokeable<Args, Instance> {\n  return new Proxy<Invokeable<Args, Instance>>(Class as any, {\n    apply(_target, _thisArg, args: Args) {\n      return new Class(...args);\n    },\n    construct(_target, args: Args) {\n      return new Class(...args);\n    }\n  });\n}\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAgBO,0BACL,OAC4B;AAC5B,SAAO,IAAI,MAAkC,OAAc;AAAA,IACzD,MAAM,SAAS,UAAU,MAAY;AACnC,aAAO,IAAI,MAAM,GAAG;AAAA;AAAA,IAEtB,UAAU,SAAS,MAAY;AAC7B,aAAO,IAAI,MAAM,GAAG;AAAA;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/join-sql-fragments.js":{"lineLengths":[38,160,82,33,25,23,66,2,42,72,15,2,19,53,42,3,39,28,1,40,25,1,39,67,64,28,12,34,5,12,59,12,6,6,31,14,12,1,34,25,14,47,56,34,40,5,20,5,42,51,152,5,3,59,67,52,1,47,40,19,32,36,21,29,40,3,1,46,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/utils/join-sql-fragments.ts"],"sourcesContent":["import { SQLFragment, TruthySQLFragment } from '../generic/sql-fragment';\n\nfunction doesNotWantLeadingSpace(str: string): boolean {\n  return /^[;,)]/.test(str);\n}\nfunction doesNotWantTrailingSpace(str: string): boolean {\n  return /\\($/.test(str);\n}\n\n/**\n * Joins an array of strings with a single space between them,\n * except for:\n *\n * - Strings starting with ';', ',' and ')', which do not get a leading space.\n * - Strings ending with '(', which do not get a trailing space.\n *\n * @param {string[]} parts\n * @returns {string}\n * @private\n */\nfunction singleSpaceJoinHelper(parts: string[]): string {\n  return parts.reduce(\n    ({ skipNextLeadingSpace, result }, part) => {\n      if (skipNextLeadingSpace || doesNotWantLeadingSpace(part)) {\n        result += part.trim();\n      } else {\n        result += ` ${part.trim()}`;\n      }\n      return {\n        skipNextLeadingSpace: doesNotWantTrailingSpace(part),\n        result\n      };\n    },\n    {\n      skipNextLeadingSpace: true,\n      result: ''\n    }\n  ).result;\n}\n\n/**\n * Joins an array with a single space, auto trimming when needed.\n *\n * Certain elements do not get leading/trailing spaces.\n *\n * @param {SQLFragment[]} array The array to be joined. Falsy values are skipped. If an\n * element is another array, this function will be called recursively on that array.\n * Otherwise, if a non-string, non-falsy value is present, a TypeError will be thrown.\n *\n * @returns {string} The joined string.\n *\n * @private\n */\nexport function joinSQLFragments(array: SQLFragment[]): string {\n  if (array.length === 0) return '';\n\n  const truthyArray: TruthySQLFragment[] = array.filter(\n    (x): x is string | SQLFragment[] => !!x\n  );\n  const flattenedArray: string[] = truthyArray.map(\n    (fragment: TruthySQLFragment) => {\n      if (Array.isArray(fragment)) {\n        return joinSQLFragments(fragment);\n      }\n\n      return fragment;\n    }\n  );\n\n  // Ensure strings\n  for (const fragment of flattenedArray) {\n    if (fragment && typeof fragment !== 'string') {\n      throw new JoinSQLFragmentsError(\n        flattenedArray,\n        fragment,\n        `Tried to construct a SQL string with a non-string, non-falsy fragment (${fragment}).`\n      );\n    }\n  }\n\n  // Trim fragments\n  const trimmedArray = flattenedArray.map(x => x.trim());\n\n  // Skip full-whitespace fragments (empty after the above trim)\n  const nonEmptyStringArray = trimmedArray.filter(x => x !== '');\n\n  return singleSpaceJoinHelper(nonEmptyStringArray);\n}\n\nexport class JoinSQLFragmentsError extends TypeError {\n  args: SQLFragment[];\n  fragment: any; // iirc this error is only used when we get an invalid fragment.\n\n  constructor(args: SQLFragment[], fragment: any, message: string) {\n    super(message);\n    \n    this.args = args;\n    this.fragment = fragment;\n    this.name = 'JoinSQLFragmentsError';\n  }\n}\n"],"mappings":";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA,iCAAiC,KAAsB;AACrD,SAAO,SAAS,KAAK;AAAA;AAEvB,kCAAkC,KAAsB;AACtD,SAAO,MAAM,KAAK;AAAA;AAcpB,+BAA+B,OAAyB;AACtD,SAAO,MAAM,OACX,CAAC,EAAE,sBAAsB,UAAU,SAAS;AAC1C,QAAI,wBAAwB,wBAAwB,OAAO;AACzD,gBAAU,KAAK;AAAA,WACV;AACL,gBAAU,IAAI,KAAK;AAAA;AAErB,WAAO;AAAA,MACL,sBAAsB,yBAAyB;AAAA,MAC/C;AAAA;AAAA,KAGJ;AAAA,IACE,sBAAsB;AAAA,IACtB,QAAQ;AAAA,KAEV;AAAA;AAgBG,0BAA0B,OAA8B;AAC7D,MAAI,MAAM,WAAW;AAAG,WAAO;AAE/B,QAAM,cAAmC,MAAM,OAC7C,CAAC,MAAmC,CAAC,CAAC;AAExC,QAAM,iBAA2B,YAAY,IAC3C,CAAC,aAAgC;AAC/B,QAAI,MAAM,QAAQ,WAAW;AAC3B,aAAO,iBAAiB;AAAA;AAG1B,WAAO;AAAA;AAKX,aAAW,YAAY,gBAAgB;AACrC,QAAI,YAAY,OAAO,aAAa,UAAU;AAC5C,YAAM,IAAI,sBACR,gBACA,UACA,0EAA0E;AAAA;AAAA;AAMhF,QAAM,eAAe,eAAe,IAAI,OAAK,EAAE;AAG/C,QAAM,sBAAsB,aAAa,OAAO,OAAK,MAAM;AAE3D,SAAO,sBAAsB;AAAA;AAGxB,oCAAoC,UAAU;AAAA,EAInD,YAAY,MAAqB,UAAe,SAAiB;AAC/D,UAAM;AAJR;AACA;AAKE,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,OAAO;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/postgres/data-types.js":{"lineLengths":[13,28,27,33,111,54,98,142,32,39,34,34,5,3,43,43,43,49,51,43,45,43,45,32,31,26,7,32,27,7,46,5,31,95,40,44,37,28,11,38,29,11,9,38,7,19,5,25,33,24,7,34,25,7,19,5,3,47,43,25,19,5,3,49,41,13,25,23,7,27,5,3,48,37,13,25,98,30,7,20,5,3,43,41,25,19,5,3,47,37,13,25,23,7,27,5,3,53,43,13,23,5,22,47,59,27,9,40,103,9,40,66,9,7,19,5,3,46,46,37,13,40,5,21,54,37,7,18,5,32,31,26,7,32,27,7,46,5,31,134,40,44,37,28,11,38,29,11,9,31,7,19,5,3,50,43,25,20,44,5,3,46,45,25,20,44,5,3,47,43,25,20,44,5,3,41,31,4,46,41,25,20,44,5,3,45,37,25,20,44,5,3,45,41,25,20,44,5,3,47,39,35,30,27,101,30,37,32,7,27,84,32,7,27,84,32,7,5,3,21,37,13,25,107,30,7,21,5,18,30,5,3,44,45,13,28,22,34,24,36,9,22,7,20,5,25,42,65,5,32,76,5,32,63,5,3,51,47,13,31,22,34,24,36,9,22,7,20,5,25,42,65,5,32,76,5,31,63,5,3,53,13,41,19,14,20,37,7,5,19,20,37,7,37,5,23,39,5,32,51,5,25,20,37,7,33,5,3,34,47,39,29,35,63,7,45,62,88,73,54,11,30,9,74,23,9,45,64,9,37,9,53,48,5,33,49,35,50,7,26,5,33,49,35,67,7,38,5,13,82,5,18,83,5,61,48,5,3,35,33,36,15,27,26,24,28,25,6,16,22,25,26,23,20,5,4,43,71,34,74,48,7,45,52,41,23,9,7,35,13,4,79,65,20,43,33,48,57,50,110,127,52,14,30,7,5,15,4,79,59,4,37,25,19,5,3,41,10,12,9,11,9,9,11,12,13,12,11,12,9,13,9,31,10,13,14,11,10,8,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/postgres/data-types.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst wkx = require('wkx');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'http://www.postgresql.org/docs/9.4/static/datatype.html');\n\n  /**\n   * Removes unsupported Postgres options, i.e., LENGTH, UNSIGNED and ZEROFILL, for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._length || dataType.options.length || dataType._unsigned || dataType._zerofill) {\n      warn(`PostgresSQL does not support '${dataType.key}' with LENGTH, UNSIGNED or ZEROFILL. Plain '${dataType.key}' will be used instead.`);\n      dataType._length = undefined;\n      dataType.options.length = undefined;\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * types:\n   * {\n   *   oids: [oid],\n   *   array_oids: [oid]\n   * }\n   *\n   * @see oid here https://github.com/lib/pq/blob/master/oid/types.go\n   */\n\n  BaseTypes.UUID.types.postgres = ['uuid'];\n  BaseTypes.CIDR.types.postgres = ['cidr'];\n  BaseTypes.INET.types.postgres = ['inet'];\n  BaseTypes.MACADDR.types.postgres = ['macaddr'];\n  BaseTypes.TSVECTOR.types.postgres = ['tsvector'];\n  BaseTypes.JSON.types.postgres = ['json'];\n  BaseTypes.JSONB.types.postgres = ['jsonb'];\n  BaseTypes.TIME.types.postgres = ['time'];\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    _stringify(value, options) {\n      if (value === Infinity) {\n        return 'Infinity';\n      }\n      if (value === -Infinity) {\n        return '-Infinity';\n      }\n      return super._stringify(value, options);\n    }\n    _sanitize(value, options) {\n      if ((!options || options && !options.raw) && value !== Infinity && value !== -Infinity) {\n        if (typeof value === 'string') {\n          const lower = value.toLowerCase();\n          if (lower === 'infinity') {\n            return Infinity;\n          }\n          if (lower === '-infinity') {\n            return -Infinity;\n          }\n        }\n        return super._sanitize(value);\n      }\n      return value;\n    }\n    static parse(value) {\n      if (value === 'infinity') {\n        return Infinity;\n      }\n      if (value === '-infinity') {\n        return -Infinity;\n      }\n      return value;\n    }\n  }\n\n  BaseTypes.DATEONLY.types.postgres = ['date'];\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    static parse(value) {\n      return value;\n    }\n  }\n\n  // numeric\n  BaseTypes.DECIMAL.types.postgres = ['numeric'];\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (this._binary) {\n        return 'BYTEA';\n      }\n      return super.toSql();\n    }\n  }\n\n  BaseTypes.STRING.types.postgres = ['varchar'];\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      if (this._length) {\n        warn('PostgreSQL does not support TEXT with options. Plain `TEXT` will be used instead.');\n        this._length = undefined;\n      }\n      return 'TEXT';\n    }\n  }\n\n  BaseTypes.TEXT.types.postgres = ['text'];\n\n  class CITEXT extends BaseTypes.CITEXT {\n    static parse(value) {\n      return value;\n    }\n  }\n\n  BaseTypes.CITEXT.types.postgres = ['citext'];\n\n  class CHAR extends BaseTypes.CHAR {\n    toSql() {\n      if (this._binary) {\n        return 'BYTEA';\n      }\n      return super.toSql();\n    }\n  }\n\n  BaseTypes.CHAR.types.postgres = ['char', 'bpchar'];\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BOOLEAN';\n    }\n    _sanitize(value) {\n      if (value !== null && value !== undefined) {\n        if (Buffer.isBuffer(value) && value.length === 1) {\n          // Bit fields are returned as buffers\n          value = value[0];\n        }\n        if (typeof value === 'string') {\n          // Only take action on valid boolean strings.\n          return ['true', 't'].includes(value) ? true : ['false', 'f'].includes(value) ? false : value;\n        }\n        if (typeof value === 'number') {\n          // Only take action on valid boolean integers.\n          return value === 1 ? true : value === 0 ? false : value;\n        }\n      }\n      return value;\n    }\n  }\n\n  BOOLEAN.parse = BOOLEAN.prototype._sanitize;\n\n  BaseTypes.BOOLEAN.types.postgres = ['bool'];\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'TIMESTAMP WITH TIME ZONE';\n    }\n    validate(value) {\n      if (value !== Infinity && value !== -Infinity) {\n        return super.validate(value);\n      }\n      return true;\n    }\n    _stringify(value, options) {\n      if (value === Infinity) {\n        return 'Infinity';\n      }\n      if (value === -Infinity) {\n        return '-Infinity';\n      }\n      return super._stringify(value, options);\n    }\n    _sanitize(value, options) {\n      if ((!options || options && !options.raw) && !(value instanceof Date) && !!value && value !== Infinity && value !== -Infinity) {\n        if (typeof value === 'string') {\n          const lower = value.toLowerCase();\n          if (lower === 'infinity') {\n            return Infinity;\n          }\n          if (lower === '-infinity') {\n            return -Infinity;\n          }\n        }\n        return new Date(value);\n      }\n      return value;\n    }\n  }\n\n  BaseTypes.DATE.types.postgres = ['timestamptz'];\n\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // int2\n  BaseTypes.TINYINT.types.postgres = ['int2'];\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // int2\n  BaseTypes.SMALLINT.types.postgres = ['int2'];\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  INTEGER.parse = function parse(value) {\n    return parseInt(value, 10);\n  };\n\n  // int4\n  BaseTypes.INTEGER.types.postgres = ['int4'];\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // int8\n  BaseTypes.BIGINT.types.postgres = ['int8'];\n\n  class REAL extends BaseTypes.REAL {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // float4\n  BaseTypes.REAL.types.postgres = ['float4'];\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  // float8\n  BaseTypes.DOUBLE.types.postgres = ['float8'];\n\n  class FLOAT extends BaseTypes.FLOAT {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // POSTGRES does only support lengths as parameter.\n      // Values between 1-24 result in REAL\n      // Values between 25-53 result in DOUBLE PRECISION\n      // If decimals are provided remove these and print a warning\n      if (this._decimals) {\n        warn('PostgreSQL does not support FLOAT with decimals. Plain `FLOAT` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._decimals = undefined;\n      }\n      if (this._unsigned) {\n        warn('PostgreSQL does not support FLOAT unsigned. `UNSIGNED` was removed.');\n        this._unsigned = undefined;\n      }\n      if (this._zerofill) {\n        warn('PostgreSQL does not support FLOAT zerofill. `ZEROFILL` was removed.');\n        this._zerofill = undefined;\n      }\n    }\n  }\n  delete FLOAT.parse; // Float has no separate type in PG\n\n  class BLOB extends BaseTypes.BLOB {\n    toSql() {\n      if (this._length) {\n        warn('PostgreSQL does not support BLOB (BYTEA) with options. Plain `BYTEA` will be used instead.');\n        this._length = undefined;\n      }\n      return 'BYTEA';\n    }\n    _hexify(hex) {\n      // bytea hex format http://www.postgresql.org/docs/current/static/datatype-binary.html\n      return `E'\\\\\\\\x${hex}'`;\n    }\n  }\n\n  BaseTypes.BLOB.types.postgres = ['bytea'];\n\n  class GEOMETRY extends BaseTypes.GEOMETRY {\n    toSql() {\n      let result = this.key;\n      if (this.type) {\n        result += `(${this.type}`;\n        if (this.srid) {\n          result += `,${this.srid}`;\n        }\n        result += ')';\n      }\n      return result;\n    }\n    static parse(value) {\n      const b = Buffer.from(value, 'hex');\n      return wkx.Geometry.parse(b).toGeoJSON({ shortCrs: true });\n    }\n    _stringify(value, options) {\n      return `ST_GeomFromGeoJSON(${options.escape(JSON.stringify(value))})`;\n    }\n    _bindParam(value, options) {\n      return `ST_GeomFromGeoJSON(${options.bindParam(value)})`;\n    }\n  }\n\n  BaseTypes.GEOMETRY.types.postgres = ['geometry'];\n\n\n  class GEOGRAPHY extends BaseTypes.GEOGRAPHY {\n    toSql() {\n      let result = 'GEOGRAPHY';\n      if (this.type) {\n        result += `(${this.type}`;\n        if (this.srid) {\n          result += `,${this.srid}`;\n        }\n        result += ')';\n      }\n      return result;\n    }\n    static parse(value) {\n      const b = Buffer.from(value, 'hex');\n      return wkx.Geometry.parse(b).toGeoJSON({ shortCrs: true });\n    }\n    _stringify(value, options) {\n      return `ST_GeomFromGeoJSON(${options.escape(JSON.stringify(value))})`;\n    }\n    bindParam(value, options) {\n      return `ST_GeomFromGeoJSON(${options.bindParam(value)})`;\n    }\n  }\n\n  BaseTypes.GEOGRAPHY.types.postgres = ['geography'];\n\n  let hstore;\n\n  class HSTORE extends BaseTypes.HSTORE {\n    constructor() {\n      super();\n      if (!hstore) {\n        // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated\n        hstore = require('./hstore');\n      }\n    }\n    _value(value) {\n      if (!hstore) {\n        // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated\n        hstore = require('./hstore');\n      }\n      return hstore.stringify(value);\n    }\n    _stringify(value) {\n      return `'${this._value(value)}'`;\n    }\n    _bindParam(value, options) {\n      return options.bindParam(this._value(value));\n    }\n    static parse(value) {\n      if (!hstore) {\n        // All datatype files are loaded at import - make sure we don't load the hstore parser before a hstore is instantiated\n        hstore = require('./hstore');\n      }\n      return hstore.parse(value);\n    }\n  }\n\n  HSTORE.prototype.escape = false;\n\n  BaseTypes.HSTORE.types.postgres = ['hstore'];\n\n  class RANGE extends BaseTypes.RANGE {\n    _value(values, options) {\n      if (!Array.isArray(values)) {\n        return this.options.subtype.stringify(values, options);\n      }\n      const valueInclusivity = [true, false];\n      const valuesStringified = values.map((value, index) => {\n        if (_.isObject(value) && Object.prototype.hasOwnProperty.call(value, 'value')) {\n          if (Object.prototype.hasOwnProperty.call(value, 'inclusive')) {\n            valueInclusivity[index] = value.inclusive;\n          }\n          value = value.value;\n        }\n        if (value === null || value === -Infinity || value === Infinity) {\n          // Pass through \"unbounded\" bounds unchanged\n          return value;\n        }\n        if (this.options.subtype.stringify) {\n          return this.options.subtype.stringify(value, options);\n        }\n        return options.escape(value);\n      });\n      // Array.map does not preserve extra array properties\n      valuesStringified.inclusive = valueInclusivity;\n      return range.stringify(valuesStringified);\n    }\n    _stringify(values, options) {\n      const value = this._value(values, options);\n      if (!Array.isArray(values)) {\n        return `'${value}'::${this.toCastType()}`;\n      }\n      return `'${value}'`;\n    }\n    _bindParam(values, options) {\n      const value = this._value(values, options);\n      if (!Array.isArray(values)) {\n        return `${options.bindParam(value)}::${this.toCastType()}`;\n      }\n      return options.bindParam(value);\n    }\n    toSql() {\n      return BaseTypes.RANGE.types.postgres.subtypes[this._subtype.toLowerCase()];\n    }\n    toCastType() {\n      return BaseTypes.RANGE.types.postgres.castTypes[this._subtype.toLowerCase()];\n    }\n    static parse(value, options = { parser: val => val }) {\n      return range.parse(value, options.parser);\n    }\n  }\n  const range = require('./range');\n\n  RANGE.prototype.escape = false;\n\n  BaseTypes.RANGE.types.postgres = {\n    subtypes: {\n      integer: 'int4range',\n      decimal: 'numrange',\n      date: 'tstzrange',\n      dateonly: 'daterange',\n      bigint: 'int8range'\n    },\n    castTypes: {\n      integer: 'int4',\n      decimal: 'numeric',\n      date: 'timestamptz',\n      dateonly: 'date',\n      bigint: 'int8'\n    }\n  };\n\n  // TODO: Why are base types being manipulated??\n  BaseTypes.ARRAY.prototype.escape = false;\n  BaseTypes.ARRAY.prototype._value = function _value(values, options) {\n    return values.map(value => {\n      if (options && options.bindParam && this.type && this.type._value) {\n        return this.type._value(value, options);\n      }\n      if (this.type && this.type.stringify) {\n        value = this.type.stringify(value, options);\n\n        if (this.type.escape === false) {\n          return value;\n        }\n      }\n      return options.escape(value);\n    }, this);\n  };\n  BaseTypes.ARRAY.prototype._stringify = function _stringify(values, options) {\n    let str = `ARRAY[${this._value(values, options).join(',')}]`;\n\n    if (this.type) {\n      const Utils = require('../../utils');\n      let castKey = this.toSql();\n\n      if (this.type instanceof BaseTypes.ENUM) {\n        const table = options.field.Model.getTableName();\n        const useSchema = table.schema !== undefined;\n        const schemaWithDelimiter = useSchema ? `${Utils.addTicks(table.schema, '\"')}${table.delimiter}` : '';\n\n        castKey = `${Utils.addTicks(\n          Utils.generateEnumName(useSchema ? table.tableName : table, options.field.field),\n          '\"'\n        ) }[]`;\n\n        str += `::${schemaWithDelimiter}${castKey}`;\n      } else {\n        str += `::${castKey}`;\n      }\n    }\n\n    return str;\n  };\n  BaseTypes.ARRAY.prototype._bindParam = function _bindParam(values, options) {\n    return options.bindParam(this._value(values, options));\n  };\n\n  class ENUM extends BaseTypes.ENUM {\n    static parse(value) {\n      return value;\n    }\n  }\n\n  BaseTypes.ENUM.types.postgres = [null];\n\n  return {\n    DECIMAL,\n    BLOB,\n    STRING,\n    CHAR,\n    TEXT,\n    CITEXT,\n    TINYINT,\n    SMALLINT,\n    INTEGER,\n    BIGINT,\n    BOOLEAN,\n    DATE,\n    DATEONLY,\n    REAL,\n    'DOUBLE PRECISION': DOUBLE,\n    FLOAT,\n    GEOMETRY,\n    GEOGRAPHY,\n    HSTORE,\n    RANGE,\n    ENUM\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/postgres/range.js":{"lineLengths":[13,28,37,23,14,3,50,42,3,31,1,44,15,16,3,29,20,3,30,21,3,26,1,26,20,16,27,46,19,19,24,90,64,33,38,29,37,37,36,10,35,3,34,28,67,50,63,34,5,5,50,50,105,1,30,31,21,16,26,14,3,66,26,17,40,12,43,81,6,5,16,1,22,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/postgres/range.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\n\nfunction stringifyRangeBound(bound) {\n  if (bound === null) {\n    return '' ;\n  }\n  if (bound === Infinity || bound === -Infinity) {\n    return bound.toString().toLowerCase();\n  }\n  return JSON.stringify(bound);\n}\n\nfunction parseRangeBound(bound, parseType) {\n  if (!bound) {\n    return null;\n  }\n  if (bound === 'infinity') {\n    return Infinity;\n  }\n  if (bound === '-infinity') {\n    return -Infinity;\n  }\n  return parseType(bound);\n\n}\n\nfunction stringify(data) {\n  if (data === null) return null;\n\n  if (!Array.isArray(data)) throw new Error('range must be an array');\n  if (!data.length) return 'empty';\n  if (data.length !== 2) throw new Error('range array length must be 0 (empty) or 2 (lower and upper bounds)');\n\n  if (Object.prototype.hasOwnProperty.call(data, 'inclusive')) {\n    if (data.inclusive === false) data.inclusive = [false, false];\n    else if (!data.inclusive) data.inclusive = [true, false];\n    else if (data.inclusive === true) data.inclusive = [true, true];\n  } else {\n    data.inclusive = [true, false];\n  }\n\n  _.each(data, (value, index) => {\n    if (_.isObject(value)) {\n      if (Object.prototype.hasOwnProperty.call(value, 'inclusive')) data.inclusive[index] = !!value.inclusive;\n      if (Object.prototype.hasOwnProperty.call(value, 'value')) data[index] = value.value;\n    }\n  });\n\n  const lowerBound = stringifyRangeBound(data[0]);\n  const upperBound = stringifyRangeBound(data[1]);\n\n  return `${(data.inclusive[0] ? '[' : '(') + lowerBound},${upperBound}${data.inclusive[1] ? ']' : ')'}`;\n}\nexports.stringify = stringify;\n\nfunction parse(value, parser) {\n  if (value === null) return null;\n  if (value === 'empty') {\n    return [];\n  }\n\n  let result = value\n    .substring(1, value.length - 1)\n    .split(',', 2);\n\n  if (result.length !== 2) return value;\n\n  result = result.map((item, index) => {\n    return {\n      value: parseRangeBound(item, parser),\n      inclusive: index === 0 ? value[0] === '[' : value[value.length - 1] === ']'\n    };\n  });\n\n  return result;\n}\nexports.parse = parse;\n"],"mappings":";AAEA,MAAM,IAAI,QAAQ;AAElB,6BAA6B,OAAO;AAClC,MAAI,UAAU,MAAM;AAClB,WAAO;AAAA;AAET,MAAI,UAAU,YAAY,UAAU,WAAW;AAC7C,WAAO,MAAM,WAAW;AAAA;AAE1B,SAAO,KAAK,UAAU;AAAA;AAGxB,yBAAyB,OAAO,WAAW;AACzC,MAAI,CAAC,OAAO;AACV,WAAO;AAAA;AAET,MAAI,UAAU,YAAY;AACxB,WAAO;AAAA;AAET,MAAI,UAAU,aAAa;AACzB,WAAO;AAAA;AAET,SAAO,UAAU;AAAA;AAInB,mBAAmB,MAAM;AACvB,MAAI,SAAS;AAAM,WAAO;AAE1B,MAAI,CAAC,MAAM,QAAQ;AAAO,UAAM,IAAI,MAAM;AAC1C,MAAI,CAAC,KAAK;AAAQ,WAAO;AACzB,MAAI,KAAK,WAAW;AAAG,UAAM,IAAI,MAAM;AAEvC,MAAI,OAAO,UAAU,eAAe,KAAK,MAAM,cAAc;AAC3D,QAAI,KAAK,cAAc;AAAO,WAAK,YAAY,CAAC,OAAO;AAAA,aAC9C,CAAC,KAAK;AAAW,WAAK,YAAY,CAAC,MAAM;AAAA,aACzC,KAAK,cAAc;AAAM,WAAK,YAAY,CAAC,MAAM;AAAA,SACrD;AACL,SAAK,YAAY,CAAC,MAAM;AAAA;AAG1B,IAAE,KAAK,MAAM,CAAC,OAAO,UAAU;AAC7B,QAAI,EAAE,SAAS,QAAQ;AACrB,UAAI,OAAO,UAAU,eAAe,KAAK,OAAO;AAAc,aAAK,UAAU,SAAS,CAAC,CAAC,MAAM;AAC9F,UAAI,OAAO,UAAU,eAAe,KAAK,OAAO;AAAU,aAAK,SAAS,MAAM;AAAA;AAAA;AAIlF,QAAM,aAAa,oBAAoB,KAAK;AAC5C,QAAM,aAAa,oBAAoB,KAAK;AAE5C,SAAO,GAAI,MAAK,UAAU,KAAK,MAAM,OAAO,cAAc,aAAa,KAAK,UAAU,KAAK,MAAM;AAAA;AAEnG,QAAQ,YAAY;AAEpB,eAAe,OAAO,QAAQ;AAC5B,MAAI,UAAU;AAAM,WAAO;AAC3B,MAAI,UAAU,SAAS;AACrB,WAAO;AAAA;AAGT,MAAI,SAAS,MACV,UAAU,GAAG,MAAM,SAAS,GAC5B,MAAM,KAAK;AAEd,MAAI,OAAO,WAAW;AAAG,WAAO;AAEhC,WAAS,OAAO,IAAI,CAAC,MAAM,UAAU;AACnC,WAAO;AAAA,MACL,OAAO,gBAAgB,MAAM;AAAA,MAC7B,WAAW,UAAU,IAAI,MAAM,OAAO,MAAM,MAAM,MAAM,SAAS,OAAO;AAAA;AAAA;AAI5E,SAAO;AAAA;AAET,QAAQ,QAAQ;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/data-types.js":{"lineLengths":[13,27,28,44,33,33,104,44,48,42,40,43,45,46,43,46,42,40,44,43,64,49,37,37,42,44,48,40,43,13,37,27,34,7,27,34,7,24,5,3,37,13,69,5,31,35,50,7,25,54,7,48,5,34,29,27,21,7,47,62,14,57,7,19,5,3,45,25,28,5,3,37,13,31,5,3,70,45,29,24,33,32,15,7,57,33,15,7,94,5,25,29,41,20,7,29,69,5,13,26,5,3,37,20,85,5,3,41,32,104,5,3,10,9,9,13,9,13,12,18,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/mysql/data-types.js"],"sourcesContent":["'use strict';\n\nconst wkx = require('wkx');\nconst _ = require('lodash');\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://dev.mysql.com/doc/refman/5.7/en/data-types.html';\n\n  /**\n   * types: [buffer_type, ...]\n   *\n   * @see buffer_type here https://dev.mysql.com/doc/refman/5.7/en/c-api-prepared-statement-type-codes.html\n   * @see hex here https://github.com/sidorares/node-mysql2/blob/master/lib/constants/types.js\n   */\n\n  BaseTypes.DATE.types.mysql = ['DATETIME'];\n  BaseTypes.STRING.types.mysql = ['VAR_STRING'];\n  BaseTypes.CHAR.types.mysql = ['STRING'];\n  BaseTypes.TEXT.types.mysql = ['BLOB'];\n  BaseTypes.TINYINT.types.mysql = ['TINY'];\n  BaseTypes.SMALLINT.types.mysql = ['SHORT'];\n  BaseTypes.MEDIUMINT.types.mysql = ['INT24'];\n  BaseTypes.INTEGER.types.mysql = ['LONG'];\n  BaseTypes.BIGINT.types.mysql = ['LONGLONG'];\n  BaseTypes.FLOAT.types.mysql = ['FLOAT'];\n  BaseTypes.TIME.types.mysql = ['TIME'];\n  BaseTypes.DATEONLY.types.mysql = ['DATE'];\n  BaseTypes.BOOLEAN.types.mysql = ['TINY'];\n  BaseTypes.BLOB.types.mysql = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.mysql = ['NEWDECIMAL'];\n  BaseTypes.UUID.types.mysql = false;\n  BaseTypes.ENUM.types.mysql = false;\n  BaseTypes.REAL.types.mysql = ['DOUBLE'];\n  BaseTypes.DOUBLE.types.mysql = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.mysql = ['GEOMETRY'];\n  BaseTypes.JSON.types.mysql = ['JSON'];\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    toSql() {\n      let definition = super.toSql();\n      if (this._unsigned) {\n        definition += ' UNSIGNED';\n      }\n      if (this._zerofill) {\n        definition += ' ZEROFILL';\n      }\n      return definition;\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return this._length ? `DATETIME(${this._length})` : 'DATETIME';\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n      // Fractional DATETIMEs only supported on MySQL 5.6.4+\n      if (this._length) {\n        return date.format('YYYY-MM-DD HH:mm:ss.SSS');\n      }\n      return date.format('YYYY-MM-DD HH:mm:ss');\n    }\n    static parse(value, options) {\n      value = value.string();\n      if (value === null) {\n        return value;\n      }\n      if (momentTz.tz.zone(options.timezone)) {\n        value = momentTz.tz(value, options.timezone).toDate();\n      }\n      else {\n        value = new Date(`${value} ${options.timezone}`);\n      }\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return value.string();\n    }\n  }\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36) BINARY';\n    }\n  }\n\n  const SUPPORTED_GEOMETRY_TYPES = ['POINT', 'LINESTRING', 'POLYGON'];\n\n  class GEOMETRY extends BaseTypes.GEOMETRY {\n    constructor(type, srid) {\n      super(type, srid);\n      if (_.isEmpty(this.type)) {\n        this.sqlType = this.key;\n        return;\n      }\n      if (SUPPORTED_GEOMETRY_TYPES.includes(this.type)) {\n        this.sqlType = this.type;\n        return;\n      }\n      throw new Error(`Supported geometry types are: ${SUPPORTED_GEOMETRY_TYPES.join(', ')}`);\n    }\n    static parse(value) {\n      value = value.buffer();\n      // Empty buffer, MySQL doesn't support POINT EMPTY\n      // check, https://dev.mysql.com/worklog/task/?id=2381\n      if (!value || value.length === 0) {\n        return null;\n      }\n      // For some reason, discard the first 4 bytes\n      value = value.slice(4);\n      return wkx.Geometry.parse(value).toGeoJSON({ shortCrs: true });\n    }\n    toSql() {\n      return this.sqlType;\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql(options) {\n      return `ENUM(${this.values.map(value => options.escape(value)).join(', ')})`;\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value : JSON.stringify(value);\n    }\n  }\n\n  return {\n    ENUM,\n    DATE,\n    DATEONLY,\n    UUID,\n    GEOMETRY,\n    DECIMAL,\n    JSON: JSONTYPE\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mariadb/data-types.js":{"lineLengths":[13,27,28,44,33,33,105,46,50,44,42,45,47,48,45,48,44,42,46,45,66,51,39,39,44,46,50,42,43,13,37,27,34,7,27,34,7,24,5,3,37,13,69,5,31,35,50,7,52,5,34,29,27,21,7,47,62,14,57,7,19,5,3,45,25,28,5,3,37,13,31,5,3,45,29,24,33,32,14,33,7,5,25,29,41,20,7,29,69,5,13,26,5,3,37,20,85,5,3,41,32,104,5,3,10,9,9,13,9,13,12,18,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/mariadb/data-types.js"],"sourcesContent":["'use strict';\n\nconst wkx = require('wkx');\nconst _ = require('lodash');\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://mariadb.com/kb/en/library/resultset/#field-types';\n\n  /**\n   * types: [buffer_type, ...]\n   *\n   * @see documentation : https://mariadb.com/kb/en/library/resultset/#field-types\n   * @see connector implementation : https://github.com/MariaDB/mariadb-connector-nodejs/blob/master/lib/const/field-type.js\n   */\n\n  BaseTypes.DATE.types.mariadb = ['DATETIME'];\n  BaseTypes.STRING.types.mariadb = ['VAR_STRING'];\n  BaseTypes.CHAR.types.mariadb = ['STRING'];\n  BaseTypes.TEXT.types.mariadb = ['BLOB'];\n  BaseTypes.TINYINT.types.mariadb = ['TINY'];\n  BaseTypes.SMALLINT.types.mariadb = ['SHORT'];\n  BaseTypes.MEDIUMINT.types.mariadb = ['INT24'];\n  BaseTypes.INTEGER.types.mariadb = ['LONG'];\n  BaseTypes.BIGINT.types.mariadb = ['LONGLONG'];\n  BaseTypes.FLOAT.types.mariadb = ['FLOAT'];\n  BaseTypes.TIME.types.mariadb = ['TIME'];\n  BaseTypes.DATEONLY.types.mariadb = ['DATE'];\n  BaseTypes.BOOLEAN.types.mariadb = ['TINY'];\n  BaseTypes.BLOB.types.mariadb = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.mariadb = ['NEWDECIMAL'];\n  BaseTypes.UUID.types.mariadb = false;\n  BaseTypes.ENUM.types.mariadb = false;\n  BaseTypes.REAL.types.mariadb = ['DOUBLE'];\n  BaseTypes.DOUBLE.types.mariadb = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.mariadb = ['GEOMETRY'];\n  BaseTypes.JSON.types.mariadb = ['JSON'];\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    toSql() {\n      let definition = super.toSql();\n      if (this._unsigned) {\n        definition += ' UNSIGNED';\n      }\n      if (this._zerofill) {\n        definition += ' ZEROFILL';\n      }\n      return definition;\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return this._length ? `DATETIME(${this._length})` : 'DATETIME';\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n\n      return date.format('YYYY-MM-DD HH:mm:ss.SSS');\n    }\n    static parse(value, options) {\n      value = value.string();\n      if (value === null) {\n        return value;\n      }\n      if (momentTz.tz.zone(options.timezone)) {\n        value = momentTz.tz(value, options.timezone).toDate();\n      }\n      else {\n        value = new Date(`${value} ${options.timezone}`);\n      }\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return value.string();\n    }\n  }\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36) BINARY';\n    }\n  }\n\n  class GEOMETRY extends BaseTypes.GEOMETRY {\n    constructor(type, srid) {\n      super(type, srid);\n      if (_.isEmpty(this.type)) {\n        this.sqlType = this.key;\n      }\n      else {\n        this.sqlType = this.type;\n      }\n    }\n    static parse(value) {\n      value = value.buffer();\n      // Empty buffer, MySQL doesn't support POINT EMPTY\n      // check, https://dev.mysql.com/worklog/task/?id=2381\n      if (!value || value.length === 0) {\n        return null;\n      }\n      // For some reason, discard the first 4 bytes\n      value = value.slice(4);\n      return wkx.Geometry.parse(value).toGeoJSON({ shortCrs: true });\n    }\n    toSql() {\n      return this.sqlType;\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql(options) {\n      return `ENUM(${this.values.map(value => options.escape(value)).join(', ')})`;\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value\n        : JSON.stringify(value);\n    }\n  }\n\n  return {\n    ENUM,\n    DATE,\n    DATEONLY,\n    UUID,\n    GEOMETRY,\n    DECIMAL,\n    JSON: JSONTYPE\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/sqlite/data-types.js":{"lineLengths":[13,33,93,54,51,129,34,34,5,3,45,64,56,41,47,49,51,47,45,43,41,45,47,65,47,41,38,41,55,42,50,41,24,30,5,3,37,33,32,49,7,28,5,3,45,24,18,5,3,41,13,25,49,7,31,5,3,37,13,25,94,30,7,20,5,3,41,13,35,5,3,37,13,25,46,7,27,5,3,41,13,28,27,30,7,27,30,7,25,37,49,41,9,22,7,20,5,3,43,25,20,44,5,3,45,25,20,44,5,3,47,25,20,44,5,3,43,25,20,44,5,3,41,25,20,44,5,3,39,3,41,3,37,3,33,36,19,5,26,17,5,31,22,5,32,23,5,3,49,35,3,91,49,3,37,13,20,5,3,10,9,13,11,9,11,10,9,31,12,13,14,12,11,9,9,19,10,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/sqlite/data-types.js"],"sourcesContent":["'use strict';\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'https://www.sqlite.org/datatype3.html');\n\n  /**\n   * Removes unsupported SQLite options, i.e., UNSIGNED and ZEROFILL, for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._zerofill || dataType._unsigned) {\n      warn(`SQLite does not support '${dataType.key}' with UNSIGNED or ZEROFILL. Plain '${dataType.key}' will be used instead.`);\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * @see https://sqlite.org/datatype3.html\n   */\n\n  BaseTypes.DATE.types.sqlite = ['DATETIME'];\n  BaseTypes.STRING.types.sqlite = ['VARCHAR', 'VARCHAR BINARY'];\n  BaseTypes.CHAR.types.sqlite = ['CHAR', 'CHAR BINARY'];\n  BaseTypes.TEXT.types.sqlite = ['TEXT'];\n  BaseTypes.TINYINT.types.sqlite = ['TINYINT'];\n  BaseTypes.SMALLINT.types.sqlite = ['SMALLINT'];\n  BaseTypes.MEDIUMINT.types.sqlite = ['MEDIUMINT'];\n  BaseTypes.INTEGER.types.sqlite = ['INTEGER'];\n  BaseTypes.BIGINT.types.sqlite = ['BIGINT'];\n  BaseTypes.FLOAT.types.sqlite = ['FLOAT'];\n  BaseTypes.TIME.types.sqlite = ['TIME'];\n  BaseTypes.DATEONLY.types.sqlite = ['DATE'];\n  BaseTypes.BOOLEAN.types.sqlite = ['TINYINT'];\n  BaseTypes.BLOB.types.sqlite = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.sqlite = ['DECIMAL'];\n  BaseTypes.UUID.types.sqlite = ['UUID'];\n  BaseTypes.ENUM.types.sqlite = false;\n  BaseTypes.REAL.types.sqlite = ['REAL'];\n  BaseTypes.DOUBLE.types.sqlite = ['DOUBLE PRECISION'];\n  BaseTypes.GEOMETRY.types.sqlite = false;\n  BaseTypes.JSON.types.sqlite = ['JSON', 'JSONB'];\n\n  class JSONTYPE extends BaseTypes.JSON {\n    static parse(data) {\n      return JSON.parse(data);\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    static parse(date, options) {\n      if (!date.includes('+')) {\n        // For backwards compat. Dates inserted by sequelize < 2.0dev12 will not have a timestamp set\n        return new Date(date + options.timezone);\n      }\n      return new Date(date); // We already have a timezone stored in the string\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(date) {\n      return date;\n    }\n  }\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (this._binary) {\n        return `VARCHAR BINARY(${this._length})`;\n      }\n      return super.toSql(this);\n    }\n  }\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      if (this._length) {\n        warn('SQLite does not support TEXT with options. Plain `TEXT` will be used instead.');\n        this._length = undefined;\n      }\n      return 'TEXT';\n    }\n  }\n\n  class CITEXT extends BaseTypes.CITEXT {\n    toSql() {\n      return 'TEXT COLLATE NOCASE';\n    }\n  }\n\n  class CHAR extends BaseTypes.CHAR {\n    toSql() {\n      if (this._binary) {\n        return `CHAR BINARY(${this._length})`;\n      }\n      return super.toSql();\n    }\n  }\n\n  class NUMBER extends BaseTypes.NUMBER {\n    toSql() {\n      let result = this.key;\n      if (this._unsigned) {\n        result += ' UNSIGNED';\n      }\n      if (this._zerofill) {\n        result += ' ZEROFILL';\n      }\n      if (this._length) {\n        result += `(${this._length}`;\n        if (typeof this._decimals === 'number') {\n          result += `,${this._decimals}`;\n        }\n        result += ')';\n      }\n      return result;\n    }\n  }\n\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class MEDIUMINT extends BaseTypes.MEDIUMINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class FLOAT extends BaseTypes.FLOAT {\n  }\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n  }\n\n  class REAL extends BaseTypes.REAL { }\n\n  function parseFloating(value) {\n    if (typeof value !== 'string') {\n      return value;\n    }\n    if (value === 'NaN') {\n      return NaN;\n    }\n    if (value === 'Infinity') {\n      return Infinity;\n    }\n    if (value === '-Infinity') {\n      return -Infinity;\n    }\n  }\n  for (const floating of [FLOAT, DOUBLE, REAL]) {\n    floating.parse = parseFloating;\n  }\n\n\n  for (const num of [FLOAT, DOUBLE, REAL, TINYINT, SMALLINT, MEDIUMINT, INTEGER, BIGINT]) {\n    num.prototype.toSql = NUMBER.prototype.toSql;\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'TEXT';\n    }\n  }\n\n  return {\n    DATE,\n    DATEONLY,\n    STRING,\n    CHAR,\n    NUMBER,\n    FLOAT,\n    REAL,\n    'DOUBLE PRECISION': DOUBLE,\n    TINYINT,\n    SMALLINT,\n    MEDIUMINT,\n    INTEGER,\n    BIGINT,\n    TEXT,\n    ENUM,\n    JSON: JSONTYPE,\n    CITEXT\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mssql/data-types.js":{"lineLengths":[13,33,33,125,54,98,115,32,39,34,34,5,3,36,44,37,37,39,40,42,39,39,38,36,40,40,37,40,37,37,37,39,41,37,13,25,52,120,34,9,109,7,30,5,18,24,5,3,41,13,26,43,7,39,5,32,25,48,7,35,5,32,74,5,3,34,37,13,25,52,119,33,9,108,7,29,5,3,43,13,19,5,3,37,13,24,5,3,35,13,25,5,3,37,13,30,5,3,45,25,48,5,3,43,25,20,44,5,3,43,25,20,44,5,3,45,25,20,44,5,3,41,25,20,44,5,3,37,35,30,84,93,30,37,32,32,7,5,3,39,35,30,27,96,30,37,7,27,79,32,7,27,79,32,7,5,3,37,13,28,5,3,10,9,12,9,11,9,9,13,8,12,13,12,11,9,10,8,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/mssql/data-types.js"],"sourcesContent":["'use strict';\n\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined, 'https://msdn.microsoft.com/en-us/library/ms187752%28v=sql.110%29.aspx');\n\n  /**\n   * Removes unsupported MSSQL options, i.e., LENGTH, UNSIGNED and ZEROFILL, for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._length || dataType.options.length || dataType._unsigned || dataType._zerofill) {\n      warn(`MSSQL does not support '${dataType.key}' with options. Plain '${dataType.key}' will be used instead.`);\n      dataType._length = undefined;\n      dataType.options.length = undefined;\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * types: [hex, ...]\n   *\n   * @see hex here https://github.com/tediousjs/tedious/blob/master/src/data-type.ts\n   */\n\n  BaseTypes.DATE.types.mssql = [43];\n  BaseTypes.STRING.types.mssql = [231, 173];\n  BaseTypes.CHAR.types.mssql = [175];\n  BaseTypes.TEXT.types.mssql = false;\n  // https://msdn.microsoft.com/en-us/library/ms187745(v=sql.110).aspx\n  BaseTypes.TINYINT.types.mssql = [30];\n  BaseTypes.SMALLINT.types.mssql = [34];\n  BaseTypes.MEDIUMINT.types.mssql = false;\n  BaseTypes.INTEGER.types.mssql = [38];\n  BaseTypes.BIGINT.types.mssql = false;\n  BaseTypes.FLOAT.types.mssql = [109];\n  BaseTypes.TIME.types.mssql = [41];\n  BaseTypes.DATEONLY.types.mssql = [40];\n  BaseTypes.BOOLEAN.types.mssql = [104];\n  BaseTypes.BLOB.types.mssql = [165];\n  BaseTypes.DECIMAL.types.mssql = [106];\n  BaseTypes.UUID.types.mssql = false;\n  BaseTypes.ENUM.types.mssql = false;\n  BaseTypes.REAL.types.mssql = [109];\n  BaseTypes.DOUBLE.types.mssql = [109];\n  // BaseTypes.GEOMETRY.types.mssql = [240]; // not yet supported\n  BaseTypes.GEOMETRY.types.mssql = false;\n\n  class BLOB extends BaseTypes.BLOB {\n    toSql() {\n      if (this._length) {\n        if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8\n          warn('MSSQL does not support BLOB with the `length` = `tiny` option. `VARBINARY(256)` will be used instead.');\n          return 'VARBINARY(256)';\n        }\n        warn('MSSQL does not support BLOB with the `length` option. `VARBINARY(MAX)` will be used instead.');\n      }\n      return 'VARBINARY(MAX)';\n    }\n    _hexify(hex) {\n      return `0x${hex}`;\n    }\n  }\n\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (!this._binary) {\n        return `NVARCHAR(${this._length})`;\n      }\n      return `BINARY(${this._length})`;\n    }\n    _stringify(value, options) {\n      if (this._binary) {\n        return BLOB.prototype._stringify(value);\n      }\n      return options.escape(value);\n    }\n    _bindParam(value, options) {\n      return options.bindParam(this._binary ? Buffer.from(value) : value);\n    }\n  }\n\n  STRING.prototype.escape = false;\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      // TEXT is deprecated in mssql and it would normally be saved as a non-unicode string.\n      // Using unicode is just future proof\n      if (this._length) {\n        if (this._length.toLowerCase() === 'tiny') { // tiny = 2^8\n          warn('MSSQL does not support TEXT with the `length` = `tiny` option. `NVARCHAR(256)` will be used instead.');\n          return 'NVARCHAR(256)';\n        }\n        warn('MSSQL does not support TEXT with the `length` option. `NVARCHAR(MAX)` will be used instead.');\n      }\n      return 'NVARCHAR(MAX)';\n    }\n  }\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BIT';\n    }\n  }\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36)';\n    }\n  }\n\n  class NOW extends BaseTypes.NOW {\n    toSql() {\n      return 'GETDATE()';\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'DATETIMEOFFSET';\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return moment(value).format('YYYY-MM-DD');\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n  class REAL extends BaseTypes.REAL {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // MSSQL does not support any options for real\n      if (this._length || this.options.length || this._unsigned || this._zerofill) {\n        warn('MSSQL does not support REAL with options. Plain `REAL` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n  }\n  class FLOAT extends BaseTypes.FLOAT {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // MSSQL does only support lengths as option.\n      // Values between 1-24 result in 7 digits precision (4 bytes storage size)\n      // Values between 25-53 result in 15 digits precision (8 bytes storage size)\n      // If decimals are provided remove these and print a warning\n      if (this._decimals) {\n        warn('MSSQL does not support Float with decimals. Plain `FLOAT` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n      }\n      if (this._unsigned) {\n        warn('MSSQL does not support Float unsigned. `UNSIGNED` was removed.');\n        this._unsigned = undefined;\n      }\n      if (this._zerofill) {\n        warn('MSSQL does not support Float zerofill. `ZEROFILL` was removed.');\n        this._zerofill = undefined;\n      }\n    }\n  }\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'VARCHAR(255)';\n    }\n  }\n\n  return {\n    BLOB,\n    BOOLEAN,\n    ENUM,\n    STRING,\n    UUID,\n    DATE,\n    DATEONLY,\n    NOW,\n    TINYINT,\n    SMALLINT,\n    INTEGER,\n    BIGINT,\n    REAL,\n    FLOAT,\n    TEXT\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/db2/data-types.js":{"lineLengths":[13,44,33,33,159,54,98,113,32,39,34,34,5,3,43,43,38,49,45,46,46,44,42,58,38,42,71,38,44,54,41,38,42,39,37,13,25,52,29,9,54,29,9,52,28,9,39,7,20,5,18,62,5,23,35,65,7,33,35,14,46,7,40,31,5,18,25,5,3,41,13,26,34,44,9,39,7,31,52,7,32,55,7,37,5,32,25,61,7,35,5,32,74,5,3,34,37,13,18,25,45,22,22,18,24,23,18,22,24,18,9,34,31,9,22,29,9,14,29,7,33,38,14,41,7,79,17,5,3,43,13,23,5,22,47,59,27,9,40,78,72,47,67,9,7,19,5,3,46,37,13,37,5,3,35,13,28,5,3,37,13,29,25,7,29,25,7,67,5,31,35,50,7,29,23,57,22,9,57,7,48,5,25,38,31,7,27,21,7,44,19,5,3,45,25,50,5,3,43,25,20,44,5,3,43,25,20,44,5,3,45,25,20,44,5,3,41,25,20,44,5,3,37,35,30,84,91,30,37,32,32,7,5,3,39,35,30,27,94,30,37,7,27,77,32,7,27,77,32,7,5,3,37,13,28,5,3,41,35,30,84,93,30,37,32,32,7,5,13,22,5,3,47,10,9,12,9,11,9,9,13,8,12,13,12,11,31,11,9,10,8,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/db2/data-types.js"],"sourcesContent":["'use strict';\n\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(undefined,\n    'https://www.ibm.com/support/knowledgecenter/SSEPGG_11.1.0/' +\n    'com.ibm.db2.luw.sql.ref.doc/doc/r0008478.html');\n\n  /**\n   * Removes unsupported Db2 options, i.e., LENGTH, UNSIGNED and ZEROFILL,\n   * for the integer data types.\n   *\n   * @param {object} dataType The base integer data type.\n   * @private\n   */\n  function removeUnsupportedIntegerOptions(dataType) {\n    if (dataType._length || dataType.options.length || dataType._unsigned || dataType._zerofill) {\n      warn(`Db2 does not support '${dataType.key}' with options. Plain '${dataType.key}' will be used instead.`);\n      dataType._length = undefined;\n      dataType.options.length = undefined;\n      dataType._unsigned = undefined;\n      dataType._zerofill = undefined;\n    }\n  }\n\n  /**\n   * types: [hex, ...]\n   *\n   * @see Data types and table columns: https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.1.0/com.ibm.db2.luw.admin.dbobj.doc/doc/c0055357.html \n   */\n\n  BaseTypes.DATE.types.db2 = ['TIMESTAMP'];\n  BaseTypes.STRING.types.db2 = ['VARCHAR'];\n  BaseTypes.CHAR.types.db2 = ['CHAR'];\n  BaseTypes.TEXT.types.db2 = ['VARCHAR', 'CLOB'];\n  BaseTypes.TINYINT.types.db2 = ['SMALLINT'];\n  BaseTypes.SMALLINT.types.db2 = ['SMALLINT'];\n  BaseTypes.MEDIUMINT.types.db2 = ['INTEGER'];\n  BaseTypes.INTEGER.types.db2 = ['INTEGER'];\n  BaseTypes.BIGINT.types.db2 = ['BIGINT'];\n  BaseTypes.FLOAT.types.db2 = ['DOUBLE', 'REAL', 'FLOAT'];\n  BaseTypes.TIME.types.db2 = ['TIME'];\n  BaseTypes.DATEONLY.types.db2 = ['DATE'];\n  BaseTypes.BOOLEAN.types.db2 = ['BOOLEAN', 'BOOL', 'SMALLINT', 'BIT'];\n  BaseTypes.BLOB.types.db2 = ['BLOB'];\n  BaseTypes.DECIMAL.types.db2 = ['DECIMAL'];\n  BaseTypes.UUID.types.db2 = ['CHAR () FOR BIT DATA'];\n  BaseTypes.ENUM.types.db2 = ['VARCHAR'];\n  BaseTypes.REAL.types.db2 = ['REAL'];\n  BaseTypes.DOUBLE.types.db2 = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.db2 = false;\n\n  class BLOB extends BaseTypes.BLOB {\n    toSql() {\n      if (this._length) {\n        if (this._length.toLowerCase() === 'tiny') { // tiny = 255 bytes\n          return 'BLOB(255)';\n        }\n        if (this._length.toLowerCase() === 'medium') { // medium = 16M\n          return 'BLOB(16M)';\n        }\n        if (this._length.toLowerCase() === 'long') { // long = 2GB\n          return 'BLOB(2G)';\n        }\n        return `BLOB(${ this._length })`;\n      }\n      return 'BLOB'; // 1MB\n    }\n    escape(blob) {\n      return `BLOB('${ blob.toString().replace(/'/g, \"''\") }')`;\n    }\n    _stringify(value) {\n      if (Buffer.isBuffer(value)) {\n        return `BLOB('${ value.toString().replace(/'/g, \"''\") }')`;\n      }\n      if (Array.isArray(value)) {\n        value = Buffer.from(value);\n      } else {\n        value = Buffer.from(value.toString());\n      }\n      const hex = value.toString('hex');\n      return this._hexify(hex);\n    }\n    _hexify(hex) {\n      return `x'${ hex }'`;\n    }\n  }\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (!this._binary) {\n        if (this._length <= 4000) {\n          return `VARCHAR(${ this._length })`;\n        }\n        return `CLOB(${ this._length })`;\n      }\n      if (this._length < 255) {\n        return `CHAR(${ this._length }) FOR BIT DATA`;\n      }\n      if (this._length <= 4000) {\n        return `VARCHAR(${ this._length }) FOR BIT DATA`;\n      }\n      return `BLOB(${ this._length })`;\n    }\n    _stringify(value, options) {\n      if (this._binary) {\n        return BLOB.prototype._hexify(value.toString('hex'));\n      }\n      return options.escape(value);\n    }\n    _bindParam(value, options) {\n      return options.bindParam(this._binary ? Buffer.from(value) : value);\n    }\n  }\n  STRING.prototype.escape = false;\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      let len = 0;\n      if (this._length) {\n        switch (this._length.toLowerCase()) {\n          case 'tiny':\n            len = 256; // tiny = 2^8\n            break;\n          case 'medium':\n            len = 8192; // medium = 2^13 = 8k\n            break;\n          case 'long':\n            len = 65536; // long = 64k\n            break;\n        }\n        if ( isNaN(this._length) ) {\n          this._length = 32672;\n        }\n        if (len > 0 ) { this._length = len; }\n      } else { this._length = 32672; }\n      if ( this._length > 32672 )\n      {\n        len = `CLOB(${ this._length })`;\n      }\n      else\n      {\n        len = `VARCHAR(${ this._length })`;\n      }\n      warn(`Db2 does not support TEXT datatype. ${len} will be used instead.`);\n      return len;\n    }\n  }\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BOOLEAN';\n    }\n    _sanitize(value) {\n      if (value !== null && value !== undefined) {\n        if (Buffer.isBuffer(value) && value.length === 1) {\n          // Bit fields are returned as buffers\n          value = value[0];\n        }\n\n        if (typeof value === 'string') {\n          // Only take action on valid boolean strings.\n          value = value === 'true' ? true : value === 'false' ? false : value;\n          value = value === '\\u0001' ? true : value === '\\u0000' ? false : value;\n\n        } else if (typeof value === 'number') {\n          // Only take action on valid boolean integers.\n          value = value === 1 ? true : value === 0 ? false : value;\n        }\n      }\n\n      return value;\n    }\n  }\n  BOOLEAN.parse = BOOLEAN.prototype._sanitize;\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'CHAR(36) FOR BIT DATA';\n    }\n  }\n\n  class NOW extends BaseTypes.NOW {\n    toSql() {\n      return 'CURRENT TIME';\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      if (this._length < 0) { this._length = 0; }\n      if (this._length > 6) { this._length = 6; }\n      return `TIMESTAMP${ this._length ? `(${ this._length })` : ''}`;\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n\n      if (this._length > 0) {\n        let msec = '.';\n        for ( let i = 0; i < this._length && i < 6; i++ ) {\n          msec += 'S';\n        }\n        return date.format(`YYYY-MM-DD HH:mm:ss${msec}`);\n      }\n      return date.format('YYYY-MM-DD HH:mm:ss');\n    }\n    static parse(value) {\n      if (typeof value !== 'string') {\n        value = value.string();\n      }\n      if (value === null) {\n        return value;\n      }\n      value = new Date(momentTz.utc(value));\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return momentTz(value).format('YYYY-MM-DD');\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class TINYINT extends BaseTypes.TINYINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      removeUnsupportedIntegerOptions(this);\n    }\n  }\n\n  class REAL extends BaseTypes.REAL {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // Db2 does not support any options for real\n      if (this._length || this.options.length || this._unsigned || this._zerofill) {\n        warn('Db2 does not support REAL with options. Plain `REAL` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n  }\n\n  class FLOAT extends BaseTypes.FLOAT {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // Db2 does only support lengths as option.\n      // Values between 1-24 result in 7 digits precision (4 bytes storage size)\n      // Values between 25-53 result in 15 digits precision (8 bytes size)\n      // If decimals are provided remove these and print a warning\n      if (this._decimals) {\n        warn('Db2 does not support Float with decimals. Plain `FLOAT` will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n      }\n      if (this._unsigned) {\n        warn('Db2 does not support Float unsigned. `UNSIGNED` was removed.');\n        this._unsigned = undefined;\n      }\n      if (this._zerofill) {\n        warn('Db2 does not support Float zerofill. `ZEROFILL` was removed.');\n        this._zerofill = undefined;\n      }\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'VARCHAR(255)';\n    }\n  }\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n    constructor(length, decimals) {\n      super(length, decimals);\n      // db2 does not support any parameters for double\n      if (this._length || this.options.length ||\n          this._unsigned || this._zerofill)\n      {\n        warn('db2 does not support DOUBLE with options. ' +\n             'Plain DOUBLE will be used instead.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n    toSql() {\n      return 'DOUBLE';\n    }\n  }\n  DOUBLE.prototype.key = DOUBLE.key = 'DOUBLE';\n\n  return {\n    BLOB,\n    BOOLEAN,\n    ENUM,\n    STRING,\n    UUID,\n    DATE,\n    DATEONLY,\n    NOW,\n    TINYINT,\n    SMALLINT,\n    INTEGER,\n    DOUBLE,\n    'DOUBLE PRECISION': DOUBLE,\n    BIGINT,\n    REAL,\n    FLOAT,\n    TEXT\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/snowflake/data-types.js":{"lineLengths":[13,44,33,33,108,48,52,46,44,47,49,50,47,50,46,44,48,47,68,53,41,41,46,48,52,44,37,13,25,5,31,35,50,7,25,54,7,48,5,34,29,27,21,7,47,62,14,57,7,19,5,3,45,25,28,5,3,37,13,27,5,3,37,13,20,5,3,43,13,23,5,3,41,32,104,5,3,10,9,9,12,13,9,18,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/snowflake/data-types.js"],"sourcesContent":["'use strict';\n\nconst momentTz = require('moment-timezone');\nconst moment = require('moment');\n\nmodule.exports = BaseTypes => {\n  BaseTypes.ABSTRACT.prototype.dialectTypes = 'https://dev.snowflake.com/doc/refman/5.7/en/data-types.html';\n\n  /**\n   * types: [buffer_type, ...]\n   *\n   * @see buffer_type here https://dev.snowflake.com/doc/refman/5.7/en/c-api-prepared-statement-type-codes.html\n   * @see hex here https://github.com/sidorares/node-mysql2/blob/master/lib/constants/types.js\n   */\n\n  BaseTypes.DATE.types.snowflake = ['DATETIME'];\n  BaseTypes.STRING.types.snowflake = ['VAR_STRING'];\n  BaseTypes.CHAR.types.snowflake = ['STRING'];\n  BaseTypes.TEXT.types.snowflake = ['BLOB'];\n  BaseTypes.TINYINT.types.snowflake = ['TINY'];\n  BaseTypes.SMALLINT.types.snowflake = ['SHORT'];\n  BaseTypes.MEDIUMINT.types.snowflake = ['INT24'];\n  BaseTypes.INTEGER.types.snowflake = ['LONG'];\n  BaseTypes.BIGINT.types.snowflake = ['LONGLONG'];\n  BaseTypes.FLOAT.types.snowflake = ['FLOAT'];\n  BaseTypes.TIME.types.snowflake = ['TIME'];\n  BaseTypes.DATEONLY.types.snowflake = ['DATE'];\n  BaseTypes.BOOLEAN.types.snowflake = ['TINY'];\n  BaseTypes.BLOB.types.snowflake = ['TINYBLOB', 'BLOB', 'LONGBLOB'];\n  BaseTypes.DECIMAL.types.snowflake = ['NEWDECIMAL'];\n  BaseTypes.UUID.types.snowflake = false;\n  // Enum is not supported\n  // https://docs.snowflake.com/en/sql-reference/data-types-unsupported.html\n  BaseTypes.ENUM.types.snowflake = false;\n  BaseTypes.REAL.types.snowflake = ['DOUBLE'];\n  BaseTypes.DOUBLE.types.snowflake = ['DOUBLE'];\n  BaseTypes.GEOMETRY.types.snowflake = ['GEOMETRY'];\n  BaseTypes.JSON.types.snowflake = ['JSON'];\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'TIMESTAMP';\n    }\n    _stringify(date, options) {\n      if (!moment.isMoment(date)) {\n        date = this._applyTimezone(date, options);\n      }\n      if (this._length) {\n        return date.format('YYYY-MM-DD HH:mm:ss.SSS');\n      }\n      return date.format('YYYY-MM-DD HH:mm:ss');\n    }\n    static parse(value, options) {\n      value = value.string();\n      if (value === null) {\n        return value;\n      }\n      if (momentTz.tz.zone(options.timezone)) {\n        value = momentTz.tz(value, options.timezone).toDate();\n      }\n      else {\n        value = new Date(`${value} ${options.timezone}`);\n      }\n      return value;\n    }\n  }\n\n  class DATEONLY extends BaseTypes.DATEONLY {\n    static parse(value) {\n      return value.string();\n    }\n  }\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      // https://community.snowflake.com/s/question/0D50Z00009LH2fl/what-is-the-best-way-to-store-uuids\n      return 'VARCHAR(36)';\n    }\n  }\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      return 'TEXT';\n    }\n  }\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'BOOLEAN';\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value : JSON.stringify(value);\n    }\n  }\n\n  return {\n    TEXT,\n    DATE,\n    BOOLEAN,\n    DATEONLY,\n    UUID,\n    JSON: JSONTYPE\n  };\n};\n"],"mappings":";AAEA,MAAM,WAAW,QAAQ;AACzB,MAAM,SAAS,QAAQ;AAEvB,OAAO,UAAU,eAAa;AAC5B,YAAU,SAAS,UAAU,eAAe;AAS5C,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,OAAO,MAAM,YAAY,CAAC;AACpC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,SAAS,MAAM,YAAY,CAAC;AACtC,YAAU,UAAU,MAAM,YAAY,CAAC;AACvC,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,OAAO,MAAM,YAAY,CAAC;AACpC,YAAU,MAAM,MAAM,YAAY,CAAC;AACnC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,SAAS,MAAM,YAAY,CAAC;AACtC,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,KAAK,MAAM,YAAY,CAAC,YAAY,QAAQ;AACtD,YAAU,QAAQ,MAAM,YAAY,CAAC;AACrC,YAAU,KAAK,MAAM,YAAY;AAGjC,YAAU,KAAK,MAAM,YAAY;AACjC,YAAU,KAAK,MAAM,YAAY,CAAC;AAClC,YAAU,OAAO,MAAM,YAAY,CAAC;AACpC,YAAU,SAAS,MAAM,YAAY,CAAC;AACtC,YAAU,KAAK,MAAM,YAAY,CAAC;AAElC,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,aAAO;AAAA;AAAA,IAET,WAAW,MAAM,SAAS;AACxB,UAAI,CAAC,OAAO,SAAS,OAAO;AAC1B,eAAO,KAAK,eAAe,MAAM;AAAA;AAEnC,UAAI,KAAK,SAAS;AAChB,eAAO,KAAK,OAAO;AAAA;AAErB,aAAO,KAAK,OAAO;AAAA;AAAA,WAEd,MAAM,OAAO,SAAS;AAC3B,cAAQ,MAAM;AACd,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA;AAET,UAAI,SAAS,GAAG,KAAK,QAAQ,WAAW;AACtC,gBAAQ,SAAS,GAAG,OAAO,QAAQ,UAAU;AAAA,aAE1C;AACH,gBAAQ,IAAI,KAAK,GAAG,SAAS,QAAQ;AAAA;AAEvC,aAAO;AAAA;AAAA;AAIX,yBAAuB,UAAU,SAAS;AAAA,WACjC,MAAM,OAAO;AAClB,aAAO,MAAM;AAAA;AAAA;AAGjB,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AAEN,aAAO;AAAA;AAAA;AAIX,qBAAmB,UAAU,KAAK;AAAA,IAChC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,wBAAsB,UAAU,QAAQ;AAAA,IACtC,QAAQ;AACN,aAAO;AAAA;AAAA;AAIX,yBAAuB,UAAU,KAAK;AAAA,IACpC,WAAW,OAAO,SAAS;AACzB,aAAO,QAAQ,cAAc,WAAW,OAAO,UAAU,WAAW,QAAQ,KAAK,UAAU;AAAA;AAAA;AAI/F,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/oracle/data-types.js":{"lineLengths":[13,33,44,33,153,80,60,48,41,46,47,48,47,45,50,45,47,41,46,45,45,50,52,41,42,41,13,68,253,7,26,44,7,36,5,32,25,53,7,35,5,27,25,69,7,71,5,32,38,5,3,34,43,13,23,5,27,57,5,23,66,5,22,38,109,7,36,5,3,37,13,28,5,27,61,5,3,35,13,23,5,18,23,5,3,37,13,29,5,27,62,5,3,37,13,20,5,27,45,5,3,37,13,25,68,38,7,27,5,27,25,69,7,68,5,32,38,5,3,37,13,46,5,27,54,5,31,55,48,68,62,5,35,29,49,53,16,58,9,14,30,7,18,5,34,27,21,7,56,71,7,19,5,32,38,5,3,32,43,13,22,25,37,49,41,9,22,7,45,40,46,38,9,22,7,31,5,27,47,5,3,43,13,25,5,27,47,5,3,45,13,25,43,7,24,5,27,47,5,3,47,13,25,5,27,47,5,3,41,25,20,36,34,46,84,60,30,37,32,32,7,5,13,26,5,27,47,5,22,67,32,7,19,5,3,41,27,47,5,3,43,13,25,43,7,23,5,27,47,5,3,39,13,28,5,27,53,5,3,37,13,29,5,23,47,21,7,47,22,7,19,5,27,54,5,3,37,18,24,5,13,20,5,27,45,5,3,41,13,20,5,27,45,5,32,104,5,32,67,5,3,41,35,30,36,54,46,61,61,30,37,32,32,7,36,5,27,54,5,13,29,5,3,45,18,48,5,22,18,50,7,19,5,31,17,36,64,7,34,5,27,45,5,32,38,50,7,38,5,3,36,10,12,31,11,11,12,13,14,11,11,12,10,9,13,9,8,9,9,9,9,19,9,11,4,2,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/oracle/data-types.js"],"sourcesContent":["// Copyright (c) 2022, Oracle and/or its affiliates. All rights reserved\n\n'use strict';\n\nconst moment = require('moment');\nconst momentTz = require('moment-timezone');\n\nmodule.exports = BaseTypes => {\n  const warn = BaseTypes.ABSTRACT.warn.bind(\n    undefined,\n    'https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-D424D23B-0933-425F-BC69-9C0E6724693C'\n  );\n\n  BaseTypes.DATE.types.oracle = ['TIMESTAMP', 'TIMESTAMP WITH LOCAL TIME ZONE'];\n  BaseTypes.STRING.types.oracle = ['VARCHAR2', 'NVARCHAR2'];\n  BaseTypes.CHAR.types.oracle = ['CHAR', 'RAW'];\n  BaseTypes.TEXT.types.oracle = ['CLOB'];\n  BaseTypes.TINYINT.types.oracle = ['NUMBER'];\n  BaseTypes.SMALLINT.types.oracle = ['NUMBER'];\n  BaseTypes.MEDIUMINT.types.oracle = ['NUMBER'];\n  BaseTypes.INTEGER.types.oracle = ['INTEGER'];\n  BaseTypes.BIGINT.types.oracle = ['NUMBER'];\n  BaseTypes.FLOAT.types.oracle = ['BINARY_FLOAT'];\n  BaseTypes.DATEONLY.types.oracle = ['DATE'];\n  BaseTypes.BOOLEAN.types.oracle = ['CHAR(1)'];\n  BaseTypes.BLOB.types.oracle = ['BLOB'];\n  BaseTypes.DECIMAL.types.oracle = ['NUMBER'];\n  BaseTypes.UUID.types.oracle = ['VARCHAR2'];\n  BaseTypes.ENUM.types.oracle = ['VARCHAR2'];\n  BaseTypes.REAL.types.oracle = ['BINARY_DOUBLE'];\n  BaseTypes.DOUBLE.types.oracle = ['BINARY_DOUBLE'];\n  BaseTypes.JSON.types.oracle = ['BLOB'];\n  BaseTypes.GEOMETRY.types.oracle = false;\n\n  class STRING extends BaseTypes.STRING {\n    toSql() {\n      if (this.length > 4000 || this._binary && this._length > 2000) {\n        warn(\n          'Oracle supports length up to 32764 bytes or characters; Be sure that your administrator has extended the MAX_STRING_SIZE parameter. Check https://docs.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-7B72E154-677A-4342-A1EA-C74C1EA928E6'\n        );\n      }\n      if (!this._binary) {\n        return `NVARCHAR2(${this._length})`;\n      }\n      return `RAW(${this._length})`;\n    }\n\n    _stringify(value, options) {\n      if (this._binary) {\n        // For Binary numbers we're converting a buffer to hex then\n        // sending it over the wire as a string,\n        // We pass it through escape function to remove un-necessary quotes\n        // this.format in insert/bulkinsert query calls stringify hence we need to convert binary buffer\n        // to hex string. Since this block is used by both bind (insert/bulkinsert) and\n        // non-bind (select query where clause) hence we need to\n        // have an operation that supports both\n        return options.escape(value.toString('hex'));\n      }\n      return options.escape(value);\n    }\n\n    _getBindDef(oracledb) {\n      if (this._binary) {\n        return { type: oracledb.DB_TYPE_RAW, maxSize: this._length };\n      }\n      return { type: oracledb.DB_TYPE_VARCHAR, maxSize: this._length };\n    }\n\n    _bindParam(value, options) {\n      return options.bindParam(value);\n    }\n  }\n\n  STRING.prototype.escape = false;\n\n  class BOOLEAN extends BaseTypes.BOOLEAN {\n    toSql() {\n      return 'CHAR(1)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_CHAR, maxSize: 1 };\n    }\n\n    _stringify(value) {\n      // If value is true we return '1'\n      // If value is false we return '0'\n      // Else we return it as is\n      // Converting number to char since in bindDef\n      // the type would be oracledb.DB_TYPE_CHAR\n      return value === true ? '1' : value === false ? '0' : value;\n    }\n\n    _sanitize(value) {\n      if (typeof value === 'string') {\n        // If value is a string we return true if among '1' and 'true'\n        // We return false if among '0' and 'false'\n        // Else return the value as is and let the DB raise error for invalid values\n        return value === '1' || value === 'true' ? true : value === '0' || value === 'false' ? false : value;\n      }\n      return super._sanitize(value);\n    }\n  }\n\n  class UUID extends BaseTypes.UUID {\n    toSql() {\n      return 'VARCHAR2(36)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_VARCHAR, maxSize: 36 };\n    }\n  }\n\n  class NOW extends BaseTypes.NOW {\n    toSql() {\n      return 'SYSDATE';\n    }\n\n    _stringify() {\n      return 'SYSDATE';\n    }\n  }\n\n  class ENUM extends BaseTypes.ENUM {\n    toSql() {\n      return 'VARCHAR2(512)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_VARCHAR, maxSize: 512 };\n    }\n  }\n\n  class TEXT extends BaseTypes.TEXT {\n    toSql() {\n      return 'CLOB';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_CLOB };\n    }\n  }\n\n  class CHAR extends BaseTypes.CHAR {\n    toSql() {\n      if (this._binary) {\n        warn('Oracle CHAR.BINARY datatype is not of Fixed Length.');\n        return `RAW(${this._length})`;\n      }\n      return super.toSql();\n    }\n\n    _getBindDef(oracledb) {\n      if (this._binary) {\n        return { type: oracledb.DB_TYPE_RAW, maxSize: this._length };\n      }\n      return { type: oracledb.DB_TYPE_CHAR, maxSize: this._length };\n    }\n\n    _bindParam(value, options) {\n      return options.bindParam(value);\n    }\n  }\n\n  class DATE extends BaseTypes.DATE {\n    toSql() {\n      return 'TIMESTAMP WITH LOCAL TIME ZONE';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_TIMESTAMP_LTZ };\n    }\n\n    _stringify(date, options) {\n      const format = 'YYYY-MM-DD HH24:MI:SS.FFTZH:TZM';\n\n      date = this._applyTimezone(date, options);\n\n      const formatedDate = date.format('YYYY-MM-DD HH:mm:ss.SSS Z');\n\n      return `TO_TIMESTAMP_TZ('${formatedDate}','${format}')`;\n    }\n\n    _applyTimezone(date, options) {\n      if (options.timezone) {\n        if (momentTz.tz.zone(options.timezone)) {\n          date = momentTz(date).tz(options.timezone);\n        } else {\n          date = moment(date).utcOffset(options.timezone);\n        }\n      } else {\n        date = momentTz(date);\n      }\n      return date;\n    }\n\n    static parse(value, options) {\n      if (value === null) {\n        return value;\n      }\n      if (options && moment.tz.zone(options.timezone)) {\n        value = moment.tz(value.toString(), options.timezone).toDate();\n      }\n      return value;\n    }\n\n    /**\n     * avoids appending TO_TIMESTAMP_TZ in _stringify\n     *\n     * @override\n     */\n    _bindParam(value, options) {\n      return options.bindParam(value);\n    }\n  }\n\n  DATE.prototype.escape = false;\n\n  class DECIMAL extends BaseTypes.DECIMAL {\n    toSql() {\n      let result = '';\n      if (this._length) {\n        result += `(${this._length}`;\n        if (typeof this._decimals === 'number') {\n          result += `,${this._decimals}`;\n        }\n        result += ')';\n      }\n\n      if (!this._length && this._precision) {\n        result += `(${this._precision}`;\n        if (typeof this._scale === 'number') {\n          result += `,${this._scale}`;\n        }\n        result += ')';\n      }\n\n      return `NUMBER${result}`;\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class TINYINT extends BaseTypes.TINYINT {\n    toSql() {\n      return 'NUMBER(3)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class SMALLINT extends BaseTypes.SMALLINT {\n    toSql() {\n      if (this._length) {\n        return `NUMBER(${this._length},0)`;\n      }\n      return 'SMALLINT';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class MEDIUMINT extends BaseTypes.MEDIUMINT {\n    toSql() {\n      return 'NUMBER(8)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class BIGINT extends BaseTypes.BIGINT {\n    constructor(length) {\n      super(length);\n      if (!(this instanceof BIGINT)) return new BIGINT(length);\n      BaseTypes.BIGINT.apply(this, arguments);\n\n      // ORACLE does not support any options for bigint\n      if (this._length || this.options.length || this._unsigned || this._zerofill) {\n        warn('Oracle does not support BIGINT with options');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n    }\n\n    toSql() {\n      return 'NUMBER(19)';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n\n    _sanitize(value) {\n      if (typeof value === 'bigint' || typeof value === 'number') {\n        return value.toString();\n      }\n      return value;\n    }\n\n  }\n\n  class NUMBER extends BaseTypes.NUMBER {\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class INTEGER extends BaseTypes.INTEGER {\n    toSql() {\n      if (this._length) {\n        return `NUMBER(${this._length},0)`;\n      }\n      return 'INTEGER';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_NUMBER };\n    }\n  }\n\n  class FLOAT extends BaseTypes.FLOAT {\n    toSql() {\n      return 'BINARY_FLOAT';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_BINARY_FLOAT };\n    }\n  }\n\n  class REAL extends BaseTypes.REAL {\n    toSql() {\n      return 'BINARY_DOUBLE';\n    }\n\n    // https://www.oracle.com/pls/topic/lookup?ctx=dblatest&id=GUID-0BA2E065-8006-426C-A3CB-1F6B0C8F283C\n    _stringify(value) {\n      if (value === Number.POSITIVE_INFINITY) {\n        return 'inf';\n      }\n      if (value === Number.NEGATIVE_INFINITY) {\n        return '-inf';\n      }\n      return value;\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_BINARY_DOUBLE };\n    }\n  }\n\n  class BLOB extends BaseTypes.BLOB {\n    // Generic hexify returns X'${hex}' but Oracle expects '${hex}' for BLOB datatype\n    _hexify(hex) {\n      return `'${hex}'`;\n    }\n\n    toSql() {\n      return 'BLOB';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_BLOB };\n    }\n  }\n\n  class JSONTYPE extends BaseTypes.JSON {\n    toSql() {\n      return 'BLOB';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_BLOB };\n    }\n\n    _stringify(value, options) {\n      return options.operation === 'where' && typeof value === 'string' ? value : JSON.stringify(value);\n    }\n\n    _bindParam(value, options) {\n      return options.bindParam(Buffer.from(JSON.stringify(value)));\n    }\n  }\n\n  class DOUBLE extends BaseTypes.DOUBLE {\n    constructor(length, decimals) {\n      super(length, decimals);\n      if (!(this instanceof DOUBLE)) return new BaseTypes.DOUBLE(length, decimals);\n      BaseTypes.DOUBLE.apply(this, arguments);\n\n      if (this._length || this._unsigned || this._zerofill) {\n        warn('Oracle does not support DOUBLE with options.');\n        this._length = undefined;\n        this.options.length = undefined;\n        this._unsigned = undefined;\n        this._zerofill = undefined;\n      }\n\n      this.key = 'DOUBLE PRECISION';\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_BINARY_DOUBLE };\n    }\n\n    toSql() {\n      return 'BINARY_DOUBLE';\n    }\n  }\n  class DATEONLY extends BaseTypes.DATEONLY {\n    parse(value) {\n      return moment(value).format('YYYY-MM-DD');\n    }\n\n    _sanitize(value) {\n      if (value) {\n        return moment(value).format('YYYY-MM-DD');\n      }\n      return value;\n    }\n\n    _stringify(date, options) {\n      // If date is not null only then we format the date\n      if (date) {\n        const format = 'YYYY/MM/DD';\n        return options.escape(`TO_DATE('${date}','${format}')`);\n      }\n      return options.escape(date);\n    }\n\n    _getBindDef(oracledb) {\n      return { type: oracledb.DB_TYPE_DATE };\n    }\n\n    /**\n     * avoids appending TO_DATE in _stringify\n     *\n     * @override\n     */\n    _bindParam(value, options) {\n      if (typeof value === 'string') {\n        return options.bindParam(new Date(value));\n      }\n      return options.bindParam(value);\n\n    }\n  }\n\n  DATEONLY.prototype.escape = false;\n\n  return {\n    BOOLEAN,\n    'DOUBLE PRECISION': DOUBLE,\n    DOUBLE,\n    STRING,\n    TINYINT,\n    SMALLINT,\n    MEDIUMINT,\n    BIGINT,\n    NUMBER,\n    INTEGER,\n    FLOAT,\n    UUID,\n    DATEONLY,\n    DATE,\n    NOW,\n    BLOB,\n    ENUM,\n    TEXT,\n    CHAR,\n    JSON: JSONTYPE,\n    REAL,\n    DECIMAL\n  };\n};\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/sql-string.js":{"lineLengths":[13,42,45,57,40,18,18,5,29,65,12,53,5,15,9,1,34,50,23,39,18,3,23,19,60,22,7,32,18,18,28,18,37,12,3,28,83,3,29,34,62,5,51,3,27,81,45,81,5,56,3,21,60,3,78,34,33,38,5,63,70,17,5,34,10,55,18,18,23,18,23,18,23,18,23,17,23,17,23,16,26,7,7,3,45,1,24,49,29,32,59,3,40,25,19,5,59,5,1,24,64,56,63,19,5,33,58,5,84,5,1,54,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/sql-string.js"],"sourcesContent":["'use strict';\n\nconst dataTypes = require('./data-types');\nconst { logger } = require('./utils/logger');\n\nfunction arrayToList(array, timeZone, dialect, format) {\n  return array.reduce((sql, val, i) => {\n    if (i !== 0) {\n      sql += ', ';\n    }\n    if (Array.isArray(val)) {\n      sql += `(${arrayToList(val, timeZone, dialect, format)})`;\n    } else {\n      sql += escape(val, timeZone, dialect, format);\n    }\n    return sql;\n  }, '');\n}\nexports.arrayToList = arrayToList;\n\nfunction escape(val, timeZone, dialect, format) {\n  let prependN = false;\n  if (val === undefined || val === null) {\n    return 'NULL';\n  }\n  switch (typeof val) {\n    case 'boolean':\n    // SQLite doesn't have true/false support. MySQL aliases true/false to 1/0\n    // for us. Postgres actually has a boolean type with true/false literals,\n    // but sequelize doesn't use it yet.\n      if (['sqlite', 'mssql', 'oracle'].includes(dialect)) {\n        return +!!val;\n      }\n      return (!!val).toString();\n    case 'number':\n    case 'bigint':\n      return val.toString();\n    case 'string':\n    // In mssql, prepend N to all quoted vals which are originally a string (for\n    // unicode compatibility)\n      prependN = dialect === 'mssql';\n      break;\n  }\n\n  if (val instanceof Date) {\n    val = dataTypes[dialect].DATE.prototype.stringify(val, { timezone: timeZone });\n  }\n\n  if (Buffer.isBuffer(val)) {\n    if (dataTypes[dialect].BLOB) {\n      return dataTypes[dialect].BLOB.prototype.stringify(val);\n    }\n\n    return dataTypes.BLOB.prototype.stringify(val);\n  }\n\n  if (Array.isArray(val)) {\n    const partialEscape = escVal => escape(escVal, timeZone, dialect, format);\n    if (dialect === 'postgres' && !format) {\n      return dataTypes.ARRAY.prototype.stringify(val, { escape: partialEscape });\n    }\n    return arrayToList(val, timeZone, dialect, format);\n  }\n\n  if (!val.replace) {\n    throw new Error(`Invalid value ${logger.inspect(val)}`);\n  }\n\n  if (['postgres', 'sqlite', 'mssql', 'snowflake', 'db2'].includes(dialect)) {\n    // http://www.postgresql.org/docs/8.2/static/sql-syntax-lexical.html#SQL-SYNTAX-STRINGS\n    // http://stackoverflow.com/q/603572/130598\n    val = val.replace(/'/g, \"''\");\n\n    if (dialect === 'postgres') {\n      // null character is not allowed in Postgres\n      val = val.replace(/\\0/g, '\\\\0');\n    }\n  } else if (dialect === 'oracle' && typeof val === 'string') {\n    if (val.startsWith('TO_TIMESTAMP') || val.startsWith('TO_DATE')) {\n      return val;\n    }\n    val = val.replace(/'/g, \"''\");\n  } else {\n\n    // eslint-disable-next-line no-control-regex\n    val = val.replace(/[\\0\\n\\r\\b\\t\\\\'\"\\x1a]/g, s => {\n      switch (s) {\n        case '\\0': return '\\\\0';\n        case '\\n': return '\\\\n';\n        case '\\r': return '\\\\r';\n        case '\\b': return '\\\\b';\n        case '\\t': return '\\\\t';\n        case '\\x1a': return '\\\\Z';\n        default: return `\\\\${s}`;\n      }\n    });\n  }\n  return `${(prependN ? \"N'\" : \"'\") + val}'`;\n}\nexports.escape = escape;\n\nfunction format(sql, values, timeZone, dialect) {\n  values = [].concat(values);\n\n  if (typeof sql !== 'string') {\n    throw new Error(`Invalid SQL string provided: ${sql}`);\n  }\n\n  return sql.replace(/\\?/g, match => {\n    if (!values.length) {\n      return match;\n    }\n\n    return escape(values.shift(), timeZone, dialect, true);\n  });\n}\nexports.format = format;\n\nfunction formatNamedParameters(sql, values, timeZone, dialect) {\n  return sql.replace(/:+(?!\\d)(\\w+)/g, (value, key) => {\n    if ('postgres' === dialect && '::' === value.slice(0, 2)) {\n      return value;\n    }\n\n    if (values[key] !== undefined) {\n      return escape(values[key], timeZone, dialect, true);\n    }\n    throw new Error(`Named parameter \"${value}\" has no value in the given object.`);\n  });\n}\nexports.formatNamedParameters = formatNamedParameters;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/operators.js":{"lineLengths":[38,82,33,25,23,66,2,19,15,34,3,12,23,23,25,23,25,23,25,23,23,29,27,33,29,35,39,35,37,31,37,33,39,33,39,33,35,37,35,39,41,45,43,25,23,25,25,31,25,41,27,28,2,27,20,37,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/operators.ts"],"sourcesContent":["interface OpTypes {\n  /**\n   * Operator -|- (PG range is adjacent to operator)\n   *\n   * ```js\n   * [Op.adjacent]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * -|- [1, 2)\n   * ```\n   */\n  readonly adjacent: unique symbol;\n  /**\n   * Operator ALL\n   *\n   * ```js\n   * [Op.gt]: {\n   *  [Op.all]: literal('SELECT 1')\n   * }\n   * ```\n   * In SQL\n   * ```sql\n   * > ALL (SELECT 1)\n   * ```\n   */\n  readonly all: unique symbol;\n  /**\n   * Operator AND\n   *\n   * ```js\n   * [Op.and]: {a: 5}\n   * ```\n   * In SQL\n   * ```sql\n   * AND (a = 5)\n   * ```\n   */\n  readonly and: unique symbol;\n  /**\n   * Operator ANY ARRAY (PG only)\n   *\n   * ```js\n   * [Op.any]: [2,3]\n   * ```\n   * In SQL\n   * ```sql\n   * ANY ARRAY[2, 3]::INTEGER\n   * ```\n   *\n   * Operator LIKE ANY ARRAY (also works for iLike and notLike)\n   *\n   * ```js\n   * [Op.like]: { [Op.any]: ['cat', 'hat']}\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE ANY ARRAY['cat', 'hat']\n   * ```\n   */\n  readonly any: unique symbol;\n  /**\n   * Operator BETWEEN\n   *\n   * ```js\n   * [Op.between]: [6, 10]\n   * ```\n   * In SQL\n   * ```sql\n   * BETWEEN 6 AND 10\n   * ```\n   */\n  readonly between: unique symbol;\n  /**\n   * With dialect specific column identifiers (PG in this example)\n   *\n   * ```js\n   * [Op.col]: 'user.organization_id'\n   * ```\n   * In SQL\n   * ```sql\n   * = \"user\".\"organization_id\"\n   * ```\n   */\n  readonly col: unique symbol;\n  /**\n   * Operator <@ (PG array contained by operator)\n   *\n   * ```js\n   * [Op.contained]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * <@ [1, 2)\n   * ```\n   */\n  readonly contained: unique symbol;\n  /**\n   * Operator @> (PG array contains operator)\n   *\n   * ```js\n   * [Op.contains]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * @> [1, 2)\n   * ```\n   */\n  readonly contains: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.endsWith]: 'hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE '%hat'\n   * ```\n   */\n  readonly endsWith: unique symbol;\n  /**\n   * Operator =\n   *\n   * ```js\n   * [Op.eq]: 3\n   * ```\n   * In SQL\n   * ```sql\n   * = 3\n   * ```\n   */\n  readonly eq: unique symbol;\n  /**\n   * Operator >\n   *\n   * ```js\n   * [Op.gt]: 6\n   * ```\n   * In SQL\n   * ```sql\n   * > 6\n   * ```\n   */\n  readonly gt: unique symbol;\n  /**\n   * Operator >=\n   *\n   * ```js\n   * [Op.gte]: 6\n   * ```\n   * In SQL\n   * ```sql\n   * >= 6\n   * ```\n   */\n  readonly gte: unique symbol;\n\n  /**\n   * Operator ILIKE (case insensitive) (PG only)\n   *\n   * ```js\n   * [Op.iLike]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * ILIKE '%hat'\n   * ```\n   */\n  readonly iLike: unique symbol;\n  /**\n   * Operator IN\n   *\n   * ```js\n   * [Op.in]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * IN [1, 2]\n   * ```\n   */\n  readonly in: unique symbol;\n  /**\n   * Operator ~* (PG only)\n   *\n   * ```js\n   * [Op.iRegexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * ~* '^[h|a|t]'\n   * ```\n   */\n  readonly iRegexp: unique symbol;\n  /**\n   * Operator IS\n   *\n   * ```js\n   * [Op.is]: null\n   * ```\n   * In SQL\n   * ```sql\n   * IS null\n   * ```\n   */\n  readonly is: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.like]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE '%hat'\n   * ```\n   */\n  readonly like: unique symbol;\n  /**\n   * Operator <\n   *\n   * ```js\n   * [Op.lt]: 10\n   * ```\n   * In SQL\n   * ```sql\n   * < 10\n   * ```\n   */\n  readonly lt: unique symbol;\n  /**\n   * Operator <=\n   *\n   * ```js\n   * [Op.lte]: 10\n   * ```\n   * In SQL\n   * ```sql\n   * <= 10\n   * ```\n   */\n  readonly lte: unique symbol;\n  /**\n   * Operator @@\n   *\n   * ```js\n   * [Op.match]: Sequelize.fn('to_tsquery', 'fat & rat')`\n   * ```\n   * In SQL\n   * ```sql\n   * @@ to_tsquery('fat & rat')\n   * ```\n   */\n  readonly match: unique symbol;\n  /**\n   * Operator !=\n   *\n   * ```js\n   * [Op.ne]: 20\n   * ```\n   * In SQL\n   * ```sql\n   * != 20\n   * ```\n   */\n  readonly ne: unique symbol;\n  /**\n   * Operator &> (PG range does not extend to the left of operator)\n   *\n   * ```js\n   * [Op.noExtendLeft]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * &> [1, 2)\n   * ```\n   */\n  readonly noExtendLeft: unique symbol;\n  /**\n   * Operator &< (PG range does not extend to the right of operator)\n   *\n   * ```js\n   * [Op.noExtendRight]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * &< [1, 2)\n   * ```\n   */\n  readonly noExtendRight: unique symbol;\n  /**\n   * Operator NOT\n   *\n   * ```js\n   * [Op.not]: true\n   * ```\n   * In SQL\n   * ```sql\n   * IS NOT TRUE\n   * ```\n   */\n  readonly not: unique symbol;\n  /**\n   * Operator NOT BETWEEN\n   *\n   * ```js\n   * [Op.notBetween]: [11, 15]\n   * ```\n   * In SQL\n   * ```sql\n   * NOT BETWEEN 11 AND 15\n   * ```\n   */\n  readonly notBetween: unique symbol;\n  /**\n   * Operator NOT ILIKE (case insensitive) (PG only)\n   *\n   * ```js\n   * [Op.notILike]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * NOT ILIKE '%hat'\n   * ```\n   */\n  readonly notILike: unique symbol;\n  /**\n   * Operator NOT IN\n   *\n   * ```js\n   * [Op.notIn]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * NOT IN [1, 2]\n   * ```\n   */\n  readonly notIn: unique symbol;\n  /**\n   * Operator !~* (PG only)\n   *\n   * ```js\n   * [Op.notIRegexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * !~* '^[h|a|t]'\n   * ```\n   */\n  readonly notIRegexp: unique symbol;\n  /**\n   * Operator NOT LIKE\n   *\n   * ```js\n   * [Op.notLike]: '%hat'\n   * ```\n   * In SQL\n   * ```sql\n   * NOT LIKE '%hat'\n   * ```\n   */\n  readonly notLike: unique symbol;\n  /**\n   * Operator NOT REGEXP (MySQL/PG only)\n   *\n   * ```js\n   * [Op.notRegexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * NOT REGEXP/!~ '^[h|a|t]'\n   * ```\n   */\n  readonly notRegexp: unique symbol;\n  /**\n   * Operator OR\n   *\n   * ```js\n   * [Op.or]: [{a: 5}, {a: 6}]\n   * ```\n   * In SQL\n   * ```sql\n   * (a = 5 OR a = 6)\n   * ```\n   */\n  readonly or: unique symbol;\n  /**\n   * Operator && (PG array overlap operator)\n   *\n   * ```js\n   * [Op.overlap]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * && [1, 2)\n   * ```\n   */\n  readonly overlap: unique symbol;\n  /**\n   * Internal placeholder\n   *\n   * ```js\n   * [Op.placeholder]: true\n   * ```\n   */\n  readonly placeholder: unique symbol;\n  /**\n   * Operator REGEXP (MySQL/PG only)\n   *\n   * ```js\n   * [Op.regexp]: '^[h|a|t]'\n   * ```\n   * In SQL\n   * ```sql\n   * REGEXP/~ '^[h|a|t]'\n   * ```\n   */\n  readonly regexp: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.startsWith]: 'hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE 'hat%'\n   * ```\n   */\n  readonly startsWith: unique symbol;\n  /**\n   * Operator << (PG range strictly left of operator)\n   *\n   * ```js\n   * [Op.strictLeft]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * << [1, 2)\n   * ```\n   */\n  readonly strictLeft: unique symbol;\n  /**\n   * Operator >> (PG range strictly right of operator)\n   *\n   * ```js\n   * [Op.strictRight]: [1, 2]\n   * ```\n   * In SQL\n   * ```sql\n   * >> [1, 2)\n   * ```\n   */\n  readonly strictRight: unique symbol;\n  /**\n   * Operator LIKE\n   *\n   * ```js\n   * [Op.substring]: 'hat'\n   * ```\n   * In SQL\n   * ```sql\n   * LIKE '%hat%'\n   * ```\n   */\n  readonly substring: unique symbol;\n  /**\n   * Operator VALUES\n   *\n   * ```js\n   * [Op.values]: [4, 5, 6]\n   * ```\n   * In SQL\n   * ```sql\n   * VALUES (4), (5), (6)\n   * ```\n   */\n  readonly values: unique symbol;\n}\n\n// Note: These symbols are registered in the Global Symbol Registry\n//  to counter bugs when two different versions of this library are loaded\n//  Source issue: https://github.com/sequelize/sequelize/issues/8663\n// This is not an endorsement of having two different versions of the library loaded at the same time,\n//  a lot more is going to silently break if you do this.\nexport const Op: OpTypes = {\n  eq: Symbol.for('eq'),\n  ne: Symbol.for('ne'),\n  gte: Symbol.for('gte'),\n  gt: Symbol.for('gt'),\n  lte: Symbol.for('lte'),\n  lt: Symbol.for('lt'),\n  not: Symbol.for('not'),\n  is: Symbol.for('is'),\n  in: Symbol.for('in'),\n  notIn: Symbol.for('notIn'),\n  like: Symbol.for('like'),\n  notLike: Symbol.for('notLike'),\n  iLike: Symbol.for('iLike'),\n  notILike: Symbol.for('notILike'),\n  startsWith: Symbol.for('startsWith'),\n  endsWith: Symbol.for('endsWith'),\n  substring: Symbol.for('substring'),\n  regexp: Symbol.for('regexp'),\n  notRegexp: Symbol.for('notRegexp'),\n  iRegexp: Symbol.for('iRegexp'),\n  notIRegexp: Symbol.for('notIRegexp'),\n  between: Symbol.for('between'),\n  notBetween: Symbol.for('notBetween'),\n  overlap: Symbol.for('overlap'),\n  contains: Symbol.for('contains'),\n  contained: Symbol.for('contained'),\n  adjacent: Symbol.for('adjacent'),\n  strictLeft: Symbol.for('strictLeft'),\n  strictRight: Symbol.for('strictRight'),\n  noExtendRight: Symbol.for('noExtendRight'),\n  noExtendLeft: Symbol.for('noExtendLeft'),\n  and: Symbol.for('and'),\n  or: Symbol.for('or'),\n  any: Symbol.for('any'),\n  all: Symbol.for('all'),\n  values: Symbol.for('values'),\n  col: Symbol.for('col'),\n  placeholder: Symbol.for('placeholder'),\n  join: Symbol.for('join'),\n  match: Symbol.for('match')\n} as OpTypes;\n\nexport default Op;\n\n// https://github.com/sequelize/sequelize/issues/13791\n// remove me in v7: kept for backward compatibility as `export default Op` is\n// transpiled to `module.exports.default` instead of `module.exports`\nmodule.exports = Op;\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAqeO,MAAM,KAAc;AAAA,EACzB,IAAI,OAAO,IAAI;AAAA,EACf,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,IAAI,OAAO,IAAI;AAAA,EACf,OAAO,OAAO,IAAI;AAAA,EAClB,MAAM,OAAO,IAAI;AAAA,EACjB,SAAS,OAAO,IAAI;AAAA,EACpB,OAAO,OAAO,IAAI;AAAA,EAClB,UAAU,OAAO,IAAI;AAAA,EACrB,YAAY,OAAO,IAAI;AAAA,EACvB,UAAU,OAAO,IAAI;AAAA,EACrB,WAAW,OAAO,IAAI;AAAA,EACtB,QAAQ,OAAO,IAAI;AAAA,EACnB,WAAW,OAAO,IAAI;AAAA,EACtB,SAAS,OAAO,IAAI;AAAA,EACpB,YAAY,OAAO,IAAI;AAAA,EACvB,SAAS,OAAO,IAAI;AAAA,EACpB,YAAY,OAAO,IAAI;AAAA,EACvB,SAAS,OAAO,IAAI;AAAA,EACpB,UAAU,OAAO,IAAI;AAAA,EACrB,WAAW,OAAO,IAAI;AAAA,EACtB,UAAU,OAAO,IAAI;AAAA,EACrB,YAAY,OAAO,IAAI;AAAA,EACvB,aAAa,OAAO,IAAI;AAAA,EACxB,eAAe,OAAO,IAAI;AAAA,EAC1B,cAAc,OAAO,IAAI;AAAA,EACzB,KAAK,OAAO,IAAI;AAAA,EAChB,IAAI,OAAO,IAAI;AAAA,EACf,KAAK,OAAO,IAAI;AAAA,EAChB,KAAK,OAAO,IAAI;AAAA,EAChB,QAAQ,OAAO,IAAI;AAAA,EACnB,KAAK,OAAO,IAAI;AAAA,EAChB,aAAa,OAAO,IAAI;AAAA,EACxB,MAAM,OAAO,IAAI;AAAA,EACjB,OAAO,OAAO,IAAI;AAAA;AAGpB,IAAO,oBAAQ;AAKf,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/model.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,33,28,33,33,45,55,64,58,44,44,51,51,42,33,58,34,64,52,10,15,13,12,10,10,11,16,9,8,12,14,11,15,18,10,10,10,12,13,13,12,14,9,10,10,8,3,141,13,31,46,3,31,46,3,19,38,3,42,58,60,24,41,81,64,44,11,9,47,193,73,90,9,12,5,30,24,40,57,16,29,118,5,36,67,28,52,60,7,5,25,34,20,46,28,43,38,3,32,17,12,40,30,20,47,78,34,94,11,7,57,80,85,49,11,11,7,121,187,73,7,121,187,73,7,121,187,73,7,29,37,108,29,9,7,5,30,3,47,26,46,53,7,5,61,75,25,104,7,5,93,21,5,62,65,31,146,54,19,6,86,44,38,12,69,5,19,3,34,20,18,52,39,138,7,14,13,40,27,27,30,30,9,8,5,46,51,29,25,28,8,5,46,51,29,25,28,8,5,46,51,29,28,8,5,33,38,32,25,24,28,8,5,90,35,46,39,7,7,42,48,50,5,3,26,30,3,40,39,44,75,52,53,44,98,11,45,9,7,5,3,42,25,13,42,42,41,29,13,5,92,3,53,46,78,94,7,40,5,19,3,41,18,16,26,23,64,43,56,33,16,33,9,63,7,68,34,7,37,34,92,70,47,18,47,11,29,34,26,48,48,25,9,28,56,25,9,26,41,25,9,7,5,106,3,54,26,23,23,32,20,7,26,24,21,22,37,35,25,8,44,28,29,21,16,9,39,21,152,9,29,27,14,50,42,36,18,13,11,9,7,5,34,17,28,29,29,51,44,7,5,20,49,55,73,17,9,41,42,36,17,28,9,43,17,9,45,17,9,26,53,34,17,30,9,36,21,53,47,39,9,9,17,23,3,57,23,27,34,30,28,41,40,26,39,39,5,56,46,31,42,86,43,69,7,77,68,80,68,81,21,7,44,73,82,85,34,55,55,16,49,41,9,14,53,34,52,16,41,119,9,7,47,44,98,31,46,44,34,9,7,102,114,82,43,7,84,44,7,5,76,31,5,19,3,65,52,45,47,103,63,38,58,57,37,107,13,39,15,44,11,11,7,12,63,5,26,32,72,7,60,5,103,38,32,121,27,29,50,59,29,31,22,35,10,22,23,9,26,125,7,44,43,5,14,40,28,12,127,5,32,30,70,5,61,38,41,5,36,123,5,55,30,5,36,54,78,7,34,134,55,7,135,56,7,5,67,78,5,19,3,60,59,27,36,108,5,36,74,24,27,7,24,105,261,7,201,5,72,23,247,5,23,3,37,37,20,13,5,59,38,24,34,16,57,7,5,35,58,7,3,31,24,72,5,31,15,18,7,62,26,24,5,17,3,33,25,13,178,3,30,26,41,32,19,3,50,61,41,5,44,70,56,7,54,42,7,67,49,7,96,73,67,47,9,9,5,19,45,5,53,3,34,68,3,41,71,58,7,3,41,29,54,5,39,49,70,29,36,5,27,13,51,54,8,18,39,34,16,65,42,72,5,29,35,23,19,29,25,22,27,28,19,26,23,17,18,37,16,46,95,5,27,36,48,34,132,12,46,5,39,57,60,76,155,7,44,142,7,7,93,156,5,71,63,38,86,7,82,133,7,76,79,7,23,7,42,111,26,57,35,34,66,85,118,9,39,81,9,7,45,128,74,7,45,128,74,7,70,128,74,7,5,31,107,59,5,68,33,29,39,44,40,47,49,16,3,30,37,39,39,38,38,58,101,44,36,29,41,39,12,9,29,46,46,12,9,9,58,66,45,9,29,41,39,12,9,29,46,46,12,9,9,36,43,41,30,12,9,48,9,7,31,34,39,36,53,56,29,35,36,26,25,54,74,30,34,40,40,71,7,43,44,7,64,38,67,7,39,65,7,57,42,110,39,61,39,64,42,7,77,120,7,92,20,119,43,59,38,16,55,9,63,42,59,36,26,53,39,7,73,62,7,84,63,45,22,34,32,7,7,88,36,35,7,17,11,58,64,61,103,89,89,59,71,90,17,7,77,5,54,115,62,60,35,108,5,64,74,56,3,37,41,29,3,30,72,70,44,53,24,49,5,49,20,24,31,26,12,78,5,23,82,12,82,5,39,44,62,79,9,36,49,36,44,74,19,77,134,9,7,104,43,73,21,61,34,83,21,11,42,21,57,44,60,56,69,72,390,95,58,15,13,11,99,9,7,5,84,146,58,41,19,41,20,7,15,7,41,104,5,24,48,5,16,3,30,84,3,35,56,3,34,38,6,63,27,18,40,41,43,57,7,5,17,3,25,47,3,21,24,3,41,59,150,116,5,34,54,12,40,5,3,24,37,6,14,18,62,21,26,23,18,18,5,41,36,19,23,37,29,90,42,88,59,39,63,11,16,26,9,92,42,14,28,47,42,26,9,7,18,43,65,70,14,92,7,5,16,3,33,58,164,5,51,87,116,7,5,72,26,50,39,76,67,14,32,7,5,41,144,31,24,49,5,41,36,36,24,70,5,92,26,29,58,217,83,7,5,30,59,94,5,57,42,50,24,61,5,110,108,24,57,5,54,56,42,7,54,36,7,51,5,55,3,58,36,13,5,95,92,65,213,5,3,56,36,24,50,24,41,96,82,7,5,36,22,3,48,52,21,29,22,26,24,22,62,30,75,64,28,24,43,42,70,39,11,22,148,40,12,7,203,37,106,7,8,20,3,41,41,18,5,45,120,23,41,8,12,74,5,39,3,33,58,143,5,39,76,67,14,32,7,5,35,127,198,26,7,5,51,17,8,3,65,39,46,31,40,41,26,38,46,5,54,64,52,27,71,5,28,58,28,31,5,176,28,24,44,14,49,7,12,76,5,45,50,116,17,3,31,39,51,76,67,14,32,7,5,23,24,50,5,33,26,66,5,42,33,5,35,47,44,25,26,25,63,32,75,33,10,5,18,3,41,58,151,5,50,34,39,5,45,31,27,7,12,12,35,6,3,36,55,3,36,55,3,36,55,3,33,32,45,5,37,3,40,61,36,43,28,40,48,7,5,29,118,5,66,3,40,45,37,24,33,31,23,28,21,3,37,61,215,5,15,47,28,52,43,55,7,45,30,5,29,3,38,61,216,5,42,27,53,83,35,105,7,5,76,67,14,32,7,5,53,15,20,9,58,22,30,81,27,30,7,52,43,55,7,31,31,11,59,76,60,9,31,21,68,20,70,102,111,177,53,85,106,20,9,39,46,67,70,176,13,13,9,64,63,21,34,20,37,7,15,47,35,7,5,3,40,37,100,5,54,41,53,5,46,14,28,9,56,81,46,7,63,29,19,119,18,7,53,33,5,3,40,30,18,22,20,33,76,67,14,32,7,5,62,62,92,40,25,32,50,26,31,5,27,39,5,67,114,91,58,56,77,76,5,56,77,98,5,51,121,5,112,48,48,5,24,59,5,135,28,31,24,58,20,5,18,3,50,26,16,5,51,58,39,76,67,14,32,7,5,25,36,43,28,40,48,7,5,115,65,33,24,20,31,31,19,42,35,37,16,36,9,7,163,84,7,139,85,7,35,76,65,65,50,93,144,16,85,9,7,27,71,7,30,26,61,57,62,15,53,25,76,11,12,29,28,59,9,7,37,62,81,28,23,13,42,51,52,49,12,14,58,131,44,61,48,67,40,63,69,15,13,47,21,13,95,48,39,23,112,60,75,74,119,13,14,9,48,45,56,40,59,50,13,11,56,40,59,50,13,11,79,55,28,11,21,11,41,51,101,9,41,121,44,129,18,34,45,41,45,15,13,100,58,56,13,124,11,9,70,113,9,134,37,42,43,39,162,25,15,70,43,128,76,15,13,13,9,7,56,205,42,59,46,54,43,40,59,40,70,193,80,17,63,69,15,13,11,45,19,11,93,46,37,21,110,61,33,60,75,74,45,120,139,52,80,98,269,29,19,99,17,15,37,13,109,48,39,23,68,107,72,11,12,7,40,49,159,93,72,11,73,40,9,37,9,27,70,7,24,6,57,3,34,45,28,39,3,33,39,76,67,14,32,7,5,31,59,104,5,149,123,5,35,18,29,19,21,28,7,41,45,25,24,56,5,18,34,153,104,5,15,64,43,31,89,82,21,130,8,71,161,12,110,5,34,103,5,24,55,5,18,3,33,45,47,30,18,28,16,76,67,14,32,7,5,34,25,45,24,56,5,18,34,170,104,5,29,61,64,148,84,29,143,34,103,5,24,55,5,18,3,40,39,76,67,14,32,7,5,31,43,62,21,18,29,23,19,23,8,41,59,60,46,44,29,9,7,12,64,94,69,43,7,5,65,160,5,25,18,27,39,113,32,68,70,7,88,55,28,48,68,7,5,24,34,55,34,32,5,23,18,35,34,38,29,41,33,37,34,9,29,26,30,73,53,50,66,52,13,13,65,27,41,62,68,51,15,15,33,48,20,71,13,11,26,12,25,50,28,38,59,11,16,75,82,27,29,15,53,52,14,36,9,7,5,15,29,45,127,19,12,76,57,74,149,30,53,33,14,32,7,5,34,102,28,5,24,34,54,32,5,18,3,42,138,3,37,80,105,5,18,3,37,47,13,5,53,37,91,5,37,65,5,36,3,32,47,42,3,55,21,3,26,74,3,43,28,35,24,32,34,104,45,9,17,9,54,61,104,61,16,35,9,25,13,5,31,43,43,12,16,21,7,45,45,52,37,32,35,35,52,7,12,39,5,33,79,5,42,62,86,80,131,5,49,21,24,143,12,143,5,28,49,5,26,3,43,64,11,18,22,8,3,44,89,208,3,23,87,61,20,11,30,54,5,59,38,64,5,61,3,14,65,3,21,32,3,28,56,43,30,5,33,3,21,56,20,19,5,28,14,91,65,7,95,50,79,9,52,51,9,36,7,34,5,92,24,15,35,43,85,21,11,80,51,11,9,7,37,129,49,9,7,20,5,27,3,28,15,22,50,19,28,26,29,36,36,9,7,188,50,49,16,35,9,71,14,33,37,35,41,25,15,46,13,12,38,55,57,11,43,48,11,16,38,50,11,9,26,73,9,7,18,5,17,19,23,43,5,51,54,44,48,54,32,7,12,95,46,20,7,25,38,93,73,57,54,52,13,11,22,9,103,22,9,124,22,9,7,137,85,7,319,54,32,7,35,5,16,3,26,29,3,23,25,35,41,7,19,5,25,29,18,5,26,32,18,5,34,3,17,14,43,5,83,3,36,30,22,36,59,5,50,44,25,66,26,36,31,41,37,29,23,44,6,16,85,44,35,27,9,81,111,14,69,113,7,5,3,23,31,89,5,39,76,67,14,32,7,5,35,18,20,7,26,29,69,14,101,7,45,5,39,32,34,36,33,7,5,64,97,74,59,56,42,58,72,96,41,5,92,39,5,99,63,28,5,36,69,43,7,112,47,7,5,37,81,143,7,5,85,99,5,79,99,5,71,136,5,27,35,5,24,71,71,22,26,68,64,7,70,55,95,25,57,63,34,11,9,68,7,24,31,96,39,30,9,7,5,109,132,46,22,17,91,43,35,28,19,44,107,10,5,105,27,18,45,18,104,95,21,18,14,27,23,77,12,31,24,78,7,23,84,5,88,22,28,55,43,17,15,11,14,66,7,5,69,175,74,66,7,5,45,45,80,208,45,23,17,38,34,91,43,35,28,19,61,61,48,44,110,115,50,67,96,256,27,17,87,15,13,83,18,168,63,48,11,12,10,5,24,71,5,41,67,33,5,29,18,3,25,30,25,17,46,7,61,20,140,5,38,35,16,32,7,16,3,27,59,3,33,59,47,28,31,36,39,76,67,14,32,7,5,48,43,33,68,61,26,62,45,5,36,3,26,30,18,18,16,76,67,14,32,7,5,24,70,5,35,15,85,76,70,123,60,75,69,53,7,93,12,180,5,24,69,5,18,3,19,59,47,5,111,139,88,45,17,3,26,57,47,30,18,18,16,76,67,14,32,7,5,24,70,5,73,76,148,59,114,24,69,20,5,18,3,36,36,39,82,28,54,16,3,36,64,11,18,22,8,3,17,39,19,5,47,19,5,146,3,23,54,3,40,44,3,12,33,17,8,3,35,3,41,3,34,3,37,3,1,27,27,17,3,43,26,11,3,48,17,3,33,18,1,47,38,29,18,3,38,29,18,3,10,47,4,1,40,27,23,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/model.js"],"sourcesContent":["'use strict';\n\nconst assert = require('assert');\nconst _ = require('lodash');\nconst Dottie = require('dottie');\n\nconst Utils = require('./utils');\nconst { logger } = require('./utils/logger');\nconst BelongsTo = require('./associations/belongs-to');\nconst BelongsToMany = require('./associations/belongs-to-many');\nconst InstanceValidator = require('./instance-validator');\nconst QueryTypes = require('./query-types');\nconst sequelizeErrors = require('./errors');\nconst Association = require('./associations/base');\nconst HasMany = require('./associations/has-many');\nconst DataTypes = require('./data-types');\nconst Hooks = require('./hooks');\nconst associationsMixin = require('./associations/mixin');\nconst Op = require('./operators');\nconst { noDoubleNestedGroup } = require('./utils/deprecations');\n\n\n// This list will quickly become dated, but failing to maintain this list just means\n// we won't throw a warning when we should. At least most common cases will forever be covered\n// so we stop throwing erroneous warnings when we shouldn't.\nconst validQueryKeywords = new Set(['where', 'attributes', 'paranoid', 'include', 'order', 'limit', 'offset',\n  'transaction', 'lock', 'raw', 'logging', 'benchmark', 'having', 'searchPath', 'rejectOnEmpty', 'plain',\n  'scope', 'group', 'through', 'defaults', 'distinct', 'primary', 'exception', 'type', 'hooks', 'force',\n  'name']);\n\n// List of attributes that should not be implicitly passed into subqueries/includes.\nconst nonCascadingOptions = ['include', 'attributes', 'originalAttributes', 'order', 'where', 'limit', 'offset', 'plain', 'group', 'having'];\n\n/**\n * A Model represents a table in the database. Instances of this class represent a database row.\n *\n * Model instances operate with the concept of a `dataValues` property, which stores the actual values represented by the instance.\n * By default, the values from dataValues can also be accessed directly from the Instance, that is:\n * ```js\n * instance.field\n * // is the same as\n * instance.get('field')\n * // is the same as\n * instance.getDataValue('field')\n * ```\n * However, if getters and/or setters are defined for `field` they will be invoked, instead of returning the value from `dataValues`.\n * Accessing properties directly or using `get` is preferred for regular use, `getDataValue` should only be used for custom getters.\n *\n * @see\n   * {@link Sequelize#define} for more information about getters and setters\n * @mixes Hooks\n */\nclass Model {\n  static get queryInterface() {\n    return this.sequelize.getQueryInterface();\n  }\n\n  static get queryGenerator() {\n    return this.queryInterface.queryGenerator;\n  }\n\n  /**\n   * A reference to the sequelize instance\n   *\n   * @see\n   * {@link Sequelize}\n   *\n   * @property sequelize\n   *\n   * @returns {Sequelize}\n   */\n  get sequelize() {\n    return this.constructor.sequelize;\n  }\n\n  /**\n   * Builds a new model instance.\n   *\n   * @param {object}  [values={}] an object of key value pairs\n   * @param {object}  [options] instance construction options\n   * @param {boolean} [options.raw=false] If set to true, values will ignore field and virtual setters.\n   * @param {boolean} [options.isNewRecord=true] Is this a new record\n   * @param {Array}   [options.include] an array of include options - Used to build prefetched/included model instances. See `set`\n   */\n  constructor(values = {}, options = {}) {\n    if (!this.constructor._overwrittenAttributesChecked) {\n      this.constructor._overwrittenAttributesChecked = true;\n\n      // setTimeout is hacky but necessary.\n      // Public Class Fields declared by descendants of this class\n      // will not be available until after their call to super, so after\n      // this constructor is done running.\n      setTimeout(() => {\n        const overwrittenAttributes = [];\n        for (const key of Object.keys(this.constructor._attributeManipulation)) {\n          if (Object.prototype.hasOwnProperty.call(this, key)) {\n            overwrittenAttributes.push(key);\n          }\n        }\n\n        if (overwrittenAttributes.length > 0) {\n          logger.warn(`Model ${JSON.stringify(this.constructor.name)} is declaring public class fields for attribute(s): ${overwrittenAttributes.map(attr => JSON.stringify(attr)).join(', ')}.` +\n            '\\nThese class fields are shadowing Sequelize\\'s attribute getters & setters.' +\n            '\\nSee https://sequelize.org/main/manual/model-basics.html#caveat-with-public-class-fields');\n        }\n      }, 0);\n    }\n\n    options = {\n      isNewRecord: true,\n      _schema: this.constructor._schema,\n      _schemaDelimiter: this.constructor._schemaDelimiter,\n      ...options\n    };\n\n    if (options.attributes) {\n      options.attributes = options.attributes.map(attribute => Array.isArray(attribute) ? attribute[1] : attribute);\n    }\n\n    if (!options.includeValidated) {\n      this.constructor._conformIncludes(options, this.constructor);\n      if (options.include) {\n        this.constructor._expandIncludeAll(options);\n        this.constructor._validateIncludedElements(options);\n      }\n    }\n\n    this.dataValues = {};\n    this._previousDataValues = {};\n    this.uniqno = 1;\n    this._changed = new Set();\n    this._options = options;\n\n    /**\n     * Returns true if this instance has not yet been persisted to the database\n     *\n     * @property isNewRecord\n     * @returns {boolean}\n     */\n    this.isNewRecord = options.isNewRecord;\n\n    this._initValues(values, options);\n  }\n\n  _initValues(values, options) {\n    let defaults;\n    let key;\n\n    values = { ...values };\n\n    if (options.isNewRecord) {\n      defaults = {};\n\n      if (this.constructor._hasDefaultValues) {\n        defaults = _.mapValues(this.constructor._defaultValues, valueFn => {\n          const value = valueFn();\n          return value && value instanceof Utils.SequelizeMethod ? value : _.cloneDeep(value);\n        });\n      }\n\n      // set id to null if not passed as value, a newly created dao has no id\n      // removing this breaks bulkCreate\n      // do after default values since it might have UUID as a default value\n      if (this.constructor.primaryKeyAttributes.length) {\n        this.constructor.primaryKeyAttributes.forEach(primaryKeyAttribute => {\n          if (!Object.prototype.hasOwnProperty.call(defaults, primaryKeyAttribute)) {\n            defaults[primaryKeyAttribute] = null;\n          }\n        });\n      }\n\n      if (this.constructor._timestampAttributes.createdAt && defaults[this.constructor._timestampAttributes.createdAt]) {\n        this.dataValues[this.constructor._timestampAttributes.createdAt] = Utils.toDefaultValue(defaults[this.constructor._timestampAttributes.createdAt], this.sequelize.options.dialect);\n        delete defaults[this.constructor._timestampAttributes.createdAt];\n      }\n\n      if (this.constructor._timestampAttributes.updatedAt && defaults[this.constructor._timestampAttributes.updatedAt]) {\n        this.dataValues[this.constructor._timestampAttributes.updatedAt] = Utils.toDefaultValue(defaults[this.constructor._timestampAttributes.updatedAt], this.sequelize.options.dialect);\n        delete defaults[this.constructor._timestampAttributes.updatedAt];\n      }\n\n      if (this.constructor._timestampAttributes.deletedAt && defaults[this.constructor._timestampAttributes.deletedAt]) {\n        this.dataValues[this.constructor._timestampAttributes.deletedAt] = Utils.toDefaultValue(defaults[this.constructor._timestampAttributes.deletedAt], this.sequelize.options.dialect);\n        delete defaults[this.constructor._timestampAttributes.deletedAt];\n      }\n\n      for (key in defaults) {\n        if (values[key] === undefined) {\n          this.set(key, Utils.toDefaultValue(defaults[key], this.sequelize.options.dialect), { raw: true });\n          delete values[key];\n        }\n      }\n    }\n\n    this.set(values, options);\n  }\n\n  // validateIncludedElements should have been called before this method\n  static _paranoidClause(model, options = {}) {\n    // Apply on each include\n    // This should be handled before handling where conditions because of logic with returns\n    // otherwise this code will never run on includes of a already conditionable where\n    if (options.include) {\n      for (const include of options.include) {\n        this._paranoidClause(include.model, include);\n      }\n    }\n\n    // apply paranoid when groupedLimit is used\n    if (_.get(options, 'groupedLimit.on.options.paranoid')) {\n      const throughModel = _.get(options, 'groupedLimit.on.through.model');\n      if (throughModel) {\n        options.groupedLimit.through = this._paranoidClause(throughModel, options.groupedLimit.through);\n      }\n    }\n\n    if (!model.options.timestamps || !model.options.paranoid || options.paranoid === false) {\n      // This model is not paranoid, nothing to do here;\n      return options;\n    }\n\n    const deletedAtCol = model._timestampAttributes.deletedAt;\n    const deletedAtAttribute = model.rawAttributes[deletedAtCol];\n    const deletedAtObject = {};\n\n    let deletedAtDefaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n\n    deletedAtDefaultValue = deletedAtDefaultValue || {\n      [Op.eq]: null\n    };\n\n    deletedAtObject[deletedAtAttribute.field || deletedAtCol] = deletedAtDefaultValue;\n\n    if (Utils.isWhereEmpty(options.where)) {\n      options.where = deletedAtObject;\n    } else {\n      options.where = { [Op.and]: [deletedAtObject, options.where] };\n    }\n\n    return options;\n  }\n\n  static _addDefaultAttributes() {\n    const tail = {};\n    let head = {};\n\n    // Add id if no primary key was manually added to definition\n    // Can't use this.primaryKeys here, since this function is called before PKs are identified\n    if (!_.some(this.rawAttributes, 'primaryKey')) {\n      if ('id' in this.rawAttributes) {\n        // Something is fishy here!\n        throw new Error(`A column called 'id' was added to the attributes of '${this.tableName}' but not marked with 'primaryKey: true'`);\n      }\n\n      head = {\n        id: {\n          type: new DataTypes.INTEGER(),\n          allowNull: false,\n          primaryKey: true,\n          autoIncrement: true,\n          _autoGenerated: true\n        }\n      };\n    }\n\n    if (this._timestampAttributes.createdAt) {\n      tail[this._timestampAttributes.createdAt] = {\n        type: DataTypes.DATE,\n        allowNull: false,\n        _autoGenerated: true\n      };\n    }\n\n    if (this._timestampAttributes.updatedAt) {\n      tail[this._timestampAttributes.updatedAt] = {\n        type: DataTypes.DATE,\n        allowNull: false,\n        _autoGenerated: true\n      };\n    }\n\n    if (this._timestampAttributes.deletedAt) {\n      tail[this._timestampAttributes.deletedAt] = {\n        type: DataTypes.DATE,\n        _autoGenerated: true\n      };\n    }\n\n    if (this._versionAttribute) {\n      tail[this._versionAttribute] = {\n        type: DataTypes.INTEGER,\n        allowNull: false,\n        defaultValue: 0,\n        _autoGenerated: true\n      };\n    }\n\n    const newRawAttributes = {\n      ...head,\n      ...this.rawAttributes\n    };\n    _.each(tail, (value, attr) => {\n      if (newRawAttributes[attr] === undefined) {\n        newRawAttributes[attr] = value;\n      }\n    });\n\n    this.rawAttributes = newRawAttributes;\n\n    if (!Object.keys(this.primaryKeys).length) {\n      this.primaryKeys.id = this.rawAttributes.id;\n    }\n  }\n\n  /**\n   * Returns the attributes of the model.\n   *\n   * @returns {object|any}\n  */\n  static getAttributes() {\n    return this.rawAttributes;\n  }\n\n  static _findAutoIncrementAttribute() {\n    this.autoIncrementAttribute = null;\n\n    for (const name in this.rawAttributes) {\n      if (Object.prototype.hasOwnProperty.call(this.rawAttributes, name)) {\n        const definition = this.rawAttributes[name];\n        if (definition && definition.autoIncrement) {\n          if (this.autoIncrementAttribute) {\n            throw new Error('Invalid Instance definition. Only one autoincrement field allowed.');\n          }\n          this.autoIncrementAttribute = name;\n        }\n      }\n    }\n  }\n\n  static _conformIncludes(options, self) {\n    if (!options.include) return;\n\n    // if include is not an array, wrap in an array\n    if (!Array.isArray(options.include)) {\n      options.include = [options.include];\n    } else if (!options.include.length) {\n      delete options.include;\n      return;\n    }\n\n    // convert all included elements to { model: Model } form\n    options.include = options.include.map(include => this._conformInclude(include, self));\n  }\n\n  static _transformStringAssociation(include, self) {\n    if (self && typeof include === 'string') {\n      if (!Object.prototype.hasOwnProperty.call(self.associations, include)) {\n        throw new Error(`Association with alias \"${include}\" does not exist on ${self.name}`);\n      }\n      return self.associations[include];\n    }\n    return include;\n  }\n\n  static _conformInclude(include, self) {\n    if (include) {\n      let model;\n\n      if (include._pseudo) return include;\n\n      include = this._transformStringAssociation(include, self);\n\n      if (include instanceof Association) {\n        if (self && include.target.name === self.name) {\n          model = include.source;\n        } else {\n          model = include.target;\n        }\n\n        return { model, association: include, as: include.as };\n      }\n\n      if (include.prototype && include.prototype instanceof Model) {\n        return { model: include };\n      }\n\n      if (_.isPlainObject(include)) {\n        if (include.association) {\n          include.association = this._transformStringAssociation(include.association, self);\n\n          if (self && include.association.target.name === self.name) {\n            model = include.association.source;\n          } else {\n            model = include.association.target;\n          }\n\n          if (!include.model) include.model = model;\n          if (!include.as) include.as = include.association.as;\n\n          this._conformIncludes(include, model);\n          return include;\n        }\n\n        if (include.model) {\n          this._conformIncludes(include, include.model);\n          return include;\n        }\n\n        if (include.all) {\n          this._conformIncludes(include);\n          return include;\n        }\n      }\n    }\n\n    throw new Error('Include unexpected. Element has to be either a Model, an Association or an object.');\n  }\n\n  static _expandIncludeAllElement(includes, include) {\n    // check 'all' attribute provided is valid\n    let all = include.all;\n    delete include.all;\n\n    if (all !== true) {\n      if (!Array.isArray(all)) {\n        all = [all];\n      }\n\n      const validTypes = {\n        BelongsTo: true,\n        HasOne: true,\n        HasMany: true,\n        One: ['BelongsTo', 'HasOne'],\n        Has: ['HasOne', 'HasMany'],\n        Many: ['HasMany']\n      };\n\n      for (let i = 0; i < all.length; i++) {\n        const type = all[i];\n        if (type === 'All') {\n          all = true;\n          break;\n        }\n\n        const types = validTypes[type];\n        if (!types) {\n          throw new sequelizeErrors.EagerLoadingError(`include all '${type}' is not valid - must be BelongsTo, HasOne, HasMany, One, Has, Many or All`);\n        }\n\n        if (types !== true) {\n          // replace type placeholder e.g. 'One' with its constituent types e.g. 'HasOne', 'BelongsTo'\n          all.splice(i, 1);\n          i--;\n          for (let j = 0; j < types.length; j++) {\n            if (!all.includes(types[j])) {\n              all.unshift(types[j]);\n              i++;\n            }\n          }\n        }\n      }\n    }\n\n    // add all associations of types specified to includes\n    const nested = include.nested;\n    if (nested) {\n      delete include.nested;\n\n      if (!include.include) {\n        include.include = [];\n      } else if (!Array.isArray(include.include)) {\n        include.include = [include.include];\n      }\n    }\n\n    const used = [];\n    (function addAllIncludes(parent, includes) {\n      _.forEach(parent.associations, association => {\n        if (all !== true && !all.includes(association.associationType)) {\n          return;\n        }\n\n        // check if model already included, and skip if so\n        const model = association.target;\n        const as = association.options.as;\n\n        const predicate = { model };\n        if (as) {\n          // We only add 'as' to the predicate if it actually exists\n          predicate.as = as;\n        }\n\n        if (_.some(includes, predicate)) {\n          return;\n        }\n\n        // skip if recursing over a model already nested\n        if (nested && used.includes(model)) {\n          return;\n        }\n        used.push(parent);\n\n        // include this model\n        const thisInclude = Utils.cloneDeep(include);\n        thisInclude.model = model;\n        if (as) {\n          thisInclude.as = as;\n        }\n        includes.push(thisInclude);\n\n        // run recursively if nested\n        if (nested) {\n          addAllIncludes(model, thisInclude.include);\n          if (thisInclude.include.length === 0) delete thisInclude.include;\n        }\n      });\n      used.pop();\n    })(this, includes);\n  }\n\n  static _validateIncludedElements(options, tableNames) {\n    if (!options.model) options.model = this;\n\n    tableNames = tableNames || {};\n    options.includeNames = [];\n    options.includeMap = {};\n\n    /* Legacy */\n    options.hasSingleAssociation = false;\n    options.hasMultiAssociation = false;\n\n    if (!options.parent) {\n      options.topModel = options.model;\n      options.topLimit = options.limit;\n    }\n\n    options.include = options.include.map(include => {\n      include = this._conformInclude(include);\n      include.parent = options;\n      include.topLimit = options.topLimit;\n\n      this._validateIncludedElement.call(options.model, include, tableNames, options);\n\n      if (include.duplicating === undefined) {\n        include.duplicating = include.association.isMultiAssociation;\n      }\n\n      include.hasDuplicating = include.hasDuplicating || include.duplicating;\n      include.hasRequired = include.hasRequired || include.required;\n\n      options.hasDuplicating = options.hasDuplicating || include.hasDuplicating;\n      options.hasRequired = options.hasRequired || include.required;\n\n      options.hasWhere = options.hasWhere || include.hasWhere || !!include.where;\n      return include;\n    });\n\n    for (const include of options.include) {\n      include.hasParentWhere = options.hasParentWhere || !!options.where;\n      include.hasParentRequired = options.hasParentRequired || !!options.required;\n\n      if (include.subQuery !== false && options.hasDuplicating && options.topLimit) {\n        if (include.duplicating) {\n          include.subQuery = include.subQuery || false;\n          include.subQueryFilter = include.hasRequired;\n        } else {\n          include.subQuery = include.hasRequired;\n          include.subQueryFilter = false;\n        }\n      } else {\n        include.subQuery = include.subQuery || false;\n        if (include.duplicating) {\n          include.subQueryFilter = include.subQuery;\n        } else {\n          include.subQueryFilter = false;\n          include.subQuery = include.subQuery || include.hasParentRequired && include.hasRequired && !include.separate;\n        }\n      }\n\n      options.includeMap[include.as] = include;\n      options.includeNames.push(include.as);\n\n      // Set top level options\n      if (options.topModel === options.model && options.subQuery === undefined && options.topLimit) {\n        if (include.subQuery) {\n          options.subQuery = include.subQuery;\n        } else if (include.hasDuplicating) {\n          options.subQuery = true;\n        }\n      }\n\n      /* Legacy */\n      options.hasIncludeWhere = options.hasIncludeWhere || include.hasIncludeWhere || !!include.where;\n      options.hasIncludeRequired = options.hasIncludeRequired || include.hasIncludeRequired || !!include.required;\n\n      if (include.association.isMultiAssociation || include.hasMultiAssociation) {\n        options.hasMultiAssociation = true;\n      }\n      if (include.association.isSingleAssociation || include.hasSingleAssociation) {\n        options.hasSingleAssociation = true;\n      }\n    }\n\n    if (options.topModel === options.model && options.subQuery === undefined) {\n      options.subQuery = false;\n    }\n    return options;\n  }\n\n  static _validateIncludedElement(include, tableNames, options) {\n    tableNames[include.model.getTableName()] = true;\n\n    if (include.attributes && !options.raw) {\n      include.model._expandAttributes(include);\n\n      include.originalAttributes = include.model._injectDependentVirtualAttributes(include.attributes);\n\n      include = Utils.mapFinderOptions(include, include.model);\n\n      if (include.attributes.length) {\n        _.each(include.model.primaryKeys, (attr, key) => {\n          // Include the primary key if it's not already included - take into account that the pk might be aliased (due to a .field prop)\n          if (!include.attributes.some(includeAttr => {\n            if (attr.field !== key) {\n              return Array.isArray(includeAttr) && includeAttr[0] === attr.field && includeAttr[1] === key;\n            }\n            return includeAttr === key;\n          })) {\n            include.attributes.unshift(key);\n          }\n        });\n      }\n    } else {\n      include = Utils.mapFinderOptions(include, include.model);\n    }\n\n    // pseudo include just needed the attribute logic, return\n    if (include._pseudo) {\n      if (!include.attributes) {\n        include.attributes = Object.keys(include.model.tableAttributes);\n      }\n      return Utils.mapFinderOptions(include, include.model);\n    }\n\n    // check if the current Model is actually associated with the passed Model - or it's a pseudo include\n    const association = include.association || this._getIncludedAssociation(include.model, include.as);\n\n    include.association = association;\n    include.as = association.as;\n\n    // If through, we create a pseudo child include, to ease our parsing later on\n    if (include.association.through && Object(include.association.through.model) === include.association.through.model) {\n      if (!include.include) include.include = [];\n      const through = include.association.through;\n\n      include.through = _.defaults(include.through || {}, {\n        model: through.model,\n        as: through.model.name,\n        association: {\n          isSingleAssociation: true\n        },\n        _pseudo: true,\n        parent: include\n      });\n\n\n      if (through.scope) {\n        include.through.where = include.through.where ? { [Op.and]: [include.through.where, through.scope] } : through.scope;\n      }\n\n      include.include.push(include.through);\n      tableNames[through.tableName] = true;\n    }\n\n    // include.model may be the main model, while the association target may be scoped - thus we need to look at association.target/source\n    let model;\n    if (include.model.scoped === true) {\n      // If the passed model is already scoped, keep that\n      model = include.model;\n    } else {\n      // Otherwise use the model that was originally passed to the association\n      model = include.association.target.name === include.model.name ? include.association.target : include.association.source;\n    }\n\n    model._injectScope(include);\n\n    // This check should happen after injecting the scope, since the scope may contain a .attributes\n    if (!include.attributes) {\n      include.attributes = Object.keys(include.model.tableAttributes);\n    }\n\n    include = Utils.mapFinderOptions(include, include.model);\n\n    if (include.required === undefined) {\n      include.required = !!include.where;\n    }\n\n    if (include.association.scope) {\n      include.where = include.where ? { [Op.and]: [include.where, include.association.scope] } : include.association.scope;\n    }\n\n    if (include.limit && include.separate === undefined) {\n      include.separate = true;\n    }\n\n    if (include.separate === true) {\n      if (!(include.association instanceof HasMany)) {\n        throw new Error('Only HasMany associations support include.separate');\n      }\n\n      include.duplicating = false;\n\n      if (\n        options.attributes\n        && options.attributes.length\n        && !_.flattenDepth(options.attributes, 2).includes(association.sourceKey)\n      ) {\n        options.attributes.push(association.sourceKey);\n      }\n\n      if (\n        include.attributes\n        && include.attributes.length\n        && !_.flattenDepth(include.attributes, 2).includes(association.foreignKey)\n      ) {\n        include.attributes.push(association.foreignKey);\n      }\n    }\n\n    // Validate child includes\n    if (Object.prototype.hasOwnProperty.call(include, 'include')) {\n      this._validateIncludedElements.call(include.model, include, tableNames);\n    }\n\n    return include;\n  }\n\n  static _getIncludedAssociation(targetModel, targetAlias) {\n    const associations = this.getAssociations(targetModel);\n    let association = null;\n    if (associations.length === 0) {\n      throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is not associated to ${this.name}!`);\n    }\n    if (associations.length === 1) {\n      association = this.getAssociationForAlias(targetModel, targetAlias);\n      if (association) {\n        return association;\n      }\n      if (targetAlias) {\n        const existingAliases = this.getAssociations(targetModel).map(association => association.as);\n        throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is associated to ${this.name} using an alias. ` +\n          `You've included an alias (${targetAlias}), but it does not match the alias(es) defined in your association (${existingAliases.join(', ')}).`);\n      }\n      throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is associated to ${this.name} using an alias. ` +\n        'You must use the \\'as\\' keyword to specify the alias within your include statement.');\n    }\n    association = this.getAssociationForAlias(targetModel, targetAlias);\n    if (!association) {\n      throw new sequelizeErrors.EagerLoadingError(`${targetModel.name} is associated to ${this.name} multiple times. ` +\n        'To identify the correct association, you must use the \\'as\\' keyword to specify the alias of the association you want to include.');\n    }\n    return association;\n  }\n\n\n  static _expandIncludeAll(options) {\n    const includes = options.include;\n    if (!includes) {\n      return;\n    }\n\n    for (let index = 0; index < includes.length; index++) {\n      const include = includes[index];\n\n      if (include.all) {\n        includes.splice(index, 1);\n        index--;\n\n        this._expandIncludeAllElement(includes, include);\n      }\n    }\n\n    includes.forEach(include => {\n      this._expandIncludeAll.call(include.model, include);\n    });\n  }\n\n  static _conformIndex(index) {\n    if (!index.fields) {\n      throw new Error('Missing \"fields\" property for index definition');\n    }\n\n    index = _.defaults(index, {\n      type: '',\n      parser: null\n    });\n\n    if (index.type && index.type.toLowerCase() === 'unique') {\n      index.unique = true;\n      delete index.type;\n    }\n\n    return index;\n  }\n\n\n  static _uniqIncludes(options) {\n    if (!options.include) return;\n\n    options.include = _(options.include)\n      .groupBy(include => `${include.model && include.model.name}-${include.as}`)\n      .map(includes => this._assignOptions(...includes))\n      .value();\n  }\n\n  static _baseMerge(...args) {\n    _.assignWith(...args);\n    this._conformIncludes(args[0], this);\n    this._uniqIncludes(args[0]);\n    return args[0];\n  }\n\n  static _mergeFunction(objValue, srcValue, key) {\n    if (Array.isArray(objValue) && Array.isArray(srcValue)) {\n      return _.union(objValue, srcValue);\n    }\n\n    if (['where', 'having'].includes(key)) {\n      if (this.options && this.options.whereMergeStrategy === 'and') {\n        return combineWheresWithAnd(objValue, srcValue);\n      }\n\n      if (srcValue instanceof Utils.SequelizeMethod) {\n        srcValue = { [Op.and]: srcValue };\n      }\n\n      if (_.isPlainObject(objValue) && _.isPlainObject(srcValue)) {\n        return Object.assign(objValue, srcValue);\n      }\n    } else if (key === 'attributes' && _.isPlainObject(objValue) && _.isPlainObject(srcValue)) {\n      return _.assignWith(objValue, srcValue, (objValue, srcValue) => {\n        if (Array.isArray(objValue) && Array.isArray(srcValue)) {\n          return _.union(objValue, srcValue);\n        }\n      });\n    }\n    // If we have a possible object/array to clone, we try it.\n    // Otherwise, we return the original value when it's not undefined,\n    // or the resulting object in that case.\n    if (srcValue) {\n      return Utils.cloneDeep(srcValue, true);\n    }\n    return srcValue === undefined ? objValue : srcValue;\n  }\n\n  static _assignOptions(...args) {\n    return this._baseMerge(...args, this._mergeFunction.bind(this));\n  }\n\n  static _defaultsOptions(target, opts) {\n    return this._baseMerge(target, opts, (srcValue, objValue, key) => {\n      return this._mergeFunction(objValue, srcValue, key);\n    });\n  }\n\n  /**\n   * Initialize a model, representing a table in the DB, with attributes and options.\n   *\n   * The table columns are defined by the hash that is given as the first argument.\n   * Each attribute of the hash represents a column.\n   *\n   * @example\n   * Project.init({\n   *   columnA: {\n   *     type: Sequelize.BOOLEAN,\n   *     validate: {\n   *       is: ['[a-z]','i'],        // will only allow letters\n   *       max: 23,                  // only allow values <= 23\n   *       isIn: {\n   *         args: [['en', 'zh']],\n   *         msg: \"Must be English or Chinese\"\n   *       }\n   *     },\n   *     field: 'column_a'\n   *     // Other attributes here\n   *   },\n   *   columnB: Sequelize.STRING,\n   *   columnC: 'MY VERY OWN COLUMN TYPE'\n   * }, {sequelize})\n   *\n   * sequelize.models.modelName // The model will now be available in models under the class name\n   *\n   * @see\n   * <a href=\"/master/manual/model-basics.html\">Model Basics</a> guide\n   *\n   * @see\n   * <a href=\"/master/manual/model-basics.html\">Hooks</a> guide\n   *\n   * @see\n   * <a href=\"/master/manual/validations-and-constraints.html\"/>Validations & Constraints</a> guide\n   *\n   * @param {object}                  attributes An object, where each attribute is a column of the table. Each column can be either a DataType, a string or a type-description object, with the properties described below:\n   * @param {string|DataTypes|object} attributes.column The description of a database column\n   * @param {string|DataTypes}        attributes.column.type A string or a data type\n   * @param {boolean}                 [attributes.column.allowNull=true] If false, the column will have a NOT NULL constraint, and a not null validation will be run before an instance is saved.\n   * @param {any}                     [attributes.column.defaultValue=null] A literal default value, a JavaScript function, or an SQL function (see `sequelize.fn`)\n   * @param {string|boolean}          [attributes.column.unique=false] If true, the column will get a unique constraint. If a string is provided, the column will be part of a composite unique index. If multiple columns have the same string, they will be part of the same unique index\n   * @param {boolean}                 [attributes.column.primaryKey=false] If true, this attribute will be marked as primary key\n   * @param {string}                  [attributes.column.field=null] If set, sequelize will map the attribute name to a different name in the database\n   * @param {boolean}                 [attributes.column.autoIncrement=false] If true, this column will be set to auto increment\n   * @param {boolean}                 [attributes.column.autoIncrementIdentity=false] If true, combined with autoIncrement=true, will use Postgres `GENERATED BY DEFAULT AS IDENTITY` instead of `SERIAL`. Postgres 10+ only.\n   * @param {string}                  [attributes.column.comment=null] Comment for this column\n   * @param {string|Model}            [attributes.column.references=null] An object with reference configurations\n   * @param {string|Model}            [attributes.column.references.model] If this column references another table, provide it here as a Model, or a string\n   * @param {string}                  [attributes.column.references.key='id'] The column of the foreign table that this column references\n   * @param {string}                  [attributes.column.onUpdate] What should happen when the referenced key is updated. One of CASCADE, RESTRICT, SET DEFAULT, SET NULL or NO ACTION\n   * @param {string}                  [attributes.column.onDelete] What should happen when the referenced key is deleted. One of CASCADE, RESTRICT, SET DEFAULT, SET NULL or NO ACTION\n   * @param {Function}                [attributes.column.get] Provide a custom getter for this column. Use `this.getDataValue(String)` to manipulate the underlying values.\n   * @param {Function}                [attributes.column.set] Provide a custom setter for this column. Use `this.setDataValue(String, Value)` to manipulate the underlying values.\n   * @param {object}                  [attributes.column.validate] An object of validations to execute for this column every time the model is saved. Can be either the name of a validation provided by validator.js, a validation function provided by extending validator.js (see the `DAOValidator` property for more details), or a custom validation function. Custom validation functions are called with the value of the field and the instance itself as the `this` binding, and can possibly take a second callback argument, to signal that they are asynchronous. If the validator is sync, it should throw in the case of a failed validation; if it is async, the callback should be called with the error text.\n   * @param {object}                  options These options are merged with the default define options provided to the Sequelize constructor\n   * @param {object}                  options.sequelize Define the sequelize instance to attach to the new Model. Throw error if none is provided.\n   * @param {string}                  [options.modelName] Set name of the model. By default its same as Class name.\n   * @param {object}                  [options.defaultScope={}] Define the default search scope to use for this model. Scopes have the same form as the options passed to find / findAll\n   * @param {object}                  [options.scopes] More scopes, defined in the same way as defaultScope above. See `Model.scope` for more information about how scopes are defined, and what you can do with them\n   * @param {boolean}                 [options.omitNull] Don't persist null values. This means that all columns with null values will not be saved\n   * @param {boolean}                 [options.timestamps=true] Adds createdAt and updatedAt timestamps to the model.\n   * @param {boolean}                 [options.paranoid=false] Calling `destroy` will not delete the model, but instead set a `deletedAt` timestamp if this is true. Needs `timestamps=true` to work\n   * @param {boolean}                 [options.underscored=false] Add underscored field to all attributes, this covers user defined attributes, timestamps and foreign keys. Will not affect attributes with explicitly set `field` option\n   * @param {boolean}                 [options.freezeTableName=false] If freezeTableName is true, sequelize will not try to alter the model name to get the table name. Otherwise, the model name will be pluralized\n   * @param {object}                  [options.name] An object with two attributes, `singular` and `plural`, which are used when this model is associated to others.\n   * @param {string}                  [options.name.singular=Utils.singularize(modelName)] Singular name for model\n   * @param {string}                  [options.name.plural=Utils.pluralize(modelName)] Plural name for model\n   * @param {Array<object>}           [options.indexes] indexes definitions\n   * @param {string}                  [options.indexes[].name] The name of the index. Defaults to model name + _ + fields concatenated\n   * @param {string}                  [options.indexes[].type] Index type. Only used by mysql. One of `UNIQUE`, `FULLTEXT` and `SPATIAL`\n   * @param {string}                  [options.indexes[].using] The method to create the index by (`USING` statement in SQL). BTREE and HASH are supported by mysql and postgres, and postgres additionally supports GIST and GIN.\n   * @param {string}                  [options.indexes[].operator] Specify index operator.\n   * @param {boolean}                 [options.indexes[].unique=false] Should the index by unique? Can also be triggered by setting type to `UNIQUE`\n   * @param {boolean}                 [options.indexes[].concurrently=false] PostgresSQL will build the index without taking any write locks. Postgres only\n   * @param {Array<string|object>}    [options.indexes[].fields] An array of the fields to index. Each field can either be a string containing the name of the field, a sequelize object (e.g `sequelize.fn`), or an object with the following attributes: `attribute` (field name), `length` (create a prefix index of length chars), `order` (the direction the column should be sorted in), `collate` (the collation (sort order) for the column)\n   * @param {string|boolean}          [options.createdAt] Override the name of the createdAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.\n   * @param {string|boolean}          [options.updatedAt] Override the name of the updatedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.\n   * @param {string|boolean}          [options.deletedAt] Override the name of the deletedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.\n   * @param {string}                  [options.tableName] Defaults to pluralized model name, unless freezeTableName is true, in which case it uses model name verbatim\n   * @param {string}                  [options.schema='public'] schema\n   * @param {string}                  [options.engine] Specify engine for model's table\n   * @param {string}                  [options.charset] Specify charset for model's table\n   * @param {string}                  [options.comment] Specify comment for model's table\n   * @param {string}                  [options.collate] Specify collation for model's table\n   * @param {string}                  [options.initialAutoIncrement] Set the initial AUTO_INCREMENT value for the table in MySQL.\n   * @param {object}                  [options.hooks] An object of hook function that are called before and after certain lifecycle events. The possible hooks are: beforeValidate, afterValidate, validationFailed, beforeBulkCreate, beforeBulkDestroy, beforeBulkUpdate, beforeCreate, beforeDestroy, beforeUpdate, afterCreate, beforeSave, afterDestroy, afterUpdate, afterBulkCreate, afterSave, afterBulkDestroy and afterBulkUpdate. See Hooks for more information about hook functions and their signatures. Each property can either be a function, or an array of functions.\n   * @param {object}                  [options.validate] An object of model wide validations. Validations have access to all model values via `this`. If the validator function takes an argument, it is assumed to be async, and is called with a callback that accepts an optional error.\n   * @param {'and'|'overwrite'}       [options.whereMergeStrategy] Specify the scopes merging strategy (default 'overwrite'). 'and' strategy will merge `where` properties of scopes together by adding `Op.and` at the top-most level. 'overwrite' strategy will overwrite similar attributes using the lastly defined one.\n   *\n   * @returns {Model}\n   */\n  static init(attributes, options = {}) {\n    if (!options.sequelize) {\n      throw new Error('No Sequelize instance passed');\n    }\n\n    this.sequelize = options.sequelize;\n\n    const globalOptions = this.sequelize.options;\n\n    options = Utils.merge(_.cloneDeep(globalOptions.define), options);\n\n    if (!options.modelName) {\n      options.modelName = this.name;\n    }\n\n    options = Utils.merge({\n      name: {\n        plural: Utils.pluralize(options.modelName),\n        singular: Utils.singularize(options.modelName)\n      },\n      indexes: [],\n      omitNull: globalOptions.omitNull,\n      schema: globalOptions.schema\n    }, options);\n\n    this.sequelize.runHooks('beforeDefine', attributes, options);\n\n    if (options.modelName !== this.name) {\n      Object.defineProperty(this, 'name', { value: options.modelName });\n    }\n    delete options.modelName;\n\n    this.options = {\n      timestamps: true,\n      validate: {},\n      freezeTableName: false,\n      underscored: false,\n      paranoid: false,\n      rejectOnEmpty: false,\n      whereCollection: null,\n      schema: null,\n      schemaDelimiter: '',\n      defaultScope: {},\n      scopes: {},\n      indexes: [],\n      whereMergeStrategy: 'overwrite',\n      ...options\n    };\n\n    // if you call \"define\" multiple times for the same modelName, do not clutter the factory\n    if (this.sequelize.isDefined(this.name)) {\n      this.sequelize.modelManager.removeModel(this.sequelize.modelManager.getModel(this.name));\n    }\n\n    this.associations = {};\n    this._setupHooks(options.hooks);\n\n    this.underscored = this.options.underscored;\n\n    if (!this.options.tableName) {\n      this.tableName = this.options.freezeTableName ? this.name : Utils.underscoredIf(Utils.pluralize(this.name), this.underscored);\n    } else {\n      this.tableName = this.options.tableName;\n    }\n\n    this._schema = this.options.schema;\n    this._schemaDelimiter = this.options.schemaDelimiter;\n\n    // error check options\n    _.each(options.validate, (validator, validatorType) => {\n      if (Object.prototype.hasOwnProperty.call(attributes, validatorType)) {\n        throw new Error(`A model validator function must not have the same name as a field. Model: ${this.name}, field/validation name: ${validatorType}`);\n      }\n\n      if (typeof validator !== 'function') {\n        throw new Error(`Members of the validate option must be functions. Model: ${this.name}, error with validate member ${validatorType}`);\n      }\n    });\n\n    if (!_.includes(['and', 'overwrite'], this.options && this.options.whereMergeStrategy)) {\n      throw new Error(`Invalid value ${this.options && this.options.whereMergeStrategy} for whereMergeStrategy. Allowed values are 'and' and 'overwrite'.`);\n    }\n\n\n    this.rawAttributes = _.mapValues(attributes, (attribute, name) => {\n      attribute = this.sequelize.normalizeAttribute(attribute);\n\n      if (attribute.type === undefined) {\n        throw new Error(`Unrecognized datatype for attribute \"${this.name}.${name}\"`);\n      }\n\n      if (attribute.allowNull !== false && _.get(attribute, 'validate.notNull')) {\n        throw new Error(`Invalid definition for \"${this.name}.${name}\", \"notNull\" validator is only allowed with \"allowNull:false\"`);\n      }\n\n      if (_.get(attribute, 'references.model.prototype') instanceof Model) {\n        attribute.references.model = attribute.references.model.getTableName();\n      }\n\n      return attribute;\n    });\n\n    const tableName = this.getTableName();\n    this._indexes = this.options.indexes\n      .map(index => Utils.nameIndex(this._conformIndex(index), tableName));\n\n    this.primaryKeys = {};\n    this._readOnlyAttributes = new Set();\n    this._timestampAttributes = {};\n\n    // setup names of timestamp attributes\n    if (this.options.timestamps) {\n      for (const key of ['createdAt', 'updatedAt', 'deletedAt']) {\n        if (!['undefined', 'string', 'boolean'].includes(typeof this.options[key])) {\n          throw new Error(`Value for \"${key}\" option must be a string or a boolean, got ${typeof this.options[key]}`);\n        }\n        if (this.options[key] === '') {\n          throw new Error(`Value for \"${key}\" option cannot be an empty string`);\n        }\n      }\n\n      if (this.options.createdAt !== false) {\n        this._timestampAttributes.createdAt =\n          typeof this.options.createdAt === 'string' ? this.options.createdAt : 'createdAt';\n        this._readOnlyAttributes.add(this._timestampAttributes.createdAt);\n      }\n      if (this.options.updatedAt !== false) {\n        this._timestampAttributes.updatedAt =\n          typeof this.options.updatedAt === 'string' ? this.options.updatedAt : 'updatedAt';\n        this._readOnlyAttributes.add(this._timestampAttributes.updatedAt);\n      }\n      if (this.options.paranoid && this.options.deletedAt !== false) {\n        this._timestampAttributes.deletedAt =\n          typeof this.options.deletedAt === 'string' ? this.options.deletedAt : 'deletedAt';\n        this._readOnlyAttributes.add(this._timestampAttributes.deletedAt);\n      }\n    }\n\n    // setup name for version attribute\n    if (this.options.version) {\n      this._versionAttribute = typeof this.options.version === 'string' ? this.options.version : 'version';\n      this._readOnlyAttributes.add(this._versionAttribute);\n    }\n\n    this._hasReadOnlyAttributes = this._readOnlyAttributes.size > 0;\n\n    // Add head and tail default attributes (id, timestamps)\n    this._addDefaultAttributes();\n    this.refreshAttributes();\n    this._findAutoIncrementAttribute();\n\n    this._scope = this.options.defaultScope;\n    this._scopeNames = ['defaultScope'];\n\n    this.sequelize.modelManager.addModel(this);\n    this.sequelize.runHooks('afterDefine', this);\n\n    return this;\n  }\n\n  static refreshAttributes() {\n    const attributeManipulation = {};\n\n    this.prototype._customGetters = {};\n    this.prototype._customSetters = {};\n\n    ['get', 'set'].forEach(type => {\n      const opt = `${type}terMethods`;\n      const funcs = { ...this.options[opt] };\n      const _custom = type === 'get' ? this.prototype._customGetters : this.prototype._customSetters;\n\n      _.each(funcs, (method, attribute) => {\n        _custom[attribute] = method;\n\n        if (type === 'get') {\n          funcs[attribute] = function() {\n            return this.get(attribute);\n          };\n        }\n        if (type === 'set') {\n          funcs[attribute] = function(value) {\n            return this.set(attribute, value);\n          };\n        }\n      });\n\n      _.each(this.rawAttributes, (options, attribute) => {\n        if (Object.prototype.hasOwnProperty.call(options, type)) {\n          _custom[attribute] = options[type];\n        }\n\n        if (type === 'get') {\n          funcs[attribute] = function() {\n            return this.get(attribute);\n          };\n        }\n        if (type === 'set') {\n          funcs[attribute] = function(value) {\n            return this.set(attribute, value);\n          };\n        }\n      });\n\n      _.each(funcs, (fct, name) => {\n        if (!attributeManipulation[name]) {\n          attributeManipulation[name] = {\n            configurable: true\n          };\n        }\n        attributeManipulation[name][type] = fct;\n      });\n    });\n\n    this._dataTypeChanges = {};\n    this._dataTypeSanitizers = {};\n\n    this._hasBooleanAttributes = false;\n    this._hasDateAttributes = false;\n    this._jsonAttributes = new Set();\n    this._virtualAttributes = new Set();\n    this._defaultValues = {};\n    this.prototype.validators = {};\n\n    this.fieldRawAttributesMap = {};\n\n    this.primaryKeys = {};\n    this.uniqueKeys = {};\n\n    _.each(this.rawAttributes, (definition, name) => {\n      definition.type = this.sequelize.normalizeDataType(definition.type);\n\n      definition.Model = this;\n      definition.fieldName = name;\n      definition._modelAttribute = true;\n\n      if (definition.field === undefined) {\n        definition.field = Utils.underscoredIf(name, this.underscored);\n      }\n\n      if (definition.primaryKey === true) {\n        this.primaryKeys[name] = definition;\n      }\n\n      this.fieldRawAttributesMap[definition.field] = definition;\n\n      if (definition.type._sanitize) {\n        this._dataTypeSanitizers[name] = definition.type._sanitize;\n      }\n\n      if (definition.type._isChanged) {\n        this._dataTypeChanges[name] = definition.type._isChanged;\n      }\n\n      if (definition.type instanceof DataTypes.BOOLEAN) {\n        this._hasBooleanAttributes = true;\n      } else if (definition.type instanceof DataTypes.DATE || definition.type instanceof DataTypes.DATEONLY) {\n        this._hasDateAttributes = true;\n      } else if (definition.type instanceof DataTypes.JSON) {\n        this._jsonAttributes.add(name);\n      } else if (definition.type instanceof DataTypes.VIRTUAL) {\n        this._virtualAttributes.add(name);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(definition, 'defaultValue')) {\n        this._defaultValues[name] = () => Utils.toDefaultValue(definition.defaultValue, this.sequelize.options.dialect);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(definition, 'unique') && definition.unique) {\n        let idxName;\n        if (\n          typeof definition.unique === 'object' &&\n          Object.prototype.hasOwnProperty.call(definition.unique, 'name')\n        ) {\n          idxName = definition.unique.name;\n        } else if (typeof definition.unique === 'string') {\n          idxName = definition.unique;\n        } else {\n          idxName = `${this.tableName}_${name}_unique`;\n        }\n\n        const idx = this.uniqueKeys[idxName] || { fields: [] };\n\n        idx.fields.push(definition.field);\n        idx.msg = idx.msg || definition.unique.msg || null;\n        idx.name = idxName || false;\n        idx.column = name;\n        idx.customIndex = definition.unique !== true;\n\n        this.uniqueKeys[idxName] = idx;\n      }\n\n      if (Object.prototype.hasOwnProperty.call(definition, 'validate')) {\n        this.prototype.validators[name] = definition.validate;\n      }\n\n      if (definition.index === true && definition.type instanceof DataTypes.JSONB) {\n        this._indexes.push(\n          Utils.nameIndex(\n            this._conformIndex({\n              fields: [definition.field || name],\n              using: 'gin'\n            }),\n            this.getTableName()\n          )\n        );\n\n        delete definition.index;\n      }\n    });\n\n    // Create a map of field to attribute names\n    this.fieldAttributeMap = _.reduce(this.fieldRawAttributesMap, (map, value, key) => {\n      if (key !== value.fieldName) {\n        map[key] = value.fieldName;\n      }\n      return map;\n    }, {});\n\n    this._hasJsonAttributes = !!this._jsonAttributes.size;\n\n    this._hasVirtualAttributes = !!this._virtualAttributes.size;\n\n    this._hasDefaultValues = !_.isEmpty(this._defaultValues);\n\n    this.tableAttributes = _.omitBy(this.rawAttributes, (_a, key) => this._virtualAttributes.has(key));\n\n    this.prototype._hasCustomGetters = Object.keys(this.prototype._customGetters).length;\n    this.prototype._hasCustomSetters = Object.keys(this.prototype._customSetters).length;\n\n    for (const key of Object.keys(attributeManipulation)) {\n      if (Object.prototype.hasOwnProperty.call(Model.prototype, key)) {\n        this.sequelize.log(`Not overriding built-in method from model attribute: ${key}`);\n        continue;\n      }\n      Object.defineProperty(this.prototype, key, attributeManipulation[key]);\n    }\n\n    this.prototype.rawAttributes = this.rawAttributes;\n    this.prototype._isAttribute = key => Object.prototype.hasOwnProperty.call(this.prototype.rawAttributes, key);\n\n    // Primary key convenience constiables\n    this.primaryKeyAttributes = Object.keys(this.primaryKeys);\n    this.primaryKeyAttribute = this.primaryKeyAttributes[0];\n    if (this.primaryKeyAttribute) {\n      this.primaryKeyField = this.rawAttributes[this.primaryKeyAttribute].field || this.primaryKeyAttribute;\n    }\n\n    this._hasPrimaryKeys = this.primaryKeyAttributes.length > 0;\n    this._isPrimaryKey = key => this.primaryKeyAttributes.includes(key);\n\n    this._attributeManipulation = attributeManipulation;\n  }\n\n  /**\n   * Remove attribute from model definition\n   *\n   * @param {string} attribute name of attribute to remove\n   */\n  static removeAttribute(attribute) {\n    delete this.rawAttributes[attribute];\n    this.refreshAttributes();\n  }\n\n  /**\n   * Sync this Model to the DB, that is create the table.\n   *\n   * @param {object} [options] sync options\n   *\n   * @see\n   * {@link Sequelize#sync} for options\n   *\n   * @returns {Promise<Model>}\n   */\n  static async sync(options) {\n    options = { ...this.options, ...options };\n    options.hooks = options.hooks === undefined ? true : !!options.hooks;\n\n    const attributes = this.tableAttributes;\n    const rawAttributes = this.fieldRawAttributesMap;\n\n    if (options.hooks) {\n      await this.runHooks('beforeSync', options);\n    }\n\n    const tableName = this.getTableName(options);\n\n    let tableExists;\n    if (options.force) {\n      await this.drop(options);\n      tableExists = false;\n    } else {\n      tableExists = await this.queryInterface.tableExists(tableName, options);\n    }\n\n    if (!tableExists) {\n      await this.queryInterface.createTable(tableName, attributes, options, this);\n    } else {\n      // enums are always updated, even if alter is not set. createTable calls it too.\n      await this.queryInterface.ensureEnums(tableName, attributes, options, this);\n    }\n\n    if (tableExists && options.alter) {\n      const tableInfos = await Promise.all([\n        this.queryInterface.describeTable(tableName, options),\n        this.queryInterface.getForeignKeyReferencesForTable(tableName, options)\n      ]);\n\n      const columns = tableInfos[0];\n      // Use for alter foreign keys\n      const foreignKeyReferences = tableInfos[1];\n      const removedConstraints = {};\n\n      for (const columnName in attributes) {\n        if (!Object.prototype.hasOwnProperty.call(attributes, columnName)) continue;\n        if (!columns[columnName] && !columns[attributes[columnName].field]) {\n          await this.queryInterface.addColumn(tableName, attributes[columnName].field || columnName, attributes[columnName], options);\n        }\n      }\n\n      if (options.alter === true || typeof options.alter === 'object' && options.alter.drop !== false) {\n        for (const columnName in columns) {\n          if (!Object.prototype.hasOwnProperty.call(columns, columnName)) continue;\n          const currentAttribute = rawAttributes[columnName];\n          if (!currentAttribute) {\n            await this.queryInterface.removeColumn(tableName, columnName, options);\n            continue;\n          }\n          if (currentAttribute.primaryKey) continue;\n          // Check foreign keys. If it's a foreign key, it should remove constraint first.\n          const references = currentAttribute.references;\n          if (currentAttribute.references) {\n            const database = this.sequelize.config.database;\n            const schema = this.sequelize.config.schema;\n            // Find existed foreign keys\n            for (const foreignKeyReference of foreignKeyReferences) {\n              const constraintName = foreignKeyReference.constraintName;\n              if (!!constraintName\n                && foreignKeyReference.tableCatalog === database\n                && (schema ? foreignKeyReference.tableSchema === schema : true)\n                && foreignKeyReference.referencedTableName === references.model\n                && foreignKeyReference.referencedColumnName === references.key\n                && (schema ? foreignKeyReference.referencedTableSchema === schema : true)\n                && !removedConstraints[constraintName]) {\n                // Remove constraint on foreign keys.\n                await this.queryInterface.removeConstraint(tableName, constraintName, options);\n                removedConstraints[constraintName] = true;\n              }\n            }\n          }\n\n          await this.queryInterface.changeColumn(tableName, columnName, currentAttribute, options);\n        }\n      }\n    }\n\n    const existingIndexes = await this.queryInterface.showIndex(tableName, options);\n    const missingIndexes = this._indexes.filter(item1 =>\n      !existingIndexes.some(item2 => item1.name === item2.name)\n    ).sort((index1, index2) => {\n      if (this.sequelize.options.dialect === 'postgres') {\n      // move concurrent indexes to the bottom to avoid weird deadlocks\n        if (index1.concurrently === true) return 1;\n        if (index2.concurrently === true) return -1;\n      }\n\n      return 0;\n    });\n\n    for (const index of missingIndexes) {\n      await this.queryInterface.addIndex(tableName, { ...options, ...index });\n    }\n\n    if (options.hooks) {\n      await this.runHooks('afterSync', options);\n    }\n\n    return this;\n  }\n\n  /**\n   * Drop the table represented by this Model\n   *\n   * @param {object}   [options] drop options\n   * @param {boolean}  [options.cascade=false]   Also drop all objects depending on this table, such as views. Only works in postgres\n   * @param {Function} [options.logging=false]   A function that gets executed while running the query to log the sql.\n   * @param {boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   *\n   * @returns {Promise}\n   */\n  static async drop(options) {\n    return await this.queryInterface.dropTable(this.getTableName(options), options);\n  }\n\n  static async dropSchema(schema) {\n    return await this.queryInterface.dropSchema(schema);\n  }\n\n  /**\n   * Apply a schema to this model. For postgres, this will actually place the schema in front of the table name - `\"schema\".\"tableName\"`,\n   * while the schema will be prepended to the table name for mysql and sqlite - `'schema.tablename'`.\n   *\n   * This method is intended for use cases where the same model is needed in multiple schemas. In such a use case it is important\n   * to call `model.schema(schema, [options]).sync()` for each model to ensure the models are created in the correct schema.\n   *\n   * If a single default schema per model is needed, set the `options.schema='schema'` parameter during the `define()` call\n   * for the model.\n   *\n   * @param {string}   schema The name of the schema\n   * @param {object}   [options] schema options\n   * @param {string}   [options.schemaDelimiter='.'] The character(s) that separates the schema name from the table name\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {boolean}  [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   *\n   * @see\n   * {@link Sequelize#define} for more information about setting a default schema.\n   *\n   * @returns {Model}\n   */\n  static schema(schema, options) {\n\n    const clone = class extends this {};\n    Object.defineProperty(clone, 'name', { value: this.name });\n\n    clone._schema = schema;\n\n    if (options) {\n      if (typeof options === 'string') {\n        clone._schemaDelimiter = options;\n      } else if (options.schemaDelimiter) {\n        clone._schemaDelimiter = options.schemaDelimiter;\n      }\n    }\n\n    return clone;\n  }\n\n  /**\n   * Get the table name of the model, taking schema into account. The method will return The name as a string if the model has no schema,\n   * or an object with `tableName`, `schema` and `delimiter` properties.\n   *\n   * @returns {string|object}\n   */\n  static getTableName() {\n    return this.queryGenerator.addSchema(this);\n  }\n\n  /**\n   * Get un-scoped model\n   *\n   * @returns {Model}\n   */\n  static unscoped() {\n    return this.scope();\n  }\n\n  /**\n   * Add a new scope to the model. This is especially useful for adding scopes with includes, when the model you want to include is not available at the time this model is defined.\n   *\n   * By default this will throw an error if a scope with that name already exists. Pass `override: true` in the options object to silence this error.\n   *\n   * @param {string}          name The name of the scope. Use `defaultScope` to override the default scope\n   * @param {object|Function} scope scope or options\n   * @param {object}          [options] scope options\n   * @param {boolean}         [options.override=false] override old scope if already defined\n   */\n  static addScope(name, scope, options) {\n    options = { override: false, ...options };\n\n    if ((name === 'defaultScope' && Object.keys(this.options.defaultScope).length > 0 || name in this.options.scopes) && options.override === false) {\n      throw new Error(`The scope ${name} already exists. Pass { override: true } as options to silence this error`);\n    }\n\n    if (name === 'defaultScope') {\n      this.options.defaultScope = this._scope = scope;\n    } else {\n      this.options.scopes[name] = scope;\n    }\n  }\n\n  /**\n   * Apply a scope created in `define` to the model.\n   *\n   * @example <caption>how to create scopes</caption>\n   * const Model = sequelize.define('model', attributes, {\n   *   defaultScope: {\n   *     where: {\n   *       username: 'dan'\n   *     },\n   *     limit: 12\n   *   },\n   *   scopes: {\n   *     isALie: {\n   *       where: {\n   *         stuff: 'cake'\n   *       }\n   *     },\n   *     complexFunction: function(email, accessLevel) {\n   *       return {\n   *         where: {\n   *           email: {\n   *             [Op.like]: email\n   *           },\n   *           access_level {\n   *             [Op.gte]: accessLevel\n   *           }\n   *         }\n   *       }\n   *     }\n   *   }\n   * })\n   *\n   * # As you have defined a default scope, every time you do Model.find, the default scope is appended to your query. Here's a couple of examples:\n   *\n   * Model.findAll() // WHERE username = 'dan'\n   * Model.findAll({ where: { age: { [Op.gt]: 12 } } }) // WHERE age > 12 AND username = 'dan'\n   *\n   * @example <caption>To invoke scope functions you can do</caption>\n   * Model.scope({ method: ['complexFunction', 'dan@sequelize.com', 42]}).findAll()\n   * // WHERE email like 'dan@sequelize.com%' AND access_level >= 42\n   *\n   * @param {?Array|object|string} [option] The scope(s) to apply. Scopes can either be passed as consecutive arguments, or as an array of arguments. To apply simple scopes and scope functions with no arguments, pass them as strings. For scope function, pass an object, with a `method` property. The value can either be a string, if the method does not take any arguments, or an array, where the first element is the name of the method, and consecutive elements are arguments to that method. Pass null to remove all scopes, including the default.\n   *\n   * @returns {Model} A reference to the model, with the scope(s) applied. Calling scope again on the returned model will clear the previous scope.\n   */\n  static scope(option) {\n    const self = class extends this {};\n    let scope;\n    let scopeName;\n\n    Object.defineProperty(self, 'name', { value: this.name });\n\n    self._scope = {};\n    self._scopeNames = [];\n    self.scoped = true;\n\n    if (!option) {\n      return self;\n    }\n\n    const options = _.flatten(arguments);\n\n    for (const option of options) {\n      scope = null;\n      scopeName = null;\n\n      if (_.isPlainObject(option)) {\n        if (option.method) {\n          if (Array.isArray(option.method) && !!self.options.scopes[option.method[0]]) {\n            scopeName = option.method[0];\n            scope = self.options.scopes[scopeName].apply(self, option.method.slice(1));\n          }\n          else if (self.options.scopes[option.method]) {\n            scopeName = option.method;\n            scope = self.options.scopes[scopeName].apply(self);\n          }\n        } else {\n          scope = option;\n        }\n      } else if (option === 'defaultScope' && _.isPlainObject(self.options.defaultScope)) {\n        scope = self.options.defaultScope;\n      } else {\n        scopeName = option;\n        scope = self.options.scopes[scopeName];\n        if (typeof scope === 'function') {\n          scope = scope();\n        }\n      }\n\n      if (scope) {\n        this._conformIncludes(scope, this);\n        // clone scope so it doesn't get modified\n        this._assignOptions(self._scope, Utils.cloneDeep(scope));\n        self._scopeNames.push(scopeName ? scopeName : 'defaultScope');\n      } else {\n        throw new sequelizeErrors.SequelizeScopeError(`Invalid scope ${scopeName} called.`);\n      }\n    }\n\n    return self;\n  }\n\n  /**\n   * Search for multiple instances.\n   *\n   * @example <caption>Simple search using AND and =</caption>\n   * Model.findAll({\n   *   where: {\n   *     attr1: 42,\n   *     attr2: 'cake'\n   *   }\n   * })\n   *\n   * # WHERE attr1 = 42 AND attr2 = 'cake'\n   *\n   * @example <caption>Using greater than, less than etc.</caption>\n   * const {gt, lte, ne, in: opIn} = Sequelize.Op;\n   *\n   * Model.findAll({\n   *   where: {\n   *     attr1: {\n   *       [gt]: 50\n   *     },\n   *     attr2: {\n   *       [lte]: 45\n   *     },\n   *     attr3: {\n   *       [opIn]: [1,2,3]\n   *     },\n   *     attr4: {\n   *       [ne]: 5\n   *     }\n   *   }\n   * })\n   *\n   * # WHERE attr1 > 50 AND attr2 <= 45 AND attr3 IN (1,2,3) AND attr4 != 5\n   *\n   * @example <caption>Queries using OR</caption>\n   * const {or, and, gt, lt} = Sequelize.Op;\n   *\n   * Model.findAll({\n   *   where: {\n   *     name: 'a project',\n   *     [or]: [\n   *       {id: [1, 2, 3]},\n   *       {\n   *         [and]: [\n   *           {id: {[gt]: 10}},\n   *           {id: {[lt]: 100}}\n   *         ]\n   *       }\n   *     ]\n   *   }\n   * });\n   *\n   * # WHERE `Model`.`name` = 'a project' AND (`Model`.`id` IN (1, 2, 3) OR (`Model`.`id` > 10 AND `Model`.`id` < 100));\n   *\n   * @see\n   * {@link Operators} for possible operators\n   * __Alias__: _all_\n   *\n   * The promise is resolved with an array of Model instances if the query succeeds._\n   *\n   * @param  {object}                                                    [options] A hash of options to describe the scope of the search\n   * @param  {object}                                                    [options.where] A hash of attributes to describe your search. See above for examples.\n   * @param  {Array<string>|object}                                      [options.attributes] A list of the attributes that you want to select, or an object with `include` and `exclude` keys. To rename an attribute, you can pass an array, with two elements - the first is the name of the attribute in the DB (or some kind of expression such as `Sequelize.literal`, `Sequelize.fn` and so on), and the second is the name you want the attribute to have in the returned instance\n   * @param  {Array<string>}                                             [options.attributes.include] Select all the attributes of the model, plus some additional ones. Useful for aggregations, e.g. `{ attributes: { include: [[sequelize.fn('COUNT', sequelize.col('id')), 'total']] }`\n   * @param  {Array<string>}                                             [options.attributes.exclude] Select all the attributes of the model, except some few. Useful for security purposes e.g. `{ attributes: { exclude: ['password'] } }`\n   * @param  {boolean}                                                   [options.paranoid=true] If true, only non-deleted records will be returned. If false, both deleted and non-deleted records will be returned. Only applies if `options.paranoid` is true for the model.\n   * @param  {Array<object|Model|string>}                                [options.include] A list of associations to eagerly load using a left join. Supported is either `{ include: [ Model1, Model2, ...]}` or `{ include: [{ model: Model1, as: 'Alias' }]}` or `{ include: ['Alias']}`. If your association are set up with an `as` (eg. `X.hasMany(Y, { as: 'Z' }`, you need to specify Z in the as attribute when eager loading Y).\n   * @param  {Model}                                                     [options.include[].model] The model you want to eagerly load\n   * @param  {string}                                                    [options.include[].as] The alias of the relation, in case the model you want to eagerly load is aliased. For `hasOne` / `belongsTo`, this should be the singular name, and for `hasMany`, it should be the plural\n   * @param  {Association}                                               [options.include[].association] The association you want to eagerly load. (This can be used instead of providing a model/as pair)\n   * @param  {object}                                                    [options.include[].where] Where clauses to apply to the child models. Note that this converts the eager load to an inner join, unless you explicitly set `required: false`\n   * @param  {boolean}                                                   [options.include[].or=false] Whether to bind the ON and WHERE clause together by OR instead of AND.\n   * @param  {object}                                                    [options.include[].on] Supply your own ON condition for the join.\n   * @param  {Array<string>}                                             [options.include[].attributes] A list of attributes to select from the child model\n   * @param  {boolean}                                                   [options.include[].required] If true, converts to an inner join, which means that the parent model will only be loaded if it has any matching children. True if `include.where` is set, false otherwise.\n   * @param  {boolean}                                                   [options.include[].right] If true, converts to a right join if dialect support it. Ignored if `include.required` is true.\n   * @param  {boolean}                                                   [options.include[].separate] If true, runs a separate query to fetch the associated instances, only supported for hasMany associations\n   * @param  {number}                                                    [options.include[].limit] Limit the joined rows, only supported with include.separate=true\n   * @param  {string}                                                    [options.include[].through.as] The alias for the join model, in case you want to give it a different name than the default one.\n   * @param  {boolean}                                                   [options.include[].through.paranoid] If true, only non-deleted records will be returned from the join table. If false, both deleted and non-deleted records will be returned. Only applies if through model is paranoid.\n   * @param  {object}                                                    [options.include[].through.where] Filter on the join model for belongsToMany relations\n   * @param  {Array}                                                     [options.include[].through.attributes] A list of attributes to select from the join model for belongsToMany relations\n   * @param  {Array<object|Model|string>}                                [options.include[].include] Load further nested related models\n   * @param  {boolean}                                                   [options.include[].duplicating] Mark the include as duplicating, will prevent a subquery from being used.\n   * @param  {Array|Sequelize.fn|Sequelize.col|Sequelize.literal}        [options.order] Specifies an ordering. Using an array, you can provide several columns / functions to order by. Each element can be further wrapped in a two-element array. The first element is the column / function to order by, the second is the direction. For example: `order: [['name', 'DESC']]`. In this way the column will be escaped, but the direction will not.\n   * @param  {number}                                                    [options.limit] Limit for result\n   * @param  {number}                                                    [options.offset] Offset for result\n   * @param  {Transaction}                                               [options.transaction] Transaction to run query under\n   * @param  {string|object}                                             [options.lock] Lock the selected rows. Possible options are transaction.LOCK.UPDATE and transaction.LOCK.SHARE. Postgres also supports transaction.LOCK.KEY_SHARE, transaction.LOCK.NO_KEY_UPDATE and specific model locks with joins.\n   * @param  {boolean}                                                   [options.skipLocked] Skip locked rows. Only supported in Postgres.\n   * @param  {boolean}                                                   [options.raw] Return raw result. See sequelize.query for more information.\n   * @param  {Function}                                                  [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param  {boolean}                                                   [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {object}                                                    [options.having] Having options\n   * @param  {string}                                                    [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param  {boolean|Error}                                             [options.rejectOnEmpty=false] Throws an error when no records found\n   * @param  {boolean}                                                   [options.dotNotation] Allows including tables having the same attribute/column names - which have a dot in them.\n   * @param  {boolean}                                                   [options.nest=false] If true, transforms objects with `.` separated property names into nested objects.\n   *\n   * @see\n   * {@link Sequelize#query}\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  static async findAll(options) {\n    if (options !== undefined && !_.isPlainObject(options)) {\n      throw new sequelizeErrors.QueryError('The argument passed to findAll must be an options object, use findByPk if you wish to pass a single primary key value');\n    }\n\n    if (options !== undefined && options.attributes) {\n      if (!Array.isArray(options.attributes) && !_.isPlainObject(options.attributes)) {\n        throw new sequelizeErrors.QueryError('The attributes option must be an array of column names or an object');\n      }\n    }\n\n    this.warnOnInvalidOptions(options, Object.keys(this.rawAttributes));\n\n    const tableNames = {};\n\n    tableNames[this.getTableName(options)] = true;\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    _.defaults(options, { hooks: true });\n\n    // set rejectOnEmpty option, defaults to model options\n    options.rejectOnEmpty = Object.prototype.hasOwnProperty.call(options, 'rejectOnEmpty')\n      ? options.rejectOnEmpty\n      : this.options.rejectOnEmpty;\n\n    this._injectScope(options);\n\n    if (options.hooks) {\n      await this.runHooks('beforeFind', options);\n    }\n    this._conformIncludes(options, this);\n    this._expandAttributes(options);\n    this._expandIncludeAll(options);\n\n    if (options.hooks) {\n      await this.runHooks('beforeFindAfterExpandIncludeAll', options);\n    }\n    options.originalAttributes = this._injectDependentVirtualAttributes(options.attributes);\n\n    if (options.include) {\n      options.hasJoin = true;\n\n      this._validateIncludedElements(options, tableNames);\n\n      // If we're not raw, we have to make sure we include the primary key for de-duplication\n      if (\n        options.attributes\n        && !options.raw\n        && this.primaryKeyAttribute\n        && !options.attributes.includes(this.primaryKeyAttribute)\n        && (!options.group || !options.hasSingleAssociation || options.hasMultiAssociation)\n      ) {\n        options.attributes = [this.primaryKeyAttribute].concat(options.attributes);\n      }\n    }\n\n    if (!options.attributes) {\n      options.attributes = Object.keys(this.rawAttributes);\n      options.originalAttributes = this._injectDependentVirtualAttributes(options.attributes);\n    }\n\n    // whereCollection is used for non-primary key updates\n    this.options.whereCollection = options.where || null;\n\n    Utils.mapFinderOptions(options, this);\n\n    options = this._paranoidClause(this, options);\n\n    if (options.hooks) {\n      await this.runHooks('beforeFindAfterOptions', options);\n    }\n    const selectOptions = { ...options, tableNames: Object.keys(tableNames) };\n    const results = await this.queryInterface.select(this, this.getTableName(selectOptions), selectOptions);\n    if (options.hooks) {\n      await this.runHooks('afterFind', results, options);\n    }\n\n    //rejectOnEmpty mode\n    if (_.isEmpty(results) && options.rejectOnEmpty) {\n      if (typeof options.rejectOnEmpty === 'function') {\n        throw new options.rejectOnEmpty();\n      }\n      if (typeof options.rejectOnEmpty === 'object') {\n        throw options.rejectOnEmpty;\n      }\n      throw new sequelizeErrors.EmptyResultError();\n    }\n\n    return await Model._findSeparate(results, options);\n  }\n\n  static warnOnInvalidOptions(options, validColumnNames) {\n    if (!_.isPlainObject(options)) {\n      return;\n    }\n\n    const unrecognizedOptions = Object.keys(options).filter(k => !validQueryKeywords.has(k));\n    const unexpectedModelAttributes = _.intersection(unrecognizedOptions, validColumnNames);\n    if (!options.where && unexpectedModelAttributes.length > 0) {\n      logger.warn(`Model attributes (${unexpectedModelAttributes.join(', ')}) passed into finder method options of model ${this.name}, but the options.where object is empty. Did you forget to use options.where?`);\n    }\n  }\n\n  static _injectDependentVirtualAttributes(attributes) {\n    if (!this._hasVirtualAttributes) return attributes;\n    if (!attributes || !Array.isArray(attributes)) return attributes;\n\n    for (const attribute of attributes) {\n      if (\n        this._virtualAttributes.has(attribute)\n        && this.rawAttributes[attribute].type.fields\n      ) {\n        attributes = attributes.concat(this.rawAttributes[attribute].type.fields);\n      }\n    }\n\n    attributes = _.uniq(attributes);\n\n    return attributes;\n  }\n\n  static async _findSeparate(results, options) {\n    if (!options.include || options.raw || !results) return results;\n\n    const original = results;\n    if (options.plain) results = [results];\n\n    if (!results.length) return original;\n\n    await Promise.all(options.include.map(async include => {\n      if (!include.separate) {\n        return await Model._findSeparate(\n          results.reduce((memo, result) => {\n            let associations = result.get(include.association.as);\n\n            // Might be an empty belongsTo relation\n            if (!associations) return memo;\n\n            // Force array so we can concat no matter if it's 1:1 or :M\n            if (!Array.isArray(associations)) associations = [associations];\n\n            for (let i = 0, len = associations.length; i !== len; ++i) {\n              memo.push(associations[i]);\n            }\n            return memo;\n          }, []),\n          {\n\n            ..._.omit(options, 'include', 'attributes', 'order', 'where', 'limit', 'offset', 'plain', 'scope'),\n            include: include.include || []\n          }\n        );\n      }\n\n      const map = await include.association.get(results, {\n\n        ..._.omit(options, nonCascadingOptions),\n        ..._.omit(include, ['parent', 'association', 'as', 'originalAttributes'])\n      });\n\n      for (const result of results) {\n        result.set(\n          include.association.as,\n          map[result.get(include.association.sourceKey)],\n          { raw: true }\n        );\n      }\n    }));\n\n    return original;\n  }\n\n  /**\n   * Search for a single instance by its primary key._\n   *\n   * @param  {number|bigint|string|Buffer}      param The value of the desired instance's primary key.\n   * @param  {object}                           [options] find options\n   * @param  {Transaction}                      [options.transaction] Transaction to run query under\n   * @param  {string}                           [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @see\n   * {@link Model.findAll}           for a full explanation of options, Note that options.where is not supported.\n   *\n   * @returns {Promise<Model>}\n   */\n  static async findByPk(param, options) {\n    // return Promise resolved with null if no arguments are passed\n    if ([null, undefined].includes(param)) {\n      return null;\n    }\n\n    options = Utils.cloneDeep(options) || {};\n\n    if (typeof param === 'number' || typeof param === 'bigint' || typeof param === 'string' || Buffer.isBuffer(param)) {\n      options.where = {\n        [this.primaryKeyAttribute]: param\n      };\n    } else {\n      throw new Error(`Argument passed to findByPk is invalid: ${param}`);\n    }\n\n    // Bypass a possible overloaded findOne\n    // note: in v6, we don't bypass overload https://github.com/sequelize/sequelize/issues/14003\n    return await this.findOne(options);\n  }\n\n  /**\n   * Search for a single instance. Returns the first instance found, or null if none can be found.\n   *\n   * @param  {object}       [options] A hash of options to describe the scope of the search\n   * @param  {Transaction}  [options.transaction] Transaction to run query under\n   * @param  {string}       [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @see\n   * {@link Model.findAll} for an explanation of options\n   *\n   * @returns {Promise<Model|null>}\n   */\n  static async findOne(options) {\n    if (options !== undefined && !_.isPlainObject(options)) {\n      throw new Error('The argument passed to findOne must be an options object, use findByPk if you wish to pass a single primary key value');\n    }\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    if (options.limit === undefined) {\n      const uniqueSingleColumns = _.chain(this.uniqueKeys).values().filter(c => c.fields.length === 1).map('column').value();\n\n      // Don't add limit if querying directly on the pk or a unique column\n      if (!options.where || !_.some(options.where, (value, key) =>\n        (key === this.primaryKeyAttribute || uniqueSingleColumns.includes(key)) &&\n          (Utils.isPrimitive(value) || Buffer.isBuffer(value))\n      )) {\n        options.limit = 1;\n      }\n    }\n\n    // Bypass a possible overloaded findAll.\n    // note: in v6, we don't bypass overload https://github.com/sequelize/sequelize/issues/14003\n    return await this.findAll(_.defaults(options, {\n      plain: true\n    }));\n  }\n\n  /**\n   * Run an aggregation method on the specified field\n   *\n   * @param {string}          attribute The attribute to aggregate over. Can be a field name or *\n   * @param {string}          aggregateFunction The function to use for aggregation, e.g. sum, max etc.\n   * @param {object}          [options] Query options. See sequelize.query for full options\n   * @param {object}          [options.where] A hash of search attributes.\n   * @param {Function}        [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {boolean}         [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {DataTypes|string} [options.dataType] The type of the result. If `field` is a field in this Model, the default will be the type of that field, otherwise defaults to float.\n   * @param {boolean}         [options.distinct] Applies DISTINCT to the field being aggregated over\n   * @param {Transaction}     [options.transaction] Transaction to run query under\n   * @param {boolean}         [options.plain] When `true`, the first returned value of `aggregateFunction` is cast to `dataType` and returned. If additional attributes are specified, along with `group` clauses, set `plain` to `false` to return all values of all returned rows.  Defaults to `true`\n   *\n   * @returns {Promise<DataTypes|object>} Returns the aggregate result cast to `options.dataType`, unless `options.plain` is false, in which case the complete data result is returned.\n   */\n  static async aggregate(attribute, aggregateFunction, options) {\n    options = Utils.cloneDeep(options);\n\n    // We need to preserve attributes here as the `injectScope` call would inject non aggregate columns.\n    const prevAttributes = options.attributes;\n    this._injectScope(options);\n    options.attributes = prevAttributes;\n    this._conformIncludes(options, this);\n\n    if (options.include) {\n      this._expandIncludeAll(options);\n      this._validateIncludedElements(options);\n    }\n\n    const attrOptions = this.rawAttributes[attribute];\n    const field = attrOptions && attrOptions.field || attribute;\n    let aggregateColumn = this.sequelize.col(field);\n\n    if (options.distinct) {\n      aggregateColumn = this.sequelize.fn('DISTINCT', aggregateColumn);\n    }\n\n    let { group } = options;\n    if (Array.isArray(group) && Array.isArray(group[0])) {\n      noDoubleNestedGroup();\n      group = _.flatten(group);\n    }\n    options.attributes = _.unionBy(\n      options.attributes,\n      group,\n      [[this.sequelize.fn(aggregateFunction, aggregateColumn), aggregateFunction]],\n      a => Array.isArray(a) ? a[1] : a\n    );\n\n    if (!options.dataType) {\n      if (attrOptions) {\n        options.dataType = attrOptions.type;\n      } else {\n        // Use FLOAT as fallback\n        options.dataType = new DataTypes.FLOAT();\n      }\n    } else {\n      options.dataType = this.sequelize.normalizeDataType(options.dataType);\n    }\n\n    Utils.mapOptionFieldNames(options, this);\n    options = this._paranoidClause(this, options);\n\n    const value = await this.queryInterface.rawSelect(this.getTableName(options), options, aggregateFunction, this);\n    return value;\n  }\n\n  /**\n   * Count the number of records matching the provided where clause.\n   *\n   * If you provide an `include` option, the number of matching associations will be counted instead.\n   *\n   * @param {object}        [options] options\n   * @param {object}        [options.where] A hash of search attributes.\n   * @param {object}        [options.include] Include options. See `find` for details\n   * @param {boolean}       [options.paranoid=true] Set `true` to count only non-deleted records. Can be used on models with `paranoid` enabled\n   * @param {boolean}       [options.distinct] Apply COUNT(DISTINCT(col)) on primary key or on options.col.\n   * @param {string}        [options.col] Column on which COUNT() should be applied\n   * @param {Array}         [options.attributes] Used in conjunction with `group`\n   * @param {Array}         [options.group] For creating complex counts. Will return multiple rows as needed.\n   * @param {Transaction}   [options.transaction] Transaction to run query under\n   * @param {Function}      [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {boolean}       [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {string}        [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise<number>}\n   */\n  static async count(options) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, { hooks: true });\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    options.raw = true;\n    if (options.hooks) {\n      await this.runHooks('beforeCount', options);\n    }\n    let col = options.col || '*';\n    if (options.include) {\n      col = `${this.name}.${options.col || this.primaryKeyField}`;\n    }\n    if (options.distinct && col === '*') {\n      col = this.primaryKeyField;\n    }\n    options.plain = !options.group;\n    options.dataType = new DataTypes.INTEGER();\n    options.includeIgnoreAttributes = false;\n\n    // No limit, offset or order for the options max be given to count()\n    // Set them to null to prevent scopes setting those values\n    options.limit = null;\n    options.offset = null;\n    options.order = null;\n\n    const result = await this.aggregate(col, 'count', options);\n\n    // When grouping is used, some dialects such as PG are returning the count as string\n    // --> Manually convert it to number\n    if (Array.isArray(result)) {\n      return result.map(item => ({\n        ...item,\n        count: Number(item.count)\n      }));\n    }\n\n    return result;\n  }\n\n  /**\n   * Find all the rows matching your query, within a specified offset / limit, and get the total number of rows matching your query. This is very useful for paging\n   *\n   * @example\n   * const result = await Model.findAndCountAll({\n   *   where: ...,\n   *   limit: 12,\n   *   offset: 12\n   * });\n   *\n   * # In the above example, `result.rows` will contain rows 13 through 24, while `result.count` will return the total number of rows that matched your query.\n   *\n   * # When you add includes, only those which are required (either because they have a where clause, or because `required` is explicitly set to true on the include) will be added to the count part.\n   *\n   * # Suppose you want to find all users who have a profile attached:\n   *\n   * User.findAndCountAll({\n   *   include: [\n   *      { model: Profile, required: true}\n   *   ],\n   *   limit: 3\n   * });\n   *\n   * # Because the include for `Profile` has `required` set it will result in an inner join, and only the users who have a profile will be counted. If we remove `required` from the include, both users with and without profiles will be counted\n   *\n   * @param {object} [options] See findAll options\n   *\n   * @see\n   * {@link Model.findAll} for a specification of find and query options\n   * @see\n   * {@link Model.count} for a specification of count options\n   *\n   * @returns {Promise<{count: number | number[], rows: Model[]}>}\n   */\n  static async findAndCountAll(options) {\n    if (options !== undefined && !_.isPlainObject(options)) {\n      throw new Error('The argument passed to findAndCountAll must be an options object, use findByPk if you wish to pass a single primary key value');\n    }\n\n    const countOptions = Utils.cloneDeep(options);\n\n    if (countOptions.attributes) {\n      countOptions.attributes = undefined;\n    }\n\n    const [count, rows] = await Promise.all([\n      this.count(countOptions),\n      this.findAll(options)\n    ]);\n\n    return {\n      count,\n      rows: count === 0 ? [] : rows\n    };\n  }\n\n  /**\n   * Find the maximum value of field\n   *\n   * @param {string} field attribute / field name\n   * @param {object} [options] See aggregate\n   *\n   * @see\n   * {@link Model.aggregate} for options\n   *\n   * @returns {Promise<*>}\n   */\n  static async max(field, options) {\n    return await this.aggregate(field, 'max', options);\n  }\n\n  /**\n   * Find the minimum value of field\n   *\n   * @param {string} field attribute / field name\n   * @param {object} [options] See aggregate\n   *\n   * @see\n   * {@link Model.aggregate} for options\n   *\n   * @returns {Promise<*>}\n   */\n  static async min(field, options) {\n    return await this.aggregate(field, 'min', options);\n  }\n\n  /**\n   * Find the sum of field\n   *\n   * @param {string} field attribute / field name\n   * @param {object} [options] See aggregate\n   *\n   * @see\n   * {@link Model.aggregate} for options\n   *\n   * @returns {Promise<number>}\n   */\n  static async sum(field, options) {\n    return await this.aggregate(field, 'sum', options);\n  }\n\n  /**\n   * Builds a new model instance.\n   *\n   * @param {object|Array} values An object of key value pairs or an array of such. If an array, the function will return an array of instances.\n   * @param {object}  [options] Instance build options\n   * @param {boolean} [options.raw=false] If set to true, values will ignore field and virtual setters.\n   * @param {boolean} [options.isNewRecord=true] Is this new record\n   * @param {Array}   [options.include] an array of include options - Used to build prefetched/included model instances. See `set`\n   *\n   * @returns {Model|Array<Model>}\n   */\n  static build(values, options) {\n    if (Array.isArray(values)) {\n      return this.bulkBuild(values, options);\n    }\n\n    return new this(values, options);\n  }\n\n  static bulkBuild(valueSets, options) {\n    options = { isNewRecord: true, ...options };\n\n    if (!options.includeValidated) {\n      this._conformIncludes(options, this);\n      if (options.include) {\n        this._expandIncludeAll(options);\n        this._validateIncludedElements(options);\n      }\n    }\n\n    if (options.attributes) {\n      options.attributes = options.attributes.map(attribute => Array.isArray(attribute) ? attribute[1] : attribute);\n    }\n\n    return valueSets.map(values => this.build(values, options));\n  }\n\n  /**\n   * Builds a new model instance and calls save on it.\n   *\n   * @see\n   * {@link Model.build}\n   * @see\n   * {@link Model.save}\n   *\n   * @param  {object}         values                       Hash of data values to create new record with\n   * @param  {object}         [options]                    Build and query options\n   * @param  {boolean}        [options.raw=false]          If set to true, values will ignore field and virtual setters.\n   * @param  {boolean}        [options.isNewRecord=true]   Is this new record\n   * @param  {Array}          [options.include]            An array of include options - Used to build prefetched/included model instances. See `set`\n   * @param  {string[]}       [options.fields]             An optional array of strings, representing database columns. If fields is provided, only those columns will be validated and saved.\n   * @param  {boolean}        [options.silent=false]       If true, the updatedAt timestamp will not be updated.\n   * @param  {boolean}        [options.validate=true]      If false, validations won't be run.\n   * @param  {boolean}        [options.hooks=true]         Run before and after create / update + validate hooks\n   * @param  {Function}       [options.logging=false]      A function that gets executed while running the query to log the sql.\n   * @param  {boolean}        [options.benchmark=false]    Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {Transaction}    [options.transaction]        Transaction to run query under\n   * @param  {string}         [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param  {boolean|Array}  [options.returning=true]     Appends RETURNING <model columns> to get back all defined values; if an array of column names, append RETURNING <columns> to get back specific columns (Postgres only)\n   *\n   * @returns {Promise<Model>}\n   *\n   */\n  static async create(values, options) {\n    options = Utils.cloneDeep(options || {});\n\n    return await this.build(values, {\n      isNewRecord: true,\n      attributes: options.fields,\n      include: options.include,\n      raw: options.raw,\n      silent: options.silent\n    }).save(options);\n  }\n\n  /**\n   * Find a row that matches the query, or build (but don't save) the row if none is found.\n   * The successful result of the promise will be (instance, built)\n   *\n   * @param {object}   options find options\n   * @param {object}   options.where A hash of search attributes. If `where` is a plain object it will be appended with defaults to build a new instance.\n   * @param {object}   [options.defaults] Default values to use if building a new instance\n   * @param {object}   [options.transaction] Transaction to run query under\n   *\n   * @returns {Promise<Model,boolean>}\n   */\n  static async findOrBuild(options) {\n    if (!options || !options.where || arguments.length > 1) {\n      throw new Error(\n        'Missing where attribute in the options parameter passed to findOrBuild. ' +\n        'Please note that the API has changed, and is now options only (an object with where, defaults keys, transaction etc.)'\n      );\n    }\n\n    let values;\n\n    let instance = await this.findOne(options);\n    if (instance === null) {\n      values = { ...options.defaults };\n      if (_.isPlainObject(options.where)) {\n        values = Utils.defaults(values, options.where);\n      }\n\n      instance = this.build(values, options);\n\n      return [instance, true];\n    }\n\n    return [instance, false];\n  }\n\n  /**\n   * Find a row that matches the query, or build and save the row if none is found\n   * The successful result of the promise will be (instance, created)\n   *\n   * If no transaction is passed in the `options` object, a new transaction will be created internally, to prevent the race condition where a matching row is created by another connection after the find but before the insert call.\n   * However, it is not always possible to handle this case in SQLite, specifically if one transaction inserts and another tries to select before the first one has committed. In this case, an instance of sequelize. TimeoutError will be thrown instead.\n   * If a transaction is created, a savepoint will be created instead, and any unique constraint violation will be handled internally.\n   *\n   * @see\n   * {@link Model.findAll} for a full specification of find and options\n   *\n   * @param {object}      options find and create options\n   * @param {object}      options.where where A hash of search attributes. If `where` is a plain object it will be appended with defaults to build a new instance.\n   * @param {object}      [options.defaults] Default values to use if creating a new instance\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   *\n   * @returns {Promise<Model,boolean>}\n   */\n  static async findOrCreate(options) {\n    if (!options || !options.where || arguments.length > 1) {\n      throw new Error(\n        'Missing where attribute in the options parameter passed to findOrCreate. ' +\n        'Please note that the API has changed, and is now options only (an object with where, defaults keys, transaction etc.)'\n      );\n    }\n\n    options = { ...options };\n\n    if (options.defaults) {\n      const defaults = Object.keys(options.defaults);\n      const unknownDefaults = defaults.filter(name => !this.rawAttributes[name]);\n\n      if (unknownDefaults.length) {\n        logger.warn(`Unknown attributes (${unknownDefaults}) passed to defaults option of findOrCreate`);\n      }\n    }\n\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    const internalTransaction = !options.transaction;\n    let values;\n    let transaction;\n\n    try {\n      const t = await this.sequelize.transaction(options);\n      transaction = t;\n      options.transaction = t;\n\n      const found = await this.findOne(Utils.defaults({ transaction }, options));\n      if (found !== null) {\n        return [found, false];\n      }\n\n      values = { ...options.defaults };\n      if (_.isPlainObject(options.where)) {\n        values = Utils.defaults(values, options.where);\n      }\n\n      options.exception = true;\n      options.returning = true;\n\n      try {\n        const created = await this.create(values, options);\n        if (created.get(this.primaryKeyAttribute, { raw: true }) === null) {\n          // If the query returned an empty result for the primary key, we know that this was actually a unique constraint violation\n          throw new sequelizeErrors.UniqueConstraintError();\n        }\n\n        return [created, true];\n      } catch (err) {\n        if (!(err instanceof sequelizeErrors.UniqueConstraintError)) throw err;\n        const flattenedWhere = Utils.flattenObjectDeep(options.where);\n        const flattenedWhereKeys = Object.keys(flattenedWhere).map(name => _.last(name.split('.')));\n        const whereFields = flattenedWhereKeys.map(name => _.get(this.rawAttributes, `${name}.field`, name));\n        const defaultFields = options.defaults && Object.keys(options.defaults)\n          .filter(name => this.rawAttributes[name])\n          .map(name => this.rawAttributes[name].field || name);\n\n        const errFieldKeys = Object.keys(err.fields);\n        const errFieldsWhereIntersects = Utils.intersects(errFieldKeys, whereFields);\n        if (defaultFields && !errFieldsWhereIntersects && Utils.intersects(errFieldKeys, defaultFields)) {\n          throw err;\n        }\n\n        if (errFieldsWhereIntersects) {\n          _.each(err.fields, (value, key) => {\n            const name = this.fieldRawAttributesMap[key].fieldName;\n            if (value.toString() !== options.where[name].toString()) {\n              throw new Error(`${this.name}#findOrCreate: value used for ${name} was not equal for both the find and the create calls, '${options.where[name]}' vs '${value}'`);\n            }\n          });\n        }\n\n        // Someone must have created a matching instance inside the same transaction since we last did a find. Let's find it!\n        const otherCreated = await this.findOne(Utils.defaults({\n          transaction: internalTransaction ? null : transaction\n        }, options));\n\n        // Sanity check, ideally we caught this at the defaultFeilds/err.fields check\n        // But if we didn't and instance is null, we will throw\n        if (otherCreated === null) throw err;\n\n        return [otherCreated, false];\n      }\n    } finally {\n      if (internalTransaction && transaction) {\n        await transaction.commit();\n      }\n    }\n  }\n\n  /**\n   * A more performant findOrCreate that may not work under a transaction (working in postgres)\n   * Will execute a find call, if empty then attempt to create, if unique constraint then attempt to find again\n   *\n   * @see\n   * {@link Model.findAll} for a full specification of find and options\n   *\n   * @param {object} options find options\n   * @param {object} options.where A hash of search attributes. If `where` is a plain object it will be appended with defaults to build a new instance.\n   * @param {object} [options.defaults] Default values to use if creating a new instance\n   *\n   * @returns {Promise<Model,boolean>}\n   */\n  static async findCreateFind(options) {\n    if (!options || !options.where) {\n      throw new Error(\n        'Missing where attribute in the options parameter passed to findCreateFind.'\n      );\n    }\n\n    let values = { ...options.defaults };\n    if (_.isPlainObject(options.where)) {\n      values = Utils.defaults(values, options.where);\n    }\n\n\n    const found = await this.findOne(options);\n    if (found) return [found, false];\n\n    try {\n      const createOptions = { ...options };\n\n      // To avoid breaking a postgres transaction, run the create with `ignoreDuplicates`.\n      if (this.sequelize.options.dialect === 'postgres' && options.transaction) {\n        createOptions.ignoreDuplicates = true;\n      }\n\n      const created = await this.create(values, createOptions);\n      return [created, true];\n    } catch (err) {\n      if (!(err instanceof sequelizeErrors.UniqueConstraintError || err instanceof sequelizeErrors.EmptyResultError)) {\n        throw err;\n      }\n\n      const foundAgain = await this.findOne(options);\n      return [foundAgain, false];\n    }\n  }\n\n  /**\n   * Insert or update a single row. An update will be executed if a row which matches the supplied values on either the primary key or a unique key is found. Note that the unique index must be defined in your sequelize model and not just in the table. Otherwise you may experience a unique constraint violation, because sequelize fails to identify the row that should be updated.\n   *\n   * **Implementation details:**\n   *\n   * * MySQL - Implemented with ON DUPLICATE KEY UPDATE`\n   * * PostgreSQL - Implemented with ON CONFLICT DO UPDATE. If update data contains PK field, then PK is selected as the default conflict key. Otherwise first unique constraint/index will be selected, which can satisfy conflict key requirements.\n   * * SQLite - Implemented with ON CONFLICT DO UPDATE\n   * * MSSQL - Implemented as a single query using `MERGE` and `WHEN (NOT) MATCHED THEN`\n   *\n   * **Note** that Postgres/SQLite returns null for created, no matter if the row was created or updated\n   *\n   * @param  {object}        values                                        hash of values to upsert\n   * @param  {object}        [options]                                     upsert options\n   * @param  {boolean}       [options.validate=true]                       Run validations before the row is inserted\n   * @param  {Array}         [options.fields=Object.keys(this.attributes)] The fields to update if the record already exists. Defaults to all changed fields.  If none of the specified fields are present on the provided `values` object, an insert will still be attempted, but duplicate key conflicts will be ignored.\n   * @param  {boolean}       [options.hooks=true]                          Run before / after upsert hooks?\n   * @param  {boolean}       [options.returning=true]                      If true, fetches back auto generated values\n   * @param  {Transaction}   [options.transaction]                         Transaction to run query under\n   * @param  {Function}      [options.logging=false]                       A function that gets executed while running the query to log the sql.\n   * @param  {boolean}       [options.benchmark=false]                     Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {string}        [options.searchPath=DEFAULT]                  An optional parameter to specify the schema search_path (Postgres only)\n   * @param  {Array<string>} [options.conflictFields]                      Optional override for the conflict fields in the ON CONFLICT part of the query. Only supported in Postgres >= 9.5 and SQLite >= 3.24.0\n   *\n   * @returns {Promise<Array<Model, boolean | null>>} returns an array with two elements, the first being the new record and the second being `true` if it was just created or `false` if it already existed (except on Postgres and SQLite, which can't detect this and will always return `null` instead of a boolean).\n   */\n  static async upsert(values, options) {\n    options = {\n      hooks: true,\n      returning: true,\n      validate: true,\n      ...Utils.cloneDeep(options)\n    };\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    const createdAtAttr = this._timestampAttributes.createdAt;\n    const updatedAtAttr = this._timestampAttributes.updatedAt;\n    const hasPrimary = this.primaryKeyField in values || this.primaryKeyAttribute in values;\n    const instance = this.build(values);\n\n    options.model = this;\n    options.instance = instance;\n\n    const changed = Array.from(instance._changed);\n    if (!options.fields) {\n      options.fields = changed;\n    }\n\n    if (options.validate) {\n      await instance.validate(options);\n    }\n    // Map field names\n    const updatedDataValues = _.pick(instance.dataValues, changed);\n    const insertValues = Utils.mapValueFieldNames(instance.dataValues, Object.keys(instance.rawAttributes), this);\n    const updateValues = Utils.mapValueFieldNames(updatedDataValues, options.fields, this);\n    const now = Utils.now(this.sequelize.options.dialect);\n\n    // Attach createdAt\n    if (createdAtAttr && !insertValues[createdAtAttr]) {\n      const field = this.rawAttributes[createdAtAttr].field || createdAtAttr;\n      insertValues[field] = this._getDefaultTimestamp(createdAtAttr) || now;\n    }\n    if (updatedAtAttr && !insertValues[updatedAtAttr]) {\n      const field = this.rawAttributes[updatedAtAttr].field || updatedAtAttr;\n      insertValues[field] = updateValues[field] = this._getDefaultTimestamp(updatedAtAttr) || now;\n    }\n\n    // Db2 does not allow NULL values for unique columns.\n    // Add dummy values if not provided by test case or user.\n    if (this.sequelize.options.dialect === 'db2') {\n      this.uniqno = this.sequelize.dialect.queryGenerator.addUniqueFields(\n        insertValues, this.rawAttributes, this.uniqno);\n    }\n\n    // Build adds a null value for the primary key, if none was given by the user.\n    // We need to remove that because of some Postgres technicalities.\n    if (!hasPrimary && this.primaryKeyAttribute && !this.rawAttributes[this.primaryKeyAttribute].defaultValue) {\n      delete insertValues[this.primaryKeyField];\n      delete updateValues[this.primaryKeyField];\n    }\n\n    if (options.hooks) {\n      await this.runHooks('beforeUpsert', values, options);\n    }\n    const result = await this.queryInterface.upsert(this.getTableName(options), insertValues, updateValues, instance.where(), options);\n\n    const [record] = result;\n    record.isNewRecord = false;\n\n    if (options.hooks) {\n      await this.runHooks('afterUpsert', result, options);\n      return result;\n    }\n    return result;\n  }\n\n  /**\n   * Create and insert multiple instances in bulk.\n   *\n   * The success handler is passed an array of instances, but please notice that these may not completely represent the state of the rows in the DB. This is because MySQL\n   * and SQLite do not make it easy to obtain back automatically generated IDs and other default values in a way that can be mapped to multiple records.\n   * To obtain Instances for the newly created values, you will need to query for them again.\n   *\n   * If validation fails, the promise is rejected with an array-like AggregateError\n   *\n   * @param  {Array}          records                          List of objects (key/value pairs) to create instances from\n   * @param  {object}         [options]                        Bulk create options\n   * @param  {Array}          [options.fields]                 Fields to insert (defaults to all fields)\n   * @param  {boolean}        [options.validate=false]         Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation\n   * @param  {boolean}        [options.hooks=true]             Run before / after bulk create hooks?\n   * @param  {boolean}        [options.individualHooks=false]  Run before / after create hooks for each individual Instance? BulkCreate hooks will still be run if options.hooks is true.\n   * @param  {boolean}        [options.ignoreDuplicates=false] Ignore duplicate values for primary keys? (not supported by MSSQL or Postgres < 9.5)\n   * @param  {Array}          [options.updateOnDuplicate]      Fields to update if row key already exists (on duplicate key update)? (only supported by MySQL, MariaDB, SQLite >= 3.24.0 & Postgres >= 9.5).\n   * @param  {Transaction}    [options.transaction]            Transaction to run query under\n   * @param  {Function}       [options.logging=false]          A function that gets executed while running the query to log the sql.\n   * @param  {boolean}        [options.benchmark=false]        Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {boolean|Array}  [options.returning=false]        If true, append RETURNING <model columns> to get back all defined values; if an array of column names, append RETURNING <columns> to get back specific columns (Postgres only)\n   * @param  {string}         [options.searchPath=DEFAULT]     An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  static async bulkCreate(records, options = {}) {\n    if (!records.length) {\n      return [];\n    }\n\n    const dialect = this.sequelize.options.dialect;\n    const now = Utils.now(this.sequelize.options.dialect);\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    options.model = this;\n\n    if (!options.includeValidated) {\n      this._conformIncludes(options, this);\n      if (options.include) {\n        this._expandIncludeAll(options);\n        this._validateIncludedElements(options);\n      }\n    }\n\n    const instances = records.map(values => this.build(values, { isNewRecord: true, include: options.include }));\n\n    const recursiveBulkCreate = async (instances, options) => {\n      options = {\n        validate: false,\n        hooks: true,\n        individualHooks: false,\n        ignoreDuplicates: false,\n        ...options\n      };\n\n      if (options.returning === undefined) {\n        if (options.association) {\n          options.returning = false;\n        } else {\n          options.returning = true;\n        }\n      }\n      if (options.ignoreDuplicates && !this.sequelize.dialect.supports.inserts.ignoreDuplicates &&\n          !this.sequelize.dialect.supports.inserts.onConflictDoNothing) {\n        throw new Error(`${dialect} does not support the ignoreDuplicates option.`);\n      }\n      if (options.updateOnDuplicate && (dialect !== 'mysql' && dialect !== 'mariadb' && dialect !== 'sqlite' && dialect !== 'postgres')) {\n        throw new Error(`${dialect} does not support the updateOnDuplicate option.`);\n      }\n\n      const model = options.model;\n\n      options.fields = options.fields || Object.keys(model.rawAttributes);\n      const createdAtAttr = model._timestampAttributes.createdAt;\n      const updatedAtAttr = model._timestampAttributes.updatedAt;\n\n      if (options.updateOnDuplicate !== undefined) {\n        if (Array.isArray(options.updateOnDuplicate) && options.updateOnDuplicate.length) {\n          options.updateOnDuplicate = _.intersection(\n            _.without(Object.keys(model.tableAttributes), createdAtAttr),\n            options.updateOnDuplicate\n          );\n        } else {\n          throw new Error('updateOnDuplicate option only supports non-empty array.');\n        }\n      }\n\n      // Run before hook\n      if (options.hooks) {\n        await model.runHooks('beforeBulkCreate', instances, options);\n      }\n      // Validate\n      if (options.validate) {\n        const errors = [];\n        const validateOptions = { ...options };\n        validateOptions.hooks = options.individualHooks;\n\n        await Promise.all(instances.map(async instance => {\n          try {\n            await instance.validate(validateOptions);\n          } catch (err) {\n            errors.push(new sequelizeErrors.BulkRecordError(err, instance));\n          }\n        }));\n\n        delete options.skip;\n        if (errors.length) {\n          throw new sequelizeErrors.AggregateError(errors);\n        }\n      }\n      if (options.individualHooks) {\n        await Promise.all(instances.map(async instance => {\n          const individualOptions = {\n            ...options,\n            validate: false,\n            hooks: true\n          };\n          delete individualOptions.fields;\n          delete individualOptions.individualHooks;\n          delete individualOptions.ignoreDuplicates;\n\n          await instance.save(individualOptions);\n        }));\n      } else {\n        if (options.include && options.include.length) {\n          await Promise.all(options.include.filter(include => include.association instanceof BelongsTo).map(async include => {\n            const associationInstances = [];\n            const associationInstanceIndexToInstanceMap = [];\n\n            for (const instance of instances) {\n              const associationInstance = instance.get(include.as);\n              if (associationInstance) {\n                associationInstances.push(associationInstance);\n                associationInstanceIndexToInstanceMap.push(instance);\n              }\n            }\n\n            if (!associationInstances.length) {\n              return;\n            }\n\n            const includeOptions = _(Utils.cloneDeep(include))\n              .omit(['association'])\n              .defaults({\n                transaction: options.transaction,\n                logging: options.logging\n              }).value();\n\n            const createdAssociationInstances = await recursiveBulkCreate(associationInstances, includeOptions);\n            for (const idx in createdAssociationInstances) {\n              const associationInstance = createdAssociationInstances[idx];\n              const instance = associationInstanceIndexToInstanceMap[idx];\n\n              await include.association.set(instance, associationInstance, { save: false, logging: options.logging });\n            }\n          }));\n        }\n\n        // Create all in one query\n        // Recreate records from instances to represent any changes made in hooks or validation\n        records = instances.map(instance => {\n          const values = instance.dataValues;\n\n          // set createdAt/updatedAt attributes\n          if (createdAtAttr && !values[createdAtAttr]) {\n            values[createdAtAttr] = now;\n            if (!options.fields.includes(createdAtAttr)) {\n              options.fields.push(createdAtAttr);\n            }\n          }\n          if (updatedAtAttr && !values[updatedAtAttr]) {\n            values[updatedAtAttr] = now;\n            if (!options.fields.includes(updatedAtAttr)) {\n              options.fields.push(updatedAtAttr);\n            }\n          }\n\n          const out = Utils.mapValueFieldNames(values, options.fields, model);\n          for (const key of model._virtualAttributes) {\n            delete out[key];\n          }\n          return out;\n        });\n\n        // Map attributes to fields for serial identification\n        const fieldMappedAttributes = {};\n        for (const attr in model.tableAttributes) {\n          fieldMappedAttributes[model.rawAttributes[attr].field || attr] = model.rawAttributes[attr];\n        }\n\n        // Map updateOnDuplicate attributes to fields\n        if (options.updateOnDuplicate) {\n          options.updateOnDuplicate = options.updateOnDuplicate.map(attr => model.rawAttributes[attr].field || attr);\n\n          if (options.conflictAttributes) {\n            options.upsertKeys = options.conflictAttributes.map(\n              attrName => model.rawAttributes[attrName].field || attrName\n            );\n          } else {\n            const upsertKeys = [];\n\n            for (const i of model._indexes) {\n              if (i.unique && !i.where) { // Don't infer partial indexes\n                upsertKeys.push(...i.fields);\n              }\n            }\n\n            const firstUniqueKey = Object.values(model.uniqueKeys).find(c => c.fields.length > 0);\n\n            if (firstUniqueKey && firstUniqueKey.fields) {\n              upsertKeys.push(...firstUniqueKey.fields);\n            }\n\n            options.upsertKeys = upsertKeys.length > 0\n              ? upsertKeys\n              : Object.values(model.primaryKeys).map(x => x.field);\n          }\n        }\n\n        // Map returning attributes to fields\n        if (options.returning && Array.isArray(options.returning)) {\n          options.returning = options.returning.map(attr => _.get(model.rawAttributes[attr], 'field', attr));\n        }\n\n        const results = await model.queryInterface.bulkInsert(model.getTableName(options), records, options, fieldMappedAttributes);\n        if (Array.isArray(results)) {\n          results.forEach((result, i) => {\n            const instance = instances[i];\n\n            for (const key in result) {\n              if (!instance || key === model.primaryKeyAttribute &&\n                instance.get(model.primaryKeyAttribute) &&\n                ['mysql', 'mariadb', 'sqlite'].includes(dialect)) {\n                // The query.js for these DBs is blind, it autoincrements the\n                // primarykey value, even if it was set manually. Also, it can\n                // return more results than instances, bug?.\n                continue;\n              }\n              if (Object.prototype.hasOwnProperty.call(result, key)) {\n                const record = result[key];\n\n                const attr = _.find(model.rawAttributes, attribute => attribute.fieldName === key || attribute.field === key);\n\n                instance.dataValues[attr && attr.fieldName || key] = record;\n              }\n            }\n          });\n        }\n      }\n\n      if (options.include && options.include.length) {\n        await Promise.all(options.include.filter(include => !(include.association instanceof BelongsTo ||\n          include.parent && include.parent.association instanceof BelongsToMany)).map(async include => {\n          const associationInstances = [];\n          const associationInstanceIndexToInstanceMap = [];\n\n          for (const instance of instances) {\n            let associated = instance.get(include.as);\n            if (!Array.isArray(associated)) associated = [associated];\n\n            for (const associationInstance of associated) {\n              if (associationInstance) {\n                if (!(include.association instanceof BelongsToMany)) {\n                  associationInstance.set(include.association.foreignKey, instance.get(include.association.sourceKey || instance.constructor.primaryKeyAttribute, { raw: true }), { raw: true });\n                  Object.assign(associationInstance, include.association.scope);\n                }\n                associationInstances.push(associationInstance);\n                associationInstanceIndexToInstanceMap.push(instance);\n              }\n            }\n          }\n\n          if (!associationInstances.length) {\n            return;\n          }\n\n          const includeOptions = _(Utils.cloneDeep(include))\n            .omit(['association'])\n            .defaults({\n              transaction: options.transaction,\n              logging: options.logging\n            }).value();\n\n          const createdAssociationInstances = await recursiveBulkCreate(associationInstances, includeOptions);\n          if (include.association instanceof BelongsToMany) {\n            const valueSets = [];\n\n            for (const idx in createdAssociationInstances) {\n              const associationInstance = createdAssociationInstances[idx];\n              const instance = associationInstanceIndexToInstanceMap[idx];\n\n              const values = {\n                [include.association.foreignKey]: instance.get(instance.constructor.primaryKeyAttribute, { raw: true }),\n                [include.association.otherKey]: associationInstance.get(associationInstance.constructor.primaryKeyAttribute, { raw: true }),\n                // Include values defined in the association\n                ...include.association.through.scope\n              };\n              if (associationInstance[include.association.through.model.name]) {\n                for (const attr of Object.keys(include.association.through.model.rawAttributes)) {\n                  if (include.association.through.model.rawAttributes[attr]._autoGenerated ||\n                    attr === include.association.foreignKey ||\n                    attr === include.association.otherKey ||\n                    typeof associationInstance[include.association.through.model.name][attr] === 'undefined') {\n                    continue;\n                  }\n                  values[attr] = associationInstance[include.association.through.model.name][attr];\n                }\n              }\n\n              valueSets.push(values);\n            }\n\n            const throughOptions = _(Utils.cloneDeep(include))\n              .omit(['association', 'attributes'])\n              .defaults({\n                transaction: options.transaction,\n                logging: options.logging\n              }).value();\n            throughOptions.model = include.association.throughModel;\n            const throughInstances = include.association.throughModel.bulkBuild(valueSets, throughOptions);\n\n            await recursiveBulkCreate(throughInstances, throughOptions);\n          }\n        }));\n      }\n\n      // map fields back to attributes\n      instances.forEach(instance => {\n        for (const attr in model.rawAttributes) {\n          if (model.rawAttributes[attr].field &&\n              instance.dataValues[model.rawAttributes[attr].field] !== undefined &&\n              model.rawAttributes[attr].field !== attr\n          ) {\n            instance.dataValues[attr] = instance.dataValues[model.rawAttributes[attr].field];\n            delete instance.dataValues[model.rawAttributes[attr].field];\n          }\n          instance._previousDataValues[attr] = instance.dataValues[attr];\n          instance.changed(attr, false);\n        }\n        instance.isNewRecord = false;\n      });\n\n      // Run after hook\n      if (options.hooks) {\n        await model.runHooks('afterBulkCreate', instances, options);\n      }\n\n      return instances;\n    };\n\n    return await recursiveBulkCreate(instances, options);\n  }\n\n  /**\n   * Truncate all instances of the model. This is a convenient method for Model.destroy({ truncate: true }).\n   *\n   * @param {object}           [options] The options passed to Model.destroy in addition to truncate\n   * @param {boolean|Function} [options.cascade = false] Truncates all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.\n   * @param {boolean}          [options.restartIdentity=false] Automatically restart sequences owned by columns of the truncated table.\n   * @param {Transaction}      [options.transaction] Transaction to run query under\n   * @param {boolean|Function} [options.logging] A function that logs sql queries, or false for no logging\n   * @param {boolean}          [options.benchmark=false] Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param {string}           [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise}\n   *\n   * @see\n   * {@link Model.destroy} for more information\n   */\n  static async truncate(options) {\n    options = Utils.cloneDeep(options) || {};\n    options.truncate = true;\n    return await this.destroy(options);\n  }\n\n  /**\n   * Delete multiple instances, or set their deletedAt timestamp to the current time if `paranoid` is enabled.\n   *\n   * @param  {object}       options                         destroy options\n   * @param  {object}       [options.where]                 Filter the destroy\n   * @param  {boolean}      [options.hooks=true]            Run before / after bulk destroy hooks?\n   * @param  {boolean}      [options.individualHooks=false] If set to true, destroy will SELECT all records matching the where parameter and will execute before / after destroy hooks on each row\n   * @param  {number}       [options.limit]                 How many rows to delete\n   * @param  {boolean}      [options.force=false]           Delete instead of setting deletedAt to current timestamp (only applicable if `paranoid` is enabled)\n   * @param  {boolean}      [options.truncate=false]        If set to true, dialects that support it will use TRUNCATE instead of DELETE FROM. If a table is truncated the where and limit options are ignored\n   * @param  {boolean}      [options.cascade=false]         Only used in conjunction with TRUNCATE. Truncates  all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.\n   * @param  {boolean}      [options.restartIdentity=false] Only used in conjunction with TRUNCATE. Automatically restart sequences owned by columns of the truncated table.\n   * @param  {Transaction}  [options.transaction] Transaction to run query under\n   * @param  {Function}     [options.logging=false]         A function that gets executed while running the query to log the sql.\n   * @param  {boolean}      [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   *\n   * @returns {Promise<number>} The number of destroyed rows\n   */\n  static async destroy(options) {\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    this._injectScope(options);\n\n    if (!options || !(options.where || options.truncate)) {\n      throw new Error('Missing where or truncate attribute in the options parameter of model.destroy.');\n    }\n\n    if (!options.truncate && !_.isPlainObject(options.where) && !Array.isArray(options.where) && !(options.where instanceof Utils.SequelizeMethod)) {\n      throw new Error('Expected plain object, array or sequelize method in the options.where parameter of model.destroy.');\n    }\n\n    options = _.defaults(options, {\n      hooks: true,\n      individualHooks: false,\n      force: false,\n      cascade: false,\n      restartIdentity: false\n    });\n\n    options.type = QueryTypes.BULKDELETE;\n\n    Utils.mapOptionFieldNames(options, this);\n    options.model = this;\n\n\n    // Run before hook\n    if (options.hooks) {\n      await this.runHooks('beforeBulkDestroy', options);\n    }\n    let instances;\n    // Get daos and run beforeDestroy hook on each record individually\n    if (options.individualHooks) {\n      instances = await this.findAll({ where: options.where, transaction: options.transaction, logging: options.logging, benchmark: options.benchmark });\n\n      await Promise.all(instances.map(instance => this.runHooks('beforeDestroy', instance, options)));\n    }\n    let result;\n    // Run delete query (or update if paranoid)\n    if (this._timestampAttributes.deletedAt && !options.force) {\n      // Set query type appropriately when running soft delete\n      options.type = QueryTypes.BULKUPDATE;\n\n      const attrValueHash = {};\n      const deletedAtAttribute = this.rawAttributes[this._timestampAttributes.deletedAt];\n      const field = this.rawAttributes[this._timestampAttributes.deletedAt].field;\n      const where = {\n        [field]: Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null\n      };\n\n\n      attrValueHash[field] = Utils.now(this.sequelize.options.dialect);\n      result = await this.queryInterface.bulkUpdate(this.getTableName(options), attrValueHash, Object.assign(where, options.where), options, this.rawAttributes);\n    } else {\n      result = await this.queryInterface.bulkDelete(this.getTableName(options), options.where, options, this);\n    }\n    // Run afterDestroy hook on each record individually\n    if (options.individualHooks) {\n      await Promise.all(\n        instances.map(instance => this.runHooks('afterDestroy', instance, options))\n      );\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.runHooks('afterBulkDestroy', options);\n    }\n    return result;\n  }\n\n  /**\n   * Restore multiple instances if `paranoid` is enabled.\n   *\n   * @param  {object}       options                         restore options\n   * @param  {object}       [options.where]                 Filter the restore\n   * @param  {boolean}      [options.hooks=true]            Run before / after bulk restore hooks?\n   * @param  {boolean}      [options.individualHooks=false] If set to true, restore will find all records within the where parameter and will execute before / after bulkRestore hooks on each row\n   * @param  {number}       [options.limit]                 How many rows to undelete (only for mysql)\n   * @param  {Function}     [options.logging=false]         A function that gets executed while running the query to log the sql.\n   * @param  {boolean}      [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {Transaction}  [options.transaction]           Transaction to run query under\n   *\n   * @returns {Promise}\n   */\n  static async restore(options) {\n    if (!this._timestampAttributes.deletedAt) throw new Error('Model is not paranoid');\n\n    options = {\n      hooks: true,\n      individualHooks: false,\n      ...options\n    };\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    options.type = QueryTypes.RAW;\n    options.model = this;\n\n    Utils.mapOptionFieldNames(options, this);\n\n    // Run before hook\n    if (options.hooks) {\n      await this.runHooks('beforeBulkRestore', options);\n    }\n\n    let instances;\n    // Get daos and run beforeRestore hook on each record individually\n    if (options.individualHooks) {\n      instances = await this.findAll({ where: options.where, transaction: options.transaction, logging: options.logging, benchmark: options.benchmark, paranoid: false });\n\n      await Promise.all(instances.map(instance => this.runHooks('beforeRestore', instance, options)));\n    }\n    // Run undelete query\n    const attrValueHash = {};\n    const deletedAtCol = this._timestampAttributes.deletedAt;\n    const deletedAtAttribute = this.rawAttributes[deletedAtCol];\n    const deletedAtDefaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n\n    attrValueHash[deletedAtAttribute.field || deletedAtCol] = deletedAtDefaultValue;\n    options.omitNull = false;\n    const result = await this.queryInterface.bulkUpdate(this.getTableName(options), attrValueHash, options.where, options, this.rawAttributes);\n    // Run afterDestroy hook on each record individually\n    if (options.individualHooks) {\n      await Promise.all(\n        instances.map(instance => this.runHooks('afterRestore', instance, options))\n      );\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.runHooks('afterBulkRestore', options);\n    }\n    return result;\n  }\n\n  /**\n   * Update multiple instances that match the where options.\n   *\n   * @param  {object}         values                          hash of values to update\n   * @param  {object}         options                         update options\n   * @param  {object}         options.where                   Options to describe the scope of the search.\n   * @param  {boolean}        [options.paranoid=true]         If true, only non-deleted records will be updated. If false, both deleted and non-deleted records will be updated. Only applies if `options.paranoid` is true for the model.\n   * @param  {Array}          [options.fields]                Fields to update (defaults to all fields)\n   * @param  {boolean}        [options.validate=true]         Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation\n   * @param  {boolean}        [options.hooks=true]            Run before / after bulk update hooks?\n   * @param  {boolean}        [options.sideEffects=true]      Whether or not to update the side effects of any virtual setters.\n   * @param  {boolean}        [options.individualHooks=false] Run before / after update hooks?. If true, this will execute a SELECT followed by individual UPDATEs. A select is needed, because the row data needs to be passed to the hooks\n   * @param  {boolean|Array}  [options.returning=false]       If true, append RETURNING <model columns> to get back all defined values; if an array of column names, append RETURNING <columns> to get back specific columns (Postgres only)\n   * @param  {number}         [options.limit]                 How many rows to update (only for mysql and mariadb, implemented as TOP(n) for MSSQL; for sqlite it is supported only when rowid is present)\n   * @param  {Function}       [options.logging=false]         A function that gets executed while running the query to log the sql.\n   * @param  {boolean}        [options.benchmark=false]       Pass query execution time in milliseconds as second argument to logging function (options.logging).\n   * @param  {Transaction}    [options.transaction]           Transaction to run query under\n   * @param  {boolean}        [options.silent=false]          If true, the updatedAt timestamp will not be updated.\n   *\n   * @returns {Promise<Array<number,number>>}  The promise returns an array with one or two elements. The first element is always the number\n   * of affected rows, while the second element is the actual affected rows (only supported in postgres with `options.returning` true).\n   *\n   */\n  static async update(values, options) {\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    this._injectScope(options);\n    this._optionsMustContainWhere(options);\n\n    options = this._paranoidClause(this, _.defaults(options, {\n      validate: true,\n      hooks: true,\n      individualHooks: false,\n      returning: false,\n      force: false,\n      sideEffects: true\n    }));\n\n    options.type = QueryTypes.BULKUPDATE;\n\n    // Clone values so it doesn't get modified for caller scope and ignore undefined values\n    values = _.omitBy(values, value => value === undefined);\n\n    // Remove values that are not in the options.fields\n    if (options.fields && options.fields instanceof Array) {\n      for (const key of Object.keys(values)) {\n        if (!options.fields.includes(key)) {\n          delete values[key];\n        }\n      }\n    } else {\n      const updatedAtAttr = this._timestampAttributes.updatedAt;\n      options.fields = _.intersection(Object.keys(values), Object.keys(this.tableAttributes));\n      if (updatedAtAttr && !options.fields.includes(updatedAtAttr)) {\n        options.fields.push(updatedAtAttr);\n      }\n    }\n\n    if (this._timestampAttributes.updatedAt && !options.silent) {\n      values[this._timestampAttributes.updatedAt] = this._getDefaultTimestamp(this._timestampAttributes.updatedAt) || Utils.now(this.sequelize.options.dialect);\n    }\n\n    options.model = this;\n\n    let valuesUse;\n    // Validate\n    if (options.validate) {\n      const build = this.build(values);\n      build.set(this._timestampAttributes.updatedAt, values[this._timestampAttributes.updatedAt], { raw: true });\n\n      if (options.sideEffects) {\n        Object.assign(values, _.pick(build.get(), build.changed()));\n        options.fields = _.union(options.fields, Object.keys(values));\n      }\n\n      // We want to skip validations for all other fields\n      options.skip = _.difference(Object.keys(this.rawAttributes), Object.keys(values));\n      const attributes = await build.validate(options);\n      options.skip = undefined;\n      if (attributes && attributes.dataValues) {\n        values = _.pick(attributes.dataValues, Object.keys(values));\n      }\n    }\n    // Run before hook\n    if (options.hooks) {\n      options.attributes = values;\n      await this.runHooks('beforeBulkUpdate', options);\n      values = options.attributes;\n      delete options.attributes;\n    }\n\n    valuesUse = values;\n\n    // Get instances and run beforeUpdate hook on each record individually\n    let instances;\n    let updateDoneRowByRow = false;\n    if (options.individualHooks) {\n      instances = await this.findAll({\n        where: options.where,\n        transaction: options.transaction,\n        logging: options.logging,\n        benchmark: options.benchmark,\n        paranoid: options.paranoid\n      });\n\n      if (instances.length) {\n        // Run beforeUpdate hooks on each record and check whether beforeUpdate hook changes values uniformly\n        // i.e. whether they change values for each record in the same way\n        let changedValues;\n        let different = false;\n\n        instances = await Promise.all(instances.map(async instance => {\n          // Record updates in instances dataValues\n          Object.assign(instance.dataValues, values);\n          // Set the changed fields on the instance\n          _.forIn(valuesUse, (newValue, attr) => {\n            if (newValue !== instance._previousDataValues[attr]) {\n              instance.setDataValue(attr, newValue);\n            }\n          });\n\n          // Run beforeUpdate hook\n          await this.runHooks('beforeUpdate', instance, options);\n          if (!different) {\n            const thisChangedValues = {};\n            _.forIn(instance.dataValues, (newValue, attr) => {\n              if (newValue !== instance._previousDataValues[attr]) {\n                thisChangedValues[attr] = newValue;\n              }\n            });\n\n            if (!changedValues) {\n              changedValues = thisChangedValues;\n            } else {\n              different = !_.isEqual(changedValues, thisChangedValues);\n            }\n          }\n\n          return instance;\n        }));\n\n        if (!different) {\n          const keys = Object.keys(changedValues);\n          // Hooks do not change values or change them uniformly\n          if (keys.length) {\n            // Hooks change values - record changes in valuesUse so they are executed\n            valuesUse = changedValues;\n            options.fields = _.union(options.fields, keys);\n          }\n        } else {\n          instances = await Promise.all(instances.map(async instance => {\n            const individualOptions = {\n              ...options,\n              hooks: false,\n              validate: false\n            };\n            delete individualOptions.individualHooks;\n\n            return instance.save(individualOptions);\n          }));\n          updateDoneRowByRow = true;\n        }\n      }\n    }\n    let result;\n    if (updateDoneRowByRow) {\n      result = [instances.length, instances];\n    } else if (_.isEmpty(valuesUse)\n       || Object.keys(valuesUse).length === 1 && valuesUse[this._timestampAttributes.updatedAt]) {\n      // only updatedAt is being passed, then skip update\n      result = [0];\n    } else {\n      valuesUse = Utils.mapValueFieldNames(valuesUse, options.fields, this);\n      options = Utils.mapOptionFieldNames(options, this);\n      options.hasTrigger = this.options ? this.options.hasTrigger : false;\n\n      const affectedRows = await this.queryInterface.bulkUpdate(this.getTableName(options), valuesUse, options.where, options, this.tableAttributes);\n      if (options.returning) {\n        result = [affectedRows.length, affectedRows];\n        instances = affectedRows;\n      } else {\n        result = [affectedRows];\n      }\n    }\n\n    if (options.individualHooks) {\n      await Promise.all(instances.map(instance => this.runHooks('afterUpdate', instance, options)));\n      result[1] = instances;\n    }\n    // Run after hook\n    if (options.hooks) {\n      options.attributes = values;\n      await this.runHooks('afterBulkUpdate', options);\n      delete options.attributes;\n    }\n    return result;\n  }\n\n  /**\n   * Run a describe query on the table.\n   *\n   * @param {string} [schema] schema name to search table in\n   * @param {object} [options] query options\n   *\n   * @returns {Promise} hash of attributes and their types\n   */\n  static async describe(schema, options) {\n    return await this.queryInterface.describeTable(this.tableName, { schema: schema || this._schema || undefined, ...options });\n  }\n\n  static _getDefaultTimestamp(attr) {\n    if (!!this.rawAttributes[attr] && !!this.rawAttributes[attr].defaultValue) {\n      return Utils.toDefaultValue(this.rawAttributes[attr].defaultValue, this.sequelize.options.dialect);\n    }\n    return undefined;\n  }\n\n  static _expandAttributes(options) {\n    if (!_.isPlainObject(options.attributes)) {\n      return;\n    }\n    let attributes = Object.keys(this.rawAttributes);\n\n    if (options.attributes.exclude) {\n      attributes = attributes.filter(elem => !options.attributes.exclude.includes(elem));\n    }\n\n    if (options.attributes.include) {\n      attributes = attributes.concat(options.attributes.include);\n    }\n\n    options.attributes = attributes;\n  }\n\n  // Inject _scope into options.\n  static _injectScope(options) {\n    const scope = Utils.cloneDeep(this._scope);\n    this._defaultsOptions(options, scope);\n  }\n\n  static [Symbol.for('nodejs.util.inspect.custom')]() {\n    return this.name;\n  }\n\n  static hasAlias(alias) {\n    return Object.prototype.hasOwnProperty.call(this.associations, alias);\n  }\n\n  /**\n   * Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a\n   * ``` SET column = column + X WHERE foo = 'bar' ``` query. To get the correct value after an increment into the Instance you should do a reload.\n   *\n   * @example <caption>increment number by 1</caption>\n   * Model.increment('number', { where: { foo: 'bar' });\n   *\n   * @example <caption>increment number and count by 2</caption>\n   * Model.increment(['number', 'count'], { by: 2, where: { foo: 'bar' } });\n   *\n   * @example <caption>increment answer by 42, and decrement tries by 1</caption>\n   * // `by` is ignored, as each column has its own value\n   * Model.increment({ answer: 42, tries: -1}, { by: 2, where: { foo: 'bar' } });\n   *\n   * @see\n   * {@link Model#reload}\n   *\n   * @param  {string|Array|object}  fields                       If a string is provided, that column is incremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.\n   * @param  {object}               options                      increment options\n   * @param  {object}               options.where                conditions hash\n   * @param  {number}               [options.by=1]               The number to increment by\n   * @param  {boolean}              [options.silent=false]       If true, the updatedAt timestamp will not be updated.\n   * @param  {Function}             [options.logging=false]      A function that gets executed while running the query to log the sql.\n   * @param  {Transaction}          [options.transaction]        Transaction to run query under\n   * @param  {string}               [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise<Model[],?number>} returns an array of affected rows and affected count with `options.returning` true, whenever supported by dialect\n   */\n  static async increment(fields, options) {\n    options = options || {};\n    if (typeof fields === 'string') fields = [fields];\n    if (Array.isArray(fields)) {\n      fields = fields.map(f => {\n        if (this.rawAttributes[f] && this.rawAttributes[f].field && this.rawAttributes[f].field !== f) {\n          return this.rawAttributes[f].field;\n        }\n        return f;\n      });\n    } else if (fields && typeof fields === 'object') {\n      fields = Object.keys(fields).reduce((rawFields, f) => {\n        if (this.rawAttributes[f] && this.rawAttributes[f].field && this.rawAttributes[f].field !== f) {\n          rawFields[this.rawAttributes[f].field] = fields[f];\n        } else {\n          rawFields[f] = fields[f];\n        }\n        return rawFields;\n      }, {});\n    }\n\n    this._injectScope(options);\n    this._optionsMustContainWhere(options);\n\n    options = Utils.defaults({}, options, {\n      by: 1,\n      where: {},\n      increment: true\n    });\n    const isSubtraction = !options.increment;\n\n    Utils.mapOptionFieldNames(options, this);\n\n    const where = { ...options.where };\n\n    // A plain object whose keys are the fields to be incremented and whose values are\n    // the amounts to be incremented by.\n    let incrementAmountsByField = {};\n    if (Array.isArray(fields)) {\n      incrementAmountsByField = {};\n      for (const field of fields) {\n        incrementAmountsByField[field] = options.by;\n      }\n    } else {\n      // If the `fields` argument is not an array, then we assume it already has the\n      // form necessary to be placed directly in the `incrementAmountsByField` variable.\n      incrementAmountsByField = fields;\n    }\n\n    // If optimistic locking is enabled, we can take advantage that this is an\n    // increment/decrement operation and send it here as well. We put `-1` for\n    // decrementing because it will be subtracted, getting `-(-1)` which is `+1`\n    if (this._versionAttribute) {\n      incrementAmountsByField[this._versionAttribute] = isSubtraction ? -1 : 1;\n    }\n\n    const extraAttributesToBeUpdated = {};\n\n    const updatedAtAttr = this._timestampAttributes.updatedAt;\n    if (!options.silent && updatedAtAttr && !incrementAmountsByField[updatedAtAttr]) {\n      const attrName = this.rawAttributes[updatedAtAttr].field || updatedAtAttr;\n      extraAttributesToBeUpdated[attrName] = this._getDefaultTimestamp(updatedAtAttr) || Utils.now(this.sequelize.options.dialect);\n    }\n\n    const tableName = this.getTableName(options);\n    let affectedRows;\n    if (isSubtraction) {\n      affectedRows = await this.queryInterface.decrement(\n        this, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options\n      );\n    } else {\n      affectedRows = await this.queryInterface.increment(\n        this, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options\n      );\n    }\n\n    if (options.returning) {\n      return [affectedRows, affectedRows.length];\n    }\n\n    return [affectedRows];\n  }\n\n  /**\n   * Decrement the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The decrement is done using a\n   * ```sql SET column = column - X WHERE foo = 'bar'``` query. To get the correct value after a decrement into the Instance you should do a reload.\n   *\n   * @example <caption>decrement number by 1</caption>\n   * Model.decrement('number', { where: { foo: 'bar' });\n   *\n   * @example <caption>decrement number and count by 2</caption>\n   * Model.decrement(['number', 'count'], { by: 2, where: { foo: 'bar' } });\n   *\n   * @example <caption>decrement answer by 42, and decrement tries by -1</caption>\n   * // `by` is ignored, since each column has its own value\n   * Model.decrement({ answer: 42, tries: -1}, { by: 2, where: { foo: 'bar' } });\n   *\n   * @param {string|Array|object} fields If a string is provided, that column is incremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.\n   * @param {object} options decrement options, similar to increment\n   *\n   * @see\n   * {@link Model.increment}\n   * @see\n   * {@link Model#reload}\n   * @since 4.36.0\n   *\n   * @returns {Promise<Model[],?number>} returns an array of affected rows and affected count with `options.returning` true, whenever supported by dialect\n   */\n  static async decrement(fields, options) {\n    return this.increment(fields, {\n      by: 1,\n      ...options,\n      increment: false\n    });\n  }\n\n  static _optionsMustContainWhere(options) {\n    assert(options && options.where, 'Missing where attribute in the options parameter');\n    assert(_.isPlainObject(options.where) || Array.isArray(options.where) || options.where instanceof Utils.SequelizeMethod,\n      'Expected plain object, array or sequelize method in the options.where parameter');\n  }\n\n  /**\n   * Get an object representing the query for this instance, use with `options.where`\n   *\n   * @param {boolean} [checkVersion=false] include version attribute in where hash\n   *\n   * @returns {object}\n   */\n  where(checkVersion) {\n    const where = this.constructor.primaryKeyAttributes.reduce((result, attribute) => {\n      result[attribute] = this.get(attribute, { raw: true });\n      return result;\n    }, {});\n\n    if (_.size(where) === 0) {\n      return this.constructor.options.whereCollection;\n    }\n    const versionAttr = this.constructor._versionAttribute;\n    if (checkVersion && versionAttr) {\n      where[versionAttr] = this.get(versionAttr, { raw: true });\n    }\n    return Utils.mapWhereFieldNames(where, this.constructor);\n  }\n\n  toString() {\n    return `[object SequelizeInstance:${this.constructor.name}]`;\n  }\n\n  /**\n   * Get the value of the underlying data value\n   *\n   * @param {string} key key to look in instance data store\n   *\n   * @returns {any}\n   */\n  getDataValue(key) {\n    return this.dataValues[key];\n  }\n\n  /**\n   * Update the underlying data value\n   *\n   * @param {string} key key to set in instance data store\n   * @param {any} value new value for given key\n   *\n   */\n  setDataValue(key, value) {\n    const originalValue = this._previousDataValues[key];\n\n    if (!_.isEqual(value, originalValue)) {\n      this.changed(key, true);\n    }\n\n    this.dataValues[key] = value;\n  }\n\n  /**\n   * If no key is given, returns all values of the instance, also invoking virtual getters.\n   *\n   * If key is given and a field or virtual getter is present for the key it will call that getter - else it will return the value for key.\n   *\n   * @param {string}  [key] key to get value of\n   * @param {object}  [options] get options\n   * @param {boolean} [options.plain=false] If set to true, included instances will be returned as plain objects\n   * @param {boolean} [options.raw=false] If set to true, field and virtual setters will be ignored\n   *\n   * @returns {object|any}\n   */\n  get(key, options) {\n    if (options === undefined && typeof key === 'object') {\n      options = key;\n      key = undefined;\n    }\n\n    options = options || {};\n\n    if (key) {\n      if (Object.prototype.hasOwnProperty.call(this._customGetters, key) && !options.raw) {\n        return this._customGetters[key].call(this, key, options);\n      }\n\n      if (options.plain && this._options.include && this._options.includeNames.includes(key)) {\n        if (Array.isArray(this.dataValues[key])) {\n          return this.dataValues[key].map(instance => instance.get(options));\n        }\n        if (this.dataValues[key] instanceof Model) {\n          return this.dataValues[key].get(options);\n        }\n        return this.dataValues[key];\n      }\n\n      return this.dataValues[key];\n    }\n\n    if (\n      this._hasCustomGetters\n      || options.plain && this._options.include\n      || options.clone\n    ) {\n      const values = {};\n      let _key;\n\n      if (this._hasCustomGetters) {\n        for (_key in this._customGetters) {\n          if (\n            this._options.attributes\n            && !this._options.attributes.includes(_key)\n          ) {\n            continue;\n          }\n\n          if (Object.prototype.hasOwnProperty.call(this._customGetters, _key)) {\n            values[_key] = this.get(_key, options);\n          }\n        }\n      }\n\n      for (_key in this.dataValues) {\n        if (\n          !Object.prototype.hasOwnProperty.call(values, _key)\n          && Object.prototype.hasOwnProperty.call(this.dataValues, _key)\n        ) {\n          values[_key] = this.get(_key, options);\n        }\n      }\n\n      return values;\n    }\n\n    return this.dataValues;\n  }\n\n  /**\n   * Set is used to update values on the instance (the sequelize representation of the instance that is, remember that nothing will be persisted before you actually call `save`).\n   * In its most basic form `set` will update a value stored in the underlying `dataValues` object. However, if a custom setter function is defined for the key, that function\n   * will be called instead. To bypass the setter, you can pass `raw: true` in the options object.\n   *\n   * If set is called with an object, it will loop over the object, and call set recursively for each key, value pair. If you set raw to true, the underlying dataValues will either be\n   * set directly to the object passed, or used to extend dataValues, if dataValues already contain values.\n   *\n   * When set is called, the previous value of the field is stored and sets a changed flag(see `changed`).\n   *\n   * Set can also be used to build instances for associations, if you have values for those.\n   * When using set with associations you need to make sure the property key matches the alias of the association\n   * while also making sure that the proper include options have been set (from .build() or .findOne())\n   *\n   * If called with a dot.separated key on a JSON/JSONB attribute it will set the value nested and flag the entire object as changed.\n   *\n   * @see\n   * {@link Model.findAll} for more information about includes\n   *\n   * @param {string|object} key key to set, it can be string or object. When string it will set that key, for object it will loop over all object properties nd set them.\n   * @param {any} value value to set\n   * @param {object} [options] set options\n   * @param {boolean} [options.raw=false] If set to true, field and virtual setters will be ignored\n   * @param {boolean} [options.reset=false] Clear all previously set data values\n   *\n   * @returns {Model}\n   */\n  set(key, value, options) {\n    let values;\n    let originalValue;\n\n    if (typeof key === 'object' && key !== null) {\n      values = key;\n      options = value || {};\n\n      if (options.reset) {\n        this.dataValues = {};\n        for (const key in values) {\n          this.changed(key, false);\n        }\n      }\n\n      // If raw, and we're not dealing with includes or special attributes, just set it straight on the dataValues object\n      if (options.raw && !(this._options && this._options.include) && !(options && options.attributes) && !this.constructor._hasDateAttributes && !this.constructor._hasBooleanAttributes) {\n        if (Object.keys(this.dataValues).length) {\n          Object.assign(this.dataValues, values);\n        } else {\n          this.dataValues = values;\n        }\n        // If raw, .changed() shouldn't be true\n        this._previousDataValues = { ...this.dataValues };\n      } else {\n        // Loop and call set\n        if (options.attributes) {\n          const setKeys = data => {\n            for (const k of data) {\n              if (values[k] === undefined) {\n                continue;\n              }\n              this.set(k, values[k], options);\n            }\n          };\n          setKeys(options.attributes);\n          if (this.constructor._hasVirtualAttributes) {\n            setKeys(this.constructor._virtualAttributes);\n          }\n          if (this._options.includeNames) {\n            setKeys(this._options.includeNames);\n          }\n        } else {\n          for (const key in values) {\n            this.set(key, values[key], options);\n          }\n        }\n\n        if (options.raw) {\n          // If raw, .changed() shouldn't be true\n          this._previousDataValues = { ...this.dataValues };\n        }\n      }\n      return this;\n    }\n    if (!options)\n      options = {};\n    if (!options.raw) {\n      originalValue = this.dataValues[key];\n    }\n\n    // If not raw, and there's a custom setter\n    if (!options.raw && this._customSetters[key]) {\n      this._customSetters[key].call(this, value, key);\n      // custom setter should have changed value, get that changed value\n      // TODO: v5 make setters return new value instead of changing internal store\n      const newValue = this.dataValues[key];\n      if (!_.isEqual(newValue, originalValue)) {\n        this._previousDataValues[key] = originalValue;\n        this.changed(key, true);\n      }\n    } else {\n      // Check if we have included models, and if this key matches the include model names/aliases\n      if (this._options && this._options.include && this._options.includeNames.includes(key)) {\n        // Pass it on to the include handler\n        this._setInclude(key, value, options);\n        return this;\n      }\n      // Bunch of stuff we won't do when it's raw\n      if (!options.raw) {\n        // If attribute is not in model definition, return\n        if (!this._isAttribute(key)) {\n          if (key.includes('.') && this.constructor._jsonAttributes.has(key.split('.')[0])) {\n            const previousNestedValue = Dottie.get(this.dataValues, key);\n            if (!_.isEqual(previousNestedValue, value)) {\n              Dottie.set(this.dataValues, key, value);\n              this.changed(key.split('.')[0], true);\n            }\n          }\n          return this;\n        }\n\n        // If attempting to set primary key and primary key is already defined, return\n        if (this.constructor._hasPrimaryKeys && originalValue && this.constructor._isPrimaryKey(key)) {\n          return this;\n        }\n\n        // If attempting to set read only attributes, return\n        if (!this.isNewRecord && this.constructor._hasReadOnlyAttributes && this.constructor._readOnlyAttributes.has(key)) {\n          return this;\n        }\n      }\n\n      // If there's a data type sanitizer\n      if (\n        !(value instanceof Utils.SequelizeMethod)\n        && Object.prototype.hasOwnProperty.call(this.constructor._dataTypeSanitizers, key)\n      ) {\n        value = this.constructor._dataTypeSanitizers[key].call(this, value, options);\n      }\n\n      // Set when the value has changed and not raw\n      if (\n        !options.raw &&\n        (\n          // True when sequelize method\n          value instanceof Utils.SequelizeMethod ||\n          // Check for data type type comparators\n          !(value instanceof Utils.SequelizeMethod) && this.constructor._dataTypeChanges[key] && this.constructor._dataTypeChanges[key].call(this, value, originalValue, options) || // Check default\n          !this.constructor._dataTypeChanges[key] && !_.isEqual(value, originalValue)\n        )\n      ) {\n        this._previousDataValues[key] = originalValue;\n        this.changed(key, true);\n      }\n\n      // set data value\n      this.dataValues[key] = value;\n    }\n    return this;\n  }\n\n  setAttributes(updates) {\n    return this.set(updates);\n  }\n\n  /**\n   * If changed is called with a string it will return a boolean indicating whether the value of that key in `dataValues` is different from the value in `_previousDataValues`.\n   *\n   * If changed is called without an argument, it will return an array of keys that have changed.\n   *\n   * If changed is called without an argument and no keys have changed, it will return `false`.\n   *\n   * Please note that this function will return `false` when a property from a nested (for example JSON) property\n   * was edited manually, you must call `changed('key', true)` manually in these cases.\n   * Writing an entirely new object (eg. deep cloned) will be detected.\n   *\n   * @example\n   * ```\n   * const mdl = await MyModel.findOne();\n   * mdl.myJsonField.a = 1;\n   * console.log(mdl.changed()) => false\n   * mdl.save(); // this will not save anything\n   * mdl.changed('myJsonField', true);\n   * console.log(mdl.changed()) => ['myJsonField']\n   * mdl.save(); // will save\n   * ```\n   *\n   * @param {string} [key] key to check or change status of\n   * @param {any} [value] value to set\n   *\n   * @returns {boolean|Array}\n   */\n  changed(key, value) {\n    if (key === undefined) {\n      if (this._changed.size > 0) {\n        return Array.from(this._changed);\n      }\n      return false;\n    }\n    if (value === true) {\n      this._changed.add(key);\n      return this;\n    }\n    if (value === false) {\n      this._changed.delete(key);\n      return this;\n    }\n    return this._changed.has(key);\n  }\n\n  /**\n   * Returns the previous value for key from `_previousDataValues`.\n   *\n   * If called without a key, returns the previous values for all values which have changed\n   *\n   * @param {string} [key] key to get previous value of\n   *\n   * @returns {any|Array<any>}\n   */\n  previous(key) {\n    if (key) {\n      return this._previousDataValues[key];\n    }\n\n    return _.pickBy(this._previousDataValues, (value, key) => this.changed(key));\n  }\n\n  _setInclude(key, value, options) {\n    if (!Array.isArray(value)) value = [value];\n    if (value[0] instanceof Model) {\n      value = value.map(instance => instance.dataValues);\n    }\n\n    const include = this._options.includeMap[key];\n    const association = include.association;\n    const accessor = key;\n    const primaryKeyAttribute = include.model.primaryKeyAttribute;\n    const childOptions = {\n      isNewRecord: this.isNewRecord,\n      include: include.include,\n      includeNames: include.includeNames,\n      includeMap: include.includeMap,\n      includeValidated: true,\n      raw: options.raw,\n      attributes: include.originalAttributes\n    };\n    let isEmpty;\n\n    if (include.originalAttributes === undefined || include.originalAttributes.length) {\n      if (association.isSingleAssociation) {\n        if (Array.isArray(value)) {\n          value = value[0];\n        }\n        isEmpty = value && value[primaryKeyAttribute] === null || value === null;\n        this[accessor] = this.dataValues[accessor] = isEmpty ? null : include.model.build(value, childOptions);\n      } else {\n        isEmpty = value[0] && value[0][primaryKeyAttribute] === null;\n        this[accessor] = this.dataValues[accessor] = isEmpty ? [] : include.model.bulkBuild(value, childOptions);\n      }\n    }\n  }\n\n  /**\n   * Validates this instance, and if the validation passes, persists it to the database.\n   *\n   * Returns a Promise that resolves to the saved instance (or rejects with a `Sequelize.ValidationError`, which will have a property for each of the fields for which the validation failed, with the error message for that field).\n   *\n   * This method is optimized to perform an UPDATE only into the fields that changed. If nothing has changed, no SQL query will be performed.\n   *\n   * This method is not aware of eager loaded associations. In other words, if some other model instance (child) was eager loaded with this instance (parent), and you change something in the child, calling `save()` will simply ignore the change that happened on the child.\n   *\n   * @param {object}      [options] save options\n   * @param {string[]}    [options.fields] An optional array of strings, representing database columns. If fields is provided, only those columns will be validated and saved.\n   * @param {boolean}     [options.silent=false] If true, the updatedAt timestamp will not be updated.\n   * @param {boolean}     [options.validate=true] If false, validations won't be run.\n   * @param {boolean}     [options.hooks=true] Run before and after create / update + validate hooks\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string}      [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean}     [options.returning] Append RETURNING * to get back auto generated values (Postgres only)\n   *\n   * @returns {Promise<Model>}\n   */\n  async save(options) {\n    if (arguments.length > 1) {\n      throw new Error('The second argument was removed in favor of the options object.');\n    }\n\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    options = _.defaults(options, {\n      hooks: true,\n      validate: true\n    });\n\n    if (!options.fields) {\n      if (this.isNewRecord) {\n        options.fields = Object.keys(this.constructor.rawAttributes);\n      } else {\n        options.fields = _.intersection(this.changed(), Object.keys(this.constructor.rawAttributes));\n      }\n\n      options.defaultFields = options.fields;\n    }\n\n    if (options.returning === undefined) {\n      if (options.association) {\n        options.returning = false;\n      } else if (this.isNewRecord) {\n        options.returning = true;\n      }\n    }\n\n    const primaryKeyName = this.constructor.primaryKeyAttribute;\n    const primaryKeyAttribute = primaryKeyName && this.constructor.rawAttributes[primaryKeyName];\n    const createdAtAttr = this.constructor._timestampAttributes.createdAt;\n    const versionAttr = this.constructor._versionAttribute;\n    const hook = this.isNewRecord ? 'Create' : 'Update';\n    const wasNewRecord = this.isNewRecord;\n    const now = Utils.now(this.sequelize.options.dialect);\n    let updatedAtAttr = this.constructor._timestampAttributes.updatedAt;\n\n    if (updatedAtAttr && options.fields.length > 0 && !options.fields.includes(updatedAtAttr)) {\n      options.fields.push(updatedAtAttr);\n    }\n    if (versionAttr && options.fields.length > 0 && !options.fields.includes(versionAttr)) {\n      options.fields.push(versionAttr);\n    }\n\n    if (options.silent === true && !(this.isNewRecord && this.get(updatedAtAttr, { raw: true }))) {\n      // UpdateAtAttr might have been added as a result of Object.keys(Model.rawAttributes). In that case we have to remove it again\n      _.remove(options.fields, val => val === updatedAtAttr);\n      updatedAtAttr = false;\n    }\n\n    if (this.isNewRecord === true) {\n      if (createdAtAttr && !options.fields.includes(createdAtAttr)) {\n        options.fields.push(createdAtAttr);\n      }\n\n      if (primaryKeyAttribute && primaryKeyAttribute.defaultValue && !options.fields.includes(primaryKeyName)) {\n        options.fields.unshift(primaryKeyName);\n      }\n    }\n\n    if (this.isNewRecord === false) {\n      if (primaryKeyName && this.get(primaryKeyName, { raw: true }) === undefined) {\n        throw new Error('You attempted to save an instance with no primary key, this is not allowed since it would result in a global update');\n      }\n    }\n\n    if (updatedAtAttr && !options.silent && options.fields.includes(updatedAtAttr)) {\n      this.dataValues[updatedAtAttr] = this.constructor._getDefaultTimestamp(updatedAtAttr) || now;\n    }\n\n    if (this.isNewRecord && createdAtAttr && !this.dataValues[createdAtAttr]) {\n      this.dataValues[createdAtAttr] = this.constructor._getDefaultTimestamp(createdAtAttr) || now;\n    }\n    // Db2 does not allow NULL values for unique columns.\n    // Add dummy values if not provided by test case or user.\n    if (this.sequelize.options.dialect === 'db2' && this.isNewRecord) {\n      this.uniqno = this.sequelize.dialect.queryGenerator.addUniqueFields(\n        this.dataValues, this.constructor.rawAttributes, this.uniqno);\n    }\n    // Validate\n    if (options.validate) {\n      await this.validate(options);\n    }\n    // Run before hook\n    if (options.hooks) {\n      const beforeHookValues = _.pick(this.dataValues, options.fields);\n      let ignoreChanged = _.difference(this.changed(), options.fields); // In case of update where it's only supposed to update the passed values and the hook values\n      let hookChanged;\n      let afterHookValues;\n\n      if (updatedAtAttr && options.fields.includes(updatedAtAttr)) {\n        ignoreChanged = _.without(ignoreChanged, updatedAtAttr);\n      }\n\n      await this.constructor.runHooks(`before${hook}`, this, options);\n      if (options.defaultFields && !this.isNewRecord) {\n        afterHookValues = _.pick(this.dataValues, _.difference(this.changed(), ignoreChanged));\n\n        hookChanged = [];\n        for (const key of Object.keys(afterHookValues)) {\n          if (afterHookValues[key] !== beforeHookValues[key]) {\n            hookChanged.push(key);\n          }\n        }\n\n        options.fields = _.uniq(options.fields.concat(hookChanged));\n      }\n\n      if (hookChanged) {\n        if (options.validate) {\n          // Validate again\n\n          options.skip = _.difference(Object.keys(this.constructor.rawAttributes), hookChanged);\n          await this.validate(options);\n          delete options.skip;\n        }\n      }\n    }\n    if (options.fields.length && this.isNewRecord && this._options.include && this._options.include.length) {\n      await Promise.all(this._options.include.filter(include => include.association instanceof BelongsTo).map(async include => {\n        const instance = this.get(include.as);\n        if (!instance) return;\n\n        const includeOptions = _(Utils.cloneDeep(include))\n          .omit(['association'])\n          .defaults({\n            transaction: options.transaction,\n            logging: options.logging,\n            parentRecord: this\n          }).value();\n\n        await instance.save(includeOptions);\n\n        await this[include.association.accessors.set](instance, { save: false, logging: options.logging });\n      }));\n    }\n    const realFields = options.fields.filter(field => !this.constructor._virtualAttributes.has(field));\n    if (!realFields.length) return this;\n    if (!this.changed() && !this.isNewRecord) return this;\n\n    const versionFieldName = _.get(this.constructor.rawAttributes[versionAttr], 'field') || versionAttr;\n    const values = Utils.mapValueFieldNames(this.dataValues, options.fields, this.constructor);\n    let query = null;\n    let args = [];\n    let where;\n\n    if (this.isNewRecord) {\n      query = 'insert';\n      args = [this, this.constructor.getTableName(options), values, options];\n    } else {\n      where = this.where(true);\n      if (versionAttr) {\n        values[versionFieldName] = parseInt(values[versionFieldName], 10) + 1;\n      }\n      query = 'update';\n      args = [this, this.constructor.getTableName(options), values, where, options];\n    }\n\n    const [result, rowsUpdated] = await this.constructor.queryInterface[query](...args);\n    if (versionAttr) {\n      // Check to see that a row was updated, otherwise it's an optimistic locking error.\n      if (rowsUpdated < 1) {\n        throw new sequelizeErrors.OptimisticLockError({\n          modelName: this.constructor.name,\n          values,\n          where\n        });\n      } else {\n        result.dataValues[versionAttr] = values[versionFieldName];\n      }\n    }\n\n    // Transfer database generated values (defaults, autoincrement, etc)\n    for (const attr of Object.keys(this.constructor.rawAttributes)) {\n      if (this.constructor.rawAttributes[attr].field &&\n          values[this.constructor.rawAttributes[attr].field] !== undefined &&\n          this.constructor.rawAttributes[attr].field !== attr\n      ) {\n        values[attr] = values[this.constructor.rawAttributes[attr].field];\n        delete values[this.constructor.rawAttributes[attr].field];\n      }\n    }\n    Object.assign(values, result.dataValues);\n\n    Object.assign(result.dataValues, values);\n    if (wasNewRecord && this._options.include && this._options.include.length) {\n      await Promise.all(\n        this._options.include.filter(include => !(include.association instanceof BelongsTo ||\n          include.parent && include.parent.association instanceof BelongsToMany)).map(async include => {\n          let instances = this.get(include.as);\n\n          if (!instances) return;\n          if (!Array.isArray(instances)) instances = [instances];\n\n          const includeOptions = _(Utils.cloneDeep(include))\n            .omit(['association'])\n            .defaults({\n              transaction: options.transaction,\n              logging: options.logging,\n              parentRecord: this\n            }).value();\n\n          // Instances will be updated in place so we can safely treat HasOne like a HasMany\n          await Promise.all(instances.map(async instance => {\n            if (include.association instanceof BelongsToMany) {\n              await instance.save(includeOptions);\n              const values0 = {\n                [include.association.foreignKey]: this.get(this.constructor.primaryKeyAttribute, { raw: true }),\n                [include.association.otherKey]: instance.get(instance.constructor.primaryKeyAttribute, { raw: true }),\n                // Include values defined in the association\n                ...include.association.through.scope\n              };\n\n              if (instance[include.association.through.model.name]) {\n                for (const attr of Object.keys(include.association.through.model.rawAttributes)) {\n                  if (include.association.through.model.rawAttributes[attr]._autoGenerated ||\n                    attr === include.association.foreignKey ||\n                    attr === include.association.otherKey ||\n                    typeof instance[include.association.through.model.name][attr] === 'undefined') {\n                    continue;\n                  }\n                  values0[attr] = instance[include.association.through.model.name][attr];\n                }\n              }\n\n              await include.association.throughModel.create(values0, includeOptions);\n            } else {\n              instance.set(include.association.foreignKey, this.get(include.association.sourceKey || this.constructor.primaryKeyAttribute, { raw: true }), { raw: true });\n              Object.assign(instance, include.association.scope);\n              await instance.save(includeOptions);\n            }\n          }));\n        })\n      );\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.constructor.runHooks(`after${hook}`, result, options);\n    }\n    for (const field of options.fields) {\n      result._previousDataValues[field] = result.dataValues[field];\n      this.changed(field, false);\n    }\n    this.isNewRecord = false;\n\n    return result;\n  }\n\n  /**\n   * Refresh the current instance in-place, i.e. update the object with current data from the DB and return the same object.\n   * This is different from doing a `find(Instance.id)`, because that would create and return a new instance. With this method,\n   * all references to the Instance are updated with the new data and no new objects are created.\n   *\n   * @see\n   * {@link Model.findAll}\n   *\n   * @param {object} [options] Options that are passed on to `Model.find`\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   *\n   * @returns {Promise<Model>}\n   */\n  async reload(options) {\n    options = Utils.defaults({\n      where: this.where()\n    }, options, {\n      include: this._options.include || undefined\n    });\n\n    const reloaded = await this.constructor.findOne(options);\n    if (!reloaded) {\n      throw new sequelizeErrors.InstanceError(\n        'Instance could not be reloaded because it does not exist anymore (find call returned null)'\n      );\n    }\n    // update the internal options of the instance\n    this._options = reloaded._options;\n    // re-set instance values\n    this.set(reloaded.dataValues, {\n      raw: true,\n      reset: true && !options.attributes\n    });\n\n    return this;\n  }\n\n  /**\n  * Validate the attributes of this instance according to validation rules set in the model definition.\n  *\n  * The promise fulfills if and only if validation successful; otherwise it rejects an Error instance containing { field name : [error msgs] } entries.\n  *\n  * @param {object} [options] Options that are passed to the validator\n  * @param {Array} [options.skip] An array of strings. All properties that are in this array will not be validated\n  * @param {Array} [options.fields] An array of strings. Only the properties that are in this array will be validated\n  * @param {boolean} [options.hooks=true] Run before and after validate hooks\n  *\n  * @returns {Promise}\n  */\n  async validate(options) {\n    return new InstanceValidator(this, options).validate();\n  }\n\n  /**\n   * This is the same as calling `set` and then calling `save` but it only saves the\n   * exact values passed to it, making it more atomic and safer.\n   *\n   * @see\n   * {@link Model#set}\n   * @see\n   * {@link Model#save}\n   *\n   * @param {object} values See `set`\n   * @param {object} options See `save`\n   *\n   * @returns {Promise<Model>}\n   */\n  async update(values, options) {\n    // Clone values so it doesn't get modified for caller scope and ignore undefined values\n    values = _.omitBy(values, value => value === undefined);\n\n    const changedBefore = this.changed() || [];\n\n    options = options || {};\n    if (Array.isArray(options)) options = { fields: options };\n\n    options = Utils.cloneDeep(options);\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    const setOptions = Utils.cloneDeep(options);\n    setOptions.attributes = options.fields;\n    this.set(values, setOptions);\n\n    // Now we need to figure out which fields were actually affected by the setter.\n    const sideEffects = _.without(this.changed(), ...changedBefore);\n    const fields = _.union(Object.keys(values), sideEffects);\n\n    if (!options.fields) {\n      options.fields = _.intersection(fields, this.changed());\n      options.defaultFields = options.fields;\n    }\n\n    return await this.save(options);\n  }\n\n  /**\n   * Destroy the row corresponding to this instance. Depending on your setting for paranoid, the row will either be completely deleted, or have its deletedAt timestamp set to the current time.\n   *\n   * @param {object}      [options={}] destroy options\n   * @param {boolean}     [options.force=false] If set to true, paranoid models will actually be deleted\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string}      [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   *\n   * @returns {Promise}\n   */\n  async destroy(options) {\n    options = {\n      hooks: true,\n      force: false,\n      ...options\n    };\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    // Run before hook\n    if (options.hooks) {\n      await this.constructor.runHooks('beforeDestroy', this, options);\n    }\n    const where = this.where(true);\n\n    let result;\n    if (this.constructor._timestampAttributes.deletedAt && options.force === false) {\n      const attributeName = this.constructor._timestampAttributes.deletedAt;\n      const attribute = this.constructor.rawAttributes[attributeName];\n      const defaultValue = Object.prototype.hasOwnProperty.call(attribute, 'defaultValue')\n        ? attribute.defaultValue\n        : null;\n      const currentValue = this.getDataValue(attributeName);\n      const undefinedOrNull = currentValue == null && defaultValue == null;\n      if (undefinedOrNull || _.isEqual(currentValue, defaultValue)) {\n        // only update timestamp if it wasn't already set\n        this.setDataValue(attributeName, new Date());\n      }\n\n      result = await this.save({ ...options, hooks: false });\n    } else {\n      result = await this.constructor.queryInterface.delete(this, this.constructor.getTableName(options), where, { type: QueryTypes.DELETE, limit: null, ...options });\n    }\n    // Run after hook\n    if (options.hooks) {\n      await this.constructor.runHooks('afterDestroy', this, options);\n    }\n    return result;\n  }\n\n  /**\n   * Helper method to determine if a instance is \"soft deleted\".  This is\n   * particularly useful if the implementer renamed the `deletedAt` attribute\n   * to something different.  This method requires `paranoid` to be enabled.\n   *\n   * @returns {boolean}\n   */\n  isSoftDeleted() {\n    if (!this.constructor._timestampAttributes.deletedAt) {\n      throw new Error('Model is not paranoid');\n    }\n\n    const deletedAtAttribute = this.constructor.rawAttributes[this.constructor._timestampAttributes.deletedAt];\n    const defaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n    const deletedAt = this.get(this.constructor._timestampAttributes.deletedAt) || null;\n    const isSet = deletedAt !== defaultValue;\n\n    return isSet;\n  }\n\n  /**\n   * Restore the row corresponding to this instance. Only available for paranoid models.\n   *\n   * @param {object}      [options={}] restore options\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   *\n   * @returns {Promise}\n   */\n  async restore(options) {\n    if (!this.constructor._timestampAttributes.deletedAt) throw new Error('Model is not paranoid');\n\n    options = {\n      hooks: true,\n      force: false,\n      ...options\n    };\n\n    // Add CLS transaction\n    if (options.transaction === undefined && this.sequelize.constructor._cls) {\n      const t = this.sequelize.constructor._cls.get('transaction');\n      if (t) {\n        options.transaction = t;\n      }\n    }\n\n    // Run before hook\n    if (options.hooks) {\n      await this.constructor.runHooks('beforeRestore', this, options);\n    }\n    const deletedAtCol = this.constructor._timestampAttributes.deletedAt;\n    const deletedAtAttribute = this.constructor.rawAttributes[deletedAtCol];\n    const deletedAtDefaultValue = Object.prototype.hasOwnProperty.call(deletedAtAttribute, 'defaultValue') ? deletedAtAttribute.defaultValue : null;\n\n    this.setDataValue(deletedAtCol, deletedAtDefaultValue);\n    const result = await this.save({ ...options, hooks: false, omitNull: false });\n    // Run after hook\n    if (options.hooks) {\n      await this.constructor.runHooks('afterRestore', this, options);\n      return result;\n    }\n    return result;\n  }\n\n  /**\n   * Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a\n   * ```sql\n   * SET column = column + X\n   * ```\n   * query. The updated instance will be returned by default in Postgres. However, in other dialects, you will need to do a reload to get the new values.\n   *\n   * @example\n   * instance.increment('number') // increment number by 1\n   *\n   * instance.increment(['number', 'count'], { by: 2 }) // increment number and count by 2\n   *\n   * // increment answer by 42, and tries by 1.\n   * // `by` is ignored, since each column has its own value\n   * instance.increment({ answer: 42, tries: 1}, { by: 2 })\n   *\n   * @see\n   * {@link Model#reload}\n   *\n   * @param {string|Array|object} fields If a string is provided, that column is incremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.\n   * @param {object} [options] options\n   * @param {number} [options.by=1] The number to increment by\n   * @param {boolean} [options.silent=false] If true, the updatedAt timestamp will not be updated.\n   * @param {Function} [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string} [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean} [options.returning=true] Append RETURNING * to get back auto generated values (Postgres only)\n   *\n   * @returns {Promise<Model>}\n   * @since 4.0.0\n   */\n  async increment(fields, options) {\n    const identifier = this.where();\n\n    options = Utils.cloneDeep(options);\n    options.where = { ...options.where, ...identifier };\n    options.instance = this;\n\n    await this.constructor.increment(fields, options);\n\n    return this;\n  }\n\n  /**\n   * Decrement the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The decrement is done using a\n   * ```sql\n   * SET column = column - X\n   * ```\n   * query. The updated instance will be returned by default in Postgres. However, in other dialects, you will need to do a reload to get the new values.\n   *\n   * @example\n   * instance.decrement('number') // decrement number by 1\n   *\n   * instance.decrement(['number', 'count'], { by: 2 }) // decrement number and count by 2\n   *\n   * // decrement answer by 42, and tries by 1.\n   * // `by` is ignored, since each column has its own value\n   * instance.decrement({ answer: 42, tries: 1}, { by: 2 })\n   *\n   * @see\n   * {@link Model#reload}\n   * @param {string|Array|object} fields If a string is provided, that column is decremented by the value of `by` given in options. If an array is provided, the same is true for each column. If and object is provided, each column is decremented by the value given\n   * @param {object}      [options] decrement options\n   * @param {number}      [options.by=1] The number to decrement by\n   * @param {boolean}     [options.silent=false] If true, the updatedAt timestamp will not be updated.\n   * @param {Function}    [options.logging=false] A function that gets executed while running the query to log the sql.\n   * @param {Transaction} [options.transaction] Transaction to run query under\n   * @param {string}      [options.searchPath=DEFAULT] An optional parameter to specify the schema search_path (Postgres only)\n   * @param {boolean}     [options.returning=true] Append RETURNING * to get back auto generated values (Postgres only)\n   *\n   * @returns {Promise}\n   */\n  async decrement(fields, options) {\n    return this.increment(fields, {\n      by: 1,\n      ...options,\n      increment: false\n    });\n  }\n\n  /**\n   * Check whether this and `other` Instance refer to the same row\n   *\n   * @param {Model} other Other instance to compare against\n   *\n   * @returns {boolean}\n   */\n  equals(other) {\n    if (!other || !other.constructor) {\n      return false;\n    }\n\n    if (!(other instanceof this.constructor)) {\n      return false;\n    }\n\n    return this.constructor.primaryKeyAttributes.every(attribute => this.get(attribute, { raw: true }) === other.get(attribute, { raw: true }));\n  }\n\n  /**\n   * Check if this is equal to one of `others` by calling equals\n   *\n   * @param {Array<Model>} others An array of instances to check against\n   *\n   * @returns {boolean}\n   */\n  equalsOneOf(others) {\n    return others.some(other => this.equals(other));\n  }\n\n  setValidators(attribute, validators) {\n    this.validators[attribute] = validators;\n  }\n\n  /**\n   * Convert the instance to a JSON representation.\n   * Proxies to calling `get` with no keys.\n   * This means get all values gotten from the DB, and apply all custom getters.\n   *\n   * @see\n   * {@link Model#get}\n   *\n   * @returns {object}\n   */\n  toJSON() {\n    return _.cloneDeep(\n      this.get({\n        plain: true\n      })\n    );\n  }\n\n  /**\n   * Creates a 1:m association between this (the source) and the provided target.\n   * The foreign key is added on the target.\n   *\n   * @param {Model}               target Target model\n   * @param {object}              [options] hasMany association options\n   * @param {boolean}             [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {string|object}       [options.as] The alias of this model. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with `plural` and `singular` keys. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target\n   * @param {string|object}       [options.foreignKey] The name of the foreign key in the target table or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source\n   * @param {string}              [options.sourceKey] The name of the field to use as the key for the association in the source table. Defaults to the primary key of the source table\n   * @param {object}              [options.scope] A key/value set that will be used for association create and find defaults on the target. (sqlite not supported for N:M)\n   * @param {string}              [options.onDelete='SET&nbsp;NULL|CASCADE'] SET NULL if foreignKey allows nulls, CASCADE if otherwise\n   * @param {string}              [options.onUpdate='CASCADE'] Set `ON UPDATE`\n   * @param {boolean}             [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   *\n   * @returns {HasMany}\n   *\n   * @example\n   * User.hasMany(Profile) // This will add userId to the profile table\n   */\n  static hasMany(target, options) {} // eslint-disable-line\n\n  /**\n   * Create an N:M association with a join table. Defining `through` is required.\n   *\n   * @param {Model}               target Target model\n   * @param {object}              options belongsToMany association options\n   * @param {boolean}             [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {Model|string|object} options.through The name of the table that is used to join source and target in n:m associations. Can also be a sequelize model if you want to define the junction table yourself and add extra attributes to it.\n   * @param {Model}               [options.through.model] The model used to join both sides of the N:M association.\n   * @param {object}              [options.through.scope] A key/value set that will be used for association create and find defaults on the through model. (Remember to add the attributes to the through model)\n   * @param {boolean}             [options.through.unique=true] If true a unique key will be generated from the foreign keys used (might want to turn this off and create specific unique keys when using scopes)\n   * @param {boolean}             [options.through.paranoid=false] If true the generated join table will be paranoid\n   * @param {string|object}       [options.as] The alias of this association. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with `plural` and `singular` keys. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target\n   * @param {string|object}       [options.foreignKey] The name of the foreign key in the join table (representing the source model) or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source\n   * @param {string|object}       [options.otherKey] The name of the foreign key in the join table (representing the target model) or an object representing the type definition for the other column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of target + primary key of target\n   * @param {object}              [options.scope] A key/value set that will be used for association create and find defaults on the target. (sqlite not supported for N:M)\n   * @param {boolean}             [options.timestamps=sequelize.options.timestamps] Should the join model have timestamps\n   * @param {string}              [options.onDelete='SET&nbsp;NULL|CASCADE'] Cascade if this is a n:m, and set null if it is a 1:m\n   * @param {string}              [options.onUpdate='CASCADE'] Sets `ON UPDATE`\n   * @param {boolean}             [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   *\n   * @returns {BelongsToMany}\n   *\n   * @example\n   * // Automagically generated join model\n   * User.belongsToMany(Project, { through: 'UserProjects' })\n   * Project.belongsToMany(User, { through: 'UserProjects' })\n   *\n   * // Join model with additional attributes\n   * const UserProjects = sequelize.define('UserProjects', {\n   *   started: Sequelize.BOOLEAN\n   * })\n   * User.belongsToMany(Project, { through: UserProjects })\n   * Project.belongsToMany(User, { through: UserProjects })\n   */\n  static belongsToMany(target, options) {} // eslint-disable-line\n\n  /**\n   * Creates an association between this (the source) and the provided target. The foreign key is added on the target.\n   *\n   * @param {Model}           target Target model\n   * @param {object}          [options] hasOne association options\n   * @param {boolean}         [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {string}          [options.as] The alias of this model, in singular form. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target\n   * @param {string|object}   [options.foreignKey] The name of the foreign key attribute in the target model or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of source + primary key of source\n   * @param {string}          [options.sourceKey] The name of the attribute to use as the key for the association in the source table. Defaults to the primary key of the source table\n   * @param {string}          [options.onDelete='SET&nbsp;NULL|CASCADE'] SET NULL if foreignKey allows nulls, CASCADE if otherwise\n   * @param {string}          [options.onUpdate='CASCADE'] Sets 'ON UPDATE'\n   * @param {boolean}         [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   * @param {string}          [options.uniqueKey] The custom name for unique constraint.\n   *\n   * @returns {HasOne}\n   *\n   * @example\n   * User.hasOne(Profile) // This will add userId to the profile table\n   */\n  static hasOne(target, options) {} // eslint-disable-line\n\n  /**\n   * Creates an association between this (the source) and the provided target. The foreign key is added on the source.\n   *\n   * @param {Model}           target The target model\n   * @param {object}          [options] belongsTo association options\n   * @param {boolean}         [options.hooks=false] Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if `User.hasOne(Profile, {onDelete: 'cascade', hooks:true})`, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks\n   * @param {string}          [options.as] The alias of this model, in singular form. See also the `name` option passed to `sequelize.define`. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target\n   * @param {string|object}   [options.foreignKey] The name of the foreign key attribute in the source table or an object representing the type definition for the foreign column (see `Sequelize.define` for syntax). When using an object, you can add a `name` property to set the name of the column. Defaults to the name of target + primary key of target\n   * @param {string}          [options.targetKey] The name of the attribute to use as the key for the association in the target table. Defaults to the primary key of the target table\n   * @param {string}          [options.onDelete='SET&nbsp;NULL|NO&nbsp;ACTION'] SET NULL if foreignKey allows nulls, NO ACTION if otherwise\n   * @param {string}          [options.onUpdate='CASCADE'] Sets 'ON UPDATE'\n   * @param {boolean}         [options.constraints=true] Should on update and on delete constraints be enabled on the foreign key.\n   *\n   * @returns {BelongsTo}\n   *\n   * @example\n   * Profile.belongsTo(User) // This will add userId to the profile table\n   */\n  static belongsTo(target, options) {} // eslint-disable-line\n}\n\n/**\n * Unpacks an object that only contains a single Op.and key to the value of Op.and\n *\n * Internal method used by {@link combineWheresWithAnd}\n *\n * @param {WhereOptions} where The object to unpack\n * @example `{ [Op.and]: [a, b] }` becomes `[a, b]`\n * @example `{ [Op.and]: { key: val } }` becomes `{ key: val }`\n * @example `{ [Op.or]: [a, b] }` remains as `{ [Op.or]: [a, b] }`\n * @example `{ [Op.and]: [a, b], key: c }` remains as `{ [Op.and]: [a, b], key: c }`\n * @private\n */\nfunction unpackAnd(where) {\n  if (!_.isObject(where)) {\n    return where;\n  }\n\n  const keys = Utils.getComplexKeys(where);\n\n  // object is empty, remove it.\n  if (keys.length === 0) {\n    return;\n  }\n\n  // we have more than just Op.and, keep as-is\n  if (keys.length !== 1 || keys[0] !== Op.and) {\n    return where;\n  }\n\n  const andParts = where[Op.and];\n\n  return andParts;\n}\n\nfunction combineWheresWithAnd(whereA, whereB) {\n  const unpackedA = unpackAnd(whereA);\n\n  if (unpackedA === undefined) {\n    return whereB;\n  }\n\n  const unpackedB = unpackAnd(whereB);\n\n  if (unpackedB === undefined) {\n    return whereA;\n  }\n\n  return {\n    [Op.and]: _.flatten([unpackedA, unpackedB])\n  };\n}\n\nObject.assign(Model, associationsMixin);\nHooks.applyTo(Model, true);\n\nmodule.exports = Model;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/belongs-to.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,36,37,28,38,35,37,40,35,39,36,34,18,28,27,25,8,12,50,51,5,46,57,92,41,48,5,27,40,16,39,19,5,38,53,97,5,87,151,5,79,92,81,43,39,45,62,22,28,28,33,6,3,23,27,41,85,23,34,6,45,98,101,65,5,130,66,36,95,39,16,3,14,45,45,3,33,21,29,17,39,65,27,35,14,45,7,5,66,70,5,36,27,25,5,20,31,77,8,12,54,71,7,60,27,5,81,20,52,24,42,69,7,40,73,7,20,5,35,3,63,35,52,49,5,47,31,13,30,32,35,23,16,46,3,49,26,28,74,75,31,3,33,36,31,5,34,40,5,27,3,1,27,37,35,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/associations/belongs-to.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst Op = require('../operators');\n\n/**\n * One-to-one association\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.belongsTo(Project)` the getter will be `user.getProject()`.\n *\n * @see {@link Model.belongsTo}\n */\nclass BelongsTo extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    this.associationType = 'BelongsTo';\n    this.isSingleAssociation = true;\n    this.foreignKeyAttribute = {};\n\n    if (this.as) {\n      this.isAliased = true;\n      this.options.name = {\n        singular: this.as\n      };\n    } else {\n      this.as = this.target.options.name.singular;\n      this.options.name = this.target.options.name;\n    }\n\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else if (this.options.foreignKey) {\n      this.foreignKey = this.options.foreignKey;\n    }\n\n    if (!this.foreignKey) {\n      this.foreignKey = Utils.camelize(\n        [\n          this.as,\n          this.target.primaryKeyAttribute\n        ].join('_')\n      );\n    }\n\n    this.identifier = this.foreignKey;\n    if (this.source.rawAttributes[this.identifier]) {\n      this.identifierField = this.source.rawAttributes[this.identifier].field || this.identifier;\n    }\n\n    if (\n      this.options.targetKey\n      && !this.target.rawAttributes[this.options.targetKey]\n    ) {\n      throw new Error(`Unknown attribute \"${this.options.targetKey}\" passed as targetKey, define this attribute on model \"${this.target.name}\" first`);\n    }\n\n    this.targetKey = this.options.targetKey || this.target.primaryKeyAttribute;\n    this.targetKeyField = this.target.rawAttributes[this.targetKey].field || this.targetKey;\n    this.targetKeyIsPrimary = this.targetKey === this.target.primaryKeyAttribute;\n    this.targetIdentifier = this.targetKey;\n\n    this.associationAccessor = this.as;\n    this.options.useHooks = options.useHooks;\n\n    // Get singular name, trying to uppercase the first letter, unless the model forbids it\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: `get${singular}`,\n      set: `set${singular}`,\n      create: `create${singular}`\n    };\n  }\n\n  // the id is in the source table\n  _injectAttributes() {\n    const newAttributes = {\n      [this.foreignKey]: {\n        type: this.options.keyType || this.target.rawAttributes[this.targetKey].type,\n        allowNull: true,\n        ...this.foreignKeyAttribute\n      }\n    };\n\n    if (this.options.constraints !== false) {\n      const source = this.source.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];\n      this.options.onDelete = this.options.onDelete || (source.allowNull ? 'SET NULL' : 'NO ACTION');\n      this.options.onUpdate = this.options.onUpdate || 'CASCADE';\n    }\n\n    Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.target, this.source, this.options, this.targetKeyField);\n    Utils.mergeDefaults(this.source.rawAttributes, newAttributes);\n\n    this.source.refreshAttributes();\n\n    this.identifierField = this.source.rawAttributes[this.foreignKey].field || this.foreignKey;\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'set', 'create'];\n\n    Helpers.mixinMethods(this, obj, methods);\n  }\n\n  /**\n   * Get the associated instance.\n   *\n   * @param {Model|Array<Model>} instances source instances\n   * @param {object}         [options] find options\n   * @param {string|boolean} [options.scope]  Apply a scope on the related model, or remove its default scope by passing false.\n   * @param {string}         [options.schema] Apply a schema on the related model\n   *\n   * @see\n   * {@link Model.findOne} for a full explanation of options\n   *\n   * @returns {Promise<Model>}\n   */\n  async get(instances, options) {\n    const where = {};\n    let Target = this.target;\n    let instance;\n\n    options = Utils.cloneDeep(options);\n\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        Target = Target.unscoped();\n      } else {\n        Target = Target.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      Target = Target.schema(options.schema, options.schemaDelimiter);\n    }\n\n    if (!Array.isArray(instances)) {\n      instance = instances;\n      instances = undefined;\n    }\n\n    if (instances) {\n      where[this.targetKey] = {\n        [Op.in]: instances.map(_instance => _instance.get(this.foreignKey))\n      };\n    } else {\n      if (this.targetKeyIsPrimary && !options.where) {\n        return Target.findByPk(instance.get(this.foreignKey), options);\n      }\n      where[this.targetKey] = instance.get(this.foreignKey);\n      options.limit = null;\n    }\n\n    options.where = options.where ?\n      { [Op.and]: [where, options.where] } :\n      where;\n\n    if (instances) {\n      const results = await Target.findAll(options);\n      const result = {};\n      for (const _instance of instances) {\n        result[_instance.get(this.foreignKey, { raw: true })] = null;\n      }\n\n      for (const _instance of results) {\n        result[_instance.get(this.targetKey, { raw: true })] = _instance;\n      }\n\n      return result;\n    }\n\n    return Target.findOne(options);\n  }\n\n  /**\n   * Set the associated model.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {?Model|string|number} [associatedInstance] An persisted instance or the primary key of an instance to associate with this. Pass `null` or `undefined` to remove the association.\n   * @param {object} [options={}] options passed to `this.save`\n   * @param {boolean} [options.save=true] Skip saving this after setting the foreign key if false.\n   *\n   *  @returns {Promise}\n   */\n  async set(sourceInstance, associatedInstance, options = {}) {\n    let value = associatedInstance;\n\n    if (associatedInstance instanceof this.target) {\n      value = associatedInstance[this.targetKey];\n    }\n\n    sourceInstance.set(this.foreignKey, value);\n\n    if (options.save === false) return;\n\n    options = {\n      fields: [this.foreignKey],\n      allowNull: [this.foreignKey],\n      association: true,\n      ...options\n    };\n\n    // passes the changed field to save, so only that field get updated.\n    return await sourceInstance.save(options);\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {object} [values={}] values to create associated model instance with\n   * @param {object} [options={}] Options passed to `target.create` and setAssociation.\n   *\n   * @see\n   * {@link Model#create}  for a full explanation of options\n   *\n   * @returns {Promise<Model>} The created target model\n   */\n  async create(sourceInstance, values, options) {\n    values = values || {};\n    options = options || {};\n\n    const newAssociatedObject = await this.target.create(values, options);\n    await sourceInstance[this.accessors.set](newAssociatedObject, options);\n\n    return newAssociatedObject;\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.singular) {\n      return this.as === alias.singular;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = BelongsTo;\nmodule.exports.BelongsTo = BelongsTo;\nmodule.exports.default = BelongsTo;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/helpers.js":{"lineLengths":[13,44,95,229,3,1,52,79,77,157,65,33,37,34,8,47,47,5,3,1,60,59,26,33,84,51,55,71,8,5,3,1,36,35,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/associations/helpers.js"],"sourcesContent":["'use strict';\n\nfunction checkNamingCollision(association) {\n  if (Object.prototype.hasOwnProperty.call(association.source.rawAttributes, association.as)) {\n    throw new Error(\n      `Naming collision between attribute '${association.as}'` +\n      ` and association '${association.as}' on model ${association.source.name}` +\n      '. To remedy this, change either foreignKey or as in your association definition'\n    );\n  }\n}\nexports.checkNamingCollision = checkNamingCollision;\n\nfunction addForeignKeyConstraints(newAttribute, source, target, options, key) {\n  // FK constraints are opt-in: users must either set `foreignKeyConstraints`\n  // on the association, or request an `onDelete` or `onUpdate` behavior\n\n  if (options.foreignKeyConstraint || options.onDelete || options.onUpdate) {\n    // Find primary keys: composite keys not supported with this approach\n    const primaryKeys = Object.keys(source.primaryKeys)\n      .map(primaryKeyAttribute => source.rawAttributes[primaryKeyAttribute].field || primaryKeyAttribute);\n\n    if (primaryKeys.length === 1 || !primaryKeys.includes(key)) {\n      newAttribute.references = {\n        model: source.getTableName(),\n        key: key || primaryKeys[0]\n      };\n\n      newAttribute.onDelete = options.onDelete;\n      newAttribute.onUpdate = options.onUpdate;\n    }\n  }\n}\nexports.addForeignKeyConstraints = addForeignKeyConstraints;\n\n/**\n * Mixin (inject) association methods to model prototype\n *\n * @private\n *\n * @param {object} association instance\n * @param {object} obj Model prototype\n * @param {Array} methods Method names to inject\n * @param {object} aliases Mapping between model and association method names\n *\n */\nfunction mixinMethods(association, obj, methods, aliases) {\n  aliases = aliases || {};\n\n  for (const method of methods) {\n    // don't override custom methods\n    if (!Object.prototype.hasOwnProperty.call(obj, association.accessors[method])) {\n      const realMethod = aliases[method] || method;\n\n      obj[association.accessors[method]] = function() {\n        return association[realMethod](this, ...Array.from(arguments));\n      };\n    }\n  }\n}\nexports.mixinMethods = mixinMethods;\n"],"mappings":";AAEA,8BAA8B,aAAa;AACzC,MAAI,OAAO,UAAU,eAAe,KAAK,YAAY,OAAO,eAAe,YAAY,KAAK;AAC1F,UAAM,IAAI,MACR,uCAAuC,YAAY,wBAC9B,YAAY,gBAAgB,YAAY,OAAO;AAAA;AAAA;AAK1E,QAAQ,uBAAuB;AAE/B,kCAAkC,cAAc,QAAQ,QAAQ,SAAS,KAAK;AAI5E,MAAI,QAAQ,wBAAwB,QAAQ,YAAY,QAAQ,UAAU;AAExE,UAAM,cAAc,OAAO,KAAK,OAAO,aACpC,IAAI,yBAAuB,OAAO,cAAc,qBAAqB,SAAS;AAEjF,QAAI,YAAY,WAAW,KAAK,CAAC,YAAY,SAAS,MAAM;AAC1D,mBAAa,aAAa;AAAA,QACxB,OAAO,OAAO;AAAA,QACd,KAAK,OAAO,YAAY;AAAA;AAG1B,mBAAa,WAAW,QAAQ;AAChC,mBAAa,WAAW,QAAQ;AAAA;AAAA;AAAA;AAItC,QAAQ,2BAA2B;AAanC,sBAAsB,aAAa,KAAK,SAAS,SAAS;AACxD,YAAU,WAAW;AAErB,aAAW,UAAU,SAAS;AAE5B,QAAI,CAAC,OAAO,UAAU,eAAe,KAAK,KAAK,YAAY,UAAU,UAAU;AAC7E,YAAM,aAAa,QAAQ,WAAW;AAEtC,UAAI,YAAY,UAAU,WAAW,WAAW;AAC9C,eAAO,YAAY,YAAY,MAAM,GAAG,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAK3D,QAAQ,eAAe;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/base.js":{"lineLengths":[13,52,19,45,25,25,27,31,57,25,30,38,151,5,3,26,32,22,5,35,41,23,29,61,68,7,3,48,19,3,1,29,32,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/associations/base.js"],"sourcesContent":["'use strict';\n\nconst { AssociationError } = require('./../errors');\n\n/**\n * Creating associations in sequelize is done by calling one of the belongsTo / hasOne / hasMany / belongsToMany functions on a model (the source), and providing another model as the first argument to the function (the target).\n *\n * * hasOne - adds a foreign key to the target and singular association mixins to the source.\n * * belongsTo - add a foreign key and singular association mixins to the source.\n * * hasMany - adds a foreign key to target and plural association mixins to the source.\n * * belongsToMany - creates an N:M association with a join table and adds plural association mixins to the source. The junction table is created with sourceId and targetId.\n *\n * Creating an association will add a foreign key constraint to the attributes. All associations use `CASCADE` on update and `SET NULL` on delete, except for n:m, which also uses `CASCADE` on delete.\n *\n * When creating associations, you can provide an alias, via the `as` option. This is useful if the same model is associated twice, or you want your association to be called something other than the name of the target model.\n *\n * As an example, consider the case where users have many pictures, one of which is their profile picture. All pictures have a `userId`, but in addition the user model also has a `profilePictureId`, to be able to easily load the user's profile picture.\n *\n * ```js\n * User.hasMany(Picture)\n * User.belongsTo(Picture, { as: 'ProfilePicture', constraints: false })\n *\n * user.getPictures() // gets you all pictures\n * user.getProfilePicture() // gets you only the profile picture\n *\n * User.findAll({\n *   where: ...,\n *   include: [\n *     { model: Picture }, // load all pictures\n *     { model: Picture, as: 'ProfilePicture' }, // load the profile picture.\n *     // Notice that the spelling must be the exact same as the one in the association\n *   ]\n * })\n * ```\n * To get full control over the foreign key column added by sequelize, you can use the `foreignKey` option. It can either be a string, that specifies the name, or and object type definition,\n * equivalent to those passed to `sequelize.define`.\n *\n * ```js\n * User.hasMany(Picture, { foreignKey: 'uid' })\n * ```\n *\n * The foreign key column in Picture will now be called `uid` instead of the default `userId`.\n *\n * ```js\n * User.hasMany(Picture, {\n *   foreignKey: {\n *     name: 'uid',\n *     allowNull: false\n *   }\n * })\n * ```\n *\n * This specifies that the `uid` column cannot be null. In most cases this will already be covered by the foreign key constraints, which sequelize creates automatically, but can be useful in case where the foreign keys are disabled, e.g. due to circular references (see `constraints: false` below).\n *\n * When fetching associated models, you can limit your query to only load some models. These queries are written in the same way as queries to `find`/`findAll`. To only get pictures in JPG, you can do:\n *\n * ```js\n * user.getPictures({\n *   where: {\n *     format: 'jpg'\n *   }\n * })\n * ```\n *\n * There are several ways to update and add new associations. Continuing with our example of users and pictures:\n * ```js\n * user.addPicture(p) // Add a single picture\n * user.setPictures([p1, p2]) // Associate user with ONLY these two picture, all other associations will be deleted\n * user.addPictures([p1, p2]) // Associate user with these two pictures, but don't touch any current associations\n * ```\n *\n * You don't have to pass in a complete object to the association functions, if your associated model has a single primary key:\n *\n * ```js\n * user.addPicture(req.query.pid) // Here pid is just an integer, representing the primary key of the picture\n * ```\n *\n * In the example above we have specified that a user belongs to his profile picture. Conceptually, this might not make sense, but since we want to add the foreign key to the user model this is the way to do it.\n *\n * Note how we also specified `constraints: false` for profile picture. This is because we add a foreign key from user to picture (profilePictureId), and from picture to user (userId). If we were to add foreign keys to both, it would create a cyclic dependency, and sequelize would not know which table to create first, since user depends on picture, and picture depends on user. These kinds of problems are detected by sequelize before the models are synced to the database, and you will get an error along the lines of `Error: Cyclic dependency found. 'users' is dependent of itself`. If you encounter this, you should either disable some constraints, or rethink your associations completely.\n */\nclass Association {\n  constructor(source, target, options = {}) {\n    /**\n     * @type {Model}\n     */\n    this.source = source;\n\n    /**\n     * @type {Model}\n     */\n    this.target = target;\n\n    this.options = options;\n    this.scope = options.scope;\n    this.isSelfAssociation = this.source === this.target;\n    this.as = options.as;\n\n    /**\n     * The type of the association. One of `HasMany`, `BelongsTo`, `HasOne`, `BelongsToMany`\n     *\n     * @type {string}\n     */\n    this.associationType = '';\n\n    if (source.hasAlias(options.as)) {\n      throw new AssociationError(`You have used the alias ${options.as} in two separate associations. ` +\n      'Aliased associations must have unique aliases.'\n      );\n    }\n  }\n\n  /**\n   * Normalize input\n   *\n   * @param {Array|string} input it may be array or single obj, instance or primary key\n   *\n   * @private\n   * @returns {Array} built objects\n   */\n  toInstanceArray(input) {\n    if (!Array.isArray(input)) {\n      input = [input];\n    }\n\n    return input.map(element => {\n      if (element instanceof this.target) return element;\n\n      const tmpInstance = {};\n      tmpInstance[this.target.primaryKeyAttribute] = element;\n\n      return this.target.build(tmpInstance, { isNewRecord: false });\n    });\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return this.as;\n  }\n}\n\nmodule.exports = Association;\n"],"mappings":";AAEA,MAAM,EAAE,qBAAqB,QAAQ;AA+ErC,kBAAkB;AAAA,EAChB,YAAY,QAAQ,QAAQ,UAAU,IAAI;AAIxC,SAAK,SAAS;AAKd,SAAK,SAAS;AAEd,SAAK,UAAU;AACf,SAAK,QAAQ,QAAQ;AACrB,SAAK,oBAAoB,KAAK,WAAW,KAAK;AAC9C,SAAK,KAAK,QAAQ;AAOlB,SAAK,kBAAkB;AAEvB,QAAI,OAAO,SAAS,QAAQ,KAAK;AAC/B,YAAM,IAAI,iBAAiB,2BAA2B,QAAQ;AAAA;AAAA;AAAA,EAclE,gBAAgB,OAAO;AACrB,QAAI,CAAC,MAAM,QAAQ,QAAQ;AACzB,cAAQ,CAAC;AAAA;AAGX,WAAO,MAAM,IAAI,aAAW;AAC1B,UAAI,mBAAmB,KAAK;AAAQ,eAAO;AAE3C,YAAM,cAAc;AACpB,kBAAY,KAAK,OAAO,uBAAuB;AAE/C,aAAO,KAAK,OAAO,MAAM,aAAa,EAAE,aAAa;AAAA;AAAA;AAAA,GAIxD,OAAO,IAAI,iCAAiC;AAC3C,WAAO,KAAK;AAAA;AAAA;AAIhB,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/belongs-to-many.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,36,37,28,38,42,38,36,63,63,35,41,40,35,108,138,5,38,30,30,8,5,43,34,38,60,35,30,45,92,5,18,28,37,36,33,14,29,26,46,10,7,12,48,51,5,159,33,36,5,55,58,15,45,15,77,34,34,7,7,79,92,33,46,94,12,35,55,94,5,38,49,58,104,40,22,74,22,12,14,70,7,5,68,19,18,18,18,16,8,22,35,34,47,57,42,7,41,55,72,49,59,51,34,9,7,33,47,7,40,55,72,49,34,9,7,29,40,7,5,23,45,5,151,39,58,62,22,26,26,34,28,34,34,40,34,29,29,6,3,32,46,57,92,12,36,67,42,22,19,5,44,53,86,12,35,36,7,34,63,96,22,19,5,3,23,38,43,76,79,71,39,16,65,9,38,7,7,64,41,47,64,41,47,94,92,42,69,47,20,88,43,14,103,7,66,5,61,59,28,8,5,59,57,28,8,5,45,36,42,27,8,117,117,36,45,36,45,36,42,27,8,115,115,36,45,36,45,5,86,84,43,102,105,124,62,5,61,128,5,68,33,7,72,33,7,70,34,32,33,7,68,31,7,72,31,7,70,32,32,33,7,53,91,40,9,93,41,41,42,9,5,39,16,3,14,127,21,23,20,25,30,6,54,3,32,45,33,19,21,21,50,5,21,17,19,21,7,6,50,24,67,26,51,7,53,24,57,10,7,46,28,40,48,23,59,27,9,5,28,65,27,33,14,43,7,5,66,68,5,34,3,34,44,39,26,104,6,37,23,25,53,38,3,49,36,30,5,44,15,18,19,35,29,7,61,44,32,7,14,34,8,7,21,17,41,21,7,6,70,140,3,60,28,37,37,39,53,40,32,12,72,5,34,49,27,49,38,26,54,160,45,112,22,48,16,66,64,35,11,102,47,88,22,60,58,15,17,11,9,7,44,93,33,56,122,32,13,7,43,70,147,56,66,34,11,104,7,35,6,9,125,51,21,44,38,18,5,3,52,22,31,42,29,44,44,46,60,52,61,34,50,88,34,49,26,37,37,39,132,35,40,16,72,102,118,42,11,9,7,43,70,87,102,65,76,63,28,11,111,7,48,70,100,69,33,9,100,54,51,15,7,35,6,9,132,67,26,21,44,36,18,5,3,57,29,28,77,19,74,120,6,100,3,49,29,28,26,33,17,23,8,5,28,47,27,79,7,5,81,102,31,3,33,36,31,5,32,38,5,27,3,1,31,45,39,43,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/associations/belongs-to-many.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst BelongsTo = require('./belongs-to');\nconst HasMany = require('./has-many');\nconst HasOne = require('./has-one');\nconst AssociationError = require('../errors').AssociationError;\nconst EmptyResultError = require('../errors').EmptyResultError;\nconst Op = require('../operators');\n\n/**\n * Many-to-many association with a join table.\n *\n * When the join table has additional attributes, these can be passed in the options object:\n *\n * ```js\n * UserProject = sequelize.define('user_project', {\n *   role: Sequelize.STRING\n * });\n * User.belongsToMany(Project, { through: UserProject });\n * Project.belongsToMany(User, { through: UserProject });\n * // through is required!\n *\n * user.addProject(project, { through: { role: 'manager' }});\n * ```\n *\n * All methods allow you to pass either a persisted instance, its primary key, or a mixture:\n *\n * ```js\n * const project = await Project.create({ id: 11 });\n * await user.addProjects([project, 12]);\n * ```\n *\n * If you want to set several target instances, but with different attributes you have to set the attributes on the instance, using a property with the name of the through model:\n *\n * ```js\n * p1.UserProjects = {\n *   started: true\n * }\n * user.setProjects([p1, p2], { through: { started: false }}) // The default value is false, but p1 overrides that.\n * ```\n *\n * Similarly, when fetching through a join table with custom attributes, these attributes will be available as an object with the name of the through model.\n * ```js\n * const projects = await user.getProjects();\n * const p1 = projects[0];\n * p1.UserProjects.started // Is this project started yet?\n * ```\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.belongsToMany(Project)` the getter will be `user.getProjects()`.\n *\n * @see {@link Model.belongsToMany}\n */\nclass BelongsToMany extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    if (this.options.through === undefined || this.options.through === true || this.options.through === null) {\n      throw new AssociationError(`${source.name}.belongsToMany(${target.name}) requires through option, pass either a string or a model`);\n    }\n\n    if (!this.options.through.model) {\n      this.options.through = {\n        model: options.through\n      };\n    }\n\n    this.associationType = 'BelongsToMany';\n    this.targetAssociation = null;\n    this.sequelize = source.sequelize;\n    this.through = { ...this.options.through };\n    this.isMultiAssociation = true;\n    this.doubleLinked = false;\n\n    if (!this.as && this.isSelfAssociation) {\n      throw new AssociationError('\\'as\\' must be defined for many-to-many self-associations');\n    }\n\n    if (this.as) {\n      this.isAliased = true;\n\n      if (_.isPlainObject(this.as)) {\n        this.options.name = this.as;\n        this.as = this.as.plural;\n      } else {\n        this.options.name = {\n          plural: this.as,\n          singular: Utils.singularize(this.as)\n        };\n      }\n    } else {\n      this.as = this.target.options.name.plural;\n      this.options.name = this.target.options.name;\n    }\n\n    this.combinedTableName = Utils.combineTableNames(\n      this.source.tableName,\n      this.isSelfAssociation ? this.as || this.target.tableName : this.target.tableName\n    );\n\n    /*\n    * If self association, this is the target association - Unless we find a pairing association\n    */\n    if (this.isSelfAssociation) {\n      this.targetAssociation = this;\n    }\n\n    /*\n    * Find paired association (if exists)\n    */\n    _.each(this.target.associations, association => {\n      if (association.associationType !== 'BelongsToMany') return;\n      if (association.target !== this.source) return;\n\n      if (this.options.through.model === association.options.through.model) {\n        this.paired = association;\n        association.paired = this;\n      }\n    });\n\n    /*\n    * Default/generated source/target keys\n    */\n    this.sourceKey = this.options.sourceKey || this.source.primaryKeyAttribute;\n    this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n\n    if (this.options.targetKey) {\n      this.targetKey = this.options.targetKey;\n      this.targetKeyField = this.target.rawAttributes[this.targetKey].field || this.targetKey;\n    } else {\n      this.targetKeyDefault = true;\n      this.targetKey = this.target.primaryKeyAttribute;\n      this.targetKeyField = this.target.rawAttributes[this.targetKey].field || this.targetKey;\n    }\n\n    this._createForeignAndOtherKeys();\n\n    if (typeof this.through.model === 'string') {\n      if (!this.sequelize.isDefined(this.through.model)) {\n        this.through.model = this.sequelize.define(this.through.model, {}, Object.assign(this.options, {\n          tableName: this.through.model,\n          indexes: [], //we don't want indexes here (as referenced in #2416)\n          paranoid: this.through.paranoid ? this.through.paranoid : false, // Default to non-paranoid join (referenced in #11991)\n          validate: {} // Don't propagate model-level validations\n        }));\n      } else {\n        this.through.model = this.sequelize.model(this.through.model);\n      }\n    }\n\n    Object.assign(this.options, _.pick(this.through.model.options, [\n      'timestamps', 'createdAt', 'updatedAt', 'deletedAt', 'paranoid'\n    ]));\n\n    if (this.paired) {\n      let needInjectPaired = false;\n\n      if (this.targetKeyDefault) {\n        this.targetKey = this.paired.sourceKey;\n        this.targetKeyField = this.paired.sourceKeyField;\n        this._createForeignAndOtherKeys();\n      }\n      if (this.paired.targetKeyDefault) {\n        // in this case paired.otherKey depends on paired.targetKey,\n        // so cleanup previously wrong generated otherKey\n        if (this.paired.targetKey !== this.sourceKey) {\n          delete this.through.model.rawAttributes[this.paired.otherKey];\n          this.paired.targetKey = this.sourceKey;\n          this.paired.targetKeyField = this.sourceKeyField;\n          this.paired._createForeignAndOtherKeys();\n          needInjectPaired = true;\n        }\n      }\n\n      if (this.otherKeyDefault) {\n        this.otherKey = this.paired.foreignKey;\n      }\n      if (this.paired.otherKeyDefault) {\n        // If paired otherKey was inferred we should make sure to clean it up\n        // before adding a new one that matches the foreignKey\n        if (this.paired.otherKey !== this.foreignKey) {\n          delete this.through.model.rawAttributes[this.paired.otherKey];\n          this.paired.otherKey = this.foreignKey;\n          needInjectPaired = true;\n        }\n      }\n\n      if (needInjectPaired) {\n        this.paired._injectAttributes();\n      }\n    }\n\n    if (this.through) {\n      this.throughModel = this.through.model;\n    }\n\n    this.options.tableName = this.combinedName = this.through.model === Object(this.through.model) ? this.through.model.tableName : this.through.model;\n\n    this.associationAccessor = this.as;\n\n    // Get singular and plural names, trying to uppercase the first letter, unless the model forbids it\n    const plural = _.upperFirst(this.options.name.plural);\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: `get${plural}`,\n      set: `set${plural}`,\n      addMultiple: `add${plural}`,\n      add: `add${singular}`,\n      create: `create${singular}`,\n      remove: `remove${singular}`,\n      removeMultiple: `remove${plural}`,\n      hasSingle: `has${singular}`,\n      hasAll: `has${plural}`,\n      count: `count${plural}`\n    };\n  }\n\n  _createForeignAndOtherKeys() {\n    /*\n    * Default/generated foreign/other keys\n    */\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else {\n      this.foreignKeyAttribute = {};\n      this.foreignKey = this.options.foreignKey || Utils.camelize(\n        [\n          this.source.options.name.singular,\n          this.sourceKey\n        ].join('_')\n      );\n    }\n\n    if (_.isObject(this.options.otherKey)) {\n      this.otherKeyAttribute = this.options.otherKey;\n      this.otherKey = this.otherKeyAttribute.name || this.otherKeyAttribute.fieldName;\n    } else {\n      if (!this.options.otherKey) {\n        this.otherKeyDefault = true;\n      }\n\n      this.otherKeyAttribute = {};\n      this.otherKey = this.options.otherKey || Utils.camelize(\n        [\n          this.isSelfAssociation ? Utils.singularize(this.as) : this.target.options.name.singular,\n          this.targetKey\n        ].join('_')\n      );\n    }\n  }\n\n  // the id is in the target table\n  // or in an extra table which connects two tables\n  _injectAttributes() {\n    this.identifier = this.foreignKey;\n    this.foreignIdentifier = this.otherKey;\n\n    // remove any PKs previously defined by sequelize\n    // but ignore any keys that are part of this association (#5865)\n    _.each(this.through.model.rawAttributes, (attribute, attributeName) => {\n      if (attribute.primaryKey === true && attribute._autoGenerated === true) {\n        if ([this.foreignKey, this.otherKey].includes(attributeName)) {\n          // this key is still needed as it's part of the association\n          // so just set primaryKey to false\n          attribute.primaryKey = false;\n        }\n        else {\n          delete this.through.model.rawAttributes[attributeName];\n        }\n        this.primaryKeyDeleted = true;\n      }\n    });\n\n    const sourceKey = this.source.rawAttributes[this.sourceKey];\n    const sourceKeyType = sourceKey.type;\n    const sourceKeyField = this.sourceKeyField;\n    const targetKey = this.target.rawAttributes[this.targetKey];\n    const targetKeyType = targetKey.type;\n    const targetKeyField = this.targetKeyField;\n    const sourceAttribute = { type: sourceKeyType, ...this.foreignKeyAttribute };\n    const targetAttribute = { type: targetKeyType, ...this.otherKeyAttribute };\n\n    if (this.primaryKeyDeleted === true) {\n      targetAttribute.primaryKey = sourceAttribute.primaryKey = true;\n    } else if (this.through.unique !== false) {\n      let uniqueKey;\n      if (typeof this.options.uniqueKey === 'string' && this.options.uniqueKey !== '') {\n        uniqueKey = this.options.uniqueKey;\n      } else {\n        uniqueKey = [this.through.model.tableName, this.foreignKey, this.otherKey, 'unique'].join('_');\n      }\n      targetAttribute.unique = sourceAttribute.unique = uniqueKey;\n    }\n\n    if (!this.through.model.rawAttributes[this.foreignKey]) {\n      this.through.model.rawAttributes[this.foreignKey] = {\n        _autoGenerated: true\n      };\n    }\n\n    if (!this.through.model.rawAttributes[this.otherKey]) {\n      this.through.model.rawAttributes[this.otherKey] = {\n        _autoGenerated: true\n      };\n    }\n\n    if (this.options.constraints !== false) {\n      sourceAttribute.references = {\n        model: this.source.getTableName(),\n        key: sourceKeyField\n      };\n      // For the source attribute the passed option is the priority\n      sourceAttribute.onDelete = this.options.onDelete || this.through.model.rawAttributes[this.foreignKey].onDelete;\n      sourceAttribute.onUpdate = this.options.onUpdate || this.through.model.rawAttributes[this.foreignKey].onUpdate;\n\n      if (!sourceAttribute.onDelete) sourceAttribute.onDelete = 'CASCADE';\n      if (!sourceAttribute.onUpdate) sourceAttribute.onUpdate = 'CASCADE';\n\n      targetAttribute.references = {\n        model: this.target.getTableName(),\n        key: targetKeyField\n      };\n      // But the for target attribute the previously defined option is the priority (since it could've been set by another belongsToMany call)\n      targetAttribute.onDelete = this.through.model.rawAttributes[this.otherKey].onDelete || this.options.onDelete;\n      targetAttribute.onUpdate = this.through.model.rawAttributes[this.otherKey].onUpdate || this.options.onUpdate;\n\n      if (!targetAttribute.onDelete) targetAttribute.onDelete = 'CASCADE';\n      if (!targetAttribute.onUpdate) targetAttribute.onUpdate = 'CASCADE';\n    }\n\n    Object.assign(this.through.model.rawAttributes[this.foreignKey], sourceAttribute);\n    Object.assign(this.through.model.rawAttributes[this.otherKey], targetAttribute);\n\n    this.through.model.refreshAttributes();\n\n    this.identifierField = this.through.model.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.foreignIdentifierField = this.through.model.rawAttributes[this.otherKey].field || this.otherKey;\n\n    // For Db2 server, a reference column of a FOREIGN KEY must be unique\n    // else, server throws SQL0573N error. Hence, setting it here explicitly\n    // for non primary columns.\n    if (this.options.sequelize.options.dialect === 'db2' &&\n        this.source.rawAttributes[this.sourceKey].primaryKey !== true) {\n      this.source.rawAttributes[this.sourceKey].unique = true;\n    }\n\n    if (this.paired && !this.paired.foreignIdentifierField) {\n      this.paired.foreignIdentifierField = this.through.model.rawAttributes[this.paired.otherKey].field || this.paired.otherKey;\n    }\n\n    this.toSource = new BelongsTo(this.through.model, this.source, {\n      foreignKey: this.foreignKey\n    });\n    this.manyFromSource = new HasMany(this.source, this.through.model, {\n      foreignKey: this.foreignKey\n    });\n    this.oneFromSource = new HasOne(this.source, this.through.model, {\n      foreignKey: this.foreignKey,\n      sourceKey: this.sourceKey,\n      as: this.through.model.name\n    });\n\n    this.toTarget = new BelongsTo(this.through.model, this.target, {\n      foreignKey: this.otherKey\n    });\n    this.manyFromTarget = new HasMany(this.target, this.through.model, {\n      foreignKey: this.otherKey\n    });\n    this.oneFromTarget = new HasOne(this.target, this.through.model, {\n      foreignKey: this.otherKey,\n      sourceKey: this.targetKey,\n      as: this.through.model.name\n    });\n\n    if (this.paired && this.paired.otherKeyDefault) {\n      this.paired.toTarget = new BelongsTo(this.paired.through.model, this.paired.target, {\n        foreignKey: this.paired.otherKey\n      });\n\n      this.paired.oneFromTarget = new HasOne(this.paired.target, this.paired.through.model, {\n        foreignKey: this.paired.otherKey,\n        sourceKey: this.paired.targetKey,\n        as: this.paired.through.model.name\n      });\n    }\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'count', 'hasSingle', 'hasAll', 'set', 'add', 'addMultiple', 'remove', 'removeMultiple', 'create'];\n    const aliases = {\n      hasSingle: 'has',\n      hasAll: 'has',\n      addMultiple: 'add',\n      removeMultiple: 'remove'\n    };\n\n    Helpers.mixinMethods(this, obj, methods, aliases);\n  }\n\n  /**\n   * Get everything currently associated with this, using an optional where clause.\n   *\n   * @see\n   * {@link Model} for a full explanation of options\n   *\n   * @param {Model} instance instance\n   * @param {object} [options] find options\n   * @param {object} [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {string} [options.schema] Apply a schema on the related model\n   * @param {object} [options.through.where] An optional where clause applied to through model (join table)\n   * @param {boolean} [options.through.paranoid=true] If true, only non-deleted records will be returned from the join table. If false, both deleted and non-deleted records will be returned. Only applies if through model is paranoid\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  async get(instance, options) {\n    options = Utils.cloneDeep(options) || {};\n\n    const through = this.through;\n    let scopeWhere;\n    let throughWhere;\n\n    if (this.scope) {\n      scopeWhere = { ...this.scope };\n    }\n\n    options.where = {\n      [Op.and]: [\n        scopeWhere,\n        options.where\n      ]\n    };\n\n    if (Object(through.model) === through.model) {\n      throughWhere = {};\n      throughWhere[this.foreignKey] = instance.get(this.sourceKey);\n\n      if (through.scope) {\n        Object.assign(throughWhere, through.scope);\n      }\n\n      //If a user pass a where on the options through options, make an \"and\" with the current throughWhere\n      if (options.through && options.through.where) {\n        throughWhere = {\n          [Op.and]: [throughWhere, options.through.where]\n        };\n      }\n\n      options.include = options.include || [];\n      options.include.push({\n        association: this.oneFromTarget,\n        attributes: options.joinTableAttributes,\n        required: true,\n        paranoid: _.get(options.through, 'paranoid', true),\n        where: throughWhere\n      });\n    }\n\n    let model = this.target;\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        model = model.unscoped();\n      } else {\n        model = model.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      model = model.schema(options.schema, options.schemaDelimiter);\n    }\n\n    return model.findAll(options);\n  }\n\n  /**\n   * Count everything currently associated with this, using an optional where clause.\n   *\n   * @param {Model} instance instance\n   * @param {object} [options] find options\n   * @param {object} [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   *\n   * @returns {Promise<number>}\n   */\n  async count(instance, options) {\n    const sequelize = this.target.sequelize;\n\n    options = Utils.cloneDeep(options);\n    options.attributes = [\n      [sequelize.fn('COUNT', sequelize.col([this.target.name, this.targetKeyField].join('.'))), 'count']\n    ];\n    options.joinTableAttributes = [];\n    options.raw = true;\n    options.plain = true;\n\n    const result = await this.get(instance, options);\n\n    return parseInt(result.count, 10);\n  }\n\n  /**\n   * Check if one or more instance(s) are associated with this. If a list of instances is passed, the function returns true if _all_ instances are associated\n   *\n   * @param {Model} sourceInstance source instance to check for an association with\n   * @param {Model|Model[]|string[]|string|number[]|number} [instances] Can be an array of instances or their primary keys\n   * @param {object} [options] Options passed to getAssociations\n   *\n   * @returns {Promise<boolean>}\n   */\n  async has(sourceInstance, instances, options) {\n    if (!Array.isArray(instances)) {\n      instances = [instances];\n    }\n\n    options = {\n      raw: true,\n      ...options,\n      scope: false,\n      attributes: [this.targetKey],\n      joinTableAttributes: []\n    };\n\n    const instancePrimaryKeys = instances.map(instance => {\n      if (instance instanceof this.target) {\n        return instance.where();\n      }\n      return {\n        [this.targetKey]: instance\n      };\n    });\n\n    options.where = {\n      [Op.and]: [\n        { [Op.or]: instancePrimaryKeys },\n        options.where\n      ]\n    };\n\n    const associatedObjects = await this.get(sourceInstance, options);\n\n    return _.differenceWith(instancePrimaryKeys, associatedObjects,\n      (a, b) => _.isEqual(a[this.targetKey], b[this.targetKey])).length === 0;\n  }\n\n  /**\n   * Set the associated models by passing an array of instances or their primary keys.\n   * Everything that it not in the passed array will be un-associated.\n   *\n   * @param {Model} sourceInstance source instance to associate new instances with\n   * @param {Model|Model[]|string[]|string|number[]|number} [newAssociatedObjects] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {object} [options] Options passed to `through.findAll`, `bulkCreate`, `update` and `destroy`\n   * @param {object} [options.validate] Run validation for the join model\n   * @param {object} [options.through] Additional attributes for the join table.\n   *\n   * @returns {Promise}\n   */\n  async set(sourceInstance, newAssociatedObjects, options) {\n    options = options || {};\n\n    const sourceKey = this.sourceKey;\n    const targetKey = this.targetKey;\n    const identifier = this.identifier;\n    const foreignIdentifier = this.foreignIdentifier;\n\n    if (newAssociatedObjects === null) {\n      newAssociatedObjects = [];\n    } else {\n      newAssociatedObjects = this.toInstanceArray(newAssociatedObjects);\n    }\n    const where = {\n      [identifier]: sourceInstance.get(sourceKey),\n      ...this.through.scope\n    };\n\n    const updateAssociations = currentRows => {\n      const obsoleteAssociations = [];\n      const promises = [];\n      const defaultAttributes = options.through || {};\n\n      const unassociatedObjects = newAssociatedObjects.filter(obj =>\n        !currentRows.some(currentRow => currentRow[foreignIdentifier] === obj.get(targetKey))\n      );\n\n      for (const currentRow of currentRows) {\n        const newObj = newAssociatedObjects.find(obj => currentRow[foreignIdentifier] === obj.get(targetKey));\n\n        if (!newObj) {\n          obsoleteAssociations.push(currentRow);\n        } else {\n          let throughAttributes = newObj[this.through.model.name];\n          // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)\n          if (throughAttributes instanceof this.through.model) {\n            throughAttributes = {};\n          }\n\n          const attributes = { ...defaultAttributes, ...throughAttributes };\n\n          if (Object.keys(attributes).length) {\n            promises.push(\n              this.through.model.update(attributes, Object.assign(options, {\n                where: {\n                  [identifier]: sourceInstance.get(sourceKey),\n                  [foreignIdentifier]: newObj.get(targetKey)\n                }\n              }\n              ))\n            );\n          }\n        }\n      }\n\n      if (obsoleteAssociations.length > 0) {\n        promises.push(\n          this.through.model.destroy({\n            ...options,\n            where: {\n              [identifier]: sourceInstance.get(sourceKey),\n              [foreignIdentifier]: obsoleteAssociations.map(obsoleteAssociation => obsoleteAssociation[foreignIdentifier]),\n              ...this.through.scope\n            }\n          })\n        );\n      }\n\n      if (unassociatedObjects.length > 0) {\n        const bulk = unassociatedObjects.map(unassociatedObject => {\n          return {\n            ...defaultAttributes,\n            ...unassociatedObject[this.through.model.name],\n            [identifier]: sourceInstance.get(sourceKey),\n            [foreignIdentifier]: unassociatedObject.get(targetKey),\n            ...this.through.scope\n          };\n        });\n\n        promises.push(this.through.model.bulkCreate(bulk, { validate: true, ...options }));\n      }\n\n      return Promise.all(promises);\n    };\n\n    try {\n      const currentRows = await this.through.model.findAll({ ...options, where, raw: true });\n      return await updateAssociations(currentRows);\n    } catch (error) {\n      if (error instanceof EmptyResultError) return updateAssociations([]);\n      throw error;\n    }\n  }\n\n  /**\n   * Associate one or several rows with source instance. It will not un-associate any already associated instance\n   * that may be missing from `newInstances`.\n   *\n   * @param {Model} sourceInstance source instance to associate new instances with\n   * @param {Model|Model[]|string[]|string|number[]|number} [newInstances] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {object} [options] Options passed to `through.findAll`, `bulkCreate` and `update`\n   * @param {object} [options.validate] Run validation for the join model.\n   * @param {object} [options.through] Additional attributes for the join table.\n   *\n   * @returns {Promise}\n   */\n  async add(sourceInstance, newInstances, options) {\n    // If newInstances is null or undefined, no-op\n    if (!newInstances) return Promise.resolve();\n\n    options = { ...options };\n\n    const association = this;\n    const sourceKey = association.sourceKey;\n    const targetKey = association.targetKey;\n    const identifier = association.identifier;\n    const foreignIdentifier = association.foreignIdentifier;\n    const defaultAttributes = options.through || {};\n\n    newInstances = association.toInstanceArray(newInstances);\n\n    const where = {\n      [identifier]: sourceInstance.get(sourceKey),\n      [foreignIdentifier]: newInstances.map(newInstance => newInstance.get(targetKey)),\n      ...association.through.scope\n    };\n\n    const updateAssociations = currentRows => {\n      const promises = [];\n      const unassociatedObjects = [];\n      const changedAssociations = [];\n      for (const obj of newInstances) {\n        const existingAssociation = currentRows && currentRows.find(current => current[foreignIdentifier] === obj.get(targetKey));\n\n        if (!existingAssociation) {\n          unassociatedObjects.push(obj);\n        } else {\n          const throughAttributes = obj[association.through.model.name];\n          const attributes = { ...defaultAttributes, ...throughAttributes };\n\n          if (Object.keys(attributes).some(attribute => attributes[attribute] !== existingAssociation[attribute])) {\n            changedAssociations.push(obj);\n          }\n        }\n      }\n\n      if (unassociatedObjects.length > 0) {\n        const bulk = unassociatedObjects.map(unassociatedObject => {\n          const throughAttributes = unassociatedObject[association.through.model.name];\n          const attributes = { ...defaultAttributes, ...throughAttributes };\n\n          attributes[identifier] = sourceInstance.get(sourceKey);\n          attributes[foreignIdentifier] = unassociatedObject.get(targetKey);\n\n          Object.assign(attributes, association.through.scope);\n\n          return attributes;\n        });\n\n        promises.push(association.through.model.bulkCreate(bulk, { validate: true, ...options }));\n      }\n\n      for (const assoc of changedAssociations) {\n        let throughAttributes = assoc[association.through.model.name];\n        const attributes = { ...defaultAttributes, ...throughAttributes };\n        // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)\n        if (throughAttributes instanceof association.through.model) {\n          throughAttributes = {};\n        }\n\n        promises.push(association.through.model.update(attributes, Object.assign(options, { where: {\n          [identifier]: sourceInstance.get(sourceKey),\n          [foreignIdentifier]: assoc.get(targetKey)\n        } })));\n      }\n\n      return Promise.all(promises);\n    };\n\n    try {\n      const currentRows = await association.through.model.findAll({ ...options, where, raw: true });\n      const [associations] = await updateAssociations(currentRows);\n      return associations;\n    } catch (error) {\n      if (error instanceof EmptyResultError) return updateAssociations();\n      throw error;\n    }\n  }\n\n  /**\n   * Un-associate one or more instance(s).\n   *\n   * @param {Model} sourceInstance instance to un associate instances with\n   * @param {Model|Model[]|string|string[]|number|number[]} [oldAssociatedObjects] Can be an Instance or its primary key, or a mixed array of instances and primary keys\n   * @param {object} [options] Options passed to `through.destroy`\n   *\n   * @returns {Promise}\n   */\n  remove(sourceInstance, oldAssociatedObjects, options) {\n    const association = this;\n\n    options = options || {};\n\n    oldAssociatedObjects = association.toInstanceArray(oldAssociatedObjects);\n\n    const where = {\n      [association.identifier]: sourceInstance.get(association.sourceKey),\n      [association.foreignIdentifier]: oldAssociatedObjects.map(newInstance => newInstance.get(association.targetKey))\n    };\n\n    return association.through.model.destroy({ ...options, where });\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance source instance\n   * @param {object} [values] values for target model\n   * @param {object} [options] Options passed to create and add\n   * @param {object} [options.through] Additional attributes for the join table\n   *\n   * @returns {Promise}\n   */\n  async create(sourceInstance, values, options) {\n    const association = this;\n\n    options = options || {};\n    values = values || {};\n\n    if (Array.isArray(options)) {\n      options = {\n        fields: options\n      };\n    }\n\n    if (association.scope) {\n      Object.assign(values, association.scope);\n      if (options.fields) {\n        options.fields = options.fields.concat(Object.keys(association.scope));\n      }\n    }\n\n    // Create the related model instance\n    const newAssociatedObject = await association.target.create(values, options);\n\n    await sourceInstance[association.accessors.add](newAssociatedObject, _.omit(options, ['fields']));\n    return newAssociatedObject;\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.plural) {\n      return this.as === alias.plural;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = BelongsToMany;\nmodule.exports.BelongsToMany = BelongsToMany;\nmodule.exports.default = BelongsToMany;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/has-many.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,36,37,28,38,35,35,40,35,37,34,38,35,34,31,100,5,33,36,5,18,28,37,36,33,14,29,26,46,10,7,12,48,51,5,46,57,92,41,48,5,27,40,42,39,19,5,53,97,97,5,79,52,47,94,12,64,56,5,58,62,39,22,26,26,34,28,34,34,40,34,29,29,6,3,23,27,41,94,23,34,6,63,45,98,109,75,5,135,66,36,36,95,95,92,39,16,3,14,127,21,23,20,25,30,6,54,3,38,21,28,17,15,36,27,25,5,42,21,39,5,20,90,50,32,31,19,16,10,29,14,34,25,10,36,7,12,75,5,81,65,27,33,14,43,7,5,66,68,5,49,17,21,22,40,64,5,38,76,5,18,3,34,39,26,7,109,15,7,6,23,25,53,38,3,55,21,42,42,5,58,19,52,15,7,54,44,32,7,14,51,8,7,21,17,14,21,7,6,70,63,3,55,35,27,12,62,5,132,24,176,175,20,15,42,18,37,21,140,8,102,26,11,5,41,23,18,67,40,154,102,26,11,5,32,26,3,60,25,31,60,35,59,19,19,141,6,103,26,3,63,20,29,6,60,19,60,133,6,103,16,3,54,33,17,23,8,5,28,18,5,21,56,50,27,41,7,5,65,23,43,53,3,33,36,31,5,32,38,5,27,3,1,25,33,33,36,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/associations/has-many.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst Op = require('../operators');\n\n/**\n * One-to-many association\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.hasMany(Project)` the getter will be `user.getProjects()`.\n * If the association is aliased, use the alias instead, e.g. `User.hasMany(Project, { as: 'jobs' })` will be `user.getJobs()`.\n *\n * @see {@link Model.hasMany}\n */\nclass HasMany extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    this.associationType = 'HasMany';\n    this.targetAssociation = null;\n    this.sequelize = source.sequelize;\n    this.isMultiAssociation = true;\n    this.foreignKeyAttribute = {};\n\n    if (this.options.through) {\n      throw new Error('N:M associations are not supported with hasMany. Use belongsToMany instead');\n    }\n\n    /*\n    * If self association, this is the target association\n    */\n    if (this.isSelfAssociation) {\n      this.targetAssociation = this;\n    }\n\n    if (this.as) {\n      this.isAliased = true;\n\n      if (_.isPlainObject(this.as)) {\n        this.options.name = this.as;\n        this.as = this.as.plural;\n      } else {\n        this.options.name = {\n          plural: this.as,\n          singular: Utils.singularize(this.as)\n        };\n      }\n    } else {\n      this.as = this.target.options.name.plural;\n      this.options.name = this.target.options.name;\n    }\n\n    /*\n     * Foreign key setup\n     */\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else if (this.options.foreignKey) {\n      this.foreignKey = this.options.foreignKey;\n    }\n\n    if (!this.foreignKey) {\n      this.foreignKey = Utils.camelize(\n        [\n          this.source.options.name.singular,\n          this.source.primaryKeyAttribute\n        ].join('_')\n      );\n    }\n\n    if (this.target.rawAttributes[this.foreignKey]) {\n      this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n      this.foreignKeyField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    }\n\n    /*\n     * Source key setup\n     */\n    this.sourceKey = this.options.sourceKey || this.source.primaryKeyAttribute;\n\n    if (this.source.rawAttributes[this.sourceKey]) {\n      this.sourceKeyAttribute = this.sourceKey;\n      this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n    } else {\n      this.sourceKeyAttribute = this.source.primaryKeyAttribute;\n      this.sourceKeyField = this.source.primaryKeyField;\n    }\n\n    // Get singular and plural names\n    // try to uppercase the first letter, unless the model forbids it\n    const plural = _.upperFirst(this.options.name.plural);\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.associationAccessor = this.as;\n    this.accessors = {\n      get: `get${plural}`,\n      set: `set${plural}`,\n      addMultiple: `add${plural}`,\n      add: `add${singular}`,\n      create: `create${singular}`,\n      remove: `remove${singular}`,\n      removeMultiple: `remove${plural}`,\n      hasSingle: `has${singular}`,\n      hasAll: `has${plural}`,\n      count: `count${plural}`\n    };\n  }\n\n  // the id is in the target table\n  // or in an extra table which connects two tables\n  _injectAttributes() {\n    const newAttributes = {\n      [this.foreignKey]: {\n        type: this.options.keyType || this.source.rawAttributes[this.sourceKeyAttribute].type,\n        allowNull: true,\n        ...this.foreignKeyAttribute\n      }\n    };\n\n    // Create a new options object for use with addForeignKeyConstraints, to avoid polluting this.options in case it is later used for a n:m\n    const constraintOptions = { ...this.options };\n\n    if (this.options.constraints !== false) {\n      const target = this.target.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];\n      constraintOptions.onDelete = constraintOptions.onDelete || (target.allowNull ? 'SET NULL' : 'CASCADE');\n      constraintOptions.onUpdate = constraintOptions.onUpdate || 'CASCADE';\n    }\n\n    Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.source, this.target, constraintOptions, this.sourceKeyField);\n    Utils.mergeDefaults(this.target.rawAttributes, newAttributes);\n\n    this.target.refreshAttributes();\n    this.source.refreshAttributes();\n\n    this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.foreignKeyField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'count', 'hasSingle', 'hasAll', 'set', 'add', 'addMultiple', 'remove', 'removeMultiple', 'create'];\n    const aliases = {\n      hasSingle: 'has',\n      hasAll: 'has',\n      addMultiple: 'add',\n      removeMultiple: 'remove'\n    };\n\n    Helpers.mixinMethods(this, obj, methods, aliases);\n  }\n\n  /**\n   * Get everything currently associated with this, using an optional where clause.\n   *\n   * @param {Model|Array<Model>} instances source instances\n   * @param {object} [options] find options\n   * @param {object} [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {string} [options.schema] Apply a schema on the related model\n   *\n   * @see\n   * {@link Model.findAll}  for a full explanation of options\n   *\n   * @returns {Promise<Array<Model>>}\n   */\n  async get(instances, options = {}) {\n    const where = {};\n\n    let Model = this.target;\n    let instance;\n    let values;\n\n    if (!Array.isArray(instances)) {\n      instance = instances;\n      instances = undefined;\n    }\n\n    options = { ...options };\n\n    if (this.scope) {\n      Object.assign(where, this.scope);\n    }\n\n    if (instances) {\n      values = instances.map(_instance => _instance.get(this.sourceKey, { raw: true }));\n\n      if (options.limit && instances.length > 1) {\n        options.groupedLimit = {\n          limit: options.limit,\n          on: this, // association\n          values\n        };\n\n        delete options.limit;\n      } else {\n        where[this.foreignKey] = {\n          [Op.in]: values\n        };\n        delete options.groupedLimit;\n      }\n    } else {\n      where[this.foreignKey] = instance.get(this.sourceKey, { raw: true });\n    }\n\n    options.where = options.where ?\n      { [Op.and]: [where, options.where] } :\n      where;\n\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        Model = Model.unscoped();\n      } else {\n        Model = Model.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      Model = Model.schema(options.schema, options.schemaDelimiter);\n    }\n\n    const results = await Model.findAll(options);\n    if (instance) return results;\n\n    const result = {};\n    for (const _instance of instances) {\n      result[_instance.get(this.sourceKey, { raw: true })] = [];\n    }\n\n    for (const _instance of results) {\n      result[_instance.get(this.foreignKey, { raw: true })].push(_instance);\n    }\n\n    return result;\n  }\n\n  /**\n   * Count everything currently associated with this, using an optional where clause.\n   *\n   * @param {Model}        instance the source instance\n   * @param {object}         [options] find & count options\n   * @param {object}         [options.where] An optional where clause to limit the associated models\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   *\n   * @returns {Promise<number>}\n   */\n  async count(instance, options) {\n    options = Utils.cloneDeep(options);\n\n    options.attributes = [\n      [\n        this.sequelize.fn(\n          'COUNT',\n          this.sequelize.col(`${this.target.name}.${this.target.primaryKeyField}`)\n        ),\n        'count'\n      ]\n    ];\n    options.raw = true;\n    options.plain = true;\n\n    const result = await this.get(instance, options);\n\n    return parseInt(result.count, 10);\n  }\n\n  /**\n   * Check if one or more rows are associated with `this`.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {Model|Model[]|string[]|string|number[]|number} [targetInstances] Can be an array of instances or their primary keys\n   * @param {object} [options] Options passed to getAssociations\n   *\n   * @returns {Promise}\n   */\n  async has(sourceInstance, targetInstances, options) {\n    const where = {};\n\n    if (!Array.isArray(targetInstances)) {\n      targetInstances = [targetInstances];\n    }\n\n    options = {\n      ...options,\n      scope: false,\n      attributes: [this.target.primaryKeyAttribute],\n      raw: true\n    };\n\n    where[Op.or] = targetInstances.map(instance => {\n      if (instance instanceof this.target) {\n        return instance.where();\n      }\n      return {\n        [this.target.primaryKeyAttribute]: instance\n      };\n    });\n\n    options.where = {\n      [Op.and]: [\n        where,\n        options.where\n      ]\n    };\n\n    const associatedObjects = await this.get(sourceInstance, options);\n\n    return associatedObjects.length === targetInstances.length;\n  }\n\n  /**\n   * Set the associated models by passing an array of persisted instances or their primary keys. Everything that is not in the passed array will be un-associated\n   *\n   * @param {Model} sourceInstance source instance to associate new instances with\n   * @param {Model|Model[]|string[]|string|number[]|number} [targetInstances] An array of persisted instances or primary key of instances to associate with this. Pass `null` or `undefined` to remove all associations.\n   * @param {object} [options] Options passed to `target.findAll` and `update`.\n   * @param {object} [options.validate] Run validation for the join model\n   *\n   * @returns {Promise}\n   */\n  async set(sourceInstance, targetInstances, options) {\n    if (targetInstances === null) {\n      targetInstances = [];\n    } else {\n      targetInstances = this.toInstanceArray(targetInstances);\n    }\n\n    const oldAssociations = await this.get(sourceInstance, { ...options, scope: false, raw: true });\n    const promises = [];\n    const obsoleteAssociations = oldAssociations.filter(old =>\n      !targetInstances.find(obj =>\n        obj[this.target.primaryKeyAttribute] === old[this.target.primaryKeyAttribute]\n      )\n    );\n    const unassociatedObjects = targetInstances.filter(obj =>\n      !oldAssociations.find(old =>\n        obj[this.target.primaryKeyAttribute] === old[this.target.primaryKeyAttribute]\n      )\n    );\n    let updateWhere;\n    let update;\n\n    if (obsoleteAssociations.length > 0) {\n      update = {};\n      update[this.foreignKey] = null;\n\n      updateWhere = {\n        [this.target.primaryKeyAttribute]: obsoleteAssociations.map(associatedObject =>\n          associatedObject[this.target.primaryKeyAttribute]\n        )\n      };\n\n\n      promises.push(this.target.unscoped().update(\n        update,\n        {\n          ...options,\n          where: updateWhere\n        }\n      ));\n    }\n\n    if (unassociatedObjects.length > 0) {\n      updateWhere = {};\n\n      update = {};\n      update[this.foreignKey] = sourceInstance.get(this.sourceKey);\n\n      Object.assign(update, this.scope);\n      updateWhere[this.target.primaryKeyAttribute] = unassociatedObjects.map(unassociatedObject =>\n        unassociatedObject[this.target.primaryKeyAttribute]\n      );\n\n      promises.push(this.target.unscoped().update(\n        update,\n        {\n          ...options,\n          where: updateWhere\n        }\n      ));\n    }\n\n    await Promise.all(promises);\n\n    return sourceInstance;\n  }\n\n  /**\n   * Associate one or more target rows with `this`. This method accepts a Model / string / number to associate a single row,\n   * or a mixed array of Model / string / numbers to associate multiple rows.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {Model|Model[]|string[]|string|number[]|number} [targetInstances] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {object} [options] Options passed to `target.update`.\n   *\n   * @returns {Promise}\n   */\n  async add(sourceInstance, targetInstances, options = {}) {\n    if (!targetInstances) return Promise.resolve();\n\n\n    targetInstances = this.toInstanceArray(targetInstances);\n\n    const update = {\n      [this.foreignKey]: sourceInstance.get(this.sourceKey),\n      ...this.scope\n    };\n\n    const where = {\n      [this.target.primaryKeyAttribute]: targetInstances.map(unassociatedObject =>\n        unassociatedObject.get(this.target.primaryKeyAttribute)\n      )\n    };\n\n    await this.target.unscoped().update(update, { ...options, where });\n\n    return sourceInstance;\n  }\n\n  /**\n   * Un-associate one or several target rows.\n   *\n   * @param {Model} sourceInstance instance to un associate instances with\n   * @param {Model|Model[]|string|string[]|number|number[]} [targetInstances] Can be an Instance or its primary key, or a mixed array of instances and primary keys\n   * @param {object} [options] Options passed to `target.update`\n   *\n   * @returns {Promise}\n   */\n  async remove(sourceInstance, targetInstances, options = {}) {\n    const update = {\n      [this.foreignKey]: null\n    };\n\n    targetInstances = this.toInstanceArray(targetInstances);\n\n    const where = {\n      [this.foreignKey]: sourceInstance.get(this.sourceKey),\n      [this.target.primaryKeyAttribute]: targetInstances.map(targetInstance =>\n        targetInstance.get(this.target.primaryKeyAttribute)\n      )\n    };\n\n    await this.target.unscoped().update(update, { ...options, where });\n\n    return this;\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance source instance\n   * @param {object} [values] values for target model instance\n   * @param {object} [options] Options passed to `target.create`\n   *\n   * @returns {Promise}\n   */\n  async create(sourceInstance, values, options = {}) {\n    if (Array.isArray(options)) {\n      options = {\n        fields: options\n      };\n    }\n\n    if (values === undefined) {\n      values = {};\n    }\n\n    if (this.scope) {\n      for (const attribute of Object.keys(this.scope)) {\n        values[attribute] = this.scope[attribute];\n        if (options.fields) options.fields.push(attribute);\n      }\n    }\n\n    values[this.foreignKey] = sourceInstance.get(this.sourceKey);\n    if (options.fields) options.fields.push(this.foreignKey);\n    return await this.target.create(values, options);\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.plural) {\n      return this.as === alias.plural;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = HasMany;\nmodule.exports.HasMany = HasMany;\nmodule.exports.default = HasMany;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/has-one.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,36,37,28,38,35,34,40,35,36,36,34,18,28,27,25,8,12,50,51,5,46,57,92,41,48,5,27,40,63,39,19,5,87,151,5,105,92,81,39,45,53,97,5,62,22,28,28,33,6,3,23,27,41,85,23,34,6,45,98,99,65,5,130,66,36,95,39,16,3,14,45,45,3,33,21,29,17,39,65,27,35,14,45,7,5,66,70,5,36,27,25,5,20,32,76,8,12,60,5,21,39,5,81,20,52,24,42,68,7,40,74,7,20,5,35,3,58,75,74,265,44,42,73,34,37,25,10,5,51,57,31,74,61,28,11,7,52,91,46,5,16,3,49,26,28,21,56,50,29,41,9,7,5,74,25,43,5,53,3,33,36,31,5,34,40,5,27,3,1,24,35,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/associations/has-one.js"],"sourcesContent":["'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst Op = require('../operators');\n\n/**\n * One-to-one association\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.hasOne(Project)` the getter will be `user.getProject()`.\n * This is almost the same as `belongsTo` with one exception - The foreign key will be defined on the target model.\n *\n * @see {@link Model.hasOne}\n */\nclass HasOne extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    this.associationType = 'HasOne';\n    this.isSingleAssociation = true;\n    this.foreignKeyAttribute = {};\n\n    if (this.as) {\n      this.isAliased = true;\n      this.options.name = {\n        singular: this.as\n      };\n    } else {\n      this.as = this.target.options.name.singular;\n      this.options.name = this.target.options.name;\n    }\n\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else if (this.options.foreignKey) {\n      this.foreignKey = this.options.foreignKey;\n    }\n\n    if (!this.foreignKey) {\n      this.foreignKey = Utils.camelize(\n        [\n          Utils.singularize(this.options.as || this.source.name),\n          this.source.primaryKeyAttribute\n        ].join('_')\n      );\n    }\n\n    if (\n      this.options.sourceKey\n      && !this.source.rawAttributes[this.options.sourceKey]\n    ) {\n      throw new Error(`Unknown attribute \"${this.options.sourceKey}\" passed as sourceKey, define this attribute on model \"${this.source.name}\" first`);\n    }\n\n    this.sourceKey = this.sourceKeyAttribute = this.options.sourceKey || this.source.primaryKeyAttribute;\n    this.sourceKeyField = this.source.rawAttributes[this.sourceKey].field || this.sourceKey;\n    this.sourceKeyIsPrimary = this.sourceKey === this.source.primaryKeyAttribute;\n\n    this.associationAccessor = this.as;\n    this.options.useHooks = options.useHooks;\n\n    if (this.target.rawAttributes[this.foreignKey]) {\n      this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n    }\n\n    // Get singular name, trying to uppercase the first letter, unless the model forbids it\n    const singular = _.upperFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: `get${singular}`,\n      set: `set${singular}`,\n      create: `create${singular}`\n    };\n  }\n\n  // the id is in the target table\n  _injectAttributes() {\n    const newAttributes = {\n      [this.foreignKey]: {\n        type: this.options.keyType || this.source.rawAttributes[this.sourceKey].type,\n        allowNull: true,\n        ...this.foreignKeyAttribute\n      }\n    };\n\n    if (this.options.constraints !== false) {\n      const target = this.target.rawAttributes[this.foreignKey] || newAttributes[this.foreignKey];\n      this.options.onDelete = this.options.onDelete || (target.allowNull ? 'SET NULL' : 'CASCADE');\n      this.options.onUpdate = this.options.onUpdate || 'CASCADE';\n    }\n\n    Helpers.addForeignKeyConstraints(newAttributes[this.foreignKey], this.source, this.target, this.options, this.sourceKeyField);\n    Utils.mergeDefaults(this.target.rawAttributes, newAttributes);\n\n    this.target.refreshAttributes();\n\n    this.identifierField = this.target.rawAttributes[this.foreignKey].field || this.foreignKey;\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'set', 'create'];\n\n    Helpers.mixinMethods(this, obj, methods);\n  }\n\n  /**\n   * Get the associated instance.\n   *\n   * @param {Model|Array<Model>} instances source instances\n   * @param {object}         [options] find options\n   * @param {string|boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {string} [options.schema] Apply a schema on the related model\n   *\n   * @see\n   * {@link Model.findOne} for a full explanation of options\n   *\n   * @returns {Promise<Model>}\n   */\n  async get(instances, options) {\n    const where = {};\n\n    let Target = this.target;\n    let instance;\n\n    options = Utils.cloneDeep(options);\n\n    if (Object.prototype.hasOwnProperty.call(options, 'scope')) {\n      if (!options.scope) {\n        Target = Target.unscoped();\n      } else {\n        Target = Target.scope(options.scope);\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(options, 'schema')) {\n      Target = Target.schema(options.schema, options.schemaDelimiter);\n    }\n\n    if (!Array.isArray(instances)) {\n      instance = instances;\n      instances = undefined;\n    }\n\n    if (instances) {\n      where[this.foreignKey] = {\n        [Op.in]: instances.map(_instance => _instance.get(this.sourceKey))\n      };\n    } else {\n      where[this.foreignKey] = instance.get(this.sourceKey);\n    }\n\n    if (this.scope) {\n      Object.assign(where, this.scope);\n    }\n\n    options.where = options.where ?\n      { [Op.and]: [where, options.where] } :\n      where;\n\n    if (instances) {\n      const results = await Target.findAll(options);\n      const result = {};\n      for (const _instance of instances) {\n        result[_instance.get(this.sourceKey, { raw: true })] = null;\n      }\n\n      for (const _instance of results) {\n        result[_instance.get(this.foreignKey, { raw: true })] = _instance;\n      }\n\n      return result;\n    }\n\n    return Target.findOne(options);\n  }\n\n  /**\n   * Set the associated model.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {?Model|string|number} [associatedInstance] An persisted instance or the primary key of an instance to associate with this. Pass `null` or `undefined` to remove the association.\n   * @param {object} [options] Options passed to getAssociation and `target.save`\n   *\n   * @returns {Promise}\n   */\n  async set(sourceInstance, associatedInstance, options) {\n    options = { ...options, scope: false };\n\n    const oldInstance = await sourceInstance[this.accessors.get](options);\n    // TODO Use equals method once #5605 is resolved\n    const alreadyAssociated = oldInstance && associatedInstance && this.target.primaryKeyAttributes.every(attribute =>\n      oldInstance.get(attribute, { raw: true }) === (associatedInstance.get ? associatedInstance.get(attribute, { raw: true }) : associatedInstance)\n    );\n\n    if (oldInstance && !alreadyAssociated) {\n      oldInstance[this.foreignKey] = null;\n\n      await oldInstance.save({\n        ...options,\n        fields: [this.foreignKey],\n        allowNull: [this.foreignKey],\n        association: true\n      });\n    }\n    if (associatedInstance && !alreadyAssociated) {\n      if (!(associatedInstance instanceof this.target)) {\n        const tmpInstance = {};\n        tmpInstance[this.target.primaryKeyAttribute] = associatedInstance;\n        associatedInstance = this.target.build(tmpInstance, {\n          isNewRecord: false\n        });\n      }\n\n      Object.assign(associatedInstance, this.scope);\n      associatedInstance.set(this.foreignKey, sourceInstance.get(this.sourceKeyAttribute));\n\n      return associatedInstance.save(options);\n    }\n\n    return null;\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Model} sourceInstance the source instance\n   * @param {object} [values={}] values to create associated model instance with\n   * @param {object} [options] Options passed to `target.create` and setAssociation.\n   *\n   * @see\n   * {@link Model#create} for a full explanation of options\n   *\n   * @returns {Promise<Model>} The created target model\n   */\n  async create(sourceInstance, values, options) {\n    values = values || {};\n    options = options || {};\n\n    if (this.scope) {\n      for (const attribute of Object.keys(this.scope)) {\n        values[attribute] = this.scope[attribute];\n        if (options.fields) {\n          options.fields.push(attribute);\n        }\n      }\n    }\n\n    values[this.foreignKey] = sourceInstance.get(this.sourceKeyAttribute);\n    if (options.fields) {\n      options.fields.push(this.foreignKey);\n    }\n\n    return await this.target.create(values, options);\n  }\n\n  verifyAssociationAlias(alias) {\n    if (typeof alias === 'string') {\n      return this.as === alias;\n    }\n\n    if (alias && alias.singular) {\n      return this.as === alias.singular;\n    }\n\n    return !this.isAliased;\n  }\n}\n\nmodule.exports = HasOne;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/instance-validator.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,28,33,43,42,55,64,38,25,39,30,17,16,42,104,12,40,5,27,39,31,21,28,3,21,24,58,27,23,37,30,7,29,66,5,3,20,87,3,32,98,71,9,29,21,99,30,5,70,30,3,35,26,72,46,15,7,57,51,15,7,72,57,7,87,88,7,7,41,3,29,26,92,54,15,7,90,9,31,7,41,3,54,61,13,5,26,76,66,68,18,25,12,35,20,9,7,39,94,15,7,47,15,7,95,36,9,40,7,87,50,108,9,3,95,24,45,23,33,19,25,21,28,26,5,40,21,5,18,11,29,84,9,70,19,76,7,5,9,67,17,74,5,3,68,38,57,70,5,81,67,148,5,3,53,42,141,40,44,67,68,27,14,40,7,12,45,5,25,3,47,83,197,85,64,122,139,7,5,152,126,179,7,5,3,68,71,189,53,28,3,1,44,35,53,43,46,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/instance-validator.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst Utils = require('./utils');\nconst sequelizeError = require('./errors');\nconst DataTypes = require('./data-types');\nconst BelongsTo = require('./associations/belongs-to');\nconst validator = require('./utils/validator-extras').validator;\nconst { promisify } = require('util');\n\n/**\n * Instance Validator.\n *\n * @param {Instance} modelInstance The model instance.\n * @param {object} options A dictionary with options.\n *\n * @private\n */\nclass InstanceValidator {\n  constructor(modelInstance, options) {\n    options = {\n      // assign defined and default options\n      hooks: true,\n      ...options\n    };\n\n    if (options.fields && !options.skip) {\n      options.skip = _.difference(Object.keys(modelInstance.constructor.rawAttributes), options.fields);\n    } else {\n      options.skip = options.skip || [];\n    }\n\n    this.options = options;\n\n    this.modelInstance = modelInstance;\n\n    /**\n     * Exposes a reference to validator.js. This allows you to add custom validations using `validator.extend`\n     *\n     * @name validator\n     * @private\n     */\n    this.validator = validator;\n\n    /**\n     *  All errors will be stored here from the validations.\n     *\n     * @type {Array} Will contain keys that correspond to attributes which will\n     *   be Arrays of Errors.\n     * @private\n     */\n    this.errors = [];\n\n    /**\n     * @type {boolean} Indicates if validations are in progress\n     * @private\n     */\n    this.inProgress = false;\n  }\n\n  /**\n   * The main entry point for the Validation module, invoke to start the dance.\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async _validate() {\n    if (this.inProgress) throw new Error('Validations already in progress.');\n\n    this.inProgress = true;\n\n    await Promise.all([\n      this._perAttributeValidators(),\n      this._customValidators()\n    ]);\n\n    if (this.errors.length) {\n      throw new sequelizeError.ValidationError(null, this.errors);\n    }\n  }\n\n  /**\n   * Invoke the Validation sequence and run validation hooks if defined\n   *   - Before Validation Model Hooks\n   *   - Validation\n   *   - On validation success: After Validation Model Hooks\n   *   - On validation failure: Validation Failed Model Hooks\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async validate() {\n    return await (this.options.hooks ? this._validateAndRunHooks() : this._validate());\n  }\n\n  /**\n   * Invoke the Validation sequence and run hooks\n   *   - Before Validation Model Hooks\n   *   - Validation\n   *   - On validation success: After Validation Model Hooks\n   *   - On validation failure: Validation Failed Model Hooks\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async _validateAndRunHooks() {\n    const runHooks = this.modelInstance.constructor.runHooks.bind(this.modelInstance.constructor);\n    await runHooks('beforeValidate', this.modelInstance, this.options);\n\n    try {\n      await this._validate();\n    } catch (error) {\n      const newError = await runHooks('validationFailed', this.modelInstance, this.options, error);\n      throw newError || error;\n    }\n\n    await runHooks('afterValidate', this.modelInstance, this.options);\n    return this.modelInstance;\n  }\n\n  /**\n   * Will run all the validators defined per attribute (built-in validators and custom validators)\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async _perAttributeValidators() {\n    // promisify all attribute invocations\n    const validators = [];\n\n    _.forIn(this.modelInstance.rawAttributes, (rawAttribute, field) => {\n      if (this.options.skip.includes(field)) {\n        return;\n      }\n\n      const value = this.modelInstance.dataValues[field];\n\n      if (value instanceof Utils.SequelizeMethod) {\n        return;\n      }\n\n      if (!rawAttribute._autoGenerated && !rawAttribute.autoIncrement) {\n        // perform validations based on schema\n        this._validateSchema(rawAttribute, field, value);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(this.modelInstance.validators, field)) {\n        validators.push(this._singleAttrValidate(value, field, rawAttribute.allowNull));\n      }\n    });\n\n    return await Promise.all(validators);\n  }\n\n  /**\n   * Will run all the custom validators defined in the model's options.\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async _customValidators() {\n    const validators = [];\n    _.each(this.modelInstance.constructor.options.validate, (validator, validatorType) => {\n      if (this.options.skip.includes(validatorType)) {\n        return;\n      }\n\n      const valprom = this._invokeCustomValidator(validator, validatorType)\n        // errors are handled in settling, stub this\n        .catch(() => {});\n\n      validators.push(valprom);\n    });\n\n    return await Promise.all(validators);\n  }\n\n  /**\n   * Validate a single attribute with all the defined built-in validators and custom validators.\n   *\n   * @private\n   *\n   * @param {*} value Anything.\n   * @param {string} field The field name.\n   * @param {boolean} allowNull Whether or not the schema allows null values\n   *\n   * @returns {Promise} A promise, will always resolve, auto populates error on this.error local object.\n   */\n  async _singleAttrValidate(value, field, allowNull) {\n    // If value is null and allowNull is false, no validators should run (see #9143)\n    if ((value === null || value === undefined) && !allowNull) {\n      // The schema validator (_validateSchema) has already generated the validation error. Nothing to do here.\n      return;\n    }\n\n    // Promisify each validator\n    const validators = [];\n    _.forIn(this.modelInstance.validators[field], (test, validatorType) => {\n\n      if (['isUrl', 'isURL', 'isEmail'].includes(validatorType)) {\n        // Preserve backwards compat. Validator.js now expects the second param to isURL and isEmail to be an object\n        if (typeof test === 'object' && test !== null && test.msg) {\n          test = {\n            msg: test.msg\n          };\n        } else if (test === true) {\n          test = {};\n        }\n      }\n\n      // Custom validators should always run, except if value is null and allowNull is false (see #9143)\n      if (typeof test === 'function') {\n        validators.push(this._invokeCustomValidator(test, validatorType, true, value, field));\n        return;\n      }\n\n      // If value is null, built-in validators should not run (only custom validators have to run) (see #9134).\n      if (value === null || value === undefined) {\n        return;\n      }\n\n      const validatorPromise = this._invokeBuiltinValidator(value, test, validatorType, field);\n      // errors are handled in settling, stub this\n      validatorPromise.catch(() => {});\n      validators.push(validatorPromise);\n    });\n\n    return Promise\n      .all(validators.map(validator => validator.catch(rejection => {\n        const isBuiltIn = !!rejection.validatorName;\n        this._pushError(isBuiltIn, field, rejection, value, rejection.validatorName, rejection.validatorArgs);\n      })));\n  }\n\n  /**\n   * Prepare and invoke a custom validator.\n   *\n   * @private\n   *\n   * @param {Function} validator The custom validator.\n   * @param {string} validatorType the custom validator type (name).\n   * @param {boolean} optAttrDefined Set to true if custom validator was defined from the attribute\n   * @param {*} optValue value for attribute\n   * @param {string} optField field for attribute\n   *\n   * @returns {Promise} A promise.\n   */\n  async _invokeCustomValidator(validator, validatorType, optAttrDefined, optValue, optField) {\n    let isAsync = false;\n\n    const validatorArity = validator.length;\n    // check if validator is async and requires a callback\n    let asyncArity = 1;\n    let errorKey = validatorType;\n    let invokeArgs;\n    if (optAttrDefined) {\n      asyncArity = 2;\n      invokeArgs = optValue;\n      errorKey = optField;\n    }\n    if (validatorArity === asyncArity) {\n      isAsync = true;\n    }\n\n    if (isAsync) {\n      try {\n        if (optAttrDefined) {\n          return await promisify(validator.bind(this.modelInstance, invokeArgs))();\n        }\n        return await promisify(validator.bind(this.modelInstance))();\n      } catch (e) {\n        return this._pushError(false, errorKey, e, optValue, validatorType);\n      }\n    }\n\n    try {\n      return await validator.call(this.modelInstance, invokeArgs);\n    } catch (e) {\n      return this._pushError(false, errorKey, e, optValue, validatorType);\n    }\n  }\n\n  /**\n   * Prepare and invoke a build-in validator.\n   *\n   * @private\n   *\n   * @param {*} value Anything.\n   * @param {*} test The test case.\n   * @param {string} validatorType One of known to Sequelize validators.\n   * @param {string} field The field that is being validated\n   *\n   * @returns {object} An object with specific keys to invoke the validator.\n   */\n  async _invokeBuiltinValidator(value, test, validatorType, field) {\n    // Cast value as string to pass new Validator.js string requirement\n    const valueString = String(value);\n    // check if Validator knows that kind of validation test\n    if (typeof validator[validatorType] !== 'function') {\n      throw new Error(`Invalid validator function: ${validatorType}`);\n    }\n\n    const validatorArgs = this._extractValidatorArgs(test, validatorType, field);\n\n    if (!validator[validatorType](valueString, ...validatorArgs)) {\n      throw Object.assign(new Error(test.msg || `Validation ${validatorType} on ${field} failed`), { validatorName: validatorType, validatorArgs });\n    }\n  }\n\n  /**\n   * Will extract arguments for the validator.\n   *\n   * @param {*} test The test case.\n   * @param {string} validatorType One of known to Sequelize validators.\n   * @param {string} field The field that is being validated.\n   *\n   * @private\n   */\n  _extractValidatorArgs(test, validatorType, field) {\n    let validatorArgs = test.args || test;\n    const isLocalizedValidator = typeof validatorArgs !== 'string' && ['isAlpha', 'isAlphanumeric', 'isMobilePhone'].includes(validatorType);\n\n    if (!Array.isArray(validatorArgs)) {\n      if (validatorType === 'isImmutable') {\n        validatorArgs = [validatorArgs, field, this.modelInstance];\n      } else if (isLocalizedValidator || validatorType === 'isIP') {\n        validatorArgs = [];\n      } else {\n        validatorArgs = [validatorArgs];\n      }\n    } else {\n      validatorArgs = validatorArgs.slice(0);\n    }\n    return validatorArgs;\n  }\n\n  /**\n   * Will validate a single field against its schema definition (isnull).\n   *\n   * @param {object} rawAttribute As defined in the Schema.\n   * @param {string} field The field name.\n   * @param {*} value anything.\n   *\n   * @private\n   */\n  _validateSchema(rawAttribute, field, value) {\n    if (rawAttribute.allowNull === false && (value === null || value === undefined)) {\n      const association = Object.values(this.modelInstance.constructor.associations).find(association => association instanceof BelongsTo && association.foreignKey === rawAttribute.fieldName);\n      if (!association || !this.modelInstance.get(association.associationAccessor)) {\n        const validators = this.modelInstance.validators[field];\n        const errMsg = _.get(validators, 'notNull.msg', `${this.modelInstance.constructor.name}.${field} cannot be null`);\n\n        this.errors.push(new sequelizeError.ValidationErrorItem(\n          errMsg,\n          'notNull Violation', // sequelizeError.ValidationErrorItem.Origins.CORE,\n          field,\n          value,\n          this.modelInstance,\n          'is_null'\n        ));\n      }\n    }\n\n    if (rawAttribute.type instanceof DataTypes.STRING || rawAttribute.type instanceof DataTypes.TEXT || rawAttribute.type instanceof DataTypes.CITEXT) {\n      if (Array.isArray(value) || _.isObject(value) && !(value instanceof Utils.SequelizeMethod) && !Buffer.isBuffer(value)) {\n        this.errors.push(new sequelizeError.ValidationErrorItem(\n          `${field} cannot be an array or an object`,\n          'string violation', // sequelizeError.ValidationErrorItem.Origins.CORE,\n          field,\n          value,\n          this.modelInstance,\n          'not_a_string'\n        ));\n      }\n    }\n  }\n\n  /**\n   * Signs all errors retaining the original.\n   *\n   * @param {boolean}       isBuiltin   - Determines if error is from builtin validator.\n   * @param {string}        errorKey    - name of invalid attribute.\n   * @param {Error|string}  rawError    - The original error.\n   * @param {string|number} value       - The data that triggered the error.\n   * @param {string}        fnName      - Name of the validator, if any\n   * @param {Array}         fnArgs      - Arguments for the validator [function], if any\n   *\n   * @private\n   */\n  _pushError(isBuiltin, errorKey, rawError, value, fnName, fnArgs) {\n    const message = rawError.message || rawError || 'Validation error';\n    const error = new sequelizeError.ValidationErrorItem(\n      message,\n      'Validation error', // sequelizeError.ValidationErrorItem.Origins.FUNCTION,\n      errorKey,\n      value,\n      this.modelInstance,\n      fnName,\n      isBuiltin ? fnName : undefined,\n      isBuiltin ? fnArgs : undefined\n    );\n\n    error[InstanceValidator.RAW_KEY_NAME] = rawError;\n\n    this.errors.push(error);\n  }\n}\n/**\n * The error key for arguments as passed by custom validators\n *\n * @type {string}\n * @private\n */\nInstanceValidator.RAW_KEY_NAME = 'original';\n\nmodule.exports = InstanceValidator;\nmodule.exports.InstanceValidator = InstanceValidator;\nmodule.exports.default = InstanceValidator;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/query-types.js":{"lineLengths":[13,37,19,19,19,27,27,19,19,21,27,29,23,13,29,36,2,39,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/query-types.js"],"sourcesContent":["'use strict';\n\n/**\n * An enum of query types used by `sequelize.query`\n *\n * @see {@link Sequelize#query}\n *\n * @property SELECT\n * @property INSERT\n * @property UPDATE\n * @property BULKUPDATE\n * @property BULKDELETE\n * @property DELETE\n * @property UPSERT\n * @property VERSION\n * @property SHOWTABLES\n * @property SHOWINDEXES\n * @property DESCRIBE\n * @property RAW\n * @property FOREIGNKEYS\n * @property SHOWCONSTRAINTS\n */\nconst QueryTypes = module.exports = { // eslint-disable-line\n  SELECT: 'SELECT',\n  INSERT: 'INSERT',\n  UPDATE: 'UPDATE',\n  BULKUPDATE: 'BULKUPDATE',\n  BULKDELETE: 'BULKDELETE',\n  DELETE: 'DELETE',\n  UPSERT: 'UPSERT',\n  VERSION: 'VERSION',\n  SHOWTABLES: 'SHOWTABLES',\n  SHOWINDEXES: 'SHOWINDEXES',\n  DESCRIBE: 'DESCRIBE',\n  RAW: 'RAW',\n  FOREIGNKEYS: 'FOREIGNKEYS',\n  SHOWCONSTRAINTS: 'SHOWCONSTRAINTS'\n};\n"],"mappings":";AAsBA,MAAM,aAAa,OAAO,UAAU;AAAA,EAClC,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,UAAU;AAAA,EACV,KAAK;AAAA,EACL,aAAa;AAAA,EACb,iBAAiB;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/hooks.js":{"lineLengths":[13,28,45,43,19,32,31,34,30,29,31,30,31,30,30,29,71,68,30,29,34,33,35,34,35,34,34,33,28,49,40,27,29,57,56,55,54,45,44,46,45,49,48,50,49,28,27,32,31,29,27,2,26,126,37,54,1,15,22,28,50,37,34,69,7,4,38,15,63,17,36,23,39,27,65,7,5,32,22,5,58,31,39,25,9,48,35,7,13,5,29,37,23,7,40,39,5,4,31,37,16,18,5,37,41,32,41,43,39,7,16,4,30,66,34,18,5,39,41,34,76,56,31,9,55,36,9,20,9,5,16,4,21,81,3,2,31,43,25,46,45,15,5,45,48,6,3,1,26,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/hooks.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst { logger } = require('./utils/logger');\nconst debug = logger.debugContext('hooks');\n\nconst hookTypes = {\n  beforeValidate: { params: 2 },\n  afterValidate: { params: 2 },\n  validationFailed: { params: 3 },\n  beforeCreate: { params: 2 },\n  afterCreate: { params: 2 },\n  beforeDestroy: { params: 2 },\n  afterDestroy: { params: 2 },\n  beforeRestore: { params: 2 },\n  afterRestore: { params: 2 },\n  beforeUpdate: { params: 2 },\n  afterUpdate: { params: 2 },\n  beforeSave: { params: 2, proxies: ['beforeUpdate', 'beforeCreate'] },\n  afterSave: { params: 2, proxies: ['afterUpdate', 'afterCreate'] },\n  beforeUpsert: { params: 2 },\n  afterUpsert: { params: 2 },\n  beforeBulkCreate: { params: 2 },\n  afterBulkCreate: { params: 2 },\n  beforeBulkDestroy: { params: 1 },\n  afterBulkDestroy: { params: 1 },\n  beforeBulkRestore: { params: 1 },\n  afterBulkRestore: { params: 1 },\n  beforeBulkUpdate: { params: 1 },\n  afterBulkUpdate: { params: 1 },\n  beforeFind: { params: 1 },\n  beforeFindAfterExpandIncludeAll: { params: 1 },\n  beforeFindAfterOptions: { params: 1 },\n  afterFind: { params: 2 },\n  beforeCount: { params: 1 },\n  beforeDefine: { params: 2, sync: true, noModel: true },\n  afterDefine: { params: 1, sync: true, noModel: true },\n  beforeInit: { params: 2, sync: true, noModel: true },\n  afterInit: { params: 1, sync: true, noModel: true },\n  beforeAssociate: { params: 2, sync: true },\n  afterAssociate: { params: 2, sync: true },\n  beforeConnect: { params: 1, noModel: true },\n  afterConnect: { params: 2, noModel: true },\n  beforeDisconnect: { params: 1, noModel: true },\n  afterDisconnect: { params: 1, noModel: true },\n  beforePoolAcquire: { params: 1, noModel: true },\n  afterPoolAcquire: { params: 2, noModel: true },\n  beforeSync: { params: 1 },\n  afterSync: { params: 1 },\n  beforeBulkSync: { params: 1 },\n  afterBulkSync: { params: 1 },\n  beforeQuery: { params: 2 },\n  afterQuery: { params: 2 }\n};\nexports.hooks = hookTypes;\n\n\n/**\n * get array of current hook and its proxies combined\n *\n * @param {string} hookType any hook type @see {@link hookTypes}\n *\n * @private\n */\nconst getProxiedHooks = hookType =>\n  hookTypes[hookType].proxies\n    ? hookTypes[hookType].proxies.concat(hookType)\n    : [hookType]\n;\n\nfunction getHooks(hooked, hookType) {\n  return (hooked.options.hooks || {})[hookType] || [];\n}\n\nconst Hooks = {\n  /**\n   * Process user supplied hooks definition\n   *\n   * @param {object} hooks hooks definition\n   *\n   * @private\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  _setupHooks(hooks) {\n    this.options.hooks = {};\n    _.map(hooks || {}, (hooksArray, hookName) => {\n      if (!Array.isArray(hooksArray)) hooksArray = [hooksArray];\n      hooksArray.forEach(hookFn => this.addHook(hookName, hookFn));\n    });\n  },\n\n  async runHooks(hooks, ...hookArgs) {\n    if (!hooks) throw new Error('runHooks requires at least 1 argument');\n\n    let hookType;\n\n    if (typeof hooks === 'string') {\n      hookType = hooks;\n      hooks = getHooks(this, hookType);\n\n      if (this.sequelize) {\n        hooks = hooks.concat(getHooks(this.sequelize, hookType));\n      }\n    }\n\n    if (!Array.isArray(hooks)) {\n      hooks = [hooks];\n    }\n\n    // synchronous hooks\n    if (hookTypes[hookType] && hookTypes[hookType].sync) {\n      for (let hook of hooks) {\n        if (typeof hook === 'object') {\n          hook = hook.fn;\n        }\n\n        debug(`running hook(sync) ${hookType}`);\n        hook.apply(this, hookArgs);\n      }\n      return;\n    }\n\n    // asynchronous hooks (default)\n    for (let hook of hooks) {\n      if (typeof hook === 'object') {\n        hook = hook.fn;\n      }\n\n      debug(`running hook ${hookType}`);\n      await hook.apply(this, hookArgs);\n    }\n  },\n\n  /**\n   * Add a hook to the model\n   *\n   * @param {string}          hookType hook name @see {@link hookTypes}\n   * @param {string|Function} [name] Provide a name for the hook function. It can be used to remove the hook later or to order hooks based on some sort of priority system in the future.\n   * @param {Function}        fn The hook function\n   *\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  addHook(hookType, name, fn) {\n    if (typeof name === 'function') {\n      fn = name;\n      name = null;\n    }\n\n    debug(`adding hook ${hookType}`);\n    // check for proxies, add them too\n    hookType = getProxiedHooks(hookType);\n\n    hookType.forEach(type => {\n      const hooks = getHooks(this, type);\n      hooks.push(name ? { name, fn } : fn);\n      this.options.hooks[type] = hooks;\n    });\n\n    return this;\n  },\n\n  /**\n   * Remove hook from the model\n   *\n   * @param {string} hookType @see {@link hookTypes}\n   * @param {string|Function} name name of hook or function reference which was attached\n   *\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  removeHook(hookType, name) {\n    const isReference = typeof name === 'function' ? true : false;\n\n    if (!this.hasHook(hookType)) {\n      return this;\n    }\n\n    debug(`removing hook ${hookType}`);\n\n    // check for proxies, add them too\n    hookType = getProxiedHooks(hookType);\n\n    for (const type of hookType) {\n      this.options.hooks[type] = this.options.hooks[type].filter(hook => {\n        if (isReference && typeof hook === 'function') {\n          return hook !== name; // check if same method\n        }\n        if (!isReference && typeof hook === 'object') {\n          return hook.name !== name;\n        }\n        return true;\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * Check whether the mode has any hooks of this type\n   *\n   * @param {string} hookType @see {@link hookTypes}\n   *\n   * @alias hasHooks\n   *\n   * @memberof Sequelize\n   * @memberof Sequelize.Model\n   */\n  hasHook(hookType) {\n    return this.options.hooks[hookType] && !!this.options.hooks[hookType].length;\n  }\n};\nHooks.hasHooks = Hooks.hasHook;\n\n\nfunction applyTo(target, isModel = false) {\n  _.mixin(target, Hooks);\n\n  for (const hook of Object.keys(hookTypes)) {\n    if (isModel && hookTypes[hook].noModel) {\n      continue;\n    }\n    target[hook] = function(name, callback) {\n      return this.addHook(hook, name, callback);\n    };\n  }\n}\nexports.applyTo = applyTo;\n\n/**\n * A hook that is run before validation\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name beforeValidate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after validation\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name afterValidate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run when validation fails\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options, error. Error is the\n * SequelizeValidationError. If the callback throws an error, it will replace the original validation error.\n * @name validationFailed\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before creating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after creating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name afterCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before creating or updating a single instance, It proxies `beforeCreate` and `beforeUpdate`\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeSave\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before upserting\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeUpsert\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after upserting\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the result of upsert(), options\n * @name afterUpsert\n * @memberof Sequelize.Model\n */\n\n/**\n  * A hook that is run after creating or updating a single instance, It proxies `afterCreate` and `afterUpdate`\n *\n  * @param {string}   name\n  * @param {Function} fn   A callback function that is called with attributes, options\n  * @name afterSave\n  * @memberof Sequelize.Model\n  */\n\n/**\n * A hook that is run before destroying a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name beforeDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after destroying a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name afterDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before restoring a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name beforeRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after restoring a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n *\n * @name afterRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before updating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name beforeUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after updating a single instance\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance, options\n * @name afterUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before creating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instances, options\n * @name beforeBulkCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after creating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instances, options\n * @name afterBulkCreate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before destroying instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name beforeBulkDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after destroying instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name afterBulkDestroy\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before restoring instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name beforeBulkRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after restoring instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n *\n * @name afterBulkRestore\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before updating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeBulkUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after updating instances in bulk\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name afterBulkUpdate\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a find (select) query\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeFind\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a find (select) query, after any { include: {all: ...} } options are expanded\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeFindAfterExpandIncludeAll\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a find (select) query, after all option parsing is complete\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeFindAfterOptions\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run after a find (select) query\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with instance(s), options\n * @name afterFind\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a count query\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options\n * @name beforeCount\n * @memberof Sequelize.Model\n */\n\n/**\n * A hook that is run before a define call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with attributes, options\n * @name beforeDefine\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a define call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with factory\n * @name afterDefine\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before Sequelize() call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with config, options\n * @name beforeInit\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after Sequelize() call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with sequelize\n * @name afterInit\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before a connection is created\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with config passed to connection\n * @name beforeConnect\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a connection is created\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object and the config passed to connection\n * @name afterConnect\n * @memberof Sequelize\n */\n\n/**\n *  A hook that is run before a connection to the pool\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with config passed to connection\n * @name beforePoolAcquire\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a connection to the pool\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object and the config passed to connection\n * @name afterPoolAcquire\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before a connection is disconnected\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object\n * @name beforeDisconnect\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after a connection is disconnected\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with the connection object\n * @name afterDisconnect\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run before Model.sync call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options passed to Model.sync\n * @name beforeSync\n * @memberof Sequelize\n */\n\n/**\n * A hook that is run after Model.sync call\n *\n * @param {string}   name\n * @param {Function} fn   A callback function that is called with options passed to Model.sync\n * @name afterSync\n * @memberof Sequelize\n */\n\n/**\n  * A hook that is run before sequelize.sync call\n *\n  * @param {string}   name\n  * @param {Function} fn   A callback function that is called with options passed to sequelize.sync\n  * @name beforeBulkSync\n  * @memberof Sequelize\n  */\n\n/**\n  * A hook that is run after sequelize.sync call\n *\n  * @param {string}   name\n  * @param {Function} fn   A callback function that is called with options passed to sequelize.sync\n  * @name afterBulkSync\n  * @memberof Sequelize\n  */\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/mixin.js":{"lineLengths":[13,28,36,38,51,42,36,90,1,15,33,43,109,5,24,78,37,62,27,83,5,61,71,36,40,27,95,5,23,4,39,43,115,5,24,78,37,112,102,27,89,5,67,71,36,40,27,101,5,23,4,27,109,4,41,113,3,2,29,41,24,45,130,5,78,37,27,82,5,89,71,36,40,27,94,5,23,4,1,36,42,23,29,31,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/associations/mixin.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst HasOne = require('./has-one');\nconst HasMany = require('./has-many');\nconst BelongsToMany = require('./belongs-to-many');\nconst BelongsTo = require('./belongs-to');\n\nfunction isModel(model, sequelize) {\n  return model\n    && model.prototype\n    && model.prototype instanceof sequelize.Sequelize.Model;\n}\n\nconst Mixin = {\n  hasMany(target, options = {}) {\n    if (!isModel(target, this.sequelize)) {\n      throw new Error(`${this.name}.hasMany called with something that's not a subclass of Sequelize.Model`);\n    }\n\n    const source = this;\n\n    // Since this is a mixin, we'll need a unique letiable name for hooks (since Model will override our hooks option)\n    options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);\n    options.useHooks = options.hooks;\n\n    Object.assign(options, _.omit(source.options, ['hooks']));\n\n    if (options.useHooks) {\n      this.runHooks('beforeAssociate', { source, target, type: HasMany }, options);\n    }\n\n    // the id is in the foreign table or in a connecting table\n    const association = new HasMany(source, target, options);\n    source.associations[association.associationAccessor] = association;\n\n    association._injectAttributes();\n    association.mixin(source.prototype);\n\n    if (options.useHooks) {\n      this.runHooks('afterAssociate', { source, target, type: HasMany, association }, options);\n    }\n\n    return association;\n  },\n\n  belongsToMany(target, options = {}) {\n    if (!isModel(target, this.sequelize)) {\n      throw new Error(`${this.name}.belongsToMany called with something that's not a subclass of Sequelize.Model`);\n    }\n\n    const source = this;\n\n    // Since this is a mixin, we'll need a unique letiable name for hooks (since Model will override our hooks option)\n    options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);\n    options.useHooks = options.hooks;\n    options.timestamps = options.timestamps === undefined ? this.sequelize.options.timestamps : options.timestamps;\n    Object.assign(options, _.omit(source.options, ['hooks', 'timestamps', 'scopes', 'defaultScope']));\n\n    if (options.useHooks) {\n      this.runHooks('beforeAssociate', { source, target, type: BelongsToMany }, options);\n    }\n    // the id is in the foreign table or in a connecting table\n    const association = new BelongsToMany(source, target, options);\n    source.associations[association.associationAccessor] = association;\n\n    association._injectAttributes();\n    association.mixin(source.prototype);\n\n    if (options.useHooks) {\n      this.runHooks('afterAssociate', { source, target, type: BelongsToMany, association }, options);\n    }\n\n    return association;\n  },\n\n  getAssociations(target) {\n    return Object.values(this.associations).filter(association => association.target.name === target.name);\n  },\n\n  getAssociationForAlias(target, alias) {\n    // Two associations cannot have the same alias, so we can use find instead of filter\n    return this.getAssociations(target).find(association => association.verifyAssociationAlias(alias)) || null;\n  }\n};\n\n// The logic for hasOne and belongsTo is exactly the same\nfunction singleLinked(Type) {\n  return function(target, options = {}) {\n    // eslint-disable-next-line no-invalid-this\n    const source = this;\n    if (!isModel(target, source.sequelize)) {\n      throw new Error(`${source.name}.${_.lowerFirst(Type.name)} called with something that's not a subclass of Sequelize.Model`);\n    }\n\n\n    // Since this is a mixin, we'll need a unique letiable name for hooks (since Model will override our hooks option)\n    options.hooks = options.hooks === undefined ? false : Boolean(options.hooks);\n    options.useHooks = options.hooks;\n\n    if (options.useHooks) {\n      source.runHooks('beforeAssociate', { source, target, type: Type }, options);\n    }\n    // the id is in the foreign table\n    const association = new Type(source, target, Object.assign(options, source.options));\n    source.associations[association.associationAccessor] = association;\n\n    association._injectAttributes();\n    association.mixin(source.prototype);\n\n    if (options.useHooks) {\n      source.runHooks('afterAssociate', { source, target, type: Type, association }, options);\n    }\n\n    return association;\n  };\n}\n\nMixin.hasOne = singleLinked(HasOne);\nMixin.belongsTo = singleLinked(BelongsTo);\n\nmodule.exports = Mixin;\nmodule.exports.Mixin = Mixin;\nmodule.exports.default = Mixin;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/deprecations.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,53,49,45,37,44,3,46,20,2,153,246,186,171,238,40,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/utils/deprecations.ts"],"sourcesContent":["import { deprecate } from 'util';\n\nconst noop = () => { /* noop */ };\n\nexport const noTrueLogging = deprecate(noop, 'The logging-option should be either a function or false. Default: console.log', 'SEQUELIZE0002');\nexport const noStringOperators = deprecate(noop, 'String based operators are deprecated. Please use Symbol based operators for better security, read more at https://sequelize.org/master/manual/querying.html#operators', 'SEQUELIZE0003');\nexport const noBoolOperatorAliases = deprecate(noop, 'A boolean value was passed to options.operatorsAliases. This is a no-op with v5 and should be removed.', 'SEQUELIZE0004');\nexport const noDoubleNestedGroup = deprecate(noop, 'Passing a double nested nested array to `group` is unsupported and will be removed in v6.', 'SEQUELIZE0005');\nexport const unsupportedEngine = deprecate(noop, 'This database engine version is not supported, please update your database server. More information https://github.com/sequelize/sequelize/blob/main/ENGINE.md', 'SEQUELIZE0006');\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B;AAE1B,MAAM,OAAO,MAAM;AAAA;AAEZ,MAAM,gBAAgB,2BAAU,MAAM,iFAAiF;AACvH,MAAM,oBAAoB,2BAAU,MAAM,0KAA0K;AACpN,MAAM,wBAAwB,2BAAU,MAAM,0GAA0G;AACxJ,MAAM,sBAAsB,2BAAU,MAAM,6FAA6F;AACzI,MAAM,oBAAoB,2BAAU,MAAM,kKAAkK;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/deferrable.js":{"lineLengths":[13,48,16,28,40,3,21,31,3,11,52,3,1,43,11,43,3,1,44,11,44,3,1,28,11,28,3,1,37,28,12,35,3,25,61,3,1,38,28,12,35,3,25,62,3,1,20,59,61,29,47,48,2,28,38,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/deferrable.js"],"sourcesContent":["'use strict';\n\nconst { classToInvokable } = require('./utils');\n\nclass ABSTRACT {\n  static toString(...args) {\n    return new this().toString(...args);\n  }\n\n  toString(...args) {\n    return this.toSql(...args);\n  }\n\n  toSql() {\n    throw new Error('toSql implementation missing');\n  }\n}\n\nclass INITIALLY_DEFERRED extends ABSTRACT {\n  toSql() {\n    return 'DEFERRABLE INITIALLY DEFERRED';\n  }\n}\n\nclass INITIALLY_IMMEDIATE extends ABSTRACT {\n  toSql() {\n    return 'DEFERRABLE INITIALLY IMMEDIATE';\n  }\n}\n\nclass NOT extends ABSTRACT {\n  toSql() {\n    return 'NOT DEFERRABLE';\n  }\n}\n\nclass SET_DEFERRED extends ABSTRACT {\n  constructor(constraints) {\n    super();\n    this.constraints = constraints;\n  }\n\n  toSql(queryGenerator) {\n    return queryGenerator.setDeferredQuery(this.constraints);\n  }\n}\n\nclass SET_IMMEDIATE extends ABSTRACT {\n  constructor(constraints) {\n    super();\n    this.constraints = constraints;\n  }\n\n  toSql(queryGenerator) {\n    return queryGenerator.setImmediateQuery(this.constraints);\n  }\n}\n\n/**\n * A collection of properties related to deferrable constraints. It can be used to\n * make foreign key constraints deferrable and to set the constraints within a\n * transaction. This is only supported in PostgreSQL.\n *\n * The foreign keys can be configured like this. It will create a foreign key\n * that will check the constraints immediately when the data was inserted.\n *\n * ```js\n * sequelize.define('Model', {\n *   foreign_id: {\n *     type: Sequelize.INTEGER,\n *     references: {\n *       model: OtherModel,\n *       key: 'id',\n *       deferrable: Sequelize.Deferrable.INITIALLY_IMMEDIATE\n *     }\n *   }\n * });\n * ```\n *\n * The constraints can be configured in a transaction like this. It will\n * trigger a query once the transaction has been started and set the constraints\n * to be checked at the very end of the transaction.\n *\n * ```js\n * sequelize.transaction({\n *   deferrable: Sequelize.Deferrable.SET_DEFERRED\n * });\n * ```\n *\n * @property INITIALLY_DEFERRED    Use when declaring a constraint. Allow and enable by default this constraint's checks to be deferred at the end of transactions.\n * @property INITIALLY_IMMEDIATE   Use when declaring a constraint. Allow the constraint's checks to be deferred at the end of transactions.\n * @property NOT                   Use when declaring a constraint. Set the constraint to not deferred. This is the default in PostgreSQL and makes it impossible to dynamically defer the constraints within a transaction.\n * @property SET_DEFERRED          Use when declaring a transaction. Defer the deferrable checks involved in this transaction at commit.\n * @property SET_IMMEDIATE         Use when declaring a transaction. Execute the deferrable checks involved in this transaction immediately.\n */\n\nconst Deferrable = {\n  INITIALLY_DEFERRED: classToInvokable(INITIALLY_DEFERRED),\n  INITIALLY_IMMEDIATE: classToInvokable(INITIALLY_IMMEDIATE),\n  NOT: classToInvokable(NOT),\n  SET_DEFERRED: classToInvokable(SET_DEFERRED),\n  SET_IMMEDIATE: classToInvokable(SET_IMMEDIATE)\n};\n\nmodule.exports = Deferrable;\n"],"mappings":";AAEA,MAAM,EAAE,qBAAqB,QAAQ;AAErC,eAAe;AAAA,SACN,YAAY,MAAM;AACvB,WAAO,IAAI,OAAO,SAAS,GAAG;AAAA;AAAA,EAGhC,YAAY,MAAM;AAChB,WAAO,KAAK,MAAM,GAAG;AAAA;AAAA,EAGvB,QAAQ;AACN,UAAM,IAAI,MAAM;AAAA;AAAA;AAIpB,iCAAiC,SAAS;AAAA,EACxC,QAAQ;AACN,WAAO;AAAA;AAAA;AAIX,kCAAkC,SAAS;AAAA,EACzC,QAAQ;AACN,WAAO;AAAA;AAAA;AAIX,kBAAkB,SAAS;AAAA,EACzB,QAAQ;AACN,WAAO;AAAA;AAAA;AAIX,2BAA2B,SAAS;AAAA,EAClC,YAAY,aAAa;AACvB;AACA,SAAK,cAAc;AAAA;AAAA,EAGrB,MAAM,gBAAgB;AACpB,WAAO,eAAe,iBAAiB,KAAK;AAAA;AAAA;AAIhD,4BAA4B,SAAS;AAAA,EACnC,YAAY,aAAa;AACvB;AACA,SAAK,cAAc;AAAA;AAAA,EAGrB,MAAM,gBAAgB;AACpB,WAAO,eAAe,kBAAkB,KAAK;AAAA;AAAA;AA0CjD,MAAM,aAAa;AAAA,EACjB,oBAAoB,iBAAiB;AAAA,EACrC,qBAAqB,iBAAiB;AAAA,EACtC,KAAK,iBAAiB;AAAA,EACtB,cAAc,iBAAiB;AAAA,EAC/B,eAAe,iBAAiB;AAAA;AAGlC,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/model-manager.js":{"lineLengths":[13,43,28,20,26,21,31,3,19,28,46,17,3,30,83,53,3,30,41,23,7,77,3,13,23,3,37,45,34,38,20,43,34,65,7,35,51,82,58,37,49,34,53,13,27,11,9,7,53,34,5,15,9,29,17,62,16,7,18,5,38,35,23,3,35,64,31,50,5,41,19,7,26,29,5,39,22,5,3,1,30,43,38,41,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/model-manager.js"],"sourcesContent":["'use strict';\n\nconst Toposort = require('toposort-class');\nconst _ = require('lodash');\n\nclass ModelManager {\n  constructor(sequelize) {\n    this.models = [];\n    this.sequelize = sequelize;\n  }\n\n  addModel(model) {\n    this.models.push(model);\n    this.sequelize.models[model.name] = model;\n\n    return model;\n  }\n\n  removeModel(modelToRemove) {\n    this.models = this.models.filter(model => model.name !== modelToRemove.name);\n\n    delete this.sequelize.models[modelToRemove.name];\n  }\n\n  getModel(against, options) {\n    options = _.defaults(options || {}, {\n      attribute: 'name'\n    });\n\n    return this.models.find(model => model[options.attribute] === against);\n  }\n\n  get all() {\n    return this.models;\n  }\n\n  /**\n   * Returns an array that lists every model, sorted in order\n   * of foreign key references: The first model is a model that is depended upon,\n   * the last model is a model that is not depended upon.\n   *\n   * If there is a cyclic dependency, this returns null.\n   */\n  getModelsTopoSortedByForeignKey() {\n    const models = new Map();\n    const sorter = new Toposort();\n\n    for (const model of this.models) {\n      let deps = [];\n      let tableName = model.getTableName();\n\n      if (_.isObject(tableName)) {\n        tableName = `${tableName.schema}.${tableName.tableName}`;\n      }\n\n      models.set(tableName, model);\n\n      for (const attrName in model.rawAttributes) {\n        if (Object.prototype.hasOwnProperty.call(model.rawAttributes, attrName)) {\n          const attribute = model.rawAttributes[attrName];\n\n          if (attribute.references) {\n            let dep = attribute.references.model;\n\n            if (_.isObject(dep)) {\n              dep = `${dep.schema}.${dep.tableName}`;\n            }\n\n            deps.push(dep);\n          }\n        }\n      }\n\n      deps = deps.filter(dep => tableName !== dep);\n\n      sorter.add(tableName, deps);\n    }\n\n    let sorted;\n    try {\n      sorted = sorter.sort();\n    } catch (e) {\n      if (!e.message.startsWith('Cyclic dependency found.')) {\n        throw e;\n      }\n\n      return null;\n    }\n\n    return sorted\n      .map(modelName => {\n        return models.get(modelName);\n      })\n      .filter(Boolean);\n  }\n\n  /**\n   * Iterate over Models in an order suitable for e.g. creating tables.\n   * Will take foreign key constraints into account so that dependencies are visited before dependents.\n   *\n   * @param {Function} iterator method to execute on each model\n   * @param {object} options\n   * @private\n   *\n   * @deprecated\n   */\n  forEachModel(iterator, options) {\n    const sortedModels = this.getModelsTopoSortedByForeignKey();\n    if (sortedModels == null) {\n      throw new Error('Cyclic dependency found.');\n    }\n\n    options = _.defaults(options || {}, {\n      reverse: true\n    });\n\n    if (options.reverse) {\n      sortedModels.reverse();\n    }\n\n    for (const model of sortedModels) {\n      iterator(model);\n    }\n  }\n}\n\nmodule.exports = ModelManager;\nmodule.exports.ModelManager = ModelManager;\nmodule.exports.default = ModelManager;\n"],"mappings":";AAEA,MAAM,WAAW,QAAQ;AACzB,MAAM,IAAI,QAAQ;AAElB,mBAAmB;AAAA,EACjB,YAAY,WAAW;AACrB,SAAK,SAAS;AACd,SAAK,YAAY;AAAA;AAAA,EAGnB,SAAS,OAAO;AACd,SAAK,OAAO,KAAK;AACjB,SAAK,UAAU,OAAO,MAAM,QAAQ;AAEpC,WAAO;AAAA;AAAA,EAGT,YAAY,eAAe;AACzB,SAAK,SAAS,KAAK,OAAO,OAAO,WAAS,MAAM,SAAS,cAAc;AAEvE,WAAO,KAAK,UAAU,OAAO,cAAc;AAAA;AAAA,EAG7C,SAAS,SAAS,SAAS;AACzB,cAAU,EAAE,SAAS,WAAW,IAAI;AAAA,MAClC,WAAW;AAAA;AAGb,WAAO,KAAK,OAAO,KAAK,WAAS,MAAM,QAAQ,eAAe;AAAA;AAAA,MAG5D,MAAM;AACR,WAAO,KAAK;AAAA;AAAA,EAUd,kCAAkC;AAChC,UAAM,SAAS,oBAAI;AACnB,UAAM,SAAS,IAAI;AAEnB,eAAW,SAAS,KAAK,QAAQ;AAC/B,UAAI,OAAO;AACX,UAAI,YAAY,MAAM;AAEtB,UAAI,EAAE,SAAS,YAAY;AACzB,oBAAY,GAAG,UAAU,UAAU,UAAU;AAAA;AAG/C,aAAO,IAAI,WAAW;AAEtB,iBAAW,YAAY,MAAM,eAAe;AAC1C,YAAI,OAAO,UAAU,eAAe,KAAK,MAAM,eAAe,WAAW;AACvE,gBAAM,YAAY,MAAM,cAAc;AAEtC,cAAI,UAAU,YAAY;AACxB,gBAAI,MAAM,UAAU,WAAW;AAE/B,gBAAI,EAAE,SAAS,MAAM;AACnB,oBAAM,GAAG,IAAI,UAAU,IAAI;AAAA;AAG7B,iBAAK,KAAK;AAAA;AAAA;AAAA;AAKhB,aAAO,KAAK,OAAO,SAAO,cAAc;AAExC,aAAO,IAAI,WAAW;AAAA;AAGxB,QAAI;AACJ,QAAI;AACF,eAAS,OAAO;AAAA,aACT,GAAP;AACA,UAAI,CAAC,EAAE,QAAQ,WAAW,6BAA6B;AACrD,cAAM;AAAA;AAGR,aAAO;AAAA;AAGT,WAAO,OACJ,IAAI,eAAa;AAChB,aAAO,OAAO,IAAI;AAAA,OAEnB,OAAO;AAAA;AAAA,EAaZ,aAAa,UAAU,SAAS;AAC9B,UAAM,eAAe,KAAK;AAC1B,QAAI,gBAAgB,MAAM;AACxB,YAAM,IAAI,MAAM;AAAA;AAGlB,cAAU,EAAE,SAAS,WAAW,IAAI;AAAA,MAClC,SAAS;AAAA;AAGX,QAAI,QAAQ,SAAS;AACnB,mBAAa;AAAA;AAGf,eAAW,SAAS,cAAc;AAChC,eAAS;AAAA;AAAA;AAAA;AAKf,OAAO,UAAU;AACjB,OAAO,QAAQ,eAAe;AAC9B,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/transaction.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,19,35,31,25,32,94,35,46,55,21,16,43,22,31,40,67,12,52,5,36,3,18,24,115,5,9,85,21,17,173,32,14,15,31,50,39,7,5,3,20,24,117,5,27,84,5,9,87,21,17,175,32,14,5,3,43,26,22,66,12,47,34,39,7,89,5,15,47,33,35,9,25,42,24,11,39,17,23,7,5,52,63,5,18,3,25,34,91,5,3,17,62,81,64,95,5,92,63,3,13,57,13,5,21,72,34,3,24,57,13,5,21,78,34,3,15,48,14,44,37,7,5,3,19,42,49,5,36,3,22,12,27,29,28,6,3,33,12,43,39,41,34,6,3,21,12,23,21,29,36,6,3,14,28,3,1,29,41,37,39,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/transaction.js"],"sourcesContent":["'use strict';\n\n/**\n * The transaction object is used to identify a running transaction.\n * It is created by calling `Sequelize.transaction()`.\n * To run a query under a transaction, you should pass the transaction in the options object.\n *\n * @class Transaction\n * @see {@link Sequelize.transaction}\n */\nclass Transaction {\n  /**\n   * Creates a new transaction instance\n   *\n   * @param {Sequelize} sequelize A configured sequelize Instance\n   * @param {object} options An object with options\n   * @param {string} [options.type] Sets the type of the transaction. Sqlite only\n   * @param {string} [options.isolationLevel] Sets the isolation level of the transaction.\n   * @param {string} [options.deferrable] Sets the constraints to be deferred or immediately checked. PostgreSQL only\n   */\n  constructor(sequelize, options) {\n    this.sequelize = sequelize;\n    this.savepoints = [];\n    this._afterCommitHooks = [];\n\n    // get dialect specific transaction options\n    const generateTransactionId = this.sequelize.dialect.queryGenerator.generateTransactionId;\n\n    this.options = {\n      type: sequelize.options.transactionType,\n      isolationLevel: sequelize.options.isolationLevel,\n      readOnly: false,\n      ...options\n    };\n\n    this.parent = this.options.transaction;\n\n    if (this.parent) {\n      this.id = this.parent.id;\n      this.parent.savepoints.push(this);\n      this.name = `${this.id}-sp-${this.parent.savepoints.length}`;\n    } else {\n      this.id = this.name = generateTransactionId();\n    }\n\n    delete this.options.transaction;\n  }\n\n  /**\n   * Commit the transaction\n   *\n   * @returns {Promise}\n   */\n  async commit() {\n    if (this.finished) {\n      throw new Error(`Transaction cannot be committed because it has been finished with state: ${this.finished}`);\n    }\n\n    try {\n      await this.sequelize.getQueryInterface().commitTransaction(this, this.options);\n      this.cleanup();\n    } catch (e) {\n      console.warn(`Committing transaction ${this.id} failed with error ${JSON.stringify(e.message)}. We are killing its connection as it is now in an undetermined state.`);\n      await this.forceCleanup();\n\n      throw e;\n    } finally {\n      this.finished = 'commit';\n      for (const hook of this._afterCommitHooks) {\n        await hook.apply(this, [this]);\n      }\n    }\n  }\n\n  /**\n   * Rollback (abort) the transaction\n   *\n   * @returns {Promise}\n   */\n  async rollback() {\n    if (this.finished) {\n      throw new Error(`Transaction cannot be rolled back because it has been finished with state: ${this.finished}`);\n    }\n\n    if (!this.connection) {\n      throw new Error('Transaction cannot be rolled back because it never started');\n    }\n\n    try {\n      await this\n        .sequelize\n        .getQueryInterface()\n        .rollbackTransaction(this, this.options);\n\n      this.cleanup();\n    } catch (e) {\n      console.warn(`Rolling back transaction ${this.id} failed with error ${JSON.stringify(e.message)}. We are killing its connection as it is now in an undetermined state.`);\n      await this.forceCleanup();\n\n      throw e;\n    }\n  }\n\n  /**\n   * Called to acquire a connection to use and set the correct options on the connection.\n   * We should ensure all of the environment that's set up is cleaned up in `cleanup()` below.\n   *\n   * @param {boolean} useCLS Defaults to true: Use CLS (Continuation Local Storage) with Sequelize. With CLS, all queries within the transaction callback will automatically receive the transaction object.\n   * @returns {Promise}\n   */\n  async prepareEnvironment(useCLS = true) {\n    let connectionPromise;\n\n    if (this.parent) {\n      connectionPromise = Promise.resolve(this.parent.connection);\n    } else {\n      const acquireOptions = { uuid: this.id };\n      if (this.options.readOnly) {\n        acquireOptions.type = 'SELECT';\n      }\n      connectionPromise = this.sequelize.connectionManager.getConnection(acquireOptions);\n    }\n\n    let result;\n    const connection = await connectionPromise;\n    this.connection = connection;\n    this.connection.uuid = this.id;\n\n    try {\n      await this.begin();\n      result = await this.setDeferrable();\n    } catch (setupErr) {\n      try {\n        result = await this.rollback();\n      } finally {\n        throw setupErr; // eslint-disable-line no-unsafe-finally\n      }\n    }\n\n    // TODO (@ephys) [>=7.0.0]: move this inside of sequelize.transaction, remove parameter.\n    if (useCLS && this.sequelize.constructor._cls) {\n      this.sequelize.constructor._cls.set('transaction', this);\n    }\n\n    return result;\n  }\n\n  async setDeferrable() {\n    if (this.options.deferrable) {\n      return await this\n        .sequelize\n        .getQueryInterface()\n        .deferConstraints(this, this.options);\n    }\n  }\n\n  async begin() {\n    const queryInterface = this.sequelize.getQueryInterface();\n\n    if ( this.sequelize.dialect.supports.settingIsolationLevelDuringTransaction ) {\n      await queryInterface.startTransaction(this, this.options);\n      return queryInterface.setIsolationLevel(this, this.options.isolationLevel, this.options);\n    }\n\n    await queryInterface.setIsolationLevel(this, this.options.isolationLevel, this.options);\n\n    return queryInterface.startTransaction(this, this.options);\n  }\n\n  cleanup() {\n    // Don't release the connection if there's a parent transaction or\n    // if we've already cleaned up\n    if (this.parent || this.connection.uuid === undefined) {\n      return;\n    }\n\n    this._clearCls();\n    this.sequelize.connectionManager.releaseConnection(this.connection);\n    this.connection.uuid = undefined;\n  }\n\n  /**\n   * Kills the connection this transaction uses.\n   * Used as a last resort, for instance because COMMIT or ROLLBACK resulted in an error\n   * and the transaction is left in a broken state,\n   * and releasing the connection to the pool would be dangerous.\n   */\n  async forceCleanup() {\n    // Don't release the connection if there's a parent transaction or\n    // if we've already cleaned up\n    if (this.parent || this.connection.uuid === undefined) {\n      return;\n    }\n\n    this._clearCls();\n    await this.sequelize.connectionManager.destroyConnection(this.connection);\n    this.connection.uuid = undefined;\n  }\n\n  _clearCls() {\n    const cls = this.sequelize.constructor._cls;\n\n    if (cls) {\n      if (cls.get('transaction') === this) {\n        cls.set('transaction', null);\n      }\n    }\n  }\n\n  /**\n   * A hook that is run after a transaction is committed\n   *\n   * @param {Function} fn   A callback function that is called with the committed transaction\n   * @name afterCommit\n   * @memberof Sequelize.Transaction\n   */\n  afterCommit(fn) {\n    if (!fn || typeof fn !== 'function') {\n      throw new Error('\"fn\" must be a function');\n    }\n    this._afterCommitHooks.push(fn);\n  }\n\n  /**\n   * Types can be set per-transaction by passing `options.type` to `sequelize.transaction`.\n   * Default to `DEFERRED` but you can override the default type by passing `options.transactionType` in `new Sequelize`.\n   * Sqlite only.\n   *\n   * Pass in the desired level as the first argument:\n   *\n   * @example\n   * try {\n   *   await sequelize.transaction({ type: Sequelize.Transaction.TYPES.EXCLUSIVE }, transaction => {\n   *      // your transactions\n   *   });\n   *   // transaction has been committed. Do something after the commit if required.\n   * } catch(err) {\n   *   // do something with the err.\n   * }\n   *\n   * @property DEFERRED\n   * @property IMMEDIATE\n   * @property EXCLUSIVE\n   */\n  static get TYPES() {\n    return {\n      DEFERRED: 'DEFERRED',\n      IMMEDIATE: 'IMMEDIATE',\n      EXCLUSIVE: 'EXCLUSIVE'\n    };\n  }\n\n  /**\n   * Isolation levels can be set per-transaction by passing `options.isolationLevel` to `sequelize.transaction`.\n   * Sequelize uses the default isolation level of the database, you can override this by passing `options.isolationLevel` in Sequelize constructor options.\n   *\n   * Pass in the desired level as the first argument:\n   *\n   * @example\n   * try {\n   *   const result = await sequelize.transaction({isolationLevel: Sequelize.Transaction.ISOLATION_LEVELS.SERIALIZABLE}, transaction => {\n   *     // your transactions\n   *   });\n   *   // transaction has been committed. Do something after the commit if required.\n   * } catch(err) {\n   *   // do something with the err.\n   * }\n   *\n   * @property READ_UNCOMMITTED\n   * @property READ_COMMITTED\n   * @property REPEATABLE_READ\n   * @property SERIALIZABLE\n   */\n  static get ISOLATION_LEVELS() {\n    return {\n      READ_UNCOMMITTED: 'READ UNCOMMITTED',\n      READ_COMMITTED: 'READ COMMITTED',\n      REPEATABLE_READ: 'REPEATABLE READ',\n      SERIALIZABLE: 'SERIALIZABLE'\n    };\n  }\n\n\n  /**\n   * Possible options for row locking. Used in conjunction with `find` calls:\n   *\n   * @example\n   * // t1 is a transaction\n   * Model.findAll({\n   *   where: ...,\n   *   transaction: t1,\n   *   lock: t1.LOCK...\n   * });\n   *\n   * @example <caption>Postgres also supports specific locks while eager loading by using OF:</caption>\n   * UserModel.findAll({\n   *   where: ...,\n   *   include: [TaskModel, ...],\n   *   transaction: t1,\n   *   lock: {\n   *     level: t1.LOCK...,\n   *     of: UserModel\n   *   }\n   * });\n   *\n   * # UserModel will be locked but TaskModel won't!\n   *\n   * @example <caption>You can also skip locked rows:</caption>\n   * // t1 is a transaction\n   * Model.findAll({\n   *   where: ...,\n   *   transaction: t1,\n   *   lock: true,\n   *   skipLocked: true\n   * });\n   * # The query will now return any rows that aren't locked by another transaction\n   *\n   * @returns {object}\n   * @property UPDATE\n   * @property SHARE\n   * @property KEY_SHARE Postgres 9.3+ only\n   * @property NO_KEY_UPDATE Postgres 9.3+ only\n   */\n  static get LOCK() {\n    return {\n      UPDATE: 'UPDATE',\n      SHARE: 'SHARE',\n      KEY_SHARE: 'KEY SHARE',\n      NO_KEY_UPDATE: 'NO KEY UPDATE'\n    };\n  }\n\n  /**\n   * Please see {@link Transaction.LOCK}\n   */\n  get LOCK() {\n    return Transaction.LOCK;\n  }\n}\n\nmodule.exports = Transaction;\nmodule.exports.Transaction = Transaction;\nmodule.exports.default = Transaction;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/table-hints.js":{"lineLengths":[13,37,19,37,21,35,31,33,21,23,21,21,19,23,17,23,22,2,39,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/table-hints.js"],"sourcesContent":["'use strict';\n\n/**\n * An enum of table hints to be used in mssql for querying with table hints\n *\n * @property NOLOCK\n * @property READUNCOMMITTED\n * @property UPDLOCK\n * @property REPEATABLEREAD\n * @property SERIALIZABLE\n * @property READCOMMITTED\n * @property TABLOCK\n * @property TABLOCKX\n * @property PAGLOCK\n * @property ROWLOCK\n * @property NOWAIT\n * @property READPAST\n * @property XLOCK\n * @property SNAPSHOT\n * @property NOEXPAND\n */\nconst TableHints = module.exports = { // eslint-disable-line\n  NOLOCK: 'NOLOCK',\n  READUNCOMMITTED: 'READUNCOMMITTED',\n  UPDLOCK: 'UPDLOCK',\n  REPEATABLEREAD: 'REPEATABLEREAD',\n  SERIALIZABLE: 'SERIALIZABLE',\n  READCOMMITTED: 'READCOMMITTED',\n  TABLOCK: 'TABLOCK',\n  TABLOCKX: 'TABLOCKX',\n  PAGLOCK: 'PAGLOCK',\n  ROWLOCK: 'ROWLOCK',\n  NOWAIT: 'NOWAIT',\n  READPAST: 'READPAST',\n  XLOCK: 'XLOCK',\n  SNAPSHOT: 'SNAPSHOT',\n  NOEXPAND: 'NOEXPAND'\n};\n"],"mappings":";AAqBA,MAAM,aAAa,OAAO,UAAU;AAAA,EAClC,QAAQ;AAAA,EACR,iBAAiB;AAAA,EACjB,SAAS;AAAA,EACT,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAe;AAAA,EACf,SAAS;AAAA,EACT,UAAU;AAAA,EACV,SAAS;AAAA,EACT,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AAAA,EACV,UAAU;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/index-hints.js":{"lineLengths":[13,37,13,17,18,2,39,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/index-hints.js"],"sourcesContent":["'use strict';\n\n/**\n * An enum of index hints to be used in mysql for querying with index hints\n *\n * @property USE\n * @property FORCE\n * @property IGNORE\n */\nconst IndexHints = module.exports = { // eslint-disable-line\n  USE: 'USE',\n  FORCE: 'FORCE',\n  IGNORE: 'IGNORE'\n};\n"],"mappings":";AASA,MAAM,aAAa,OAAO,UAAU;AAAA,EAClC,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/associations/index.js":{"lineLengths":[13,38,48,42,44,57,29,37,41,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/associations/index.js"],"sourcesContent":["'use strict';\n\nconst Association = require('./base');\n\nAssociation.BelongsTo = require('./belongs-to');\nAssociation.HasOne = require('./has-one');\nAssociation.HasMany = require('./has-many');\nAssociation.BelongsToMany = require('./belongs-to-many');\n\nmodule.exports = Association;\nmodule.exports.default = Association;\nmodule.exports.Association = Association;\n"],"mappings":";AAEA,MAAM,cAAc,QAAQ;AAE5B,YAAY,YAAY,QAAQ;AAChC,YAAY,SAAS,QAAQ;AAC7B,YAAY,UAAU,QAAQ;AAC9B,YAAY,gBAAgB,QAAQ;AAEpC,OAAO,UAAU;AACjB,OAAO,QAAQ,UAAU;AACzB,OAAO,QAAQ,cAAc;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/query-interface.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,28,37,46,49,48,22,42,31,41,3,43,28,75,52,3,41,28,64,52,3,39,28,57,52,3,37,28,55,52,3,33,28,57,42,5,55,90,3,33,58,16,44,7,73,76,96,3,34,148,3,60,17,42,40,51,47,39,9,9,5,16,66,5,102,66,76,49,18,59,9,5,66,23,29,72,7,79,52,3,41,64,92,33,8,28,3,39,42,64,71,45,3,51,41,61,103,7,5,3,32,28,36,57,80,41,42,34,75,7,66,99,7,5,57,3,45,28,68,52,3,32,58,16,33,7,94,74,33,3,43,22,31,38,23,65,38,56,5,62,32,38,5,91,88,9,60,28,144,7,18,17,65,144,7,14,5,3,51,39,108,5,28,61,106,3,57,106,3,41,18,63,63,12,36,5,56,3,39,67,3,33,61,3,76,28,55,65,8,30,22,7,72,46,3,62,69,34,25,5,80,3,73,28,103,24,31,31,22,32,37,6,56,50,5,128,52,3,64,37,29,27,34,5,24,31,5,39,32,84,118,3,39,73,121,3,54,34,16,5,91,184,22,42,34,65,7,140,63,7,18,3,61,69,34,7,101,53,3,64,28,96,52,3,43,26,73,5,24,80,5,39,75,52,3,60,84,125,3,62,111,3,54,39,77,124,37,32,61,17,37,19,3,71,42,32,37,58,54,42,85,113,122,54,78,24,41,16,9,76,23,40,16,9,7,109,41,7,54,5,103,52,3,61,42,37,134,22,3,67,42,77,125,37,32,52,3,73,39,40,49,101,68,125,41,26,52,3,59,24,98,42,72,66,33,22,40,65,167,51,9,7,5,37,55,21,17,36,32,40,41,5,32,52,3,54,39,51,36,103,5,39,37,114,3,46,102,107,3,106,39,137,37,26,52,3,106,39,137,37,26,52,3,65,39,35,16,18,29,7,75,39,60,5,58,25,18,5,57,40,20,5,38,87,28,34,7,5,88,28,36,7,5,45,57,32,7,5,18,3,125,143,28,14,54,5,3,54,72,28,14,54,5,3,75,93,28,14,54,5,3,97,124,28,14,54,5,3,53,71,28,14,54,5,3,75,93,28,14,54,5,3,17,3,56,64,101,5,39,13,5,109,67,32,7,13,13,52,3,48,64,83,5,109,78,71,52,3,48,109,67,14,54,5,3,49,64,84,5,29,13,5,58,53,32,32,7,72,55,36,25,3,51,64,86,5,58,53,32,32,7,78,74,55,38,25,3,1,40,43,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/abstract/query-interface.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\n\nconst Utils = require('../../utils');\nconst DataTypes = require('../../data-types');\nconst Transaction = require('../../transaction');\nconst QueryTypes = require('../../query-types');\n\n/**\n * The interface that Sequelize uses to talk to all databases\n */\nclass QueryInterface {\n  constructor(sequelize, queryGenerator) {\n    this.sequelize = sequelize;\n    this.queryGenerator = queryGenerator;\n  }\n\n  /**\n   * Create a database\n   *\n   * @param {string} database  Database name to create\n   * @param {object} [options] Query options\n   * @param {string} [options.charset] Database default character set, MYSQL only\n   * @param {string} [options.collate] Database default collation\n   * @param {string} [options.encoding] Database default character set, PostgreSQL only\n   * @param {string} [options.ctype] Database character classification, PostgreSQL only\n   * @param {string} [options.template] The name of the template from which to create the new database, PostgreSQL only\n   *\n   * @returns {Promise}\n   */\n  async createDatabase(database, options) {\n    options = options || {};\n    const sql = this.queryGenerator.createDatabaseQuery(database, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop a database\n   *\n   * @param {string} database  Database name to drop\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async dropDatabase(database, options) {\n    options = options || {};\n    const sql = this.queryGenerator.dropDatabaseQuery(database);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Create a schema\n   *\n   * @param {string} schema    Schema name to create\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async createSchema(schema, options) {\n    options = options || {};\n    const sql = this.queryGenerator.createSchema(schema);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop a schema\n   *\n   * @param {string} schema    Schema name to drop\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async dropSchema(schema, options) {\n    options = options || {};\n    const sql = this.queryGenerator.dropSchema(schema);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop all schemas\n   *\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async dropAllSchemas(options) {\n    options = options || {};\n\n    if (!this.queryGenerator._dialect.supports.schemas) {\n      return this.sequelize.drop(options);\n    }\n    const schemas = await this.showAllSchemas(options);\n    return Promise.all(schemas.map(schemaName => this.dropSchema(schemaName, options)));\n  }\n\n  /**\n   * Show all schemas\n   *\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise<Array>}\n   */\n  async showAllSchemas(options) {\n    options = {\n      ...options,\n      raw: true,\n      type: this.sequelize.QueryTypes.SELECT\n    };\n\n    const showSchemasSql = this.queryGenerator.showSchemasQuery(options);\n\n    const schemaNames = await this.sequelize.query(showSchemasSql, options);\n\n    return _.flatten(schemaNames.map(value => value.schema_name ? value.schema_name : value));\n  }\n\n  /**\n   * Return database version\n   *\n   * @param {object}    [options]      Query options\n   * @param {QueryType} [options.type] Query type\n   *\n   * @returns {Promise}\n   * @private\n   */\n  async databaseVersion(options) {\n    return await this.sequelize.query(\n      this.queryGenerator.versionQuery(),\n      { ...options, type: QueryTypes.VERSION }\n    );\n  }\n\n  /**\n   * Create a table with given set of attributes\n   *\n   * ```js\n   * queryInterface.createTable(\n   *   'nameOfTheNewTable',\n   *   {\n   *     id: {\n   *       type: Sequelize.INTEGER,\n   *       primaryKey: true,\n   *       autoIncrement: true\n   *     },\n   *     createdAt: {\n   *       type: Sequelize.DATE\n   *     },\n   *     updatedAt: {\n   *       type: Sequelize.DATE\n   *     },\n   *     attr1: Sequelize.STRING,\n   *     attr2: Sequelize.INTEGER,\n   *     attr3: {\n   *       type: Sequelize.BOOLEAN,\n   *       defaultValue: false,\n   *       allowNull: false\n   *     },\n   *     //foreign key usage\n   *     attr4: {\n   *       type: Sequelize.INTEGER,\n   *       references: {\n   *         model: 'another_table_name',\n   *         key: 'id'\n   *       },\n   *       onUpdate: 'cascade',\n   *       onDelete: 'cascade'\n   *     }\n   *   },\n   *   {\n   *     engine: 'MYISAM',    // default: 'InnoDB'\n   *     charset: 'latin1',   // default: null\n   *     schema: 'public',    // default: public, PostgreSQL only.\n   *     comment: 'my table', // comment for table\n   *     collate: 'latin1_danish_ci' // collation, MYSQL only\n   *   }\n   * )\n   * ```\n   *\n   * @param {string} tableName  Name of table to create\n   * @param {object} attributes Object representing a list of table attributes to create\n   * @param {object} [options] create table and query options\n   * @param {Model}  [model] model class\n   *\n   * @returns {Promise}\n   */\n  async createTable(tableName, attributes, options, model) {\n    let sql = '';\n\n    options = { ...options };\n\n    if (options && options.uniqueKeys) {\n      _.forOwn(options.uniqueKeys, uniqueKey => {\n        if (uniqueKey.customIndex === undefined) {\n          uniqueKey.customIndex = true;\n        }\n      });\n    }\n\n    if (model) {\n      options.uniqueKeys = options.uniqueKeys || model.uniqueKeys;\n    }\n\n    attributes = _.mapValues(\n      attributes,\n      attribute => this.sequelize.normalizeAttribute(attribute)\n    );\n\n    // Postgres requires special SQL commands for ENUM/ENUM[]\n    await this.ensureEnums(tableName, attributes, options, model);\n\n    if (\n      !tableName.schema &&\n      (options.schema || !!model && model._schema)\n    ) {\n      tableName = this.queryGenerator.addSchema({\n        tableName,\n        _schema: !!model && model._schema || options.schema\n      });\n    }\n\n    attributes = this.queryGenerator.attributesToSQL(attributes, {\n      table: tableName,\n      context: 'createTable',\n      withoutForeignKeyConstraints: options.withoutForeignKeyConstraints\n    });\n    sql = this.queryGenerator.createTableQuery(tableName, attributes, options);\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Returns a promise that will resolve to true if the table exists in the database, false otherwise.\n   *\n   * @param {TableName} tableName - The name of the table\n   * @param {QueryOptions} options - Query options\n   * @returns {Promise<boolean>}\n   */\n  async tableExists(tableName, options) {\n    const sql = this.queryGenerator.tableExistsQuery(tableName);\n\n    const out = await this.sequelize.query(sql, {\n      ...options,\n      type: QueryTypes.SHOWTABLES\n    });\n\n    return out.length === 1;\n  }\n\n  /**\n   * Drop a table from database\n   *\n   * @param {string} tableName Table name to drop\n   * @param {object} options   Query options\n   *\n   * @returns {Promise}\n   */\n  async dropTable(tableName, options) {\n    // if we're forcing we should be cascading unless explicitly stated otherwise\n    options = { ...options };\n    options.cascade = options.cascade || options.force || false;\n\n    const sql = this.queryGenerator.dropTableQuery(tableName, options);\n\n    await this.sequelize.query(sql, options);\n  }\n\n  async _dropAllTables(tableNames, skip, options) {\n    for (const tableName of tableNames) {\n      // if tableName is not in the Array of tables names then don't drop it\n      if (!skip.includes(tableName.tableName || tableName)) {\n        await this.dropTable(tableName, { ...options, cascade: true } );\n      }\n    }\n  }\n\n  /**\n   * Drop all tables from database\n   *\n   * @param {object} [options] query options\n   * @param {Array}  [options.skip] List of table to skip\n   *\n   * @returns {Promise}\n   */\n  async dropAllTables(options) {\n    options = options || {};\n    const skip = options.skip || [];\n\n    const tableNames = await this.showAllTables(options);\n    const foreignKeys = await this.getForeignKeysForTables(tableNames, options);\n\n    for (const tableName of tableNames) {\n      let normalizedTableName = tableName;\n      if (_.isObject(tableName)) {\n        normalizedTableName = `${tableName.schema}.${tableName.tableName}`;\n      }\n\n      for (const foreignKey of foreignKeys[normalizedTableName]) {\n        await this.sequelize.query(this.queryGenerator.dropForeignKeyQuery(tableName, foreignKey));\n      }\n    }\n    await this._dropAllTables(tableNames, skip, options);\n  }\n\n  /**\n   * Rename a table\n   *\n   * @param {string} before    Current name of table\n   * @param {string} after     New name from table\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async renameTable(before, after, options) {\n    options = options || {};\n    const sql = this.queryGenerator.renameTableQuery(before, after);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Get all tables in current database\n   *\n   * @param {object}    [options] Query options\n   * @param {boolean}   [options.raw=true] Run query in raw mode\n   * @param {QueryType} [options.type=QueryType.SHOWTABLE] query type\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async showAllTables(options) {\n    options = {\n      ...options,\n      raw: true,\n      type: QueryTypes.SHOWTABLES\n    };\n\n    const showTablesSql = this.queryGenerator.showTablesQuery(this.sequelize.config.database);\n    const tableNames = await this.sequelize.query(showTablesSql, options);\n    return _.flatten(tableNames);\n  }\n\n  /**\n   * Describe a table structure\n   *\n   * This method returns an array of hashes containing information about all attributes in the table.\n   *\n   * ```js\n   * {\n   *    name: {\n   *      type:         'VARCHAR(255)', // this will be 'CHARACTER VARYING' for pg!\n   *      allowNull:    true,\n   *      defaultValue: null\n   *    },\n   *    isBetaMember: {\n   *      type:         'TINYINT(1)', // this will be 'BOOLEAN' for pg!\n   *      allowNull:    false,\n   *      defaultValue: false\n   *    }\n   * }\n   * ```\n   *\n   * @param {string} tableName table name\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise<object>}\n   */\n  async describeTable(tableName, options) {\n    let schema = null;\n    let schemaDelimiter = null;\n\n    if (typeof options === 'string') {\n      schema = options;\n    } else if (typeof options === 'object' && options !== null) {\n      schema = options.schema || null;\n      schemaDelimiter = options.schemaDelimiter || null;\n    }\n\n    if (typeof tableName === 'object' && tableName !== null) {\n      schema = tableName.schema;\n      tableName = tableName.tableName;\n    }\n\n    const sql = this.queryGenerator.describeTableQuery(tableName, schema, schemaDelimiter);\n    options = { ...options, type: QueryTypes.DESCRIBE };\n\n    try {\n      const data = await this.sequelize.query(sql, options);\n      /*\n       * If no data is returned from the query, then the table name may be wrong.\n       * Query generators that use information_schema for retrieving table info will just return an empty result set,\n       * it will not throw an error like built-ins do (e.g. DESCRIBE on MySql).\n       */\n      if (_.isEmpty(data)) {\n        throw new Error(`No description found for \"${tableName}\" table. Check the table name and schema; remember, they _are_ case sensitive.`);\n      }\n\n      return data;\n    } catch (e) {\n      if (e.original && e.original.code === 'ER_NO_SUCH_TABLE') {\n        throw new Error(`No description found for \"${tableName}\" table. Check the table name and schema; remember, they _are_ case sensitive.`);\n      }\n\n      throw e;\n    }\n  }\n\n  /**\n   * Add a new column to a table\n   *\n   * ```js\n   * queryInterface.addColumn('tableA', 'columnC', Sequelize.STRING, {\n   *    after: 'columnB' // after option is only supported by MySQL\n   * });\n   * ```\n   *\n   * @param {string} table     Table to add column to\n   * @param {string} key       Column name\n   * @param {object} attribute Attribute definition\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async addColumn(table, key, attribute, options) {\n    if (!table || !key || !attribute) {\n      throw new Error('addColumn takes at least 3 arguments (table, attribute name, attribute definition)');\n    }\n\n    options = options || {};\n    attribute = this.sequelize.normalizeAttribute(attribute);\n    return await this.sequelize.query(this.queryGenerator.addColumnQuery(table, key, attribute), options);\n  }\n\n  /**\n   * Remove a column from a table\n   *\n   * @param {string} tableName      Table to remove column from\n   * @param {string} attributeName  Column name to remove\n   * @param {object} [options]      Query options\n   */\n  async removeColumn(tableName, attributeName, options) {\n    return this.sequelize.query(this.queryGenerator.removeColumnQuery(tableName, attributeName), options);\n  }\n\n  normalizeAttribute(dataTypeOrOptions) {\n    let attribute;\n    if (Object.values(DataTypes).includes(dataTypeOrOptions)) {\n      attribute = { type: dataTypeOrOptions, allowNull: true };\n    } else {\n      attribute = dataTypeOrOptions;\n    }\n\n    return this.sequelize.normalizeAttribute(attribute);\n  }\n\n  /**\n   * Split a list of identifiers by \".\" and quote each part\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    return this.queryGenerator.quoteIdentifier(identifier, force);\n  }\n\n  /**\n   * Split a list of identifiers by \".\" and quote each part.\n   *\n   * @param {string} identifiers \n   * \n   * @returns {string}\n   */\n  quoteIdentifiers(identifiers) {\n    return this.queryGenerator.quoteIdentifiers(identifiers);\n  }\n\n  /**\n   * Change a column definition\n   *\n   * @param {string} tableName          Table name to change from\n   * @param {string} attributeName      Column name\n   * @param {object} dataTypeOrOptions  Attribute definition for new column\n   * @param {object} [options]          Query options\n   */\n  async changeColumn(tableName, attributeName, dataTypeOrOptions, options) {\n    options = options || {};\n\n    const query = this.queryGenerator.attributesToSQL({\n      [attributeName]: this.normalizeAttribute(dataTypeOrOptions)\n    }, {\n      context: 'changeColumn',\n      table: tableName\n    });\n    const sql = this.queryGenerator.changeColumnQuery(tableName, query);\n\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Rejects if the table doesn't have the specified column, otherwise returns the column description.\n   *\n   * @param {string} tableName\n   * @param {string} columnName\n   * @param {object} options\n   * @private\n   */\n  async assertTableHasColumn(tableName, columnName, options) {\n    const description = await this.describeTable(tableName, options);\n    if (description[columnName]) {\n      return description;\n    }\n    throw new Error(`Table ${tableName} doesn't have the column ${columnName}`);\n  }\n\n  /**\n   * Rename a column\n   *\n   * @param {string} tableName        Table name whose column to rename\n   * @param {string} attrNameBefore   Current column name\n   * @param {string} attrNameAfter    New column name\n   * @param {object} [options]        Query option\n   *\n   * @returns {Promise}\n   */\n  async renameColumn(tableName, attrNameBefore, attrNameAfter, options) {\n    options = options || {};\n    const data = (await this.assertTableHasColumn(tableName, attrNameBefore, options))[attrNameBefore];\n\n    const _options = {};\n\n    _options[attrNameAfter] = {\n      attribute: attrNameAfter,\n      type: data.type,\n      allowNull: data.allowNull,\n      defaultValue: data.defaultValue\n    };\n\n    // fix: a not-null column cannot have null as default value\n    if (data.defaultValue === null && !data.allowNull) {\n      delete _options[attrNameAfter].defaultValue;\n    }\n\n    const sql = this.queryGenerator.renameColumnQuery(\n      tableName,\n      attrNameBefore,\n      this.queryGenerator.attributesToSQL(_options)\n    );\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Add an index to a column\n   *\n   * @param {string|object}  tableName Table name to add index on, can be a object with schema\n   * @param {Array}   [attributes]     Use options.fields instead, List of attributes to add index on\n   * @param {object}  options          indexes options\n   * @param {Array}   options.fields   List of attributes to add index on\n   * @param {boolean} [options.concurrently] Pass CONCURRENT so other operations run while the index is created\n   * @param {boolean} [options.unique] Create a unique index\n   * @param {string}  [options.using]  Useful for GIN indexes\n   * @param {string}  [options.operator] Index operator\n   * @param {string}  [options.type]   Type of index, available options are UNIQUE|FULLTEXT|SPATIAL\n   * @param {string}  [options.name]   Name of the index. Default is <table>_<attr1>_<attr2>\n   * @param {object}  [options.where]  Where condition on index, for partial indexes\n   * @param {string}  [rawTablename]   table name, this is just for backward compatibiity\n   *\n   * @returns {Promise}\n   */\n  async addIndex(tableName, attributes, options, rawTablename) {\n    // Support for passing tableName, attributes, options or tableName, options (with a fields param which is the attributes)\n    if (!Array.isArray(attributes)) {\n      rawTablename = options;\n      options = attributes;\n      attributes = options.fields;\n    }\n\n    if (!rawTablename) {\n      // Map for backwards compat\n      rawTablename = tableName;\n    }\n\n    options = Utils.cloneDeep(options);\n    options.fields = attributes;\n    const sql = this.queryGenerator.addIndexQuery(tableName, options, rawTablename);\n    return await this.sequelize.query(sql, { ...options, supportsSearchPath: false });\n  }\n\n  /**\n   * Show indexes on a table\n   *\n   * @param {string} tableName table name\n   * @param {object} [options]   Query options\n   *\n   * @returns {Promise<Array>}\n   * @private\n   */\n  async showIndex(tableName, options) {\n    const sql = this.queryGenerator.showIndexesQuery(tableName, options);\n    return await this.sequelize.query(sql, { ...options, type: QueryTypes.SHOWINDEXES });\n  }\n\n\n  /**\n   * Returns all foreign key constraints of requested tables\n   *\n   * @param {string[]} tableNames table names\n   * @param {object} [options] Query options\n   *\n   * @returns {Promise}\n   */\n  async getForeignKeysForTables(tableNames, options) {\n    if (tableNames.length === 0) {\n      return {};\n    }\n\n    options = { ...options, type: QueryTypes.FOREIGNKEYS };\n\n    const results = await Promise.all(tableNames.map(tableName =>\n      this.sequelize.query(this.queryGenerator.getForeignKeysQuery(tableName, this.sequelize.config.database), options)));\n\n    const result = {};\n\n    tableNames.forEach((tableName, i) => {\n      if (_.isObject(tableName)) {\n        tableName = `${tableName.schema}.${tableName.tableName}`;\n      }\n\n      result[tableName] = Array.isArray(results[i])\n        ? results[i].map(r => r.constraint_name)\n        : [results[i] && results[i].constraint_name];\n\n      result[tableName] = result[tableName].filter(_.identity);\n    });\n\n    return result;\n  }\n\n  /**\n   * Get foreign key references details for the table\n   *\n   * Those details contains constraintSchema, constraintName, constraintCatalog\n   * tableCatalog, tableSchema, tableName, columnName,\n   * referencedTableCatalog, referencedTableCatalog, referencedTableSchema, referencedTableName, referencedColumnName.\n   * Remind: constraint informations won't return if it's sqlite.\n   *\n   * @param {string} tableName table name\n   * @param {object} [options]  Query options\n   */\n  async getForeignKeyReferencesForTable(tableName, options) {\n    const queryOptions = {\n      ...options,\n      type: QueryTypes.FOREIGNKEYS\n    };\n    const query = this.queryGenerator.getForeignKeysQuery(tableName, this.sequelize.config.database);\n    return this.sequelize.query(query, queryOptions);\n  }\n\n  /**\n   * Remove an already existing index from a table\n   *\n   * @param {string} tableName                    Table name to drop index from\n   * @param {string|string[]} indexNameOrAttributes  Index name or list of attributes that in the index\n   * @param {object} [options]                    Query options\n   * @param {boolean} [options.concurrently]      Pass CONCURRENTLY so other operations run while the index is created\n   *\n   * @returns {Promise}\n   */\n  async removeIndex(tableName, indexNameOrAttributes, options) {\n    options = options || {};\n    const sql = this.queryGenerator.removeIndexQuery(tableName, indexNameOrAttributes, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Add a constraint to a table\n   *\n   * Available constraints:\n   * - UNIQUE\n   * - DEFAULT (MSSQL only)\n   * - CHECK (MySQL - Ignored by the database engine )\n   * - FOREIGN KEY\n   * - PRIMARY KEY\n   *\n   * @example <caption>UNIQUE</caption>\n   * queryInterface.addConstraint('Users', {\n   *   fields: ['email'],\n   *   type: 'unique',\n   *   name: 'custom_unique_constraint_name'\n   * });\n   *\n   * @example <caption>CHECK</caption>\n   * queryInterface.addConstraint('Users', {\n   *   fields: ['roles'],\n   *   type: 'check',\n   *   where: {\n   *      roles: ['user', 'admin', 'moderator', 'guest']\n   *   }\n   * });\n   *\n   * @example <caption>Default - MSSQL only</caption>\n   * queryInterface.addConstraint('Users', {\n   *    fields: ['roles'],\n   *    type: 'default',\n   *    defaultValue: 'guest'\n   * });\n   *\n   * @example <caption>Primary Key</caption>\n   * queryInterface.addConstraint('Users', {\n   *    fields: ['username'],\n   *    type: 'primary key',\n   *    name: 'custom_primary_constraint_name'\n   * });\n   *\n   * @example <caption>Foreign Key</caption>\n   * queryInterface.addConstraint('Posts', {\n   *   fields: ['username'],\n   *   type: 'foreign key',\n   *   name: 'custom_fkey_constraint_name',\n   *   references: { //Required field\n   *     table: 'target_table_name',\n   *     field: 'target_column_name'\n   *   },\n   *   onDelete: 'cascade',\n   *   onUpdate: 'cascade'\n   * });\n   *\n   * @example <caption>Composite Foreign Key</caption>\n   * queryInterface.addConstraint('TableName', {\n   *   fields: ['source_column_name', 'other_source_column_name'],\n   *   type: 'foreign key',\n   *   name: 'custom_fkey_constraint_name',\n   *   references: { //Required field\n   *     table: 'target_table_name',\n   *     fields: ['target_column_name', 'other_target_column_name']\n   *   },\n   *   onDelete: 'cascade',\n   *   onUpdate: 'cascade'\n   * });\n   *\n   * @param {string} tableName                   Table name where you want to add a constraint\n   * @param {object} options                     An object to define the constraint name, type etc\n   * @param {string} options.type                Type of constraint. One of the values in available constraints(case insensitive)\n   * @param {Array}  options.fields              Array of column names to apply the constraint over\n   * @param {string} [options.name]              Name of the constraint. If not specified, sequelize automatically creates a named constraint based on constraint type, table & column names\n   * @param {string} [options.defaultValue]      The value for the default constraint\n   * @param {object} [options.where]             Where clause/expression for the CHECK constraint\n   * @param {object} [options.references]        Object specifying target table, column name to create foreign key constraint\n   * @param {string} [options.references.table]  Target table name\n   * @param {string} [options.references.field]  Target column name\n   * @param {string} [options.references.fields] Target column names for a composite primary key. Must match the order of fields in options.fields.\n   * @param {string} [options.deferrable]        Sets the constraint to be deferred or immediately checked. See Sequelize.Deferrable. PostgreSQL Only\n   *\n   * @returns {Promise}\n   */\n  async addConstraint(tableName, options) {\n    if (!options.fields) {\n      throw new Error('Fields must be specified through options.fields');\n    }\n\n    if (!options.type) {\n      throw new Error('Constraint type must be specified through options.type');\n    }\n\n    options = Utils.cloneDeep(options);\n\n    const sql = this.queryGenerator.addConstraintQuery(tableName, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  async showConstraint(tableName, constraintName, options) {\n    const sql = this.queryGenerator.showConstraintsQuery(tableName, constraintName);\n    return await this.sequelize.query(sql, { ...options, type: QueryTypes.SHOWCONSTRAINTS });\n  }\n\n  /**\n   * Remove a constraint from a table\n   *\n   * @param {string} tableName       Table name to drop constraint from\n   * @param {string} constraintName  Constraint name\n   * @param {object} options         Query options\n   */\n  async removeConstraint(tableName, constraintName, options) {\n    return this.sequelize.query(this.queryGenerator.removeConstraintQuery(tableName, constraintName), options);\n  }\n\n  async insert(instance, tableName, values, options) {\n    options = Utils.cloneDeep(options);\n    options.hasTrigger = instance && instance.constructor.options.hasTrigger;\n    const sql = this.queryGenerator.insertQuery(tableName, values, instance && instance.constructor.rawAttributes, options);\n\n    options.type = QueryTypes.INSERT;\n    options.instance = instance;\n\n    const results = await this.sequelize.query(sql, options);\n    if (instance) results[0].isNewRecord = false;\n\n    return results;\n  }\n\n  /**\n   * Upsert\n   *\n   * @param {string} tableName    table to upsert on\n   * @param {object} insertValues values to be inserted, mapped to field name\n   * @param {object} updateValues values to be updated, mapped to field name\n   * @param {object} where        where conditions, which can be used for UPDATE part when INSERT fails\n   * @param {object} options      query options\n   *\n   * @returns {Promise<boolean,?number>} Resolves an array with <created, primaryKey>\n   */\n  async upsert(tableName, insertValues, updateValues, where, options) {\n    options = { ...options };\n\n    const model = options.model;\n\n    options.type = QueryTypes.UPSERT;\n    options.updateOnDuplicate = Object.keys(updateValues);\n    options.upsertKeys = options.conflictFields || [];\n\n    if (options.upsertKeys.length === 0) {\n      const primaryKeys = Object.values(model.primaryKeys).map(item => item.field);\n      const uniqueKeys = Object.values(model.uniqueKeys).filter(c => c.fields.length > 0).map(c => c.fields);\n      const indexKeys = Object.values(model._indexes).filter(c => c.unique && c.fields.length > 0).map(c => c.fields);\n      // For fields in updateValues, try to find a constraint or unique index\n      // that includes given field. Only first matching upsert key is used.\n      for (const field of options.updateOnDuplicate) {\n        const uniqueKey = uniqueKeys.find(fields => fields.includes(field));\n        if (uniqueKey) {\n          options.upsertKeys = uniqueKey;\n          break;\n        }\n\n        const indexKey = indexKeys.find(fields => fields.includes(field));\n        if (indexKey) {\n          options.upsertKeys = indexKey;\n          break;\n        }\n      }\n\n      // Always use PK, if no constraint available OR update data contains PK\n      if (\n        options.upsertKeys.length === 0\n        || _.intersection(options.updateOnDuplicate, primaryKeys).length\n      ) {\n        options.upsertKeys = primaryKeys;\n      }\n\n      options.upsertKeys = _.uniq(options.upsertKeys);\n    }\n\n    const sql = this.queryGenerator.insertQuery(tableName, insertValues, model.rawAttributes, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Insert multiple records into a table\n   *\n   * @example\n   * queryInterface.bulkInsert('roles', [{\n   *    label: 'user',\n   *    createdAt: new Date(),\n   *    updatedAt: new Date()\n   *  }, {\n   *    label: 'admin',\n   *    createdAt: new Date(),\n   *    updatedAt: new Date()\n   *  }]);\n   *\n   * @param {string} tableName   Table name to insert record to\n   * @param {Array}  records     List of records to insert\n   * @param {object} options     Various options, please see Model.bulkCreate options\n   * @param {object} attributes  Various attributes mapped by field name\n   *\n   * @returns {Promise}\n   */\n  async bulkInsert(tableName, records, options, attributes) {\n    options = { ...options };\n    options.type = QueryTypes.INSERT;\n\n    const results = await this.sequelize.query(\n      this.queryGenerator.bulkInsertQuery(tableName, records, options, attributes),\n      options\n    );\n\n    return results[0];\n  }\n\n  async update(instance, tableName, values, identifier, options) {\n    options = { ...options };\n    options.hasTrigger = instance && instance.constructor.options.hasTrigger;\n\n    const sql = this.queryGenerator.updateQuery(tableName, values, identifier, options, instance.constructor.rawAttributes);\n\n    options.type = QueryTypes.UPDATE;\n\n    options.instance = instance;\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Update multiple records of a table\n   *\n   * @example\n   * queryInterface.bulkUpdate('roles', {\n   *     label: 'admin',\n   *   }, {\n   *     userType: 3,\n   *   },\n   * );\n   *\n   * @param {string} tableName     Table name to update\n   * @param {object} values        Values to be inserted, mapped to field name\n   * @param {object} identifier    A hash with conditions OR an ID as integer OR a string with conditions\n   * @param {object} [options]     Various options, please see Model.bulkCreate options\n   * @param {object} [attributes]  Attributes on return objects if supported by SQL dialect\n   *\n   * @returns {Promise}\n   */\n  async bulkUpdate(tableName, values, identifier, options, attributes) {\n    options = Utils.cloneDeep(options);\n    if (typeof identifier === 'object') identifier = Utils.cloneDeep(identifier);\n\n    const sql = this.queryGenerator.updateQuery(tableName, values, identifier, options, attributes);\n    const table = _.isObject(tableName) ? tableName : { tableName };\n    const model = options.model ? options.model : _.find(this.sequelize.modelManager.models, { tableName: table.tableName });\n\n    options.type = QueryTypes.BULKUPDATE;\n    options.model = model;\n    return await this.sequelize.query(sql, options);\n  }\n\n  async delete(instance, tableName, identifier, options) {\n    const cascades = [];\n    const sql = this.queryGenerator.deleteQuery(tableName, identifier, {}, instance.constructor);\n\n    options = { ...options };\n\n    // Check for a restrict field\n    if (!!instance.constructor && !!instance.constructor.associations) {\n      const keys = Object.keys(instance.constructor.associations);\n      const length = keys.length;\n      let association;\n\n      for (let i = 0; i < length; i++) {\n        association = instance.constructor.associations[keys[i]];\n        if (association.options && association.options.onDelete &&\n          association.options.onDelete.toLowerCase() === 'cascade' &&\n          association.options.useHooks === true) {\n          cascades.push(association.accessors.get);\n        }\n      }\n    }\n\n    for (const cascade of cascades) {\n      let instances = await instance[cascade](options);\n      // Check for hasOne relationship with non-existing associate (\"has zero\")\n      if (!instances) continue;\n      if (!Array.isArray(instances)) instances = [instances];\n      for (const _instance of instances) await _instance.destroy(options);\n    }\n    options.instance = instance;\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Delete multiple records from a table\n   *\n   * @param {string}  tableName            table name from where to delete records\n   * @param {object}  where                where conditions to find records to delete\n   * @param {object}  [options]            options\n   * @param {boolean} [options.truncate]   Use truncate table command\n   * @param {boolean} [options.cascade=false]         Only used in conjunction with TRUNCATE. Truncates  all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.\n   * @param {boolean} [options.restartIdentity=false] Only used in conjunction with TRUNCATE. Automatically restart sequences owned by columns of the truncated table.\n   * @param {Model}   [model]              Model\n   *\n   * @returns {Promise}\n   */\n  async bulkDelete(tableName, where, options, model) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, { limit: null });\n\n    if (options.truncate === true) {\n      return this.sequelize.query(\n        this.queryGenerator.truncateTableQuery(tableName, options),\n        options\n      );\n    }\n\n    if (typeof identifier === 'object') where = Utils.cloneDeep(where);\n\n    return await this.sequelize.query(\n      this.queryGenerator.deleteQuery(tableName, where, options, model),\n      options\n    );\n  }\n\n  async select(model, tableName, optionsArg) {\n    const options = { ...optionsArg, type: QueryTypes.SELECT, model };\n\n    return await this.sequelize.query(\n      this.queryGenerator.selectQuery(tableName, options, model),\n      options\n    );\n  }\n\n  async increment(model, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options) {\n    options = Utils.cloneDeep(options);\n\n    const sql = this.queryGenerator.arithmeticQuery('+', tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options);\n\n    options.type = QueryTypes.UPDATE;\n    options.model = model;\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async decrement(model, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options) {\n    options = Utils.cloneDeep(options);\n\n    const sql = this.queryGenerator.arithmeticQuery('-', tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options);\n\n    options.type = QueryTypes.UPDATE;\n    options.model = model;\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async rawSelect(tableName, options, attributeSelector, Model) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, {\n      raw: true,\n      plain: true,\n      type: QueryTypes.SELECT\n    });\n\n    const sql = this.queryGenerator.selectQuery(tableName, options, Model);\n\n    if (attributeSelector === undefined) {\n      throw new Error('Please pass an attribute selector!');\n    }\n\n    const data = await this.sequelize.query(sql, options);\n    if (!options.plain) {\n      return data;\n    }\n\n    const result = data ? data[attributeSelector] : null;\n\n    if (!options || !options.dataType) {\n      return result;\n    }\n\n    const dataType = options.dataType;\n\n    if (dataType instanceof DataTypes.DECIMAL || dataType instanceof DataTypes.FLOAT) {\n      if (result !== null) {\n        return parseFloat(result);\n      }\n    }\n    if (dataType instanceof DataTypes.INTEGER || dataType instanceof DataTypes.BIGINT) {\n      if (result !== null) {\n        return parseInt(result, 10);\n      }\n    }\n    if (dataType instanceof DataTypes.DATE) {\n      if (result !== null && !(result instanceof Date)) {\n        return new Date(result);\n      }\n    }\n    return result;\n  }\n\n  async createTrigger(\n    tableName,\n    triggerName,\n    timingType,\n    fireOnArray,\n    functionName,\n    functionParams,\n    optionsArray,\n    options\n  ) {\n    const sql = this.queryGenerator.createTrigger(tableName, triggerName, timingType, fireOnArray, functionName, functionParams, optionsArray);\n    options = options || {};\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  async dropTrigger(tableName, triggerName, options) {\n    const sql = this.queryGenerator.dropTrigger(tableName, triggerName);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  async renameTrigger(tableName, oldTriggerName, newTriggerName, options) {\n    const sql = this.queryGenerator.renameTrigger(tableName, oldTriggerName, newTriggerName);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Create an SQL function\n   *\n   * @example\n   * queryInterface.createFunction(\n   *   'someFunction',\n   *   [\n   *     {type: 'integer', name: 'param', direction: 'IN'}\n   *   ],\n   *   'integer',\n   *   'plpgsql',\n   *   'RETURN param + 1;',\n   *   [\n   *     'IMMUTABLE',\n   *     'LEAKPROOF'\n   *   ],\n   *   {\n   *    variables:\n   *      [\n   *        {type: 'integer', name: 'myVar', default: 100}\n   *      ],\n   *      force: true\n   *   };\n   * );\n   *\n   * @param {string}  functionName  Name of SQL function to create\n   * @param {Array}   params        List of parameters declared for SQL function\n   * @param {string}  returnType    SQL type of function returned value\n   * @param {string}  language      The name of the language that the function is implemented in\n   * @param {string}  body          Source code of function\n   * @param {Array}   optionsArray  Extra-options for creation\n   * @param {object}  [options]     query options\n   * @param {boolean} options.force If force is true, any existing functions with the same parameters will be replaced. For postgres, this means using `CREATE OR REPLACE FUNCTION` instead of `CREATE FUNCTION`. Default is false\n   * @param {Array<object>}   options.variables List of declared variables. Each variable should be an object with string fields `type` and `name`, and optionally having a `default` field as well.\n   *\n   * @returns {Promise}\n   */\n  async createFunction(functionName, params, returnType, language, body, optionsArray, options) {\n    const sql = this.queryGenerator.createFunction(functionName, params, returnType, language, body, optionsArray, options);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Drop an SQL function\n   *\n   * @example\n   * queryInterface.dropFunction(\n   *   'someFunction',\n   *   [\n   *     {type: 'varchar', name: 'param1', direction: 'IN'},\n   *     {type: 'integer', name: 'param2', direction: 'INOUT'}\n   *   ]\n   * );\n   *\n   * @param {string} functionName Name of SQL function to drop\n   * @param {Array}  params       List of parameters declared for SQL function\n   * @param {object} [options]    query options\n   *\n   * @returns {Promise}\n   */\n  async dropFunction(functionName, params, options) {\n    const sql = this.queryGenerator.dropFunction(functionName, params);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Rename an SQL function\n   *\n   * @example\n   * queryInterface.renameFunction(\n   *   'fooFunction',\n   *   [\n   *     {type: 'varchar', name: 'param1', direction: 'IN'},\n   *     {type: 'integer', name: 'param2', direction: 'INOUT'}\n   *   ],\n   *   'barFunction'\n   * );\n   *\n   * @param {string} oldFunctionName  Current name of function\n   * @param {Array}  params           List of parameters declared for SQL function\n   * @param {string} newFunctionName  New name of function\n   * @param {object} [options]        query options\n   *\n   * @returns {Promise}\n   */\n  async renameFunction(oldFunctionName, params, newFunctionName, options) {\n    const sql = this.queryGenerator.renameFunction(oldFunctionName, params, newFunctionName);\n    options = options || {};\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  // Helper methods useful for querying\n\n  /**\n   * @private\n   */\n  ensureEnums() {\n    // noop by default\n  }\n\n  async setIsolationLevel(transaction, value, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to set isolation level for a transaction without transaction object!');\n    }\n\n    if (transaction.parent || !value) {\n      // Not possible to set a separate isolation level for savepoints\n      return;\n    }\n\n    options = { ...options, transaction: transaction.parent || transaction };\n\n    const sql = this.queryGenerator.setIsolationLevelQuery(value, {\n      parent: transaction.parent\n    });\n\n    if (!sql) return;\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async startTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to start a transaction without transaction object!');\n    }\n\n    options = { ...options, transaction: transaction.parent || transaction };\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n    const sql = this.queryGenerator.startTransactionQuery(transaction);\n\n    return await this.sequelize.query(sql, options);\n  }\n\n  async deferConstraints(transaction, options) {\n    options = { ...options, transaction: transaction.parent || transaction };\n\n    const sql = this.queryGenerator.deferConstraintsQuery(options);\n\n    if (sql) {\n      return await this.sequelize.query(sql, options);\n    }\n  }\n\n  async commitTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to commit a transaction without transaction object!');\n    }\n    if (transaction.parent) {\n      // Savepoints cannot be committed\n      return;\n    }\n\n    options = {\n      ...options,\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false,\n      completesTransaction: true\n    };\n\n    const sql = this.queryGenerator.commitTransactionQuery(transaction);\n    const promise = this.sequelize.query(sql, options);\n\n    transaction.finished = 'commit';\n\n    return await promise;\n  }\n\n  async rollbackTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to rollback a transaction without transaction object!');\n    }\n\n    options = {\n      ...options,\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false,\n      completesTransaction: true\n    };\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n    const sql = this.queryGenerator.rollbackTransactionQuery(transaction);\n    const promise = this.sequelize.query(sql, options);\n\n    transaction.finished = 'rollback';\n\n    return await promise;\n  }\n}\n\nexports.QueryInterface = QueryInterface;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/sqlite/sqlite-utils.js":{"lineLengths":[38,82,33,25,23,66,2,19,58,3,65,7,64,22,13,63,3,1,40,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/sqlite/sqlite-utils.ts"],"sourcesContent":["import type { Sequelize } from '../../sequelize.js';\nimport type { QueryOptions } from '../abstract/query-interface.js';\n\nexport async function withSqliteForeignKeysOff<T>(sequelize: Sequelize, options: QueryOptions, cb: () => Promise<T>): Promise<T> {\n  try {\n    await sequelize.query('PRAGMA foreign_keys = OFF', options);\n\n    return await cb();\n  } finally {\n    await sequelize.query('PRAGMA foreign_keys = ON', options);\n  }\n}\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAGA,wCAAkD,WAAsB,SAAuB,IAAkC;AAC/H,MAAI;AACF,UAAM,UAAU,MAAM,6BAA6B;AAEnD,WAAO,MAAM;AAAA,YACb;AACA,UAAM,UAAU,MAAM,4BAA4B;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/utils/sql.js":{"lineLengths":[29,38,55,51,41,51,82,33,25,23,66,2,45,80,47,63,133,3,16,2,31,268,2,19,46,3,71,61,63,21,29,21,3,89,132,3,78,63,50,18,40,23,23,27,34,29,41,46,30,19,45,25,7,15,5,19,99,25,43,7,15,5,46,25,17,7,67,97,136,51,42,7,15,5,30,26,36,7,15,5,25,53,31,7,15,5,42,22,15,5,23,22,204,15,5,62,33,15,5,61,28,15,5,23,44,44,17,7,67,97,35,126,50,17,7,15,5,46,44,70,17,7,67,94,102,29,17,7,61,112,104,7,109,53,56,35,15,5,51,44,70,17,7,40,49,17,7,72,84,40,160,7,109,53,31,35,5,3,17,85,15,3,64,16,1,35,50,1,42,22,34,27,24,12,5,23,3,17,1,31,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/utils/sql.ts"],"sourcesContent":["import isPlainObject from 'lodash/isPlainObject';\nimport type { AbstractDialect } from '../dialects/abstract/index.js';\nimport { escape as escapeSqlValue } from '../sql-string';\n\ntype BindOrReplacements = { [key: string]: unknown } | unknown[];\n\n/**\n * Inlines replacements in places where they would be valid SQL values.\n *\n * @param sqlString The SQL that contains the replacements\n * @param dialect The dialect of the SQL\n * @param replacements if provided, this method will replace ':named' replacements & positional replacements (?)\n *\n * @returns The SQL with replacements rewritten in their dialect-specific syntax.\n */\nexport function injectReplacements(\n  sqlString: string,\n  dialect: AbstractDialect,\n  replacements: BindOrReplacements\n): string {\n  if (replacements == null) {\n    return sqlString;\n  }\n\n  if (!Array.isArray(replacements) && !isPlainObject(replacements)) {\n    throw new TypeError(`\"replacements\" must be an array or a plain object, but received ${JSON.stringify(replacements)} instead.`);\n  }\n\n  const isNamedReplacements = isPlainObject(replacements);\n  const isPositionalReplacements = Array.isArray(replacements);\n  let lastConsumedPositionalReplacementIndex = -1;\n\n  let output = '';\n\n  let currentDollarStringTagName = null;\n  let isString = false;\n  let isColumn = false;\n  let previousSliceEnd = 0;\n  let isSingleLineComment = false;\n  let isCommentBlock = false;\n  let stringIsBackslashEscapable = false;\n\n  for (let i = 0; i < sqlString.length; i++) {\n    const char = sqlString[i];\n\n    if (isColumn) {\n      if (char === dialect.TICK_CHAR_RIGHT) {\n        isColumn = false;\n      }\n\n      continue;\n    }\n\n    if (isString) {\n      if (\n        char === '\\'' &&\n        (!stringIsBackslashEscapable || !isBackslashEscaped(sqlString, i - 1))\n      ) {\n        isString = false;\n        stringIsBackslashEscapable = false;\n      }\n\n      continue;\n    }\n\n    if (currentDollarStringTagName !== null) {\n      if (char !== '$') {\n        continue;\n      }\n\n      const remainingString = sqlString.slice(i, sqlString.length);\n\n      const dollarStringStartMatch = remainingString.match(/^\\$(?<name>[a-z_][0-9a-z_]*)?(\\$)/i);\n      const tagName = dollarStringStartMatch?.groups?.name || '';\n      if (currentDollarStringTagName === tagName) {\n        currentDollarStringTagName = null;\n      }\n\n      continue;\n    }\n\n    if (isSingleLineComment) {\n      if (char === '\\n') {\n        isSingleLineComment = false;\n      }\n\n      continue;\n    }\n\n    if (isCommentBlock) {\n      if (char === '*' && sqlString[i + 1] === '/') {\n        isCommentBlock = false;\n      }\n\n      continue;\n    }\n\n    if (char === dialect.TICK_CHAR_LEFT) {\n      isColumn = true;\n      continue;\n    }\n\n    if (char === '\\'') {\n      isString = true;\n\n      // The following query is supported in almost all dialects,\n      //  SELECT E'test';\n      // but postgres interprets it as an E-prefixed string, while other dialects interpret it as\n      //  SELECT E 'test';\n      // which selects the type E and aliases it to 'test'.\n\n      stringIsBackslashEscapable =\n        // all ''-style strings in this dialect can be backslash escaped\n        dialect.canBackslashEscape() ||\n        // checking if this is a postgres-style E-prefixed string, which also supports backslash escaping\n        dialect.supports.escapeStringConstants &&\n          // is this a E-prefixed string, such as `E'abc'`, `e'abc'` ?\n          (sqlString[i - 1] === 'E' || sqlString[i - 1] === 'e') &&\n          // reject things such as `AE'abc'` (the prefix must be exactly E)\n          canPrecedeNewToken(sqlString[i - 2]);\n\n      continue;\n    }\n\n    if (char === '-' && sqlString.slice(i, i + 3) === '-- ') {\n      isSingleLineComment = true;\n      continue;\n    }\n\n    if (char === '/' && sqlString.slice(i, i + 2) === '/*') {\n      isCommentBlock = true;\n      continue;\n    }\n\n    // either the start of a $bind parameter, or the start of a $tag$string$tag$\n    if (char === '$') {\n      const previousChar = sqlString[i - 1];\n\n      // we are part of an identifier\n      if (/[0-9a-z_]/i.test(previousChar)) {\n        continue;\n      }\n\n      const remainingString = sqlString.slice(i, sqlString.length);\n\n      const dollarStringStartMatch = remainingString.match(/^\\$(?<name>[a-z_][0-9a-z_]*)?(\\$)/i);\n      if (dollarStringStartMatch) {\n        currentDollarStringTagName = dollarStringStartMatch.groups?.name ?? '';\n        i += dollarStringStartMatch[0].length - 1;\n\n        continue;\n      }\n\n      continue;\n    }\n\n    if (isNamedReplacements && char === ':') {\n      const previousChar = sqlString[i - 1];\n      // we want to be conservative with what we consider to be a replacement to avoid risk of conflict with potential operators\n      // users need to add a space before the bind parameter (except after '(', ',', and '=', '[' (for arrays))\n      if (!canPrecedeNewToken(previousChar) && previousChar !== '[') {\n        continue;\n      }\n\n      const remainingString = sqlString.slice(i, sqlString.length);\n\n      const match = remainingString.match(/^:(?<name>[a-z_][0-9a-z_]*)(?:\\)|,|$|\\s|::|;|])/i);\n      const replacementName = match?.groups?.name;\n      if (!replacementName) {\n        continue;\n      }\n\n      // @ts-expect-error -- isPlainObject does not tell typescript that replacements is a plain object, not an array\n      const replacementValue = replacements[replacementName];\n      if (!Object.prototype.hasOwnProperty.call(replacements, replacementName) || replacementValue === undefined) {\n        throw new Error(`Named replacement \":${replacementName}\" has no entry in the replacement map.`);\n      }\n\n      const escapedReplacement = escapeSqlValue(replacementValue, undefined, dialect.name, true);\n\n      // add everything before the bind parameter name\n      output += sqlString.slice(previousSliceEnd, i);\n      // continue after the bind parameter name\n      previousSliceEnd = i + replacementName.length + 1;\n\n      output += escapedReplacement;\n\n      continue;\n    }\n\n    if (isPositionalReplacements && char === '?') {\n      const previousChar = sqlString[i - 1];\n\n      // we want to be conservative with what we consider to be a replacement to avoid risk of conflict with potential operators\n      // users need to add a space before the bind parameter (except after '(', ',', and '=', '[' (for arrays))\n      // -> [ is temporarily added to allow 'ARRAY[:name]' to be replaced\n      // https://github.com/sequelize/sequelize/issues/14410 will make this obsolete.\n      if (!canPrecedeNewToken(previousChar) && previousChar !== '[') {\n        continue;\n      }\n\n      // don't parse ?| and ?& operators as replacements\n      const nextChar = sqlString[i + 1];\n      if (nextChar === '|' || nextChar === '&') {\n        continue;\n      }\n\n      const replacementIndex = ++lastConsumedPositionalReplacementIndex;\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore -- ts < 4.4 loses the information that 'replacements' is an array when using 'isPositionalReplacements' instead of 'Array.isArray'\n      //  but performance matters here.\n      const replacementValue = replacements[lastConsumedPositionalReplacementIndex];\n\n      if (replacementValue === undefined) {\n        throw new Error(`Positional replacement (?) ${replacementIndex} has no entry in the replacement map (replacements[${replacementIndex}] is undefined).`);\n      }\n\n      const escapedReplacement = escapeSqlValue(replacementValue as any, undefined, dialect.name, true);\n\n      // add everything before the bind parameter name\n      output += sqlString.slice(previousSliceEnd, i);\n      // continue after the bind parameter name\n      previousSliceEnd = i + 1;\n\n      output += escapedReplacement;\n    }\n  }\n\n  if (isString) {\n    throw new Error(\n      `The following SQL query includes an unterminated string literal:\\n${sqlString}`\n    );\n  }\n\n  output += sqlString.slice(previousSliceEnd, sqlString.length);\n\n  return output;\n}\n\nfunction canPrecedeNewToken(char: string | undefined): boolean {\n  return char === undefined || /[\\s(>,=]/.test(char);\n}\n\nfunction isBackslashEscaped(string: string, pos: number): boolean {\n  let escaped = false;\n  for (let i = pos; i >= 0; i--) {\n    const char = string[i];\n    if (char !== '\\\\') {\n      break;\n    }\n\n    escaped = !escaped;\n  }\n\n  return escaped;\n}\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/index.js":{"lineLengths":[13,28,47,58,33,52,52,61,44,26,12,31,68,46,21,15,7,82,3,24,16,3,1,92,20,26,13,33,48,12,32,49,4,10,19,17,17,15,12,4,16,26,16,4,22,19,16,17,13,14,3,48,37,55,45,38,39,73,74,30,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/mysql/index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').mysql;\nconst { MySQLQueryInterface } = require('./query-interface');\n\nclass MysqlDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MySQLQueryInterface(\n      sequelize,\n      this.queryGenerator\n    );\n  }\n\n  canBackslashEscape() {\n    return true;\n  }\n}\n\nMysqlDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports),\n  {\n    'VALUES ()': true,\n    'LIMIT ON UPDATE': true,\n    lock: true,\n    forShare: 'LOCK IN SHARE MODE',\n    settingIsolationLevelDuringTransaction: false,\n    inserts: {\n      ignoreDuplicates: ' IGNORE',\n      updateOnDuplicate: ' ON DUPLICATE KEY UPDATE'\n    },\n    index: {\n      collate: false,\n      length: true,\n      parser: true,\n      type: true,\n      using: 1\n    },\n    constraints: {\n      dropConstraint: false,\n      check: false\n    },\n    indexViaAlter: true,\n    indexHints: true,\n    NUMERIC: true,\n    GEOMETRY: true,\n    JSON: true,\n    REGEXP: true\n  }\n);\n\nMysqlDialect.prototype.defaultVersion = '5.7.0'; // minimum supported version\nMysqlDialect.prototype.Query = Query;\nMysqlDialect.prototype.QueryGenerator = QueryGenerator;\nMysqlDialect.prototype.DataTypes = DataTypes;\nMysqlDialect.prototype.name = 'mysql';\nMysqlDialect.prototype.TICK_CHAR = '`';\nMysqlDialect.prototype.TICK_CHAR_LEFT = MysqlDialect.prototype.TICK_CHAR;\nMysqlDialect.prototype.TICK_CHAR_RIGHT = MysqlDialect.prototype.TICK_CHAR;\n\nmodule.exports = MysqlDialect;\n"],"mappings":";AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,kBAAkB,QAAQ;AAChC,MAAM,oBAAoB,QAAQ;AAClC,MAAM,QAAQ,QAAQ;AACtB,MAAM,iBAAiB,QAAQ;AAC/B,MAAM,YAAY,QAAQ,oBAAoB;AAC9C,MAAM,EAAE,wBAAwB,QAAQ;AAExC,2BAA2B,gBAAgB;AAAA,EACzC,YAAY,WAAW;AACrB;AACA,SAAK,YAAY;AACjB,SAAK,oBAAoB,IAAI,kBAAkB,MAAM;AACrD,SAAK,iBAAiB,IAAI,eAAe;AAAA,MACvC,UAAU;AAAA,MACV;AAAA;AAEF,SAAK,iBAAiB,IAAI,oBACxB,WACA,KAAK;AAAA;AAAA,EAIT,qBAAqB;AACnB,WAAO;AAAA;AAAA;AAIX,aAAa,UAAU,WAAW,EAAE,MAClC,EAAE,UAAU,gBAAgB,UAAU,WACtC;AAAA,EACE,aAAa;AAAA,EACb,mBAAmB;AAAA,EACnB,MAAM;AAAA,EACN,UAAU;AAAA,EACV,wCAAwC;AAAA,EACxC,SAAS;AAAA,IACP,kBAAkB;AAAA,IAClB,mBAAmB;AAAA;AAAA,EAErB,OAAO;AAAA,IACL,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA;AAAA,EAET,aAAa;AAAA,IACX,gBAAgB;AAAA,IAChB,OAAO;AAAA;AAAA,EAET,eAAe;AAAA,EACf,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,UAAU;AAAA,EACV,MAAM;AAAA,EACN,QAAQ;AAAA;AAIZ,aAAa,UAAU,iBAAiB;AACxC,aAAa,UAAU,QAAQ;AAC/B,aAAa,UAAU,iBAAiB;AACxC,aAAa,UAAU,YAAY;AACnC,aAAa,UAAU,OAAO;AAC9B,aAAa,UAAU,YAAY;AACnC,aAAa,UAAU,iBAAiB,aAAa,UAAU;AAC/D,aAAa,UAAU,kBAAkB,aAAa,UAAU;AAEhE,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/index.js":{"lineLengths":[13,23,24,17,3,1,38,18,26,21,27,27,23,16,20,21,22,18,26,23,16,4,21,17,21,47,23,15,4,19,16,12,25,29,28,27,25,4,16,19,24,25,17,19,16,21,20,4,10,18,18,18,24,16,16,25,19,4,21,23,14,31,30,2,33,49,41,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/abstract/index.js"],"sourcesContent":["'use strict';\n\nclass AbstractDialect {\n  /**\n   * Whether this dialect can use \\ in strings to escape string delimiters.\n   *\n   * @returns {boolean}\n   */\n  canBackslashEscape() {\n    return false;\n  }\n}\n\nAbstractDialect.prototype.supports = {\n  'DEFAULT': true,\n  'DEFAULT VALUES': false,\n  'VALUES ()': false,\n  'LIMIT ON UPDATE': false,\n  'ON DUPLICATE KEY': true,\n  'ORDER NULLS': false,\n  'UNION': true,\n  'UNION ALL': true,\n  'RIGHT JOIN': true,\n\n  /* does the dialect support returning values for inserted/updated fields */\n  returnValues: false,\n\n  /* features specific to autoIncrement values */\n  autoIncrement: {\n    /* does the dialect require modification of insert queries when inserting auto increment fields */\n    identityInsert: false,\n\n    /* does the dialect support inserting default/null values for autoincrement fields */\n    defaultValue: true,\n\n    /* does the dialect support updating autoincrement fields */\n    update: true\n  },\n  /* Do we need to say DEFAULT for bulk insert */\n  bulkDefault: false,\n  schemas: false,\n  transactions: true,\n  settingIsolationLevelDuringTransaction: true,\n  transactionOptions: {\n    type: false\n  },\n  migrations: true,\n  upserts: true,\n  inserts: {\n    ignoreDuplicates: '', /* dialect specific words for INSERT IGNORE or DO NOTHING */\n    updateOnDuplicate: false, /* whether dialect supports ON DUPLICATE KEY UPDATE */\n    onConflictDoNothing: '', /* dialect specific words for ON CONFLICT DO NOTHING */\n    onConflictWhere: false, /* whether dialect supports ON CONFLICT WHERE */\n    conflictFields: false /* whether the dialect supports specifying conflict fields or not */\n  },\n  constraints: {\n    restrict: true,\n    addConstraint: true,\n    dropConstraint: true,\n    unique: true,\n    default: false,\n    check: true,\n    foreignKey: true,\n    primaryKey: true\n  },\n  index: {\n    collate: true,\n    length: false,\n    parser: false,\n    concurrently: false,\n    type: false,\n    using: true,\n    functionBased: false,\n    operator: false\n  },\n  groupedLimit: true,\n  indexViaAlter: false,\n  JSON: false,\n  /**\n   * This dialect supports marking a column's constraints as deferrable.\n   * e.g. 'DEFERRABLE' and 'INITIALLY DEFERRED'\n   */\n  deferrableConstraints: false,\n  escapeStringConstants: false\n};\n\nmodule.exports = AbstractDialect;\nmodule.exports.AbstractDialect = AbstractDialect;\nmodule.exports.default = AbstractDialect;\n"],"mappings":";AAEA,sBAAsB;AAAA,EAMpB,qBAAqB;AACnB,WAAO;AAAA;AAAA;AAIX,gBAAgB,UAAU,WAAW;AAAA,EACnC,WAAW;AAAA,EACX,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,eAAe;AAAA,EACf,SAAS;AAAA,EACT,aAAa;AAAA,EACb,cAAc;AAAA,EAGd,cAAc;AAAA,EAGd,eAAe;AAAA,IAEb,gBAAgB;AAAA,IAGhB,cAAc;AAAA,IAGd,QAAQ;AAAA;AAAA,EAGV,aAAa;AAAA,EACb,SAAS;AAAA,EACT,cAAc;AAAA,EACd,wCAAwC;AAAA,EACxC,oBAAoB;AAAA,IAClB,MAAM;AAAA;AAAA,EAER,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,SAAS;AAAA,IACP,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,qBAAqB;AAAA,IACrB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA;AAAA,EAElB,aAAa;AAAA,IACX,UAAU;AAAA,IACV,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,YAAY;AAAA;AAAA,EAEd,OAAO;AAAA,IACL,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,UAAU;AAAA;AAAA,EAEZ,cAAc;AAAA,EACd,eAAe;AAAA,EACf,MAAM;AAAA,EAKN,uBAAuB;AAAA,EACvB,uBAAuB;AAAA;AAGzB,OAAO,UAAU;AACjB,OAAO,QAAQ,kBAAkB;AACjC,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/connection-manager.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,76,48,49,52,44,54,55,38,59,35,58,30,49,38,3,32,34,3,22,24,3,33,38,78,5,18,3,25,45,24,24,28,27,32,32,48,55,30,29,30,9,65,72,37,64,62,20,10,38,60,31,10,46,52,9,35,41,29,25,28,23,42,42,9,9,55,55,86,89,7,24,19,25,28,64,38,59,25,59,28,63,22,64,16,57,7,5,3,32,30,78,13,5,69,3,24,135,3,1,35,53,43,46,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/mysql/connection-manager.js"],"sourcesContent":["'use strict';\n\nconst AbstractConnectionManager = require('../abstract/connection-manager');\nconst SequelizeErrors = require('../../errors');\nconst { logger } = require('../../utils/logger');\nconst DataTypes = require('../../data-types').mysql;\nconst momentTz = require('moment-timezone');\nconst debug = logger.debugContext('connection:mysql');\nconst parserStore = require('../parserStore')('mysql');\nconst { promisify } = require('util');\n\n/**\n * MySQL Connection Manager\n *\n * Get connections, validate and disconnect them.\n * AbstractConnectionManager pooling use it to handle MySQL specific connections\n * Use https://github.com/sidorares/node-mysql2 to connect with MySQL server\n *\n * @private\n */\nclass ConnectionManager extends AbstractConnectionManager {\n  constructor(dialect, sequelize) {\n    sequelize.config.port = sequelize.config.port || 3306;\n    super(dialect, sequelize);\n    this.lib = this._loadDialectModule('mysql2');\n    this.refreshTypeParser(DataTypes);\n  }\n\n  _refreshTypeParser(dataType) {\n    parserStore.refresh(dataType);\n  }\n\n  _clearTypeParser() {\n    parserStore.clear();\n  }\n\n  static _typecast(field, next) {\n    if (parserStore.get(field.type)) {\n      return parserStore.get(field.type)(field, this.sequelize.options, next);\n    }\n    return next();\n  }\n\n  /**\n   * Connect with MySQL database based on config, Handle any errors in connection\n   * Set the pool handlers on connection.error\n   * Also set proper timezone once connection is connected.\n   *\n   * @param {object} config\n   * @returns {Promise<Connection>}\n   * @private\n   */\n  async connect(config) {\n    const connectionConfig = {\n      host: config.host,\n      port: config.port,\n      user: config.username,\n      flags: '-FOUND_ROWS',\n      password: config.password,\n      database: config.database,\n      timezone: this.sequelize.options.timezone,\n      typeCast: ConnectionManager._typecast.bind(this),\n      bigNumberStrings: false,\n      supportBigNumbers: true,\n      ...config.dialectOptions\n    };\n\n    try {\n      const connection = await new Promise((resolve, reject) => {\n        const connection = this.lib.createConnection(connectionConfig);\n\n        const errorHandler = e => {\n          // clean up connect & error event if there is error\n          connection.removeListener('connect', connectHandler);\n          connection.removeListener('error', connectHandler);\n          reject(e);\n        };\n\n        const connectHandler = () => {\n          // clean up error event if connected\n          connection.removeListener('error', errorHandler);\n          resolve(connection);\n        };\n\n        // don't use connection.once for error event handling here\n        // mysql2 emit error two times in case handshake was failed\n        // first error is protocol_lost and second is timeout\n        // if we will use `once.error` node process will crash on 2nd error emit\n        connection.on('error', errorHandler);\n        connection.once('connect', connectHandler);\n      });\n\n      debug('connection acquired');\n      connection.on('error', error => {\n        switch (error.code) {\n          case 'ESOCKET':\n          case 'ECONNRESET':\n          case 'EPIPE':\n          case 'PROTOCOL_CONNECTION_LOST':\n            this.pool.destroy(connection);\n        }\n      });\n\n      if (!this.sequelize.config.keepDefaultTimezone) {\n        // set timezone for this connection\n        // but named timezone are not directly supported in mysql, so get its offset first\n        let tzOffset = this.sequelize.options.timezone;\n        tzOffset = /\\//.test(tzOffset) ? momentTz.tz(tzOffset).format('Z') : tzOffset;\n        await promisify(cb => connection.query(`SET time_zone = '${tzOffset}'`, cb))();\n      }\n\n      return connection;\n    } catch (err) {\n      switch (err.code) {\n        case 'ECONNREFUSED':\n          throw new SequelizeErrors.ConnectionRefusedError(err);\n        case 'ER_ACCESS_DENIED_ERROR':\n          throw new SequelizeErrors.AccessDeniedError(err);\n        case 'ENOTFOUND':\n          throw new SequelizeErrors.HostNotFoundError(err);\n        case 'EHOSTUNREACH':\n          throw new SequelizeErrors.HostNotReachableError(err);\n        case 'EINVAL':\n          throw new SequelizeErrors.InvalidConnectionError(err);\n        default:\n          throw new SequelizeErrors.ConnectionError(err);\n      }\n    }\n  }\n\n  async disconnect(connection) {\n    // Don't disconnect connections with CLOSED state\n    if (connection._closing) {\n      debug('connection tried to disconnect but was already at CLOSED state');\n      return;\n    }\n\n    return await promisify(callback => connection.end(callback))();\n  }\n\n  validate(connection) {\n    return connection\n      && !connection._fatalError\n      && !connection._protocolError\n      && !connection._closing\n      && !connection.stream.destroyed;\n  }\n}\n\nmodule.exports = ConnectionManager;\nmodule.exports.ConnectionManager = ConnectionManager;\nmodule.exports.default = ConnectionManager;\n"],"mappings":";;;;;;;;;;;;;;;;;AAEA,MAAM,4BAA4B,QAAQ;AAC1C,MAAM,kBAAkB,QAAQ;AAChC,MAAM,EAAE,WAAW,QAAQ;AAC3B,MAAM,YAAY,QAAQ,oBAAoB;AAC9C,MAAM,WAAW,QAAQ;AACzB,MAAM,QAAQ,OAAO,aAAa;AAClC,MAAM,cAAc,QAAQ,kBAAkB;AAC9C,MAAM,EAAE,cAAc,QAAQ;AAW9B,gCAAgC,0BAA0B;AAAA,EACxD,YAAY,SAAS,WAAW;AAC9B,cAAU,OAAO,OAAO,UAAU,OAAO,QAAQ;AACjD,UAAM,SAAS;AACf,SAAK,MAAM,KAAK,mBAAmB;AACnC,SAAK,kBAAkB;AAAA;AAAA,EAGzB,mBAAmB,UAAU;AAC3B,gBAAY,QAAQ;AAAA;AAAA,EAGtB,mBAAmB;AACjB,gBAAY;AAAA;AAAA,SAGP,UAAU,OAAO,MAAM;AAC5B,QAAI,YAAY,IAAI,MAAM,OAAO;AAC/B,aAAO,YAAY,IAAI,MAAM,MAAM,OAAO,KAAK,UAAU,SAAS;AAAA;AAEpE,WAAO;AAAA;AAAA,QAYH,QAAQ,QAAQ;AACpB,UAAM,mBAAmB;AAAA,MACvB,MAAM,OAAO;AAAA,MACb,MAAM,OAAO;AAAA,MACb,MAAM,OAAO;AAAA,MACb,OAAO;AAAA,MACP,UAAU,OAAO;AAAA,MACjB,UAAU,OAAO;AAAA,MACjB,UAAU,KAAK,UAAU,QAAQ;AAAA,MACjC,UAAU,kBAAkB,UAAU,KAAK;AAAA,MAC3C,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,OAChB,OAAO;AAGZ,QAAI;AACF,YAAM,aAAa,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AACxD,cAAM,cAAa,KAAK,IAAI,iBAAiB;AAE7C,cAAM,eAAe,OAAK;AAExB,sBAAW,eAAe,WAAW;AACrC,sBAAW,eAAe,SAAS;AACnC,iBAAO;AAAA;AAGT,cAAM,iBAAiB,MAAM;AAE3B,sBAAW,eAAe,SAAS;AACnC,kBAAQ;AAAA;AAOV,oBAAW,GAAG,SAAS;AACvB,oBAAW,KAAK,WAAW;AAAA;AAG7B,YAAM;AACN,iBAAW,GAAG,SAAS,WAAS;AAC9B,gBAAQ,MAAM;AAAA,eACP;AAAA,eACA;AAAA,eACA;AAAA,eACA;AACH,iBAAK,KAAK,QAAQ;AAAA;AAAA;AAIxB,UAAI,CAAC,KAAK,UAAU,OAAO,qBAAqB;AAG9C,YAAI,WAAW,KAAK,UAAU,QAAQ;AACtC,mBAAW,KAAK,KAAK,YAAY,SAAS,GAAG,UAAU,OAAO,OAAO;AACrE,cAAM,UAAU,QAAM,WAAW,MAAM,oBAAoB,aAAa;AAAA;AAG1E,aAAO;AAAA,aACA,KAAP;AACA,cAAQ,IAAI;AAAA,aACL;AACH,gBAAM,IAAI,gBAAgB,uBAAuB;AAAA,aAC9C;AACH,gBAAM,IAAI,gBAAgB,kBAAkB;AAAA,aACzC;AACH,gBAAM,IAAI,gBAAgB,kBAAkB;AAAA,aACzC;AACH,gBAAM,IAAI,gBAAgB,sBAAsB;AAAA,aAC7C;AACH,gBAAM,IAAI,gBAAgB,uBAAuB;AAAA;AAEjD,gBAAM,IAAI,gBAAgB,gBAAgB;AAAA;AAAA;AAAA;AAAA,QAK5C,WAAW,YAAY;AAE3B,QAAI,WAAW,UAAU;AACvB,YAAM;AACN;AAAA;AAGF,WAAO,MAAM,UAAU,cAAY,WAAW,IAAI;AAAA;AAAA,EAGpD,SAAS,YAAY;AACnB,WAAO,cACF,CAAC,WAAW,eACZ,CAAC,WAAW,kBACZ,CAAC,WAAW,YACZ,CAAC,WAAW,OAAO;AAAA;AAAA;AAI5B,OAAO,UAAU;AACjB,OAAO,QAAQ,oBAAoB;AACnC,OAAO,QAAQ,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/connection-manager.js":{"lineLengths":[13,57,28,33,39,49,57,42,25,35,49,31,25,27,31,54,32,68,5,49,13,13,16,19,17,41,7,21,3,32,37,68,47,44,16,114,9,7,7,3,34,9,52,64,7,48,51,7,33,19,44,54,98,9,73,7,16,5,3,26,21,13,5,28,50,43,3,17,57,109,6,39,3,15,31,30,28,26,44,40,60,38,24,10,39,29,29,50,44,46,36,9,96,13,5,50,58,5,99,134,18,17,28,42,41,16,42,9,8,42,61,51,42,9,41,8,32,60,36,8,34,27,41,41,11,43,8,38,32,30,9,22,31,29,68,84,40,28,10,62,39,29,29,50,44,46,36,9,23,32,29,75,41,28,10,62,39,29,29,50,44,46,36,8,6,96,3,32,28,55,33,44,15,97,32,50,38,14,52,63,77,88,129,13,97,47,101,13,39,54,25,39,22,11,13,7,32,5,15,9,66,72,73,21,40,62,18,5,33,18,3,33,34,33,3,39,40,53,3,26,59,76,70,22,3,33,66,64,66,3,25,51,18,5,63,3,1,35,53,43,46,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/abstract/connection-manager.js"],"sourcesContent":["'use strict';\n\nconst { Pool, TimeoutError } = require('sequelize-pool');\nconst _ = require('lodash');\nconst semver = require('semver');\nconst errors = require('../../errors');\nconst { logger } = require('../../utils/logger');\nconst deprecations = require('../../utils/deprecations');\nconst debug = logger.debugContext('pool');\n\n/**\n * Abstract Connection Manager\n *\n * Connection manager which handles pooling & replication.\n * Uses sequelize-pool for pooling\n *\n * @private\n */\nclass ConnectionManager {\n  constructor(dialect, sequelize) {\n    const config = _.cloneDeep(sequelize.config);\n\n    this.sequelize = sequelize;\n    this.config = config;\n    this.dialect = dialect;\n    this.versionPromise = null;\n    this.dialectName = this.sequelize.options.dialect;\n\n    if (config.pool === false) {\n      throw new Error('Support for pool:false was removed in v4.0');\n    }\n\n    config.pool = _.defaults(config.pool || {}, {\n      max: 5,\n      min: 0,\n      idle: 10000,\n      acquire: 60000,\n      evict: 1000,\n      validate: this._validate.bind(this)\n    });\n\n    this.initPools();\n  }\n\n  refreshTypeParser(dataTypes) {\n    _.each(dataTypes, dataType => {\n      if (Object.prototype.hasOwnProperty.call(dataType, 'parse')) {\n        if (dataType.types[this.dialectName]) {\n          this._refreshTypeParser(dataType);\n        } else {\n          throw new Error(`Parse function not supported for type ${dataType.key} in dialect ${this.dialectName}`);\n        }\n      }\n    });\n  }\n\n  /**\n   * Try to load dialect module from various configured options.\n   * Priority goes like dialectModulePath > dialectModule > require(default)\n   *\n   * @param {string} moduleName Name of dialect module to lookup\n   *\n   * @private\n   * @returns {object}\n   */\n  _loadDialectModule(moduleName) {\n    try {\n      if (this.sequelize.config.dialectModulePath) {\n        return require(this.sequelize.config.dialectModulePath);\n      }\n      if (this.sequelize.config.dialectModule) {\n        return this.sequelize.config.dialectModule;\n      }\n      return require(moduleName);\n\n    } catch (err) {\n      if (err.code === 'MODULE_NOT_FOUND') {\n        if (this.sequelize.config.dialectModulePath) {\n          throw new Error(`Unable to find dialect at ${this.sequelize.config.dialectModulePath}`);\n        }\n        throw new Error(`Please install ${moduleName} package manually`);\n      }\n\n      throw err;\n    }\n  }\n\n  /**\n   * Handler which executes on process exit or connection manager shutdown\n   *\n   * @private\n   * @returns {Promise}\n   */\n  async _onProcessExit() {\n    if (!this.pool) {\n      return;\n    }\n\n    await this.pool.drain();\n    debug('connection drain due to process exit');\n\n    return await this.pool.destroyAllNow();\n  }\n\n  /**\n   * Drain the pool and close it permanently\n   *\n   * @returns {Promise}\n   */\n  async close() {\n    // Mark close of pool\n    this.getConnection = async function getConnection() {\n      throw new Error('ConnectionManager.getConnection was called after the connection manager was closed!');\n    };\n\n    return await this._onProcessExit();\n  }\n\n  /**\n   * Initialize connection pool. By default pool autostart is set to false, so no connection will be\n   * be created unless `pool.acquire` is called.\n   */\n  initPools() {\n    const config = this.config;\n\n    if (!config.replication) {\n      this.pool = new Pool({\n        name: 'sequelize',\n        create: () => this._connect(config),\n        destroy: async connection => {\n          const result = await this._disconnect(connection);\n          debug('connection destroy');\n          return result;\n        },\n        validate: config.pool.validate,\n        max: config.pool.max,\n        min: config.pool.min,\n        acquireTimeoutMillis: config.pool.acquire,\n        idleTimeoutMillis: config.pool.idle,\n        reapIntervalMillis: config.pool.evict,\n        maxUses: config.pool.maxUses\n      });\n\n      debug(`pool created with max/min: ${config.pool.max}/${config.pool.min}, no replication`);\n\n      return;\n    }\n\n    if (!Array.isArray(config.replication.read)) {\n      config.replication.read = [config.replication.read];\n    }\n\n    // Map main connection config\n    config.replication.write = _.defaults(config.replication.write, _.omit(config, 'replication'));\n\n    // Apply defaults to each read config\n    config.replication.read = config.replication.read.map(readConfig =>\n      _.defaults(readConfig, _.omit(this.config, 'replication'))\n    );\n\n    // custom pooling for replication (original author @janmeier)\n    let reads = 0;\n    this.pool = {\n      release: client => {\n        if (client.queryType === 'read') {\n          this.pool.read.release(client);\n        } else {\n          this.pool.write.release(client);\n        }\n      },\n      acquire: (queryType, useMaster) => {\n        useMaster = useMaster === undefined ? false : useMaster;\n        if (queryType === 'SELECT' && !useMaster) {\n          return this.pool.read.acquire();\n        }\n        return this.pool.write.acquire();\n      },\n      destroy: connection => {\n        this.pool[connection.queryType].destroy(connection);\n        debug('connection destroy');\n      },\n      destroyAllNow: async () => {\n        await Promise.all([\n          this.pool.read.destroyAllNow(),\n          this.pool.write.destroyAllNow()\n        ]);\n\n        debug('all connections destroyed');\n      },\n      drain: async () => Promise.all([\n        this.pool.write.drain(),\n        this.pool.read.drain()\n      ]),\n      read: new Pool({\n        name: 'sequelize:read',\n        create: async () => {\n          // round robin config\n          const nextRead = reads++ % config.replication.read.length;\n          const connection = await this._connect(config.replication.read[nextRead]);\n          connection.queryType = 'read';\n          return connection;\n        },\n        destroy: connection => this._disconnect(connection),\n        validate: config.pool.validate,\n        max: config.pool.max,\n        min: config.pool.min,\n        acquireTimeoutMillis: config.pool.acquire,\n        idleTimeoutMillis: config.pool.idle,\n        reapIntervalMillis: config.pool.evict,\n        maxUses: config.pool.maxUses\n      }),\n      write: new Pool({\n        name: 'sequelize:write',\n        create: async () => {\n          const connection = await this._connect(config.replication.write);\n          connection.queryType = 'write';\n          return connection;\n        },\n        destroy: connection => this._disconnect(connection),\n        validate: config.pool.validate,\n        max: config.pool.max,\n        min: config.pool.min,\n        acquireTimeoutMillis: config.pool.acquire,\n        idleTimeoutMillis: config.pool.idle,\n        reapIntervalMillis: config.pool.evict,\n        maxUses: config.pool.maxUses\n      })\n    };\n\n    debug(`pool created with max/min: ${config.pool.max}/${config.pool.min}, with replication`);\n  }\n\n  /**\n   * Get connection from pool. It sets database version if it's not already set.\n   * Call pool.acquire to get a connection\n   *\n   * @param {object}   [options]                 Pool options\n   * @param {string}   [options.type]            Set which replica to use. Available options are `read` and `write`\n   * @param {boolean}  [options.useMaster=false] Force master or write replica to get connection from\n   *\n   * @returns {Promise<Connection>}\n   */\n  async getConnection(options) {\n    options = options || {};\n\n    if (this.sequelize.options.databaseVersion === 0) {\n      if (!this.versionPromise) {\n        this.versionPromise = (async () => {\n          try {\n            const connection = await this._connect(this.config.replication.write || this.config);\n            const _options = {};\n\n            _options.transaction = { connection }; // Cheat .query to use our private connection\n            _options.logging = () => {};\n            _options.logging.__testLoggingFn = true;\n\n            //connection might have set databaseVersion value at initialization,\n            //avoiding a useless round trip\n            if (this.sequelize.options.databaseVersion === 0) {\n              const version = await this.sequelize.databaseVersion(_options);\n              const parsedVersion = _.get(semver.coerce(version), 'version') || version;\n              this.sequelize.options.databaseVersion = semver.valid(parsedVersion)\n                ? parsedVersion\n                : this.dialect.defaultVersion;\n            }\n\n            if (semver.lt(this.sequelize.options.databaseVersion, this.dialect.defaultVersion)) {\n              deprecations.unsupportedEngine();\n              debug(`Unsupported database engine version ${this.sequelize.options.databaseVersion}`);\n            }\n\n            this.versionPromise = null;\n            return await this._disconnect(connection);\n          } catch (err) {\n            this.versionPromise = null;\n            throw err;\n          }\n        })();\n      }\n      await this.versionPromise;\n    }\n\n    let result;\n\n    try {\n\n      await this.sequelize.runHooks('beforePoolAcquire', options);\n\n      result = await this.pool.acquire(options.type, options.useMaster);\n\n      await this.sequelize.runHooks('afterPoolAcquire', result, options);\n\n    } catch (error) {\n      if (error instanceof TimeoutError) throw new errors.ConnectionAcquireTimeoutError(error);\n      throw error;\n    }\n\n    debug('connection acquired');\n\n    return result;\n  }\n\n  /**\n   * Release a pooled connection so it can be utilized by other connection requests\n   *\n   * @param {Connection} connection\n   */\n  releaseConnection(connection) {\n    this.pool.release(connection);\n    debug('connection released');\n  }\n\n  /**\n   * Destroys a pooled connection and removes it from the pool.\n   *\n   * @param {Connection} connection\n   */\n  async destroyConnection(connection) {\n    await this.pool.destroy(connection);\n    debug(`connection ${connection.uuid} destroyed`);\n  }\n\n  /**\n   * Call dialect library to get connection\n   *\n   * @param {*} config Connection config\n   * @private\n   * @returns {Promise<Connection>}\n   */\n  async _connect(config) {\n    await this.sequelize.runHooks('beforeConnect', config);\n    const connection = await this.dialect.connectionManager.connect(config);\n    await this.sequelize.runHooks('afterConnect', connection, config);\n    return connection;\n  }\n\n  /**\n   * Call dialect library to disconnect a connection\n   *\n   * @param {Connection} connection\n   * @private\n   * @returns {Promise}\n   */\n  async _disconnect(connection) {\n    await this.sequelize.runHooks('beforeDisconnect', connection);\n    await this.dialect.connectionManager.disconnect(connection);\n    return this.sequelize.runHooks('afterDisconnect', connection);\n  }\n\n  /**\n   * Determine if a connection is still valid or not\n   *\n   * @param {Connection} connection\n   *\n   * @returns {boolean}\n   */\n  _validate(connection) {\n    if (!this.dialect.connectionManager.validate) {\n      return true;\n    }\n\n    return this.dialect.connectionManager.validate(connection);\n  }\n}\n\nmodule.exports = ConnectionManager;\nmodule.exports.ConnectionManager = ConnectionManager;\nmodule.exports.default = ConnectionManager;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/lib/index.js":{"lineLengths":[13,62,70,47,127,51,133,31,103,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/src/index.ts"],"names":[],"mappings":";;;AAAA,+CAA8C;AAArC,4GAAA,YAAY,OAAA;AACrB,mDAAkD;AAAzC,gHAAA,cAAc,OAAA;AACvB,+BAA8C;AAArC,4FAAA,IAAI,OAAA"},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/lib/TimeoutError.js":{"lineLengths":[13,62,30,34,1,36,40],"data":{"version":3,"file":"TimeoutError.js","sourceRoot":"","sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/src/TimeoutError.ts"],"names":[],"mappings":";;;AAGA,MAAa,YAAa,SAAQ,KAAK;CAAG;AAA1C,oCAA0C"},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/lib/AggregateError.js":{"lineLengths":[13,62,32,36,25,16,29,37,5,16,58,42,41,45,71,68,28,23,5,1,40,42],"data":{"version":3,"file":"AggregateError.js","sourceRoot":"","sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/src/AggregateError.ts"],"names":[],"mappings":";;;AAGA,MAAa,cAAe,SAAQ,KAAK;IAGvC,YAAY,MAAe;QACzB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,MAAM,OAAO,GAAG,uBAAuB,IAAI,CAAC,MAAM;aAC/C,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CACb,KAAK,KAAK,IAAI;YACZ,CAAC,CAAC,2BAA2B;YAC7B,CAAC,CAAC,KAAK,YAAY,cAAc;gBACjC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;gBACvD,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CACtD;aACA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAClB,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AArBD,wCAqBC"},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/lib/Pool.js":{"lineLengths":[13,62,22,41,53,12,26,25,30,59,9,31,60,9,32,61,9,46,30,54,59,9,46,31,54,58,9,40,55,9,44,75,63,9,68,74,69,62,40,32,24,31,35,32,36,42,5,16,27,5,16,34,5,21,45,5,17,41,5,19,44,5,19,33,5,19,33,5,26,45,37,9,28,87,9,5,19,28,31,14,54,54,20,42,75,56,33,105,66,13,9,45,50,28,79,39,9,14,69,9,5,27,41,45,54,35,40,9,5,17,35,58,107,31,19,9,51,61,88,68,55,25,13,41,96,59,62,9,39,35,9,5,23,25,125,21,21,33,59,27,61,43,13,18,65,13,10,31,59,29,32,32,27,39,13,36,33,15,11,5,56,33,31,31,57,10,53,25,35,5,52,33,31,31,10,49,5,22,20,58,44,40,39,13,9,5,15,29,88,9,51,67,100,11,45,25,34,5,23,110,99,19,9,111,24,95,19,9,58,38,66,62,42,40,52,51,29,9,14,48,100,9,5,29,56,48,105,97,58,50,34,19,9,25,28,28,13,50,9,17,34,34,40,37,19,13,9,5,13,38,30,37,51,33,34,36,24,23,13,64,34,36,24,23,13,23,10,56,5,27,58,42,44,86,26,43,17,45,13,24,77,32,13,9,32,62,9,5,1,20,32],"data":{"version":3,"file":"Pool.js","sourceRoot":"","sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/src/Pool.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/lib/Deferred.js":{"lineLengths":[13,62,26,49,16,19,58,34,36,11,5,48,26,19,42,23,78,28,5,21,27,19,36,5,20,29,29,5,19,29,28,5,15,29,5,1,28,36],"data":{"version":3,"file":"Deferred.js","sourceRoot":"","sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize-pool/src/Deferred.ts"],"names":[],"mappings":";;;AAAA,iDAA8C;AAO9C,MAAa,QAAQ;IAMnB;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,eAAuB,EAAE,QAAkB;QACzD,IAAI,IAAI,CAAC,QAAQ;YAAE,OAAO;QAE1B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,GAAG,EAAE;YAC9B,QAAQ,EAAE,CAAC;YACX,IAAI,CAAC,MAAM,CAAC,IAAI,2BAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACrD,CAAC,EAAE,eAAe,CAAC,CAAC;IACtB,CAAC;IAES,aAAa;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAO;QAC3B,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAED,OAAO,CAAC,KAAQ;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;CACF;AAxCD,4BAwCC"},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/parserStore.js":{"lineLengths":[13,41,31,29,51,3,10,13,34,6,23,51,54,7,6,15,43,5,4,2,39,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/parserStore.js"],"sourcesContent":["'use strict';\n\nconst stores = new Map();\n\nmodule.exports = dialect => {\n  if (!stores.has(dialect)) {\n    stores.set(dialect, new Map());\n  }\n\n  return {\n    clear() {\n      stores.get(dialect).clear();\n    },\n    refresh(dataType) {\n      for (const type of dataType.types[dialect]) {\n        stores.get(dialect).set(type, dataType.parse);\n      }\n    },\n    get(type) {\n      return stores.get(dialect).get(type);\n    }\n  };\n};\n"],"mappings":";AAEA,MAAM,SAAS,oBAAI;AAEnB,OAAO,UAAU,aAAW;AAC1B,MAAI,CAAC,OAAO,IAAI,UAAU;AACxB,WAAO,IAAI,SAAS,oBAAI;AAAA;AAG1B,SAAO;AAAA,IACL,QAAQ;AACN,aAAO,IAAI,SAAS;AAAA;AAAA,IAEtB,QAAQ,UAAU;AAChB,iBAAW,QAAQ,SAAS,MAAM,UAAU;AAC1C,eAAO,IAAI,SAAS,IAAI,MAAM,SAAS;AAAA;AAAA;AAAA,IAG3C,IAAI,MAAM;AACR,aAAO,OAAO,IAAI,SAAS,IAAI;AAAA;AAAA;AAAA;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/query.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,51,48,28,49,26,25,34,34,47,35,47,83,3,53,25,54,36,37,19,7,20,6,87,60,3,30,19,41,85,60,21,42,5,16,36,9,44,58,127,11,14,58,117,11,7,21,63,13,47,26,9,50,7,22,36,55,15,17,5,63,38,5,39,3,23,31,35,35,27,241,56,22,71,97,11,16,49,9,7,5,31,42,5,35,46,5,33,18,35,35,33,116,44,40,44,132,59,10,7,20,5,36,47,5,29,21,5,63,31,5,32,29,5,36,18,5,31,47,5,55,41,5,40,18,5,28,26,5,18,3,30,59,85,24,47,89,17,7,49,78,48,16,59,79,11,9,7,5,75,19,3,30,42,22,26,95,24,41,60,68,51,72,24,28,36,57,16,38,9,26,44,171,11,116,7,32,34,125,49,98,62,89,43,17,96,43,22,25,11,7,14,75,5,3,32,39,36,34,25,7,58,36,40,54,8,30,17,11,35,43,26,26,28,36,27,8,3,1,23,29,31,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/mysql/query.js"],"sourcesContent":["'use strict';\n\nconst AbstractQuery = require('../abstract/query');\nconst sequelizeErrors = require('../../errors');\nconst _ = require('lodash');\nconst { logger } = require('../../utils/logger');\n\nconst ER_DUP_ENTRY = 1062;\nconst ER_DEADLOCK = 1213;\nconst ER_ROW_IS_REFERENCED = 1451;\nconst ER_NO_REFERENCED_ROW = 1452;\n\nconst debug = logger.debugContext('sql:mysql');\n\nclass Query extends AbstractQuery {\n  constructor(connection, sequelize, options) {\n    super(connection, sequelize, { showWarnings: false, ...options });\n  }\n\n  static formatBindParameters(sql, values, dialect) {\n    const bindParam = [];\n    const replacementFunc = (match, key, values_) => {\n      if (values_[key] !== undefined) {\n        bindParam.push(values_[key]);\n        return '?';\n      }\n      return undefined;\n    };\n    sql = AbstractQuery.formatBindParameters(sql, values, dialect, replacementFunc)[0];\n    return [sql, bindParam.length > 0 ? bindParam : undefined];\n  }\n\n  async run(sql, parameters) {\n    this.sql = sql;\n    const { connection, options } = this;\n\n    const showWarnings = this.sequelize.options.showWarnings || options.showWarnings;\n\n    const complete = this._logQuery(sql, debug, parameters);\n\n    if (parameters) {\n      debug('parameters(%j)', parameters);\n    }\n\n    let results;\n    const errForStack = new Error();\n\n    try {\n      if (parameters && parameters.length) {\n        results = await new Promise((resolve, reject) => {\n          connection\n            .execute(sql, parameters, (error, result) => error ? reject(error) : resolve(result))\n            .setMaxListeners(100);\n        });\n      } else {\n        results = await new Promise((resolve, reject) => {\n          connection\n            .query({ sql }, (error, result) => error ? reject(error) : resolve(result))\n            .setMaxListeners(100);\n        });\n      }\n    } catch (error) {\n      if (options.transaction && error.errno === ER_DEADLOCK) {\n        // MySQL automatically rolls-back transactions in the event of a deadlock.\n        // However, we still initiate a manual rollback to ensure the connection gets released - see #13102.\n        try {\n          await options.transaction.rollback();\n        } catch (error_) {\n          // Ignore errors - since MySQL automatically rolled back, we're\n          // not that worried about this redundant rollback failing.\n        }\n\n        options.transaction.finished = 'rollback';\n      }\n\n      error.sql = sql;\n      error.parameters = parameters;\n      throw this.formatError(error, errForStack.stack);\n    } finally {\n      complete();\n    }\n\n    if (showWarnings && results && results.warningStatus > 0) {\n      await this.logWarnings(results);\n    }\n    return this.formatResults(results);\n  }\n\n  /**\n   * High level function that handles the results of a query execution.\n   *\n   *\n   * Example:\n   *  query.formatResults([\n   *    {\n   *      id: 1,              // this is from the main table\n   *      attr2: 'snafu',     // this is from the main table\n   *      Tasks.id: 1,        // this is from the associated table\n   *      Tasks.title: 'task' // this is from the associated table\n   *    }\n   *  ])\n   *\n   * @param {Array} data - The result of the query execution.\n   * @private\n   */\n  formatResults(data) {\n    let result = this.instance;\n\n    if (this.isInsertQuery(data)) {\n      this.handleInsertQuery(data);\n\n      if (!this.instance) {\n        // handle bulkCreate AI primary key\n        if (\n          data.constructor.name === 'ResultSetHeader'\n          && this.model\n          && this.model.autoIncrementAttribute\n          && this.model.autoIncrementAttribute === this.model.primaryKeyAttribute\n          && this.model.rawAttributes[this.model.primaryKeyAttribute]\n        ) {\n          const startId = data[this.getInsertIdField()];\n          result = [];\n          for (let i = startId; i < startId + data.affectedRows; i++) {\n            result.push({ [this.model.rawAttributes[this.model.primaryKeyAttribute].field]: i });\n          }\n        } else {\n          result = data[this.getInsertIdField()];\n        }\n      }\n    }\n\n    if (this.isSelectQuery()) {\n      return this.handleSelectQuery(data);\n    }\n    if (this.isShowTablesQuery()) {\n      return this.handleShowTablesQuery(data);\n    }\n    if (this.isDescribeQuery()) {\n      result = {};\n\n      for (const _result of data) {\n        const enumRegex = /^enum/i;\n        result[_result.Field] = {\n          type: enumRegex.test(_result.Type) ? _result.Type.replace(enumRegex, 'ENUM') : _result.Type.toUpperCase(),\n          allowNull: _result.Null === 'YES',\n          defaultValue: _result.Default,\n          primaryKey: _result.Key === 'PRI',\n          autoIncrement: Object.prototype.hasOwnProperty.call(_result, 'Extra')\n            && _result.Extra.toLowerCase() === 'auto_increment',\n          comment: _result.Comment ? _result.Comment : null\n        };\n      }\n      return result;\n    }\n    if (this.isShowIndexesQuery()) {\n      return this.handleShowIndexesQuery(data);\n    }\n    if (this.isCallQuery()) {\n      return data[0];\n    }\n    if (this.isBulkUpdateQuery() || this.isBulkDeleteQuery()) {\n      return data.affectedRows;\n    }\n    if (this.isVersionQuery()) {\n      return data[0].version;\n    }\n    if (this.isForeignKeysQuery()) {\n      return data;\n    }\n    if (this.isUpsertQuery()) {\n      return [result, data.affectedRows === 1];\n    }\n    if (this.isInsertQuery() || this.isUpdateQuery()) {\n      return [result, data.affectedRows];\n    }\n    if (this.isShowConstraintsQuery()) {\n      return data;\n    }\n    if (this.isRawQuery()) {\n      // MySQL returns row data and metadata (affected rows etc) in a single object - let's standarize it, sorta\n      return [data, data];\n    }\n\n    return result;\n  }\n\n  async logWarnings(results) {\n    const warningResults = await this.run('SHOW WARNINGS');\n    const warningMessage = `MySQL Warnings (${this.connection.uuid || 'default'}): `;\n    const messages = [];\n    for (const _warningRow of warningResults) {\n      if (_warningRow === undefined || typeof _warningRow[Symbol.iterator] !== 'function') {\n        continue;\n      }\n      for (const _warningResult of _warningRow) {\n        if (Object.prototype.hasOwnProperty.call(_warningResult, 'Message')) {\n          messages.push(_warningResult.Message);\n        } else {\n          for (const _objectKey of _warningResult.keys()) {\n            messages.push([_objectKey, _warningResult[_objectKey]].join(': '));\n          }\n        }\n      }\n    }\n\n    this.sequelize.log(warningMessage + messages.join('; '), this.options);\n\n    return results;\n  }\n\n  formatError(err, errStack) {\n    const errCode = err.errno || err.code;\n\n    switch (errCode) {\n      case ER_DUP_ENTRY: {\n        const match = err.message.match(/Duplicate entry '([\\s\\S]*)' for key '?((.|\\s)*?)'?$/);\n        let fields = {};\n        let message = 'Validation error';\n        const values = match ? match[1].split('-') : undefined;\n        const fieldKey = match ? match[2].split('.').pop() : undefined;\n        const fieldVal = match ? match[1] : undefined;\n        const uniqueKey = this.model && this.model.uniqueKeys[fieldKey];\n\n        if (uniqueKey) {\n          if (uniqueKey.msg) message = uniqueKey.msg;\n          fields = _.zipObject(uniqueKey.fields, values);\n        } else {\n          fields[fieldKey] = fieldVal;\n        }\n\n        const errors = [];\n        _.forOwn(fields, (value, field) => {\n          errors.push(new sequelizeErrors.ValidationErrorItem(\n            this.getUniqueConstraintErrorMessage(field),\n            'unique violation', // sequelizeErrors.ValidationErrorItem.Origins.DB,\n            field,\n            value,\n            this.instance,\n            'not_unique'\n          ));\n        });\n\n        return new sequelizeErrors.UniqueConstraintError({ message, errors, parent: err, fields, stack: errStack });\n      }\n\n      case ER_ROW_IS_REFERENCED:\n      case ER_NO_REFERENCED_ROW: {\n        // e.g. CONSTRAINT `example_constraint_name` FOREIGN KEY (`example_id`) REFERENCES `examples` (`id`)\n        const match = err.message.match(\n          /CONSTRAINT ([`\"])(.*)\\1 FOREIGN KEY \\(\\1(.*)\\1\\) REFERENCES \\1(.*)\\1 \\(\\1(.*)\\1\\)/\n        );\n        const quoteChar = match ? match[1] : '`';\n        const fields = match ? match[3].split(new RegExp(`${quoteChar}, *${quoteChar}`)) : undefined;\n\n        return new sequelizeErrors.ForeignKeyConstraintError({\n          reltype: String(errCode) === String(ER_ROW_IS_REFERENCED) ? 'parent' : 'child',\n          table: match ? match[4] : undefined,\n          fields,\n          value: fields && fields.length && this.instance && this.instance[fields[0]] || undefined,\n          index: match ? match[2] : undefined,\n          parent: err,\n          stack: errStack\n        });\n      }\n\n      default:\n        return new sequelizeErrors.DatabaseError(err, { stack: errStack });\n    }\n  }\n\n  handleShowIndexesQuery(data) {\n    // Group by index name, and collect all fields\n    data = data.reduce((acc, item) => {\n      if (!(item.Key_name in acc)) {\n        acc[item.Key_name] = item;\n        item.fields = [];\n      }\n\n      acc[item.Key_name].fields[item.Seq_in_index - 1] = {\n        attribute: item.Column_name,\n        length: item.Sub_part || undefined,\n        order: item.Collation === 'A' ? 'ASC' : undefined\n      };\n      delete item.column_name;\n\n      return acc;\n    }, {});\n\n    return _.map(data, item => ({\n      primary: item.Key_name === 'PRIMARY',\n      fields: item.fields,\n      name: item.Key_name,\n      tableName: item.Table,\n      unique: item.Non_unique !== 1,\n      type: item.Index_type\n    }));\n  }\n}\n\nmodule.exports = Query;\nmodule.exports.Query = Query;\nmodule.exports.default = Query;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/query.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,28,46,48,30,57,32,56,21,47,23,33,37,31,31,35,19,17,26,16,30,28,61,5,3,79,18,23,5,28,48,38,31,5,27,37,52,40,25,11,24,10,14,73,40,71,11,24,10,7,42,50,81,97,23,9,22,8,5,26,39,56,24,50,7,18,17,38,24,84,9,39,82,7,31,93,7,21,7,21,3,32,27,17,3,9,58,3,24,40,35,41,5,3,22,22,3,42,71,30,61,82,47,53,11,9,7,5,19,3,16,48,3,20,52,3,19,51,3,36,22,50,18,5,72,108,110,18,3,40,24,71,20,61,63,49,5,3,23,55,3,34,75,3,24,56,3,28,60,3,21,53,3,19,51,3,23,55,3,23,55,3,24,56,3,19,51,3,30,22,32,45,87,58,41,32,9,23,19,5,27,41,19,36,67,34,11,9,32,31,9,17,9,47,55,26,44,47,10,55,9,46,27,38,48,44,31,79,17,9,12,46,27,18,78,9,5,29,54,5,18,3,27,23,65,69,18,3,17,53,3,44,41,76,103,33,26,43,53,19,38,74,14,49,7,48,5,75,35,22,21,54,5,18,41,29,22,70,7,6,3,56,23,16,5,10,15,11,16,14,12,35,13,12,13,18,16,15,18,18,48,17,19,16,63,25,26,19,25,29,23,23,17,16,22,40,77,64,28,54,16,32,9,45,7,6,35,45,62,59,7,24,6,35,39,77,44,78,7,39,6,29,33,71,72,81,84,9,58,7,33,6,33,37,75,40,39,71,7,37,6,47,59,183,34,6,81,29,28,15,50,24,24,32,32,7,26,26,67,21,28,81,33,44,85,11,65,77,63,52,11,9,7,30,30,48,25,69,36,84,35,62,18,38,35,48,11,9,73,30,43,27,30,25,44,89,85,54,34,36,85,41,52,88,19,77,89,71,76,19,17,34,39,17,49,33,37,40,17,15,20,33,13,39,41,45,22,33,15,46,46,54,72,30,73,17,22,47,47,17,75,15,13,24,18,33,39,25,44,39,56,17,57,15,13,11,9,48,22,36,48,7,26,39,23,26,21,40,85,81,50,30,32,81,37,48,84,15,73,85,67,72,15,13,30,35,13,45,29,33,36,13,11,16,29,9,35,37,41,18,29,11,42,42,50,68,26,69,13,18,43,43,13,71,11,9,25,34,9,14,35,7,5,19,3,1,31,45,39,33,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/abstract/query.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst SqlString = require('../../sql-string');\nconst QueryTypes = require('../../query-types');\nconst Dot = require('dottie');\nconst deprecations = require('../../utils/deprecations');\nconst uuid = require('uuid').v4;\nconst { safeStringifyJson } = require('../../utils.js');\n\nclass AbstractQuery {\n\n  constructor(connection, sequelize, options) {\n    this.uuid = uuid();\n    this.connection = connection;\n    this.instance = options.instance;\n    this.model = options.model;\n    this.sequelize = sequelize;\n    this.options = {\n      plain: false,\n      raw: false,\n      // eslint-disable-next-line no-console\n      logging: console.log,\n      ...options\n    };\n    this.checkLoggingOption();\n\n    if (options.rawErrors) {\n      // The default implementation in AbstractQuery just returns the same\n      // error object. By overidding this.formatError, this saves every dialect\n      // having to check for options.rawErrors in their own formatError\n      // implementations.\n      this.formatError = AbstractQuery.prototype.formatError;\n    }\n  }\n\n  /**\n   * rewrite query with parameters\n   *\n   * Examples:\n   *\n   *   query.formatBindParameters('select $1 as foo', ['fooval']);\n   *\n   *   query.formatBindParameters('select $foo as foo', { foo: 'fooval' });\n   *\n   * Options\n   *   skipUnescape: bool, skip unescaping $$\n   *   skipValueReplace: bool, do not replace (but do unescape $$). Check correct syntax and if all values are available\n   *\n   * @param {string} sql\n   * @param {object|Array} values\n   * @param {string} dialect\n   * @param {Function} [replacementFunc]\n   * @param {object} [options]\n   * @private\n   */\n  static formatBindParameters(sql, values, dialect, replacementFunc, options) {\n    if (!values) {\n      return [sql, []];\n    }\n\n    options = options || {};\n    if (typeof replacementFunc !== 'function') {\n      options = replacementFunc || {};\n      replacementFunc = undefined;\n    }\n\n    if (!replacementFunc) {\n      if (options.skipValueReplace) {\n        replacementFunc = (match, key, values) => {\n          if (values[key] !== undefined) {\n            return match;\n          }\n          return undefined;\n        };\n      } else {\n        replacementFunc = (match, key, values, timeZone, dialect) => {\n          if (values[key] !== undefined) {\n            return SqlString.escape(values[key], timeZone, dialect);\n          }\n          return undefined;\n        };\n      }\n    } else if (options.skipValueReplace) {\n      const origReplacementFunc = replacementFunc;\n      replacementFunc = (match, key, values, timeZone, dialect, options) => {\n        if (origReplacementFunc(match, key, values, timeZone, dialect, options) !== undefined) {\n          return match;\n        }\n        return undefined;\n      };\n    }\n\n    const timeZone = null;\n    const list = Array.isArray(values);\n    sql = sql.replace(/\\B\\$(\\$|\\w+)/g, (match, key) => {\n      if ('$' === key) {\n        return options.skipUnescape ? match : key;\n      }\n\n      let replVal;\n      if (list) {\n        if (key.match(/^[1-9]\\d*$/)) {\n          key = key - 1;\n          replVal = replacementFunc(match, key, values, timeZone, dialect, options);\n        }\n      } else if (!key.match(/^\\d*$/)) {\n        replVal = replacementFunc(match, key, values, timeZone, dialect, options);\n      }\n      if (replVal === undefined) {\n        throw new Error(`Named bind parameter \"${match}\" has no value in the given object.`);\n      }\n      return replVal;\n    });\n    return [sql, []];\n  }\n\n  /**\n   * Formats a raw database error from the database library into a common Sequelize exception.\n   *\n   * @param {Error} error The exception object.\n   * @param {object} errStack The stack trace that started the database query.\n   * @returns {BaseError} the new formatted error object.\n   */\n  formatError(error, errStack) {\n    // Default implementation, no formatting.\n    // Each dialect overrides this method to parse errors from their respective the database engines.\n    error.stack = errStack;\n\n    return error;\n  }\n\n  /**\n   * Execute the passed sql query.\n   *\n   * Examples:\n   *\n   *     query.run('SELECT 1')\n   *\n   * @private\n   */\n  run() {\n    throw new Error('The run method wasn\\'t overwritten!');\n  }\n\n  /**\n   * Check the logging option of the instance and print deprecation warnings.\n   *\n   * @private\n   */\n  checkLoggingOption() {\n    if (this.options.logging === true) {\n      deprecations.noTrueLogging();\n      // eslint-disable-next-line no-console\n      this.options.logging = console.log;\n    }\n  }\n\n  /**\n   * Get the attributes of an insert query, which contains the just inserted id.\n   *\n   * @returns {string} The field name.\n   * @private\n   */\n  getInsertIdField() {\n    return 'insertId';\n  }\n\n  getUniqueConstraintErrorMessage(field) {\n    let message = field ? `${field} must be unique` : 'Must be unique';\n\n    if (field && this.model) {\n      for (const key of Object.keys(this.model.uniqueKeys)) {\n        if (this.model.uniqueKeys[key].fields.includes(field.replace(/\"/g, ''))) {\n          if (this.model.uniqueKeys[key].msg) {\n            message = this.model.uniqueKeys[key].msg;\n          }\n        }\n      }\n    }\n    return message;\n  }\n\n  isRawQuery() {\n    return this.options.type === QueryTypes.RAW;\n  }\n\n  isVersionQuery() {\n    return this.options.type === QueryTypes.VERSION;\n  }\n\n  isUpsertQuery() {\n    return this.options.type === QueryTypes.UPSERT;\n  }\n\n  isInsertQuery(results, metaData) {\n    let result = true;\n\n    if (this.options.type === QueryTypes.INSERT) {\n      return true;\n    }\n\n    // is insert query if sql contains insert into\n    result = result && this.sql.toLowerCase().startsWith('insert into');\n\n    // is insert query if no results are passed or if the result has the inserted id\n    result = result && (!results || Object.prototype.hasOwnProperty.call(results, this.getInsertIdField()));\n\n    // is insert query if no metadata are passed or if the metadata has the inserted id\n    result = result && (!metaData || Object.prototype.hasOwnProperty.call(metaData, this.getInsertIdField()));\n\n    return result;\n  }\n\n  handleInsertQuery(results, metaData) {\n    if (this.instance) {\n      // add the inserted row id to the instance\n      const autoIncrementAttribute = this.model.autoIncrementAttribute;\n      let id = null;\n\n      id = id || results && results[this.getInsertIdField()];\n      id = id || metaData && metaData[this.getInsertIdField()];\n\n      this.instance[autoIncrementAttribute] = id;\n    }\n  }\n\n  isShowTablesQuery() {\n    return this.options.type === QueryTypes.SHOWTABLES;\n  }\n\n  handleShowTablesQuery(results) {\n    return _.flatten(results.map(resultSet => Object.values(resultSet)));\n  }\n\n  isShowIndexesQuery() {\n    return this.options.type === QueryTypes.SHOWINDEXES;\n  }\n\n  isShowConstraintsQuery() {\n    return this.options.type === QueryTypes.SHOWCONSTRAINTS;\n  }\n\n  isDescribeQuery() {\n    return this.options.type === QueryTypes.DESCRIBE;\n  }\n\n  isSelectQuery() {\n    return this.options.type === QueryTypes.SELECT;\n  }\n\n  isBulkUpdateQuery() {\n    return this.options.type === QueryTypes.BULKUPDATE;\n  }\n\n  isBulkDeleteQuery() {\n    return this.options.type === QueryTypes.BULKDELETE;\n  }\n\n  isForeignKeysQuery() {\n    return this.options.type === QueryTypes.FOREIGNKEYS;\n  }\n\n  isUpdateQuery() {\n    return this.options.type === QueryTypes.UPDATE;\n  }\n\n  handleSelectQuery(results) {\n    let result = null;\n\n    // Map raw fields to names if a mapping is provided\n    if (this.options.fieldMap) {\n      const fieldMap = this.options.fieldMap;\n      results = results.map(result => _.reduce(fieldMap, (result, name, field) => {\n        if (result[field] !== undefined && name !== field) {\n          result[name] = result[field];\n          delete result[field];\n        }\n        return result;\n      }, result));\n    }\n\n    // Raw queries\n    if (this.options.raw) {\n      result = results.map(result => {\n        let o = {};\n\n        for (const key in result) {\n          if (Object.prototype.hasOwnProperty.call(result, key)) {\n            o[key] = result[key];\n          }\n        }\n\n        if (this.options.nest) {\n          o = Dot.transform(o);\n        }\n\n        return o;\n      });\n    // Queries with include\n    } else if (this.options.hasJoin === true) {\n      results = AbstractQuery._groupJoinData(results, {\n        model: this.model,\n        includeMap: this.options.includeMap,\n        includeNames: this.options.includeNames\n      }, {\n        checkExisting: this.options.hasMultiAssociation\n      });\n\n      result = this.model.bulkBuild(results, {\n        isNewRecord: false,\n        include: this.options.include,\n        includeNames: this.options.includeNames,\n        includeMap: this.options.includeMap,\n        includeValidated: true,\n        attributes: this.options.originalAttributes || this.options.attributes,\n        raw: true\n      });\n    // Regular queries\n    } else {\n      result = this.model.bulkBuild(results, {\n        isNewRecord: false,\n        raw: true,\n        attributes: this.options.originalAttributes || this.options.attributes\n      });\n    }\n\n    // return the first real model instance if options.plain is set (e.g. Model.find)\n    if (this.options.plain) {\n      result = result.length === 0 ? null : result[0];\n    }\n    return result;\n  }\n\n  isShowOrDescribeQuery() {\n    let result = false;\n\n    result = result || this.sql.toLowerCase().startsWith('show');\n    result = result || this.sql.toLowerCase().startsWith('describe');\n\n    return result;\n  }\n\n  isCallQuery() {\n    return this.sql.toLowerCase().startsWith('call');\n  }\n\n  /**\n   * @param {string} sql\n   * @param {Function} debugContext\n   * @param {Array|object} parameters\n   * @protected\n   * @returns {Function} A function to call after the query was completed.\n   */\n  _logQuery(sql, debugContext, parameters) {\n    const { connection, options } = this;\n    const benchmark = this.sequelize.options.benchmark || options.benchmark;\n    const logQueryParameters = this.sequelize.options.logQueryParameters || options.logQueryParameters;\n    const startTime = Date.now();\n    let logParameter = '';\n\n    if (logQueryParameters && parameters) {\n      const delimiter = sql.endsWith(';') ? '' : ';';\n      let paramStr;\n      if (Array.isArray(parameters)) {\n        paramStr = parameters.map(p=>safeStringifyJson(p)).join(', ');\n      } else {\n        paramStr = safeStringifyJson(parameters);\n      }\n      logParameter = `${delimiter} ${paramStr}`;\n    }\n    const fmt = `(${connection.uuid || 'default'}): ${sql}${logParameter}`;\n    const msg = `Executing ${fmt}`;\n    debugContext(msg);\n    if (!benchmark) {\n      this.sequelize.log(`Executing ${fmt}`, options);\n    }\n    return () => {\n      const afterMsg = `Executed ${fmt}`;\n      debugContext(afterMsg);\n      if (benchmark) {\n        this.sequelize.log(afterMsg, Date.now() - startTime, options);\n      }\n    };\n  }\n\n  /**\n   * The function takes the result of the query execution and groups\n   * the associated data by the callee.\n   *\n   * Example:\n   *   groupJoinData([\n   *     {\n   *       some: 'data',\n   *       id: 1,\n   *       association: { foo: 'bar', id: 1 }\n   *     }, {\n   *       some: 'data',\n   *       id: 1,\n   *       association: { foo: 'bar', id: 2 }\n   *     }, {\n   *       some: 'data',\n   *       id: 1,\n   *       association: { foo: 'bar', id: 3 }\n   *     }\n   *   ])\n   *\n   * Result:\n   *   Something like this:\n   *\n   *   [\n   *     {\n   *       some: 'data',\n   *       id: 1,\n   *       association: [\n   *         { foo: 'bar', id: 1 },\n   *         { foo: 'bar', id: 2 },\n   *         { foo: 'bar', id: 3 }\n   *       ]\n   *     }\n   *   ]\n   *\n   * @param {Array} rows\n   * @param {object} includeOptions\n   * @param {object} options\n   * @private\n   */\n  static _groupJoinData(rows, includeOptions, options) {\n\n    /*\n     * Assumptions\n     * ID is not necessarily the first field\n     * All fields for a level is grouped in the same set (i.e. Panel.id, Task.id, Panel.title is not possible)\n     * Parent keys will be seen before any include/child keys\n     * Previous set won't necessarily be parent set (one parent could have two children, one child would then be previous set for the other)\n     */\n\n    /*\n     * Author (MH) comment: This code is an unreadable mess, but it's performant.\n     * groupJoinData is a performance critical function so we prioritize perf over readability.\n     */\n    if (!rows.length) {\n      return [];\n    }\n\n    // Generic looping\n    let i;\n    let length;\n    let $i;\n    let $length;\n    // Row specific looping\n    let rowsI;\n    let row;\n    const rowsLength = rows.length;\n    // Key specific looping\n    let keys;\n    let key;\n    let keyI;\n    let keyLength;\n    let prevKey;\n    let values;\n    let topValues;\n    let topExists;\n    const checkExisting = options.checkExisting;\n    // If we don't have to deduplicate we can pre-allocate the resulting array\n    let itemHash;\n    let parentHash;\n    let topHash;\n    const results = checkExisting ? [] : new Array(rowsLength);\n    const resultMap = {};\n    const includeMap = {};\n    // Result variables for the respective functions\n    let $keyPrefix;\n    let $keyPrefixString;\n    let $prevKeyPrefixString; // eslint-disable-line\n    let $prevKeyPrefix;\n    let $lastKeyPrefix;\n    let $current;\n    let $parent;\n    // Map each key to an include option\n    let previousPiece;\n    const buildIncludeMap = piece => {\n      if (Object.prototype.hasOwnProperty.call($current.includeMap, piece)) {\n        includeMap[key] = $current = $current.includeMap[piece];\n        if (previousPiece) {\n          previousPiece = `${previousPiece}.${piece}`;\n        } else {\n          previousPiece = piece;\n        }\n        includeMap[previousPiece] = $current;\n      }\n    };\n    // Calculate the string prefix of a key ('User.Results' for 'User.Results.id')\n    const keyPrefixStringMemo = {};\n    const keyPrefixString = (key, memo) => {\n      if (!Object.prototype.hasOwnProperty.call(memo, key)) {\n        memo[key] = key.substr(0, key.lastIndexOf('.'));\n      }\n      return memo[key];\n    };\n    // Removes the prefix from a key ('id' for 'User.Results.id')\n    const removeKeyPrefixMemo = {};\n    const removeKeyPrefix = key => {\n      if (!Object.prototype.hasOwnProperty.call(removeKeyPrefixMemo, key)) {\n        const index = key.lastIndexOf('.');\n        removeKeyPrefixMemo[key] = key.substr(index === -1 ? 0 : index + 1);\n      }\n      return removeKeyPrefixMemo[key];\n    };\n    // Calculates the array prefix of a key (['User', 'Results'] for 'User.Results.id')\n    const keyPrefixMemo = {};\n    const keyPrefix = key => {\n      // We use a double memo and keyPrefixString so that different keys with the same prefix will receive the same array instead of differnet arrays with equal values\n      if (!Object.prototype.hasOwnProperty.call(keyPrefixMemo, key)) {\n        const prefixString = keyPrefixString(key, keyPrefixStringMemo);\n        if (!Object.prototype.hasOwnProperty.call(keyPrefixMemo, prefixString)) {\n          keyPrefixMemo[prefixString] = prefixString ? prefixString.split('.') : [];\n        }\n        keyPrefixMemo[key] = keyPrefixMemo[prefixString];\n      }\n      return keyPrefixMemo[key];\n    };\n    // Calcuate the last item in the array prefix ('Results' for 'User.Results.id')\n    const lastKeyPrefixMemo = {};\n    const lastKeyPrefix = key => {\n      if (!Object.prototype.hasOwnProperty.call(lastKeyPrefixMemo, key)) {\n        const prefix = keyPrefix(key);\n        const length = prefix.length;\n\n        lastKeyPrefixMemo[key] = !length ? '' : prefix[length - 1];\n      }\n      return lastKeyPrefixMemo[key];\n    };\n    const getUniqueKeyAttributes = model => {\n      let uniqueKeyAttributes = _.chain(model.uniqueKeys);\n      uniqueKeyAttributes = uniqueKeyAttributes\n        .result(`${uniqueKeyAttributes.findKey()}.fields`)\n        .map(field => _.findKey(model.attributes, chr => chr.field === field))\n        .value();\n\n      return uniqueKeyAttributes;\n    };\n    const stringify = obj => obj instanceof Buffer ? obj.toString('hex') : obj;\n    let primaryKeyAttributes;\n    let uniqueKeyAttributes;\n    let prefix;\n\n    for (rowsI = 0; rowsI < rowsLength; rowsI++) {\n      row = rows[rowsI];\n\n      // Keys are the same for all rows, so only need to compute them on the first row\n      if (rowsI === 0) {\n        keys = Object.keys(row);\n        keyLength = keys.length;\n      }\n\n      if (checkExisting) {\n        topExists = false;\n\n        // Compute top level hash key (this is usually just the primary key values)\n        $length = includeOptions.model.primaryKeyAttributes.length;\n        topHash = '';\n        if ($length === 1) {\n          topHash = stringify(row[includeOptions.model.primaryKeyAttributes[0]]);\n        }\n        else if ($length > 1) {\n          for ($i = 0; $i < $length; $i++) {\n            topHash += stringify(row[includeOptions.model.primaryKeyAttributes[$i]]);\n          }\n        }\n        else if (!_.isEmpty(includeOptions.model.uniqueKeys)) {\n          uniqueKeyAttributes = getUniqueKeyAttributes(includeOptions.model);\n          for ($i = 0; $i < uniqueKeyAttributes.length; $i++) {\n            topHash += row[uniqueKeyAttributes[$i]];\n          }\n        }\n      }\n\n      topValues = values = {};\n      $prevKeyPrefix = undefined;\n      for (keyI = 0; keyI < keyLength; keyI++) {\n        key = keys[keyI];\n\n        // The string prefix isn't actualy needed\n        // We use it so keyPrefix for different keys will resolve to the same array if they have the same prefix\n        // TODO: Find a better way?\n        $keyPrefixString = keyPrefixString(key, keyPrefixStringMemo);\n        $keyPrefix = keyPrefix(key);\n\n        // On the first row we compute the includeMap\n        if (rowsI === 0 && !Object.prototype.hasOwnProperty.call(includeMap, key)) {\n          if (!$keyPrefix.length) {\n            includeMap[key] = includeMap[''] = includeOptions;\n          } else {\n            $current = includeOptions;\n            previousPiece = undefined;\n            $keyPrefix.forEach(buildIncludeMap);\n          }\n        }\n        // End of key set\n        if ($prevKeyPrefix !== undefined && $prevKeyPrefix !== $keyPrefix) {\n          if (checkExisting) {\n            // Compute hash key for this set instance\n            // TODO: Optimize\n            length = $prevKeyPrefix.length;\n            $parent = null;\n            parentHash = null;\n\n            if (length) {\n              for (i = 0; i < length; i++) {\n                prefix = $parent ? `${$parent}.${$prevKeyPrefix[i]}` : $prevKeyPrefix[i];\n                primaryKeyAttributes = includeMap[prefix].model.primaryKeyAttributes;\n                $length = primaryKeyAttributes.length;\n                itemHash = prefix;\n                if ($length === 1) {\n                  itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[0]}`]);\n                }\n                else if ($length > 1) {\n                  for ($i = 0; $i < $length; $i++) {\n                    itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[$i]}`]);\n                  }\n                }\n                else if (!_.isEmpty(includeMap[prefix].model.uniqueKeys)) {\n                  uniqueKeyAttributes = getUniqueKeyAttributes(includeMap[prefix].model);\n                  for ($i = 0; $i < uniqueKeyAttributes.length; $i++) {\n                    itemHash += row[`${prefix}.${uniqueKeyAttributes[$i]}`];\n                  }\n                }\n                if (!parentHash) {\n                  parentHash = topHash;\n                }\n\n                itemHash = parentHash + itemHash;\n                $parent = prefix;\n                if (i < length - 1) {\n                  parentHash = itemHash;\n                }\n              }\n            } else {\n              itemHash = topHash;\n            }\n\n            if (itemHash === topHash) {\n              if (!resultMap[itemHash]) {\n                resultMap[itemHash] = values;\n              } else {\n                topExists = true;\n              }\n            } else if (!resultMap[itemHash]) {\n              $parent = resultMap[parentHash];\n              $lastKeyPrefix = lastKeyPrefix(prevKey);\n\n              if (includeMap[prevKey].association.isSingleAssociation) {\n                if ($parent) {\n                  $parent[$lastKeyPrefix] = resultMap[itemHash] = values;\n                }\n              } else {\n                if (!$parent[$lastKeyPrefix]) {\n                  $parent[$lastKeyPrefix] = [];\n                }\n                $parent[$lastKeyPrefix].push(resultMap[itemHash] = values);\n              }\n            }\n\n            // Reset values\n            values = {};\n          } else {\n            // If checkExisting is false it's because there's only 1:1 associations in this query\n            // However we still need to map onto the appropriate parent\n            // For 1:1 we map forward, initializing the value object on the parent to be filled in the next iterations of the loop\n            $current = topValues;\n            length = $keyPrefix.length;\n            if (length) {\n              for (i = 0; i < length; i++) {\n                if (i === length - 1) {\n                  values = $current[$keyPrefix[i]] = {};\n                }\n                $current = $current[$keyPrefix[i]] || {};\n              }\n            }\n          }\n        }\n\n        // End of iteration, set value and set prev values (for next iteration)\n        values[removeKeyPrefix(key)] = row[key];\n        prevKey = key;\n        $prevKeyPrefix = $keyPrefix;\n        $prevKeyPrefixString = $keyPrefixString;\n      }\n\n      if (checkExisting) {\n        length = $prevKeyPrefix.length;\n        $parent = null;\n        parentHash = null;\n\n        if (length) {\n          for (i = 0; i < length; i++) {\n            prefix = $parent ? `${$parent}.${$prevKeyPrefix[i]}` : $prevKeyPrefix[i];\n            primaryKeyAttributes = includeMap[prefix].model.primaryKeyAttributes;\n            $length = primaryKeyAttributes.length;\n            itemHash = prefix;\n            if ($length === 1) {\n              itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[0]}`]);\n            }\n            else if ($length > 0) {\n              for ($i = 0; $i < $length; $i++) {\n                itemHash += stringify(row[`${prefix}.${primaryKeyAttributes[$i]}`]);\n              }\n            }\n            else if (!_.isEmpty(includeMap[prefix].model.uniqueKeys)) {\n              uniqueKeyAttributes = getUniqueKeyAttributes(includeMap[prefix].model);\n              for ($i = 0; $i < uniqueKeyAttributes.length; $i++) {\n                itemHash += row[`${prefix}.${uniqueKeyAttributes[$i]}`];\n              }\n            }\n            if (!parentHash) {\n              parentHash = topHash;\n            }\n\n            itemHash = parentHash + itemHash;\n            $parent = prefix;\n            if (i < length - 1) {\n              parentHash = itemHash;\n            }\n          }\n        } else {\n          itemHash = topHash;\n        }\n\n        if (itemHash === topHash) {\n          if (!resultMap[itemHash]) {\n            resultMap[itemHash] = values;\n          } else {\n            topExists = true;\n          }\n        } else if (!resultMap[itemHash]) {\n          $parent = resultMap[parentHash];\n          $lastKeyPrefix = lastKeyPrefix(prevKey);\n\n          if (includeMap[prevKey].association.isSingleAssociation) {\n            if ($parent) {\n              $parent[$lastKeyPrefix] = resultMap[itemHash] = values;\n            }\n          } else {\n            if (!$parent[$lastKeyPrefix]) {\n              $parent[$lastKeyPrefix] = [];\n            }\n            $parent[$lastKeyPrefix].push(resultMap[itemHash] = values);\n          }\n        }\n        if (!topExists) {\n          results.push(topValues);\n        }\n      } else {\n        results[rowsI] = topValues;\n      }\n    }\n\n    return results;\n  }\n}\n\nmodule.exports = AbstractQuery;\nmodule.exports.AbstractQuery = AbstractQuery;\nmodule.exports.default = AbstractQuery;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/query-generator.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,28,37,70,29,38,85,65,89,28,39,38,42,43,28,32,33,30,53,54,49,50,12,89,58,24,19,76,28,34,7,3,46,30,20,19,16,35,38,41,81,75,9,7,3,35,76,3,18,25,3,22,25,3,18,43,3,52,30,23,20,21,16,27,27,23,36,66,17,40,16,45,31,46,58,95,39,16,95,9,51,56,66,37,14,66,7,5,45,46,82,29,58,34,46,72,11,151,9,9,5,30,56,5,37,68,97,7,5,35,35,12,30,33,106,62,54,87,61,9,7,3,58,50,16,22,39,8,46,3,29,99,19,62,12,163,5,23,3,27,71,190,3,40,35,20,29,12,32,37,29,25,23,9,9,7,3,47,35,20,33,13,42,9,7,3,44,26,32,45,49,46,61,65,73,14,83,7,5,35,20,33,61,70,9,7,3,56,26,40,46,73,5,35,20,33,15,28,9,7,3,69,37,28,190,40,7,22,16,55,26,16,44,39,60,9,25,63,9,19,7,44,41,31,59,27,115,30,43,27,7,5,83,3,23,37,30,5,25,20,5,17,3,33,52,3,54,19,60,24,53,5,65,16,33,5,25,3,40,35,54,67,7,3,47,47,36,35,56,43,47,43,33,36,50,40,68,57,9,7,3,54,42,40,86,5,35,19,38,11,32,7,3,38,38,19,23,8,5,88,35,40,30,5,34,36,5,141,68,5,36,28,5,31,33,5,28,63,5,26,27,5,26,68,5,86,77,66,92,75,7,79,37,75,14,55,7,31,69,7,31,69,7,5,20,3,40,22,35,40,79,5,18,3,34,35,19,5,25,28,28,32,32,40,47,63,28,56,31,17,7,63,28,50,31,17,7,60,25,46,36,28,43,28,43,33,16,9,47,17,7,12,5,86,57,5,27,3,42,47,35,15,25,83,77,46,9,7,3,41,79,70,57,35,15,25,49,16,7,53,76,58,8,15,7,42,65,48,47,8,9,7,3,46,35,20,33,25,39,9,7,3,38,67,3,1,38,41,1,37,43,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/mysql/query-generator.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst Utils = require('../../utils');\nconst AbstractQueryGenerator = require('../abstract/query-generator');\nconst util = require('util');\nconst Op = require('../../operators');\n\n\nconst JSON_FUNCTION_REGEX = /^\\s*((?:[a-z]+_){0,2}jsonb?(?:_[a-z]+){0,2})\\([^)]*\\)/i;\nconst JSON_OPERATOR_REGEX = /^\\s*(->>?|@>|<@|\\?[|&]?|\\|{2}|#-)/i;\nconst TOKEN_CAPTURE_REGEX = /^\\s*((?:([`\"'])(?:(?!\\2).|\\2{2})*\\2)|[\\w\\d\\s]+|[().,;+-])/i;\nconst FOREIGN_KEY_FIELDS = [\n  'CONSTRAINT_NAME as constraint_name',\n  'CONSTRAINT_NAME as constraintName',\n  'CONSTRAINT_SCHEMA as constraintSchema',\n  'CONSTRAINT_SCHEMA as constraintCatalog',\n  'TABLE_NAME as tableName',\n  'TABLE_SCHEMA as tableSchema',\n  'TABLE_SCHEMA as tableCatalog',\n  'COLUMN_NAME as columnName',\n  'REFERENCED_TABLE_SCHEMA as referencedTableSchema',\n  'REFERENCED_TABLE_SCHEMA as referencedTableCatalog',\n  'REFERENCED_TABLE_NAME as referencedTableName',\n  'REFERENCED_COLUMN_NAME as referencedColumnName'\n].join(',');\n\nconst typeWithoutDefault = new Set(['BLOB', 'TEXT', 'GEOMETRY', 'JSON']);\n\nclass MySQLQueryGenerator extends AbstractQueryGenerator {\n  constructor(options) {\n    super(options);\n\n    this.OperatorMap = {\n      ...this.OperatorMap,\n      [Op.regexp]: 'REGEXP',\n      [Op.notRegexp]: 'NOT REGEXP'\n    };\n  }\n\n  createDatabaseQuery(databaseName, options) {\n    options = {\n      charset: null,\n      collate: null,\n      ...options\n    };\n\n    return Utils.joinSQLFragments([\n      'CREATE DATABASE IF NOT EXISTS',\n      this.quoteIdentifier(databaseName),\n      options.charset && `DEFAULT CHARACTER SET ${this.escape(options.charset)}`,\n      options.collate && `DEFAULT COLLATE ${this.escape(options.collate)}`,\n      ';'\n    ]);\n  }\n\n  dropDatabaseQuery(databaseName) {\n    return `DROP DATABASE IF EXISTS ${this.quoteIdentifier(databaseName)};`;\n  }\n\n  createSchema() {\n    return 'SHOW TABLES';\n  }\n\n  showSchemasQuery() {\n    return 'SHOW TABLES';\n  }\n\n  versionQuery() {\n    return 'SELECT VERSION() as `version`';\n  }\n\n  createTableQuery(tableName, attributes, options) {\n    options = {\n      engine: 'InnoDB',\n      charset: null,\n      rowFormat: null,\n      ...options\n    };\n\n    const primaryKeys = [];\n    const foreignKeys = {};\n    const attrStr = [];\n\n    for (const attr in attributes) {\n      if (!Object.prototype.hasOwnProperty.call(attributes, attr)) continue;\n      const dataType = attributes[attr];\n      let match;\n\n      if (dataType.includes('PRIMARY KEY')) {\n        primaryKeys.push(attr);\n\n        if (dataType.includes('REFERENCES')) {\n          // MySQL doesn't support inline REFERENCES declarations: move to the end\n          match = dataType.match(/^(.+) (REFERENCES.*)$/);\n          attrStr.push(`${this.quoteIdentifier(attr)} ${match[1].replace('PRIMARY KEY', '')}`);\n          foreignKeys[attr] = match[2];\n        } else {\n          attrStr.push(`${this.quoteIdentifier(attr)} ${dataType.replace('PRIMARY KEY', '')}`);\n        }\n      } else if (dataType.includes('REFERENCES')) {\n        // MySQL doesn't support inline REFERENCES declarations: move to the end\n        match = dataType.match(/^(.+) (REFERENCES.*)$/);\n        attrStr.push(`${this.quoteIdentifier(attr)} ${match[1]}`);\n        foreignKeys[attr] = match[2];\n      } else {\n        attrStr.push(`${this.quoteIdentifier(attr)} ${dataType}`);\n      }\n    }\n\n    const table = this.quoteTable(tableName);\n    let attributesClause = attrStr.join(', ');\n    const pkString = primaryKeys.map(pk => this.quoteIdentifier(pk)).join(', ');\n\n    if (options.uniqueKeys) {\n      _.each(options.uniqueKeys, (columns, indexName) => {\n        if (columns.customIndex) {\n          if (typeof indexName !== 'string') {\n            indexName = `uniq_${tableName}_${columns.fields.join('_')}`;\n          }\n          attributesClause += `, UNIQUE ${this.quoteIdentifier(indexName)} (${columns.fields.map(field => this.quoteIdentifier(field)).join(', ')})`;\n        }\n      });\n    }\n\n    if (pkString.length > 0) {\n      attributesClause += `, PRIMARY KEY (${pkString})`;\n    }\n\n    for (const fkey in foreignKeys) {\n      if (Object.prototype.hasOwnProperty.call(foreignKeys, fkey)) {\n        attributesClause += `, FOREIGN KEY (${this.quoteIdentifier(fkey)}) ${foreignKeys[fkey]}`;\n      }\n    }\n\n    return Utils.joinSQLFragments([\n      'CREATE TABLE IF NOT EXISTS',\n      table,\n      `(${attributesClause})`,\n      `ENGINE=${options.engine}`,\n      options.comment && typeof options.comment === 'string' && `COMMENT ${this.escape(options.comment)}`,\n      options.charset && `DEFAULT CHARSET=${options.charset}`,\n      options.collate && `COLLATE ${options.collate}`,\n      options.initialAutoIncrement && `AUTO_INCREMENT=${options.initialAutoIncrement}`,\n      options.rowFormat && `ROW_FORMAT=${options.rowFormat}`,\n      ';'\n    ]);\n  }\n\n  describeTableQuery(tableName, schema, schemaDelimiter) {\n    const table = this.quoteTable(\n      this.addSchema({\n        tableName,\n        _schema: schema,\n        _schemaDelimiter: schemaDelimiter\n      })\n    );\n\n    return `SHOW FULL COLUMNS FROM ${table};`;\n  }\n\n  showTablesQuery(database) {\n    let query = 'SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = \\'BASE TABLE\\'';\n    if (database) {\n      query += ` AND TABLE_SCHEMA = ${this.escape(database)}`;\n    } else {\n      query += ' AND TABLE_SCHEMA NOT IN (\\'MYSQL\\', \\'INFORMATION_SCHEMA\\', \\'PERFORMANCE_SCHEMA\\', \\'SYS\\', \\'mysql\\', \\'information_schema\\', \\'performance_schema\\', \\'sys\\')';\n    }\n    return `${query};`;\n  }\n\n  tableExistsQuery(table) {\n    // remove first & last `, then escape as SQL string\n    const tableName = this.escape(this.quoteTable(table).slice(1, -1));\n\n    return `SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = ${tableName} AND TABLE_SCHEMA = ${this.escape(this.sequelize.config.database)}`;\n  }\n\n  addColumnQuery(table, key, dataType) {\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      this.quoteTable(table),\n      'ADD',\n      this.quoteIdentifier(key),\n      this.attributeToSQL(dataType, {\n        context: 'addColumn',\n        tableName: table,\n        foreignKey: key\n      }),\n      ';'\n    ]);\n  }\n\n  removeColumnQuery(tableName, attributeName) {\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      this.quoteTable(tableName),\n      'DROP',\n      this.quoteIdentifier(attributeName),\n      ';'\n    ]);\n  }\n\n  changeColumnQuery(tableName, attributes) {\n    const attrString = [];\n    const constraintString = [];\n\n    for (const attributeName in attributes) {\n      let definition = attributes[attributeName];\n      if (definition.includes('REFERENCES')) {\n        const attrName = this.quoteIdentifier(attributeName);\n        definition = definition.replace(/.+?(?=REFERENCES)/, '');\n        constraintString.push(`FOREIGN KEY (${attrName}) ${definition}`);\n      } else {\n        attrString.push(`\\`${attributeName}\\` \\`${attributeName}\\` ${definition}`);\n      }\n    }\n\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      this.quoteTable(tableName),\n      attrString.length && `CHANGE ${attrString.join(', ')}`,\n      constraintString.length && `ADD ${constraintString.join(', ')}`,\n      ';'\n    ]);\n  }\n\n  renameColumnQuery(tableName, attrBefore, attributes) {\n    const attrString = [];\n\n    for (const attrName in attributes) {\n      const definition = attributes[attrName];\n      attrString.push(`\\`${attrBefore}\\` \\`${attrName}\\` ${definition}`);\n    }\n\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      this.quoteTable(tableName),\n      'CHANGE',\n      attrString.join(', '),\n      ';'\n    ]);\n  }\n\n  handleSequelizeMethod(smth, tableName, factory, options, prepend) {\n    if (smth instanceof Utils.Json) {\n      // Parse nested object\n      if (smth.conditions) {\n        const conditions = this.parseConditionObject(smth.conditions).map(condition =>\n          `${this.jsonPathExtractionQuery(condition.path[0], _.tail(condition.path))} = '${condition.value}'`\n        );\n\n        return conditions.join(' AND ');\n      }\n      if (smth.path) {\n        let str;\n\n        // Allow specifying conditions using the sqlite json functions\n        if (this._checkValidJsonStatement(smth.path)) {\n          str = smth.path;\n        } else {\n          // Also support json property accessors\n          const paths = _.toPath(smth.path);\n          const column = paths.shift();\n          str = this.jsonPathExtractionQuery(column, paths);\n        }\n\n        if (smth.value) {\n          str += util.format(' = %s', this.escape(smth.value));\n        }\n\n        return str;\n      }\n    } else if (smth instanceof Utils.Cast) {\n      if (/timestamp/i.test(smth.type)) {\n        smth.type = 'datetime';\n      } else if (smth.json && /boolean/i.test(smth.type)) {\n        // true or false cannot be casted as booleans within a JSON structure\n        smth.type = 'char';\n      } else if (/double precision/i.test(smth.type) || /boolean/i.test(smth.type) || /integer/i.test(smth.type)) {\n        smth.type = 'decimal';\n      } else if (/text/i.test(smth.type)) {\n        smth.type = 'char';\n      }\n    }\n\n    return super.handleSequelizeMethod(smth, tableName, factory, options, prepend);\n  }\n\n  _toJSONValue(value) {\n    // true/false are stored as strings in mysql\n    if (typeof value === 'boolean') {\n      return value.toString();\n    }\n    // null is stored as a string in mysql\n    if (value === null) {\n      return 'null';\n    }\n    return value;\n  }\n\n  truncateTableQuery(tableName) {\n    return `TRUNCATE ${this.quoteTable(tableName)}`;\n  }\n\n  deleteQuery(tableName, where, options = {}, model) {\n    let limit = '';\n    let query = `DELETE FROM ${this.quoteTable(tableName)}`;\n\n    if (options.limit) {\n      limit = ` LIMIT ${this.escape(options.limit)}`;\n    }\n\n    where = this.getWhereConditions(where, null, model, options);\n\n    if (where) {\n      query += ` WHERE ${where}`;\n    }\n\n    return query + limit;\n  }\n\n  showIndexesQuery(tableName, options) {\n    return Utils.joinSQLFragments([\n      `SHOW INDEX FROM ${this.quoteTable(tableName)}`,\n      options && options.database && `FROM \\`${options.database}\\``\n    ]);\n  }\n\n  showConstraintsQuery(table, constraintName) {\n    const tableName = table.tableName || table;\n    const schemaName = table.schema;\n\n    return Utils.joinSQLFragments([\n      'SELECT CONSTRAINT_CATALOG AS constraintCatalog,',\n      'CONSTRAINT_NAME AS constraintName,',\n      'CONSTRAINT_SCHEMA AS constraintSchema,',\n      'CONSTRAINT_TYPE AS constraintType,',\n      'TABLE_NAME AS tableName,',\n      'TABLE_SCHEMA AS tableSchema',\n      'from INFORMATION_SCHEMA.TABLE_CONSTRAINTS',\n      `WHERE table_name='${tableName}'`,\n      constraintName && `AND constraint_name = '${constraintName}'`,\n      schemaName && `AND TABLE_SCHEMA = '${schemaName}'`,\n      ';'\n    ]);\n  }\n\n  removeIndexQuery(tableName, indexNameOrAttributes) {\n    let indexName = indexNameOrAttributes;\n\n    if (typeof indexName !== 'string') {\n      indexName = Utils.underscore(`${tableName}_${indexNameOrAttributes.join('_')}`);\n    }\n\n    return Utils.joinSQLFragments([\n      'DROP INDEX',\n      this.quoteIdentifier(indexName),\n      'ON',\n      this.quoteTable(tableName)\n    ]);\n  }\n\n  attributeToSQL(attribute, options) {\n    if (!_.isPlainObject(attribute)) {\n      attribute = {\n        type: attribute\n      };\n    }\n\n    const attributeString = attribute.type.toString({ escape: this.escape.bind(this) });\n    let template = attributeString;\n\n    if (attribute.allowNull === false) {\n      template += ' NOT NULL';\n    }\n\n    if (attribute.autoIncrement) {\n      template += ' auto_increment';\n    }\n\n    // BLOB/TEXT/GEOMETRY/JSON cannot have a default value\n    if (!typeWithoutDefault.has(attributeString)\n      && attribute.type._binary !== true\n      && Utils.defaultValueSchemable(attribute.defaultValue)) {\n      template += ` DEFAULT ${this.escape(attribute.defaultValue)}`;\n    }\n\n    if (attribute.unique === true) {\n      template += ' UNIQUE';\n    }\n\n    if (attribute.primaryKey) {\n      template += ' PRIMARY KEY';\n    }\n\n    if (attribute.comment) {\n      template += ` COMMENT ${this.escape(attribute.comment)}`;\n    }\n\n    if (attribute.first) {\n      template += ' FIRST';\n    }\n    if (attribute.after) {\n      template += ` AFTER ${this.quoteIdentifier(attribute.after)}`;\n    }\n\n    if ((!options || !options.withoutForeignKeyConstraints) && attribute.references) {\n      if (options && options.context === 'addColumn' && options.foreignKey) {\n        const attrName = this.quoteIdentifier(options.foreignKey);\n        const fkName = this.quoteIdentifier(`${options.tableName}_${attrName}_foreign_idx`);\n\n        template += `, ADD CONSTRAINT ${fkName} FOREIGN KEY (${attrName})`;\n      }\n\n      template += ` REFERENCES ${this.quoteTable(attribute.references.model)}`;\n\n      if (attribute.references.key) {\n        template += ` (${this.quoteIdentifier(attribute.references.key)})`;\n      } else {\n        template += ` (${this.quoteIdentifier('id')})`;\n      }\n\n      if (attribute.onDelete) {\n        template += ` ON DELETE ${attribute.onDelete.toUpperCase()}`;\n      }\n\n      if (attribute.onUpdate) {\n        template += ` ON UPDATE ${attribute.onUpdate.toUpperCase()}`;\n      }\n    }\n\n    return template;\n  }\n\n  attributesToSQL(attributes, options) {\n    const result = {};\n\n    for (const key in attributes) {\n      const attribute = attributes[key];\n      result[attribute.field || key] = this.attributeToSQL(attribute, options);\n    }\n\n    return result;\n  }\n\n  /**\n   * Check whether the statmement is json function or simple path\n   *\n   * @param   {string}  stmt  The statement to validate\n   * @returns {boolean}       true if the given statement is json function\n   * @throws  {Error}         throw if the statement looks like json function but has invalid token\n   * @private\n   */\n  _checkValidJsonStatement(stmt) {\n    if (typeof stmt !== 'string') {\n      return false;\n    }\n\n    let currentIndex = 0;\n    let openingBrackets = 0;\n    let closingBrackets = 0;\n    let hasJsonFunction = false;\n    let hasInvalidToken = false;\n\n    while (currentIndex < stmt.length) {\n      const string = stmt.substr(currentIndex);\n      const functionMatches = JSON_FUNCTION_REGEX.exec(string);\n      if (functionMatches) {\n        currentIndex += functionMatches[0].indexOf('(');\n        hasJsonFunction = true;\n        continue;\n      }\n\n      const operatorMatches = JSON_OPERATOR_REGEX.exec(string);\n      if (operatorMatches) {\n        currentIndex += operatorMatches[0].length;\n        hasJsonFunction = true;\n        continue;\n      }\n\n      const tokenMatches = TOKEN_CAPTURE_REGEX.exec(string);\n      if (tokenMatches) {\n        const capturedToken = tokenMatches[1];\n        if (capturedToken === '(') {\n          openingBrackets++;\n        } else if (capturedToken === ')') {\n          closingBrackets++;\n        } else if (capturedToken === ';') {\n          hasInvalidToken = true;\n          break;\n        }\n        currentIndex += tokenMatches[0].length;\n        continue;\n      }\n\n      break;\n    }\n\n    // Check invalid json statement\n    if (hasJsonFunction && (hasInvalidToken || openingBrackets !== closingBrackets)) {\n      throw new Error(`Invalid json statement: ${stmt}`);\n    }\n\n    // return true if the statement has valid json function\n    return hasJsonFunction;\n  }\n\n  /**\n   * Generates an SQL query that returns all foreign keys of a table.\n   *\n   * @param  {object} table  The table.\n   * @param  {string} schemaName The name of the schema.\n   * @returns {string}            The generated sql query.\n   * @private\n   */\n  getForeignKeysQuery(table, schemaName) {\n    const tableName = table.tableName || table;\n    return Utils.joinSQLFragments([\n      'SELECT',\n      FOREIGN_KEY_FIELDS,\n      `FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = '${tableName}'`,\n      `AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='${schemaName}'`,\n      'AND REFERENCED_TABLE_NAME IS NOT NULL',\n      ';'\n    ]);\n  }\n\n  /**\n   * Generates an SQL query that returns the foreign key constraint of a given column.\n   *\n   * @param  {object} table  The table.\n   * @param  {string} columnName The name of the column.\n   * @returns {string}            The generated sql query.\n   * @private\n   */\n  getForeignKeyQuery(table, columnName) {\n    const quotedSchemaName = table.schema ? wrapSingleQuote(table.schema) : '';\n    const quotedTableName = wrapSingleQuote(table.tableName || table);\n    const quotedColumnName = wrapSingleQuote(columnName);\n\n    return Utils.joinSQLFragments([\n      'SELECT',\n      FOREIGN_KEY_FIELDS,\n      'FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE',\n      'WHERE (',\n      [\n        `REFERENCED_TABLE_NAME = ${quotedTableName}`,\n        table.schema && `AND REFERENCED_TABLE_SCHEMA = ${quotedSchemaName}`,\n        `AND REFERENCED_COLUMN_NAME = ${quotedColumnName}`\n      ],\n      ') OR (',\n      [\n        `TABLE_NAME = ${quotedTableName}`,\n        table.schema && `AND TABLE_SCHEMA = ${quotedSchemaName}`,\n        `AND COLUMN_NAME = ${quotedColumnName}`,\n        'AND REFERENCED_TABLE_NAME IS NOT NULL'\n      ],\n      ')'\n    ]);\n  }\n\n  /**\n   * Generates an SQL query that removes a foreign key from a table.\n   *\n   * @param  {string} tableName  The name of the table.\n   * @param  {string} foreignKey The name of the foreign key constraint.\n   * @returns {string}            The generated sql query.\n   * @private\n   */\n  dropForeignKeyQuery(tableName, foreignKey) {\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      this.quoteTable(tableName),\n      'DROP FOREIGN KEY',\n      this.quoteIdentifier(foreignKey),\n      ';'\n    ]);\n  }\n\n  /**\n   * Quote identifier in sql clause\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    return Utils.addTicks(Utils.removeTicks(identifier, '`'), '`');\n  }\n}\n\n// private methods\nfunction wrapSingleQuote(identifier) {\n  return Utils.addTicks(identifier, '\\'');\n}\n\nmodule.exports = MySQLQueryGenerator;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/query-generator.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,29,28,34,37,57,46,46,37,55,59,68,55,38,47,48,22,24,27,78,26,77,39,45,41,37,32,3,43,28,32,12,84,78,64,6,3,20,23,38,22,12,42,38,32,28,47,18,37,7,6,3,34,51,3,58,50,16,22,39,8,32,3,29,65,3,35,89,3,40,3,59,28,38,33,36,22,40,27,22,47,94,32,14,24,24,28,31,40,22,26,51,43,30,57,9,9,5,51,38,53,33,5,112,79,66,52,54,7,57,45,57,5,109,32,5,64,32,5,81,34,65,37,47,124,67,33,54,35,18,43,11,16,109,43,11,86,122,18,133,11,9,7,5,34,95,74,5,88,93,90,139,27,24,14,33,13,10,48,74,9,36,39,16,64,9,71,14,137,57,125,9,35,144,9,109,7,5,26,104,110,35,29,31,14,6,243,182,64,72,50,43,7,63,176,129,306,12,38,38,5,71,125,5,104,44,104,5,89,104,5,29,38,25,5,18,3,80,28,56,22,23,29,34,52,48,43,34,9,94,30,9,9,5,52,49,74,79,9,99,9,43,5,88,93,90,139,32,36,64,93,11,72,9,32,24,14,33,14,22,26,30,10,14,36,91,9,137,108,7,5,109,89,115,23,67,85,50,5,35,15,23,13,33,24,15,23,27,26,16,9,7,3,69,28,38,93,22,20,33,28,22,20,109,32,5,94,69,63,57,45,91,28,16,30,9,61,7,5,67,74,47,45,57,77,34,7,5,21,46,43,30,57,9,9,5,38,153,17,7,39,82,152,14,163,7,5,83,30,16,5,165,29,38,25,5,18,3,109,28,45,115,28,31,67,68,51,57,5,37,50,61,54,57,94,5,53,57,54,49,67,5,35,15,33,12,38,21,29,23,7,3,63,28,37,27,26,12,34,5,65,63,58,60,5,53,51,49,7,38,17,21,10,7,22,28,37,7,24,89,7,49,66,68,7,50,60,23,35,9,7,64,38,7,24,36,7,20,7,24,57,5,43,45,26,5,24,53,5,40,51,12,45,5,117,12,47,13,22,18,21,13,8,12,23,5,631,36,3,42,40,51,12,45,5,35,20,16,12,58,9,7,3,44,42,53,38,43,7,51,49,7,28,37,7,24,75,7,46,7,55,48,41,20,100,93,14,19,60,100,84,14,21,46,84,9,45,87,9,100,126,14,25,100,98,14,25,46,91,86,9,120,181,95,60,102,31,78,9,31,78,9,14,14,55,5,110,69,5,29,3,52,40,51,12,45,5,35,20,16,24,43,7,3,40,31,12,13,23,24,24,25,20,18,6,33,41,47,5,36,44,47,32,26,45,33,65,41,42,9,72,20,17,80,26,103,32,26,11,22,169,61,30,17,20,70,27,80,15,13,50,109,13,11,9,40,76,47,80,81,93,56,156,63,87,49,93,133,48,71,54,15,13,11,9,34,15,49,28,15,16,50,29,104,16,49,34,9,7,19,18,70,63,55,7,55,61,15,17,5,37,103,5,54,52,5,56,109,5,94,3,26,49,56,29,26,54,6,3,38,88,3,33,36,43,75,55,75,5,45,3,36,52,45,5,44,3,19,16,3,28,19,25,46,5,28,43,27,60,9,55,14,27,59,9,33,44,7,12,42,5,16,73,5,17,3,33,28,45,51,49,7,32,45,35,105,142,44,25,11,9,7,5,72,3,19,23,23,31,6,3,44,28,45,51,96,7,32,45,35,150,9,7,5,28,3,35,62,11,53,37,47,11,16,46,9,23,62,164,9,20,7,5,3,34,75,3,49,31,16,97,27,19,21,20,39,42,79,13,9,122,40,60,9,72,22,43,54,52,14,75,5,3,42,28,32,30,29,107,24,61,20,6,23,22,23,15,11,6,26,23,14,14,6,29,28,14,64,57,34,57,5,26,59,67,64,5,116,87,18,38,66,107,141,9,7,5,84,91,43,44,70,5,26,46,31,19,9,128,69,72,53,88,9,57,100,9,7,5,19,138,50,12,33,28,46,9,56,82,58,45,64,61,9,63,71,71,23,66,33,29,37,38,84,15,17,13,33,45,97,101,48,45,49,41,33,15,48,54,64,52,44,22,41,15,15,46,11,16,44,64,33,11,39,9,73,41,33,44,35,49,49,16,18,15,67,81,57,148,25,25,26,31,14,11,24,26,69,14,11,130,100,14,137,7,52,5,90,104,26,23,56,16,57,50,45,149,13,13,9,7,5,24,208,38,57,33,58,7,5,66,97,27,23,58,16,59,9,7,5,24,67,41,77,7,40,75,7,5,72,46,21,39,14,40,7,5,19,106,179,12,38,5,54,30,45,34,7,92,32,36,55,14,31,7,107,64,7,68,32,7,5,23,3,51,56,85,3,54,51,26,50,48,7,32,32,157,9,28,55,56,27,117,50,72,80,139,69,191,0,42,87,153,127,0,120,78,59,9,28,41,70,9,67,14,133,7,100,40,7,18,7,3,59,25,20,18,6,33,32,33,23,29,28,6,24,15,18,6,18,44,121,76,75,5,65,47,53,66,26,29,55,159,28,11,121,27,25,9,44,26,9,69,227,9,19,32,24,42,99,49,114,47,110,16,97,9,56,41,92,9,39,17,15,43,11,9,54,47,41,9,14,47,37,9,7,5,26,105,12,69,59,5,47,74,5,51,86,5,26,51,60,19,9,93,75,34,9,61,59,9,41,61,9,58,85,9,62,97,9,7,5,52,60,132,14,100,42,63,9,7,61,12,61,134,14,101,43,65,9,7,59,5,12,48,46,16,6,3,48,57,60,5,46,19,5,60,53,67,25,3,48,37,59,62,7,5,16,3,39,44,34,129,16,18,36,140,172,15,32,44,173,29,92,19,44,14,28,7,5,16,46,8,40,81,34,132,24,74,135,36,81,131,9,14,71,118,7,5,88,21,49,70,28,9,5,24,55,70,28,9,22,25,39,16,40,9,7,5,40,12,141,49,24,19,17,36,7,6,3,50,28,27,28,31,22,43,90,33,46,61,67,43,9,9,5,34,29,5,56,65,57,71,60,95,73,96,68,39,51,7,5,86,3,74,36,54,63,70,64,81,39,79,7,37,107,13,35,9,7,44,117,40,52,45,59,50,150,17,22,24,15,18,6,43,21,21,21,20,65,45,35,7,5,33,46,5,140,46,5,96,149,62,12,112,97,5,94,97,94,24,132,5,53,164,23,41,5,20,33,49,26,166,26,49,9,7,5,67,12,21,21,31,16,6,3,29,56,67,57,5,3,61,60,13,5,38,38,5,25,24,67,14,36,46,15,7,34,15,7,111,21,5,41,40,50,36,94,73,63,50,42,21,49,27,36,39,12,19,40,16,21,36,114,126,27,36,11,10,17,38,35,12,73,138,139,20,86,103,20,65,34,69,32,16,21,29,55,11,10,17,31,38,27,5,46,46,5,86,10,30,10,19,17,3,32,93,41,107,5,16,3,44,30,29,39,40,36,26,9,370,103,105,28,32,39,33,27,18,80,26,11,69,9,42,151,33,63,90,67,11,9,60,7,64,57,21,32,7,31,12,94,5,45,3,55,30,13,62,87,99,69,3,76,98,68,22,60,5,66,46,36,136,9,7,5,20,3,30,22,58,72,39,35,96,14,59,7,5,20,3,69,15,82,58,5,38,29,14,60,92,14,136,7,60,85,31,40,35,11,41,39,11,9,57,7,35,59,24,11,7,102,72,46,41,14,35,7,29,38,33,9,39,37,9,7,55,5,40,22,5,37,54,92,45,48,14,39,7,61,5,35,51,51,87,9,35,43,9,86,23,5,36,48,98,7,37,19,7,43,5,40,3,30,55,32,30,5,14,3,44,82,16,5,36,78,5,21,31,27,31,33,53,33,61,9,12,62,5,91,3,44,27,80,5,72,38,128,23,64,45,113,7,5,48,58,49,59,71,24,42,5,67,25,38,21,7,52,79,7,5,25,78,88,5,17,125,88,5,99,47,5,36,44,21,14,100,7,5,60,55,5,23,82,5,24,84,5,58,125,88,5,89,50,5,48,76,5,18,82,5,24,43,105,7,100,5,33,125,106,5,122,85,3,28,24,27,5,91,46,5,107,54,5,3,40,87,54,31,35,86,128,39,9,25,47,50,12,60,5,54,21,5,56,3,44,33,57,33,67,9,12,75,5,56,62,3,35,21,44,25,52,77,14,66,7,5,47,21,23,8,111,7,37,61,7,56,53,3,51,13,47,52,20,37,5,62,32,48,50,27,62,15,34,26,23,11,9,70,94,9,43,85,9,13,5,35,91,3,23,17,3,36,78,15,111,5,34,3,23,36,32,5,32,27,5,37,23,5,11,3,49,15,19,5,32,63,5,40,48,3,28,47,44,70,5,33,53,27,15,38,29,10,7,81,5,62,3,27,17,44,67,7,54,5,15,3,66,26,33,24,71,21,7,5,71,19,17,20,45,80,9,27,134,9,53,79,9,18,18,18,64,31,152,9,101,22,25,138,18,111,18,45,33,31,19,42,35,12,9,138,25,23,24,47,45,28,9,34,33,32,34,33,89,5,27,67,6,33,26,101,7,26,36,157,7,26,36,157,7,5,67,120,5,67,121,5,105,3,66,21,35,31,37,33,7,5,28,29,21,5,56,84,5,32,41,23,37,26,9,5,63,72,35,37,14,27,7,32,42,23,36,9,5,35,41,23,36,9,5,32,31,5,30,71,21,43,41,84,7,98,5,23,41,23,36,9,5,197,3,42,22,57,30,81,7,53,20,11,3,23,17,3,19,34,3,1,80,82,32,43,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/abstract/query-generator.js"],"sourcesContent":["'use strict';\n\nconst util = require('util');\nconst _ = require('lodash');\nconst uuidv4 = require('uuid').v4;\n\nconst Utils = require('../../utils');\nconst deprecations = require('../../utils/deprecations');\nconst SqlString = require('../../sql-string');\nconst DataTypes = require('../../data-types');\nconst Model = require('../../model');\nconst Association = require('../../associations/base');\nconst BelongsTo = require('../../associations/belongs-to');\nconst BelongsToMany = require('../../associations/belongs-to-many');\nconst HasMany = require('../../associations/has-many');\nconst Op = require('../../operators');\nconst sequelizeError = require('../../errors');\nconst IndexHints = require('../../index-hints');\n\n\n/**\n * Abstract Query Generator\n *\n * @private\n */\nclass QueryGenerator {\n  constructor(options) {\n    if (!options.sequelize) throw new Error('QueryGenerator initialized without options.sequelize');\n    if (!options._dialect) throw new Error('QueryGenerator initialized without options._dialect');\n\n    this.sequelize = options.sequelize;\n    this.options = options.sequelize.options;\n\n    // dialect name\n    this.dialect = options._dialect.name;\n    this._dialect = options._dialect;\n\n    // wrap quoteIdentifier with common logic\n    this._initQuoteIdentifier();\n  }\n\n  extractTableDetails(tableName, options) {\n    options = options || {};\n    tableName = tableName || {};\n    return {\n      schema: tableName.schema || options.schema || this.options.schema || 'public',\n      tableName: _.isPlainObject(tableName) ? tableName.tableName : tableName,\n      delimiter: tableName.delimiter || options.delimiter || '.'\n    };\n  }\n\n  addSchema(param) {\n    if (!param._schema) return param.tableName || param;\n    const self = this;\n    return {\n      tableName: param.tableName || param,\n      table: param.tableName || param,\n      name: param.name || param,\n      schema: param._schema,\n      delimiter: param._schemaDelimiter || '.',\n      toString() {\n        return self.quoteTable(this);\n      }\n    };\n  }\n\n  dropSchema(tableName, options) {\n    return this.dropTableQuery(tableName, options);\n  }\n\n  describeTableQuery(tableName, schema, schemaDelimiter) {\n    const table = this.quoteTable(\n      this.addSchema({\n        tableName,\n        _schema: schema,\n        _schemaDelimiter: schemaDelimiter\n      })\n    );\n\n    return `DESCRIBE ${table};`;\n  }\n\n  dropTableQuery(tableName) {\n    return `DROP TABLE IF EXISTS ${this.quoteTable(tableName)};`;\n  }\n\n  renameTableQuery(before, after) {\n    return `ALTER TABLE ${this.quoteTable(before)} RENAME TO ${this.quoteTable(after)};`;\n  }\n\n  /**\n   * Helper method for populating the returning into bind information\n   * that is needed by some dialects (currently Oracle)\n   *\n   * @private\n   */\n  populateInsertQueryReturnIntoBinds() {\n    // noop by default\n  }\n\n  /**\n   * Returns an insert into command\n   *\n   * @param {string} table\n   * @param {object} valueHash       attribute value pairs\n   * @param {object} modelAttributes\n   * @param {object} [options]\n   *\n   * @private\n   */\n  insertQuery(table, valueHash, modelAttributes, options) {\n    options = options || {};\n    _.defaults(options, this.options);\n\n    const modelAttributeMap = {};\n    const bind = options.bind || [];\n    const fields = [];\n    const returningModelAttributes = [];\n    const returnTypes = [];\n    const values = [];\n    const quotedTable = this.quoteTable(table);\n    const bindParam = options.bindParam === undefined ? this.bindParam(bind) : options.bindParam;\n    const returnAttributes = [];\n    let query;\n    let valueQuery = '';\n    let emptyQuery = '';\n    let outputFragment = '';\n    let returningFragment = '';\n    let identityWrapperRequired = false;\n    let tmpTable = ''; //tmpTable declaration for trigger\n\n    if (modelAttributes) {\n      _.each(modelAttributes, (attribute, key) => {\n        modelAttributeMap[key] = attribute;\n        if (attribute.field) {\n          modelAttributeMap[attribute.field] = attribute;\n        }\n      });\n    }\n\n    if (this._dialect.supports['DEFAULT VALUES']) {\n      emptyQuery += ' DEFAULT VALUES';\n    } else if (this._dialect.supports['VALUES ()']) {\n      emptyQuery += ' VALUES ()';\n    }\n\n    if ((this._dialect.supports.returnValues || this._dialect.supports.returnIntoValues) && options.returning) {\n      const returnValues = this.generateReturnValues(modelAttributes, options);\n\n      returningModelAttributes.push(...returnValues.returnFields);\n      // Storing the returnTypes for dialects that need to have returning into bind information for outbinds\n      if (this._dialect.supports.returnIntoValues) {\n        returnTypes.push(...returnValues.returnTypes);\n      }\n      returningFragment = returnValues.returningFragment;\n      tmpTable = returnValues.tmpTable || '';\n      outputFragment = returnValues.outputFragment || '';\n    }\n\n    if (_.get(this, ['sequelize', 'options', 'dialectOptions', 'prependSearchPath']) || options.searchPath) {\n      // Not currently supported with search path (requires output of multiple queries)\n      options.bindParam = false;\n    }\n\n    if (this._dialect.supports.EXCEPTION && options.exception) {\n      // Not currently supported with bind parameters (requires output of multiple queries)\n      options.bindParam = false;\n    }\n\n    valueHash = Utils.removeNullValuesFromHash(valueHash, this.options.omitNull);\n    for (const key in valueHash) {\n      if (Object.prototype.hasOwnProperty.call(valueHash, key)) {\n        const value = valueHash[key];\n        fields.push(this.quoteIdentifier(key));\n\n        // SERIALS' can't be NULL in postgresql, use DEFAULT where supported\n        if (modelAttributeMap && modelAttributeMap[key] && modelAttributeMap[key].autoIncrement === true && value == null) {\n          if (!this._dialect.supports.autoIncrement.defaultValue) {\n            fields.splice(-1, 1);\n          } else if (this._dialect.supports.DEFAULT) {\n            values.push('DEFAULT');\n          } else {\n            values.push(this.escape(null));\n          }\n        } else {\n          if (modelAttributeMap && modelAttributeMap[key] && modelAttributeMap[key].autoIncrement === true) {\n            identityWrapperRequired = true;\n          }\n\n          if (value instanceof Utils.SequelizeMethod || options.bindParam === false) {\n            values.push(this.escape(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'INSERT' }));\n          } else {\n            values.push(this.format(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'INSERT' }, bindParam));\n          }\n        }\n      }\n    }\n\n    let onDuplicateKeyUpdate = '';\n\n    if (\n      !_.isEmpty(options.conflictWhere)\n      && !this._dialect.supports.inserts.onConflictWhere\n    ) {\n      throw new Error('missing dialect support for conflictWhere option');\n    }\n\n    // `options.updateOnDuplicate` is the list of field names to update if a duplicate key is hit during the insert.  It\n    // contains just the field names.  This option is _usually_ explicitly set by the corresponding query-interface\n    // upsert function.\n    if (this._dialect.supports.inserts.updateOnDuplicate && options.updateOnDuplicate) {\n      if (this._dialect.supports.inserts.updateOnDuplicate == ' ON CONFLICT DO UPDATE SET') { // postgres / sqlite\n        // If no conflict target columns were specified, use the primary key names from options.upsertKeys\n        const conflictKeys = options.upsertKeys.map(attr => this.quoteIdentifier(attr));\n        const updateKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=EXCLUDED.${this.quoteIdentifier(attr)}`);\n\n        const fragments = [\n          'ON CONFLICT',\n          '(',\n          conflictKeys.join(','),\n          ')'\n        ];\n\n        if (!_.isEmpty(options.conflictWhere)) {\n          fragments.push(this.whereQuery(options.conflictWhere, options));\n        }\n\n        // if update keys are provided, then apply them here.  if there are no updateKeys provided, then do not try to\n        // do an update.  Instead, fall back to DO NOTHING.\n        if (_.isEmpty(updateKeys)) {\n          fragments.push('DO NOTHING');\n        } else {\n          fragments.push('DO UPDATE SET', updateKeys.join(','));\n        }\n\n        onDuplicateKeyUpdate = ` ${Utils.joinSQLFragments(fragments)}`;\n\n      } else {\n        const valueKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=VALUES(${this.quoteIdentifier(attr)})`);\n        // the rough equivalent to ON CONFLICT DO NOTHING in mysql, etc is ON DUPLICATE KEY UPDATE id = id\n        // So, if no update values were provided, fall back to the identifier columns provided in the upsertKeys array.\n        // This will be the primary key in most cases, but it could be some other constraint.\n        if (_.isEmpty(valueKeys) && options.upsertKeys) {\n          valueKeys.push(...options.upsertKeys.map(attr => `${this.quoteIdentifier(attr)}=${this.quoteIdentifier(attr)}`));\n        }\n\n        // edge case... but if for some reason there were no valueKeys, and there were also no upsertKeys... then we\n        // can no longer build the requested query without a syntax error.  Let's throw something more graceful here\n        // so the devs know what the problem is.\n        if (_.isEmpty(valueKeys)) {\n          throw new Error('No update values found for ON DUPLICATE KEY UPDATE clause, and no identifier fields could be found to use instead.');\n        }\n        onDuplicateKeyUpdate += `${this._dialect.supports.inserts.updateOnDuplicate} ${valueKeys.join(',')}`;\n      }\n    }\n\n    const replacements = {\n      ignoreDuplicates: options.ignoreDuplicates ? this._dialect.supports.inserts.ignoreDuplicates : '',\n      onConflictDoNothing: options.ignoreDuplicates ? this._dialect.supports.inserts.onConflictDoNothing : '',\n      attributes: fields.join(','),\n      output: outputFragment,\n      values: values.join(','),\n      tmpTable\n    };\n\n    valueQuery = `${tmpTable}INSERT${replacements.ignoreDuplicates} INTO ${quotedTable} (${replacements.attributes})${replacements.output} VALUES (${replacements.values})${onDuplicateKeyUpdate}${replacements.onConflictDoNothing}${valueQuery}`;\n    emptyQuery = `${tmpTable}INSERT${replacements.ignoreDuplicates} INTO ${quotedTable}${replacements.output}${onDuplicateKeyUpdate}${replacements.onConflictDoNothing}${emptyQuery}`;\n\n    // Mostly for internal use, so we expect the user to know what he's doing!\n    // pg_temp functions are private per connection, so we never risk this function interfering with another one.\n    if (this._dialect.supports.EXCEPTION && options.exception) {\n      const dropFunction = 'DROP FUNCTION IF EXISTS pg_temp.testfunc()';\n\n      if (returningModelAttributes.length === 0) {\n        returningModelAttributes.push('*');\n      }\n\n      const delimiter = `$func_${uuidv4().replace(/-/g, '')}$`;\n      const selectQuery = `SELECT (testfunc.response).${returningModelAttributes.join(', (testfunc.response).')}, testfunc.sequelize_caught_exception FROM pg_temp.testfunc();`;\n\n      options.exception = 'WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL;';\n      valueQuery = `CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response ${quotedTable}, OUT sequelize_caught_exception text) RETURNS RECORD AS ${delimiter} BEGIN ${valueQuery} RETURNING * INTO response; EXCEPTION ${options.exception} END ${delimiter} LANGUAGE plpgsql; ${selectQuery} ${dropFunction}`;\n    } else {\n      valueQuery += returningFragment;\n      emptyQuery += returningFragment;\n    }\n\n    if (this._dialect.supports.returnIntoValues && options.returning) {\n      // Populating the returnAttributes array and performing operations needed for output binds of insertQuery\n      this.populateInsertQueryReturnIntoBinds(returningModelAttributes, returnTypes, bind.length, returnAttributes, options);\n    }\n\n    query = `${replacements.attributes.length ? valueQuery : emptyQuery}${returnAttributes.join(',')};`;\n    if (this._dialect.supports.finalTable) {\n      query = `SELECT * FROM FINAL TABLE(${ replacements.attributes.length ? valueQuery : emptyQuery });`;\n    }\n    if (identityWrapperRequired && this._dialect.supports.autoIncrement.identityInsert) {\n      query = `SET IDENTITY_INSERT ${quotedTable} ON; ${query} SET IDENTITY_INSERT ${quotedTable} OFF;`;\n    }\n\n    // Used by Postgres upsertQuery and calls to here with options.exception set to true\n    const result = { query };\n    if (options.bindParam !== false) {\n      result.bind = bind;\n    }\n\n    return result;\n  }\n\n  /**\n   * Returns an insert into command for multiple values.\n   *\n   * @param {string} tableName\n   * @param {object} fieldValueHashes\n   * @param {object} options\n   * @param {object} fieldMappedAttributes\n   *\n   * @private\n   */\n  bulkInsertQuery(tableName, fieldValueHashes, options, fieldMappedAttributes) {\n    options = options || {};\n    fieldMappedAttributes = fieldMappedAttributes || {};\n\n    const tuples = [];\n    const serials = {};\n    const allAttributes = [];\n    let onDuplicateKeyUpdate = '';\n\n    for (const fieldValueHash of fieldValueHashes) {\n      _.forOwn(fieldValueHash, (value, key) => {\n        if (!allAttributes.includes(key)) {\n          allAttributes.push(key);\n        }\n        if (\n          fieldMappedAttributes[key]\n          && fieldMappedAttributes[key].autoIncrement === true\n        ) {\n          serials[key] = true;\n        }\n      });\n    }\n\n    for (const fieldValueHash of fieldValueHashes) {\n      const values = allAttributes.map(key => {\n        if (\n          this._dialect.supports.bulkDefault\n          && serials[key] === true\n        ) {\n          // fieldValueHashes[key] ?? 'DEFAULT'\n          return fieldValueHash[key] != null ? fieldValueHash[key] : 'DEFAULT';\n        }\n\n        return this.escape(fieldValueHash[key], fieldMappedAttributes[key], { context: 'INSERT' });\n      });\n\n      tuples.push(`(${values.join(',')})`);\n    }\n\n    // `options.updateOnDuplicate` is the list of field names to update if a duplicate key is hit during the insert.  It\n    // contains just the field names.  This option is _usually_ explicitly set by the corresponding query-interface\n    // upsert function.\n    if (this._dialect.supports.inserts.updateOnDuplicate && options.updateOnDuplicate) {\n      if (this._dialect.supports.inserts.updateOnDuplicate == ' ON CONFLICT DO UPDATE SET') { // postgres / sqlite\n        // If no conflict target columns were specified, use the primary key names from options.upsertKeys\n        const conflictKeys = options.upsertKeys.map(attr => this.quoteIdentifier(attr));\n        const updateKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=EXCLUDED.${this.quoteIdentifier(attr)}`);\n\n        let whereClause = false;\n        if (options.conflictWhere) {\n          if (!this._dialect.supports.inserts.onConflictWhere) {\n            throw new Error(`conflictWhere not supported for dialect ${this._dialect.name}`);\n          }\n\n          whereClause = this.whereQuery(options.conflictWhere, options);\n        }\n\n        // The Utils.joinSQLFragments later on will join this as it handles nested arrays.\n        onDuplicateKeyUpdate = [\n          'ON CONFLICT',\n          '(',\n          conflictKeys.join(','),\n          ')',\n          whereClause,\n          'DO UPDATE SET',\n          updateKeys.join(',')\n        ];\n      } else { // mysql / maria\n        if (options.conflictWhere) {\n          throw new Error(`conflictWhere not supported for dialect ${this._dialect.name}`);\n        }\n\n        const valueKeys = options.updateOnDuplicate.map(attr => `${this.quoteIdentifier(attr)}=VALUES(${this.quoteIdentifier(attr)})`);\n        onDuplicateKeyUpdate = `${this._dialect.supports.inserts.updateOnDuplicate} ${valueKeys.join(',')}`;\n      }\n    }\n\n    const ignoreDuplicates = options.ignoreDuplicates ? this._dialect.supports.inserts.ignoreDuplicates : '';\n    const attributes = allAttributes.map(attr => this.quoteIdentifier(attr)).join(',');\n    const onConflictDoNothing = options.ignoreDuplicates ? this._dialect.supports.inserts.onConflictDoNothing : '';\n    let returning = '';\n\n    if (this._dialect.supports.returnValues && options.returning) {\n      const returnValues = this.generateReturnValues(fieldMappedAttributes, options);\n\n      returning += returnValues.returningFragment;\n    }\n\n    return Utils.joinSQLFragments([\n      'INSERT',\n      ignoreDuplicates,\n      'INTO',\n      this.quoteTable(tableName),\n      `(${attributes})`,\n      'VALUES',\n      tuples.join(','),\n      onDuplicateKeyUpdate,\n      onConflictDoNothing,\n      returning,\n      ';'\n    ]);\n  }\n\n  /**\n   * Returns an update query\n   *\n   * @param {string} tableName\n   * @param {object} attrValueHash\n   * @param {object} where A hash with conditions (e.g. {name: 'foo'}) OR an ID as integer\n   * @param {object} options\n   * @param {object} attributes\n   *\n   * @private\n   */\n  updateQuery(tableName, attrValueHash, where, options, attributes) {\n    options = options || {};\n    _.defaults(options, this.options);\n\n    attrValueHash = Utils.removeNullValuesFromHash(attrValueHash, options.omitNull, options);\n\n    const values = [];\n    const bind = [];\n    const modelAttributeMap = {};\n    let outputFragment = '';\n    let tmpTable = ''; // tmpTable declaration for trigger\n    let suffix = '';\n\n    if (_.get(this, ['sequelize', 'options', 'dialectOptions', 'prependSearchPath']) || options.searchPath) {\n      // Not currently supported with search path (requires output of multiple queries)\n      options.bindParam = false;\n    }\n\n    const bindParam = options.bindParam === undefined ? this.bindParam(bind) : options.bindParam;\n\n    if (this._dialect.supports['LIMIT ON UPDATE'] && options.limit) {\n      if (!['mssql', 'db2', 'oracle'].includes(this.dialect)) {\n        suffix = ` LIMIT ${this.escape(options.limit)} `;\n      } else if (this.dialect === 'oracle') {\n        // This cannot be setted in where because rownum will be quoted\n        if (where && (where.length && where.length > 0 || Object.keys(where).length > 0)) {\n          // If we have a where clause, we add AND\n          suffix += ' AND ';\n        } else {\n          // No where clause, we add where\n          suffix += ' WHERE ';\n        }\n        suffix += `rownum <= ${this.escape(options.limit)} `;\n      }\n    }\n\n    if (this._dialect.supports.returnValues && options.returning) {\n      const returnValues = this.generateReturnValues(attributes, options);\n\n      suffix += returnValues.returningFragment;\n      tmpTable = returnValues.tmpTable || '';\n      outputFragment = returnValues.outputFragment || '';\n\n      // ensure that the return output is properly mapped to model fields.\n      if (!this._dialect.supports.returnValues.output && options.returning) {\n        options.mapToModel = true;\n      }\n    }\n\n    if (attributes) {\n      _.each(attributes, (attribute, key) => {\n        modelAttributeMap[key] = attribute;\n        if (attribute.field) {\n          modelAttributeMap[attribute.field] = attribute;\n        }\n      });\n    }\n\n    for (const key in attrValueHash) {\n      if (modelAttributeMap && modelAttributeMap[key] &&\n        modelAttributeMap[key].autoIncrement === true &&\n        !this._dialect.supports.autoIncrement.update) {\n        // not allowed to update identity column\n        continue;\n      }\n\n      const value = attrValueHash[key];\n\n      if (value instanceof Utils.SequelizeMethod || options.bindParam === false) {\n        values.push(`${this.quoteIdentifier(key)}=${this.escape(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'UPDATE' })}`);\n      } else {\n        values.push(`${this.quoteIdentifier(key)}=${this.format(value, modelAttributeMap && modelAttributeMap[key] || undefined, { context: 'UPDATE' }, bindParam)}`);\n      }\n    }\n\n    const whereOptions = { ...options, bindParam };\n\n    if (values.length === 0) {\n      return '';\n    }\n\n    const query = `${tmpTable}UPDATE ${this.quoteTable(tableName)} SET ${values.join(',')}${outputFragment} ${this.whereQuery(where, whereOptions)}${suffix}`.trim();\n    // Used by Postgres upsertQuery and calls to here with options.exception set to true\n    const result = { query };\n    if (options.bindParam !== false) {\n      result.bind = bind;\n    }\n    return result;\n  }\n\n  /**\n   * Returns an update query using arithmetic operator\n   *\n   * @param {string} operator                    String with the arithmetic operator (e.g. '+' or '-')\n   * @param {string} tableName                   Name of the table\n   * @param {object} where                       A plain-object with conditions (e.g. {name: 'foo'}) OR an ID as integer\n   * @param {object} incrementAmountsByField     A plain-object with attribute-value-pairs\n   * @param {object} extraAttributesToBeUpdated  A plain-object with attribute-value-pairs\n   * @param {object} options\n   *\n   * @private\n   */\n  arithmeticQuery(operator, tableName, where, incrementAmountsByField, extraAttributesToBeUpdated, options) {\n    options = options || {};\n    _.defaults(options, { returning: true });\n\n    extraAttributesToBeUpdated = Utils.removeNullValuesFromHash(extraAttributesToBeUpdated, this.options.omitNull);\n\n    let outputFragment = '';\n    let returningFragment = '';\n\n    if (this._dialect.supports.returnValues && options.returning) {\n      const returnValues = this.generateReturnValues(null, options);\n\n      outputFragment = returnValues.outputFragment;\n      returningFragment = returnValues.returningFragment;\n    }\n\n    const updateSetSqlFragments = [];\n    for (const field in incrementAmountsByField) {\n      const incrementAmount = incrementAmountsByField[field];\n      const quotedField = this.quoteIdentifier(field);\n      const escapedAmount = this.escape(incrementAmount);\n      updateSetSqlFragments.push(`${quotedField}=${quotedField}${operator} ${escapedAmount}`);\n    }\n    for (const field in extraAttributesToBeUpdated) {\n      const newValue = extraAttributesToBeUpdated[field];\n      const quotedField = this.quoteIdentifier(field);\n      const escapedValue = this.escape(newValue);\n      updateSetSqlFragments.push(`${quotedField}=${escapedValue}`);\n    }\n\n    return Utils.joinSQLFragments([\n      'UPDATE',\n      this.quoteTable(tableName),\n      'SET',\n      updateSetSqlFragments.join(','),\n      outputFragment,\n      this.whereQuery(where),\n      returningFragment\n    ]);\n  }\n\n  /*\n    Returns an add index query.\n    Parameters:\n      - tableName -> Name of an existing table, possibly with schema.\n      - options:\n        - type: UNIQUE|FULLTEXT|SPATIAL\n        - name: The name of the index. Default is <table>_<attr1>_<attr2>\n        - fields: An array of attributes as string or as hash.\n                  If the attribute is a hash, it must have the following content:\n                  - name: The name of the attribute/column\n                  - length: An integer. Optional\n                  - order: 'ASC' or 'DESC'. Optional\n        - parser\n        - using\n        - operator\n        - concurrently: Pass CONCURRENT so other operations run while the index is created\n      - rawTablename, the name of the table, without schema. Used to create the name of the index\n   @private\n  */\n  addIndexQuery(tableName, attributes, options, rawTablename) {\n    options = options || {};\n\n    if (!Array.isArray(attributes)) {\n      options = attributes;\n      attributes = undefined;\n    } else {\n      options.fields = attributes;\n    }\n\n    options.prefix = options.prefix || rawTablename || tableName;\n    if (options.prefix && typeof options.prefix === 'string') {\n      options.prefix = options.prefix.replace(/\\./g, '_');\n      options.prefix = options.prefix.replace(/(\"|')/g, '');\n    }\n\n    const fieldsSql = options.fields.map(field => {\n      if (field instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(field);\n      }\n      if (typeof field === 'string') {\n        field = {\n          name: field\n        };\n      }\n      let result = '';\n\n      if (field.attribute) {\n        field.name = field.attribute;\n      }\n\n      if (!field.name) {\n        throw new Error(`The following index field has no name: ${util.inspect(field)}`);\n      }\n\n      result += this.quoteIdentifier(field.name);\n\n      if (this._dialect.supports.index.collate && field.collate) {\n        result += ` COLLATE ${this.quoteIdentifier(field.collate)}`;\n      }\n\n      if (this._dialect.supports.index.operator) {\n        const operator = field.operator || options.operator;\n        if (operator) {\n          result += ` ${operator}`;\n        }\n      }\n\n      if (this._dialect.supports.index.length && field.length) {\n        result += `(${field.length})`;\n      }\n\n      if (field.order) {\n        result += ` ${field.order}`;\n      }\n\n      return result;\n    });\n\n    if (!options.name) {\n      // Mostly for cases where addIndex is called directly by the user without an options object (for example in migrations)\n      // All calls that go through sequelize should already have a name\n      options = Utils.nameIndex(options, options.prefix);\n    }\n\n    options = Model._conformIndex(options);\n\n    if (!this._dialect.supports.index.type) {\n      delete options.type;\n    }\n\n    if (options.where) {\n      options.where = this.whereQuery(options.where);\n    }\n\n    if (typeof tableName === 'string') {\n      tableName = this.quoteIdentifiers(tableName);\n    } else {\n      tableName = this.quoteTable(tableName);\n    }\n\n    const concurrently = this._dialect.supports.index.concurrently && options.concurrently ? 'CONCURRENTLY' : undefined;\n    let ind;\n    if (this._dialect.supports.indexViaAlter) {\n      ind = [\n        'ALTER TABLE',\n        tableName,\n        concurrently,\n        'ADD'\n      ];\n    } else {\n      ind = ['CREATE'];\n    }\n\n    ind = ind.concat(\n      options.unique ? 'UNIQUE' : '',\n      options.type, 'INDEX',\n      !this._dialect.supports.indexViaAlter ? concurrently : undefined,\n      this.quoteIdentifiers(options.name),\n      this._dialect.supports.index.using === 1 && options.using ? `USING ${options.using}` : '',\n      !this._dialect.supports.indexViaAlter ? `ON ${tableName}` : undefined,\n      this._dialect.supports.index.using === 2 && options.using ? `USING ${options.using}` : '',\n      `(${fieldsSql.join(', ')})`,\n      this._dialect.supports.index.parser && options.parser ? `WITH PARSER ${options.parser}` : undefined,\n      this._dialect.supports.index.where && options.where ? options.where : undefined\n    );\n\n    return _.compact(ind).join(' ');\n  }\n\n  addConstraintQuery(tableName, options) {\n    if (typeof tableName === 'string') {\n      tableName = this.quoteIdentifiers(tableName);\n    } else {\n      tableName = this.quoteTable(tableName);\n    }\n\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      tableName,\n      'ADD',\n      this.getConstraintSnippet(tableName, options || {}),\n      ';'\n    ]);\n  }\n\n  getConstraintSnippet(tableName, options) {\n    let constraintSnippet, constraintName;\n\n    const fieldsSql = options.fields.map(field => {\n      if (typeof field === 'string') {\n        return this.quoteIdentifier(field);\n      }\n      if (field instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(field);\n      }\n      if (field.attribute) {\n        field.name = field.attribute;\n      }\n\n      if (!field.name) {\n        throw new Error(`The following index field has no name: ${field}`);\n      }\n\n      return this.quoteIdentifier(field.name);\n    });\n\n    const fieldsSqlQuotedString = fieldsSql.join(', ');\n    const fieldsSqlString = fieldsSql.join('_');\n\n    switch (options.type.toUpperCase()) {\n      case 'UNIQUE':\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_uk`);\n        constraintSnippet = `CONSTRAINT ${constraintName} UNIQUE (${fieldsSqlQuotedString})`;\n        break;\n      case 'CHECK':\n        options.where = this.whereItemsQuery(options.where);\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_ck`);\n        constraintSnippet = `CONSTRAINT ${constraintName} CHECK (${options.where})`;\n        break;\n      case 'DEFAULT':\n        if (options.defaultValue === undefined) {\n          throw new Error('Default value must be specified for DEFAULT CONSTRAINT');\n        }\n\n        if (this._dialect.name !== 'mssql') {\n          throw new Error('Default constraints are supported only for MSSQL dialect.');\n        }\n\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_df`);\n        constraintSnippet = `CONSTRAINT ${constraintName} DEFAULT (${this.escape(options.defaultValue)}) FOR ${fieldsSql[0]}`;\n        break;\n      case 'PRIMARY KEY':\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_pk`);\n        constraintSnippet = `CONSTRAINT ${constraintName} PRIMARY KEY (${fieldsSqlQuotedString})`;\n        break;\n      case 'FOREIGN KEY':\n        const references = options.references;\n        if (!references || !references.table || !(references.field || references.fields)) {\n          throw new Error('references object with table and field must be specified');\n        }\n        constraintName = this.quoteIdentifier(options.name || `${tableName}_${fieldsSqlString}_${references.table}_fk`);\n        const quotedReferences =\n          typeof references.field !== 'undefined'\n            ? this.quoteIdentifier(references.field)\n            : references.fields.map(f => this.quoteIdentifier(f)).join(', ');\n        const referencesSnippet = `${this.quoteTable(references.table)} (${quotedReferences})`;\n        constraintSnippet = `CONSTRAINT ${constraintName} `;\n        constraintSnippet += `FOREIGN KEY (${fieldsSqlQuotedString}) REFERENCES ${referencesSnippet}`;\n        if (options.onUpdate) {\n          constraintSnippet += ` ON UPDATE ${options.onUpdate.toUpperCase()}`;\n        }\n        if (options.onDelete) {\n          constraintSnippet += ` ON DELETE ${options.onDelete.toUpperCase()}`;\n        }\n        break;\n      default: throw new Error(`${options.type} is invalid.`);\n    }\n\n    if (options.deferrable && ['UNIQUE', 'PRIMARY KEY', 'FOREIGN KEY'].includes(options.type.toUpperCase())) {\n      constraintSnippet += ` ${this.deferConstraintsQuery(options)}`;\n    }\n\n    return constraintSnippet;\n  }\n\n  removeConstraintQuery(tableName, constraintName) {\n    if (typeof tableName === 'string') {\n      tableName = this.quoteIdentifiers(tableName);\n    } else {\n      tableName = this.quoteTable(tableName);\n    }\n\n    return Utils.joinSQLFragments([\n      'ALTER TABLE',\n      tableName,\n      'DROP CONSTRAINT',\n      this.quoteIdentifiers(constraintName)\n    ]);\n  }\n\n  /*\n    Quote an object based on its type. This is a more general version of quoteIdentifiers\n    Strings: should proxy to quoteIdentifiers\n    Arrays:\n      * Expects array in the form: [<model> (optional), <model> (optional),... String, String (optional)]\n        Each <model> can be a model, or an object {model: Model, as: String}, matching include, or an\n        association object, or the name of an association.\n      * Zero or more models can be included in the array and are used to trace a path through the tree of\n        included nested associations. This produces the correct table name for the ORDER BY/GROUP BY SQL\n        and quotes it.\n      * If a single string is appended to end of array, it is quoted.\n        If two strings appended, the 1st string is quoted, the 2nd string unquoted.\n    Objects:\n      * If raw is set, that value should be returned verbatim, without quoting\n      * If fn is set, the string should start with the value of fn, starting paren, followed by\n        the values of cols (which is assumed to be an array), quoted and joined with ', ',\n        unless they are themselves objects\n      * If direction is set, should be prepended\n\n    Currently this function is only used for ordering / grouping columns and Sequelize.col(), but it could\n    potentially also be used for other places where we want to be able to call SQL functions (e.g. as default values)\n   @private\n  */\n  quote(collection, parent, connector) {\n    // init\n    const validOrderOptions = [\n      'ASC',\n      'DESC',\n      'ASC NULLS LAST',\n      'DESC NULLS LAST',\n      'ASC NULLS FIRST',\n      'DESC NULLS FIRST',\n      'NULLS FIRST',\n      'NULLS LAST'\n    ];\n\n    // default\n    connector = connector || '.';\n\n    // just quote as identifiers if string\n    if (typeof collection === 'string') {\n      return this.quoteIdentifiers(collection);\n    }\n    if (Array.isArray(collection)) {\n      // iterate through the collection and mutate objects into associations\n      collection.forEach((item, index) => {\n        const previous = collection[index - 1];\n        let previousAssociation;\n        let previousModel;\n\n        // set the previous as the parent when previous is undefined or the target of the association\n        if (!previous && parent !== undefined) {\n          previousModel = parent;\n        } else if (previous && previous instanceof Association) {\n          previousAssociation = previous;\n          previousModel = previous.target;\n        }\n\n        // if the previous item is a model, then attempt getting an association\n        if (previousModel && previousModel.prototype instanceof Model) {\n          let model;\n          let as;\n\n          if (typeof item === 'function' && item.prototype instanceof Model) {\n            // set\n            model = item;\n          } else if (_.isPlainObject(item) && item.model && item.model.prototype instanceof Model) {\n            // set\n            model = item.model;\n            as = item.as;\n          }\n\n          if (model) {\n            // set the as to either the through name or the model name\n            if (!as && previousAssociation && previousAssociation instanceof Association && previousAssociation.through && previousAssociation.through.model === model) {\n              // get from previous association\n              item = new Association(previousModel, model, {\n                as: model.name\n              });\n            } else {\n              // get association from previous model\n              item = previousModel.getAssociationForAlias(model, as);\n\n              // attempt to use the model name if the item is still null\n              if (!item) {\n                item = previousModel.getAssociationForAlias(model, model.name);\n              }\n            }\n\n            // make sure we have an association\n            if (!(item instanceof Association)) {\n              throw new Error(util.format('Unable to find a valid association for model, \\'%s\\'', model.name));\n            }\n          }\n        }\n\n        if (typeof item === 'string') {\n          // get order index\n          const orderIndex = validOrderOptions.indexOf(item.toUpperCase());\n\n          // see if this is an order\n          if (index > 0 && orderIndex !== -1) {\n            item = this.sequelize.literal(` ${validOrderOptions[orderIndex]}`);\n          } else if (previousModel && previousModel.prototype instanceof Model) {\n            // only go down this path if we have preivous model and check only once\n            if (previousModel.associations !== undefined && previousModel.associations[item]) {\n              // convert the item to an association\n              item = previousModel.associations[item];\n            } else if (previousModel.rawAttributes !== undefined && previousModel.rawAttributes[item] && item !== previousModel.rawAttributes[item].field) {\n              // convert the item attribute from its alias\n              item = previousModel.rawAttributes[item].field;\n            } else if (\n              item.includes('.')\n              && previousModel.rawAttributes !== undefined\n            ) {\n              const itemSplit = item.split('.');\n\n              if (previousModel.rawAttributes[itemSplit[0]].type instanceof DataTypes.JSON) {\n                // just quote identifiers for now\n                const identifier = this.quoteIdentifiers(`${previousModel.name}.${previousModel.rawAttributes[itemSplit[0]].field}`);\n\n                // get path\n                const path = itemSplit.slice(1);\n\n                // extract path\n                item = this.jsonPathExtractionQuery(identifier, path);\n\n                // literal because we don't want to append the model name when string\n                item = this.sequelize.literal(item);\n              }\n            }\n          }\n        }\n\n        collection[index] = item;\n      }, this);\n\n      // loop through array, adding table names of models to quoted\n      const collectionLength = collection.length;\n      const tableNames = [];\n      let item;\n      let i = 0;\n\n      for (i = 0; i < collectionLength - 1; i++) {\n        item = collection[i];\n        if (typeof item === 'string' || item._modelAttribute || item instanceof Utils.SequelizeMethod) {\n          break;\n        } else if (item instanceof Association) {\n          tableNames[i] = item.as;\n        }\n      }\n\n      // start building sql\n      let sql = '';\n\n      if (i > 0) {\n        sql += `${this.quoteIdentifier(tableNames.join(connector))}.`;\n      } else if (typeof collection[0] === 'string' && parent) {\n        sql += `${this.quoteIdentifier(parent.name)}.`;\n      }\n\n      // loop through everything past i and append to the sql\n      collection.slice(i).forEach(collectionItem => {\n        sql += this.quote(collectionItem, parent, connector);\n      }, this);\n\n      return sql;\n    }\n    if (collection._modelAttribute) {\n      return `${this.quoteTable(collection.Model.name)}.${this.quoteIdentifier(collection.fieldName)}`;\n    }\n    if (collection instanceof Utils.SequelizeMethod) {\n      return this.handleSequelizeMethod(collection);\n    }\n    if (_.isPlainObject(collection) && collection.raw) {\n      // simple objects with raw is no longer supported\n      throw new Error('The `{raw: \"...\"}` syntax is no longer supported.  Use `sequelize.literal` instead.');\n    }\n    throw new Error(`Unknown structure passed to order / group: ${util.inspect(collection)}`);\n  }\n\n  _initQuoteIdentifier() {\n    this._quoteIdentifier = this.quoteIdentifier;\n    this.quoteIdentifier = function(identifier, force) {\n      if (identifier === '*') return identifier;\n      return this._quoteIdentifier(identifier, force);\n    };\n  }\n\n  /**\n   * Adds quotes to identifier\n   *\n   * @param {string} identifier\n   * @param {boolean} force\n   *\n   * @returns {string}\n   */\n  quoteIdentifier(identifier, force) {\n    throw new Error(`quoteIdentifier for Dialect \"${this.dialect}\" is not implemented`);\n  }\n\n  /**\n   * Split a list of identifiers by \".\" and quote each part.\n   *\n   * @param {string} identifiers\n   *\n   * @returns {string}\n   */\n  quoteIdentifiers(identifiers) {\n    if (identifiers.includes('.')) {\n      identifiers = identifiers.split('.');\n\n      const head = identifiers.slice(0, identifiers.length - 1).join('->');\n      const tail = identifiers[identifiers.length - 1];\n\n      return `${this.quoteIdentifier(head)}.${this.quoteIdentifier(tail)}`;\n    }\n\n    return this.quoteIdentifier(identifiers);\n  }\n\n  quoteAttribute(attribute, model) {\n    if (model && attribute in model.rawAttributes) {\n      return this.quoteIdentifier(attribute);\n    }\n    return this.quoteIdentifiers(attribute);\n  }\n\n  /**\n   * Returns the alias token\n   *\n   * @returns {string}\n   */\n  getAliasToken() {\n    return 'AS';\n  }\n\n  /**\n   * Quote table name with optional alias and schema attribution\n   *\n   * @param {string|object}  param table string or object\n   * @param {string|boolean} alias alias name\n   *\n   * @returns {string}\n   */\n  quoteTable(param, alias) {\n    let table = '';\n\n    if (alias === true) {\n      alias = param.as || param.name || param;\n    }\n\n    if (_.isObject(param)) {\n      if (this._dialect.supports.schemas) {\n        if (param.schema) {\n          table += `${this.quoteIdentifier(param.schema)}.`;\n        }\n\n        table += this.quoteIdentifier(param.tableName);\n      } else {\n        if (param.schema) {\n          table += param.schema + (param.delimiter || '.');\n        }\n\n        table += param.tableName;\n        table = this.quoteIdentifier(table);\n      }\n    } else {\n      table = this.quoteIdentifier(param);\n    }\n\n    if (alias) {\n      table += ` ${this.getAliasToken()} ${this.quoteIdentifier(alias)}`;\n    }\n\n    return table;\n  }\n\n  /*\n    Escape a value (e.g. a string, number or date)\n    @private\n  */\n  escape(value, field, options) {\n    options = options || {};\n\n    if (value !== null && value !== undefined) {\n      if (value instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(value);\n      }\n      if (field && field.type) {\n        this.validate(value, field, options);\n\n        if (field.type.stringify) {\n          // Users shouldn't have to worry about these args - just give them a function that takes a single arg\n          const simpleEscape = escVal => SqlString.escape(escVal, this.options.timezone, this.dialect);\n\n          value = field.type.stringify(value, { escape: simpleEscape, field, timezone: this.options.timezone, operation: options.operation });\n\n          if (field.type.escape === false) {\n            // The data-type already did the required escaping\n            return value;\n          }\n        }\n      }\n    }\n    return SqlString.escape(value, this.options.timezone, this.dialect);\n  }\n\n  bindParam(bind) {\n    return value => {\n      bind.push(value);\n      return `$${bind.length}`;\n    };\n  }\n\n  /*\n    Returns a bind parameter representation of a value (e.g. a string, number or date)\n    @private\n  */\n  format(value, field, options, bindParam) {\n    options = options || {};\n\n    if (value !== null && value !== undefined) {\n      if (value instanceof Utils.SequelizeMethod) {\n        throw new Error('Cannot pass SequelizeMethod as a bind parameter - use escape instead');\n      }\n      if (field && field.type) {\n        this.validate(value, field, options);\n\n        if (field.type.bindParam) {\n          return field.type.bindParam(value, { escape: _.identity, field, timezone: this.options.timezone, operation: options.operation, bindParam });\n        }\n      }\n    }\n\n    return bindParam(value);\n  }\n\n  /*\n    Validate a value against a field specification\n    @private\n  */\n  validate(value, field, options) {\n    if (this.typeValidation && field.type.validate && value) {\n      try {\n        if (options.isList && Array.isArray(value)) {\n          for (const item of value) {\n            field.type.validate(item, options);\n          }\n        } else {\n          field.type.validate(value, options);\n        }\n      } catch (error) {\n        if (error instanceof sequelizeError.ValidationError) {\n          error.errors.push(new sequelizeError.ValidationErrorItem(\n            error.message,\n            'Validation error',\n            field.fieldName,\n            value,\n            null,\n            `${field.type.key} validator`\n          ));\n        }\n\n        throw error;\n      }\n    }\n  }\n\n  isIdentifierQuoted(identifier) {\n    return /^\\s*(?:([`\"'])(?:(?!\\1).|\\1{2})*\\1\\.?)+\\s*$/i.test(identifier);\n  }\n\n  /**\n   * Generates an SQL query that extract JSON property of given path.\n   *\n   * @param   {string}               column   The JSON column\n   * @param   {string|Array<string>} [path]   The path to extract (optional)\n   * @param   {boolean}              [isJson] The value is JSON use alt symbols (optional)\n   * @returns {string}                        The generated sql query\n   * @private\n   */\n  jsonPathExtractionQuery(column, path, isJson) {\n    let paths = _.toPath(path);\n    let pathStr;\n    const quotedColumn = this.isIdentifierQuoted(column)\n      ? column\n      : this.quoteIdentifier(column);\n\n    switch (this.dialect) {\n      case 'mysql':\n      case 'mariadb':\n      case 'sqlite':\n        /**\n         * Non digit sub paths need to be quoted as ECMAScript identifiers\n         * https://bugs.mysql.com/bug.php?id=81896\n         */\n        if (this.dialect === 'mysql') {\n          paths = paths.map(subPath => {\n            return /\\D/.test(subPath)\n              ? Utils.addTicks(subPath, '\"')\n              : subPath;\n          });\n        }\n\n        pathStr = this.escape(['$']\n          .concat(paths)\n          .join('.')\n          .replace(/\\.(\\d+)(?:(?=\\.)|$)/g, (__, digit) => `[${digit}]`));\n\n        if (this.dialect === 'sqlite') {\n          return `json_extract(${quotedColumn},${pathStr})`;\n        }\n\n        return `json_unquote(json_extract(${quotedColumn},${pathStr}))`;\n\n      case 'postgres':\n        const join = isJson ? '#>' : '#>>';\n        pathStr = this.escape(`{${paths.join(',')}}`);\n        return `(${quotedColumn}${join}${pathStr})`;\n\n      default:\n        throw new Error(`Unsupported ${this.dialect} for JSON operations`);\n    }\n  }\n\n  /*\n    Returns a query for selecting elements in the table <tableName>.\n    Options:\n      - attributes -> An array of attributes (e.g. ['name', 'birthday']). Default: *\n      - where -> A hash with conditions (e.g. {name: 'foo'})\n                 OR an ID as integer\n      - order -> e.g. 'id DESC'\n      - group\n      - limit -> The maximum count you want to get.\n      - offset -> An offset value to start from. Only useable with limit!\n   @private\n  */\n  selectQuery(tableName, options, model) {\n    options = options || {};\n    const limit = options.limit;\n    const mainQueryItems = [];\n    const subQueryItems = [];\n    const subQuery = options.subQuery === undefined ? limit && options.hasMultiAssociation : options.subQuery;\n    const attributes = {\n      main: options.attributes && options.attributes.slice(),\n      subQuery: null\n    };\n    const mainTable = {\n      name: tableName,\n      quotedName: null,\n      as: null,\n      model\n    };\n    const topLevelInfo = {\n      names: mainTable,\n      options,\n      subQuery\n    };\n    let mainJoinQueries = [];\n    let subJoinQueries = [];\n    let query;\n\n    // Aliases can be passed through subqueries and we don't want to reset them\n    if (this.options.minifyAliases && !options.aliasesMapping) {\n      options.aliasesMapping = new Map();\n      options.aliasesByTable = {};\n      options.includeAliases = new Map();\n    }\n\n    // resolve table name options\n    if (options.tableAs) {\n      mainTable.as = this.quoteIdentifier(options.tableAs);\n    } else if (!Array.isArray(mainTable.name) && mainTable.model) {\n      mainTable.as = this.quoteIdentifier(mainTable.model.name);\n    }\n\n    mainTable.quotedName = !Array.isArray(mainTable.name) ? this.quoteTable(mainTable.name) : tableName.map(t => {\n      return Array.isArray(t) ? this.quoteTable(t[0], t[1]) : this.quoteTable(t, true);\n    }).join(', ');\n\n    if (subQuery && attributes.main) {\n      for (const keyAtt of mainTable.model.primaryKeyAttributes) {\n        // Check if mainAttributes contain the primary key of the model either as a field or an aliased field\n        if (!attributes.main.some(attr => keyAtt === attr || keyAtt === attr[0] || keyAtt === attr[1])) {\n          attributes.main.push(mainTable.model.rawAttributes[keyAtt].field ? [keyAtt, mainTable.model.rawAttributes[keyAtt].field] : keyAtt);\n        }\n      }\n    }\n\n    attributes.main = this.escapeAttributes(attributes.main, options, mainTable.as);\n    attributes.main = attributes.main || (options.include ? [`${mainTable.as}.*`] : ['*']);\n\n    // If subquery, we add the mainAttributes to the subQuery and set the mainAttributes to select * from subquery\n    if (subQuery || options.groupedLimit) {\n      // We need primary keys\n      attributes.subQuery = attributes.main;\n      attributes.main = [`${mainTable.as || mainTable.quotedName}.*`];\n    }\n\n    if (options.include) {\n      for (const include of options.include) {\n        if (include.separate) {\n          continue;\n        }\n        const joinQueries = this.generateInclude(include, { externalAs: mainTable.as, internalAs: mainTable.as }, topLevelInfo);\n\n        subJoinQueries = subJoinQueries.concat(joinQueries.subQuery);\n        mainJoinQueries = mainJoinQueries.concat(joinQueries.mainQuery);\n\n        if (joinQueries.attributes.main.length > 0) {\n          attributes.main = _.uniq(attributes.main.concat(joinQueries.attributes.main));\n        }\n        if (joinQueries.attributes.subQuery.length > 0) {\n          attributes.subQuery = _.uniq(attributes.subQuery.concat(joinQueries.attributes.subQuery));\n        }\n      }\n    }\n\n    if (subQuery) {\n      subQueryItems.push(this.selectFromTableFragment(options, mainTable.model, attributes.subQuery, mainTable.quotedName, mainTable.as));\n      subQueryItems.push(subJoinQueries.join(''));\n    } else {\n      if (options.groupedLimit) {\n        if (!mainTable.as) {\n          mainTable.as = mainTable.quotedName;\n        }\n        const where = { ...options.where };\n        let groupedLimitOrder,\n          whereKey,\n          include,\n          groupedTableName = mainTable.as;\n\n        if (typeof options.groupedLimit.on === 'string') {\n          whereKey = options.groupedLimit.on;\n        } else if (options.groupedLimit.on instanceof HasMany) {\n          whereKey = options.groupedLimit.on.foreignKeyField;\n        }\n\n        if (options.groupedLimit.on instanceof BelongsToMany) {\n          // BTM includes needs to join the through table on to check ID\n          groupedTableName = options.groupedLimit.on.manyFromSource.as;\n          const groupedLimitOptions = Model._validateIncludedElements({\n            include: [{\n              association: options.groupedLimit.on.manyFromSource,\n              duplicating: false, // The UNION'ed query may contain duplicates, but each sub-query cannot\n              required: true,\n              where: {\n                [Op.placeholder]: true,\n                ...options.groupedLimit.through && options.groupedLimit.through.where\n              }\n            }],\n            model\n          });\n\n          // Make sure attributes from the join table are mapped back to models\n          options.hasJoin = true;\n          options.hasMultiAssociation = true;\n          options.includeMap = Object.assign(groupedLimitOptions.includeMap, options.includeMap);\n          options.includeNames = groupedLimitOptions.includeNames.concat(options.includeNames || []);\n          include = groupedLimitOptions.include;\n\n          if (Array.isArray(options.order)) {\n            // We need to make sure the order by attributes are available to the parent query\n            options.order.forEach((order, i) => {\n              if (Array.isArray(order)) {\n                order = order[0];\n              }\n\n              let alias = `subquery_order_${i}`;\n              options.attributes.push([order, alias]);\n\n              // We don't want to prepend model name when we alias the attributes, so quote them here\n              alias = this.sequelize.literal(this.quote(alias));\n\n              if (Array.isArray(options.order[i])) {\n                options.order[i][0] = alias;\n              } else {\n                options.order[i] = alias;\n              }\n            });\n            groupedLimitOrder = options.order;\n          }\n        } else {\n          // Ordering is handled by the subqueries, so ordering the UNION'ed result is not needed\n          groupedLimitOrder = options.order;\n\n          // For the Oracle dialect, the result of a select is a set, not a sequence, and so is the result of UNION.\n          // So the top level ORDER BY is required\n          if (!this._dialect.supports.topLevelOrderByRequired) {\n            delete options.order;\n          }\n          where[Op.placeholder] = true;\n        }\n\n        // Caching the base query and splicing the where part into it is consistently > twice\n        // as fast than generating from scratch each time for values.length >= 5\n        const baseQuery = `SELECT * FROM (${this.selectQuery(\n          tableName,\n          {\n            attributes: options.attributes,\n            offset: options.offset,\n            limit: options.groupedLimit.limit,\n            order: groupedLimitOrder,\n            aliasesMapping: options.aliasesMapping,\n            aliasesByTable: options.aliasesByTable,\n            where,\n            include,\n            model\n          },\n          model\n        ).replace(/;$/, '')}) ${this.getAliasToken()} sub`; // Every derived table must have its own alias\n        const placeHolder = this.whereItemQuery(Op.placeholder, true, { model });\n        const splicePos = baseQuery.indexOf(placeHolder);\n\n        mainQueryItems.push(this.selectFromTableFragment(options, mainTable.model, attributes.main, `(${\n          options.groupedLimit.values.map(value => {\n            let groupWhere;\n            if (whereKey) {\n              groupWhere = {\n                [whereKey]: value\n              };\n            }\n            if (include) {\n              groupWhere = {\n                [options.groupedLimit.on.foreignIdentifierField]: value\n              };\n            }\n\n            return Utils.spliceStr(baseQuery, splicePos, placeHolder.length, this.getWhereConditions(groupWhere, groupedTableName));\n          }).join(\n            this._dialect.supports['UNION ALL'] ? ' UNION ALL ' : ' UNION '\n          )\n        })`, mainTable.as));\n      } else {\n        mainQueryItems.push(this.selectFromTableFragment(options, mainTable.model, attributes.main, mainTable.quotedName, mainTable.as));\n      }\n\n      mainQueryItems.push(mainJoinQueries.join(''));\n    }\n\n    // Add WHERE to sub or main query\n    if (Object.prototype.hasOwnProperty.call(options, 'where') && !options.groupedLimit) {\n      options.where = this.getWhereConditions(options.where, mainTable.as || tableName, model, options);\n      if (options.where) {\n        if (subQuery) {\n          subQueryItems.push(` WHERE ${options.where}`);\n        } else {\n          mainQueryItems.push(` WHERE ${options.where}`);\n          // Walk the main query to update all selects\n          mainQueryItems.forEach((value, key) => {\n            if (value.startsWith('SELECT')) {\n              mainQueryItems[key] = this.selectFromTableFragment(options, model, attributes.main, mainTable.quotedName, mainTable.as, options.where);\n            }\n          });\n        }\n      }\n    }\n\n    // Add GROUP BY to sub or main query\n    if (options.group) {\n      options.group = Array.isArray(options.group) ? options.group.map(t => this.aliasGrouping(t, model, mainTable.as, options)).join(', ') : this.aliasGrouping(options.group, model, mainTable.as, options);\n\n      if (subQuery && options.group) {\n        subQueryItems.push(` GROUP BY ${options.group}`);\n      } else if (options.group) {\n        mainQueryItems.push(` GROUP BY ${options.group}`);\n      }\n    }\n\n    // Add HAVING to sub or main query\n    if (Object.prototype.hasOwnProperty.call(options, 'having')) {\n      options.having = this.getWhereConditions(options.having, tableName, model, options, false);\n      if (options.having) {\n        if (subQuery) {\n          subQueryItems.push(` HAVING ${options.having}`);\n        } else {\n          mainQueryItems.push(` HAVING ${options.having}`);\n        }\n      }\n    }\n\n    // Add ORDER to sub or main query\n    if (options.order) {\n      const orders = this.getQueryOrders(options, model, subQuery);\n      if (orders.mainQueryOrder.length) {\n        mainQueryItems.push(` ORDER BY ${orders.mainQueryOrder.join(', ')}`);\n      }\n      if (orders.subQueryOrder.length) {\n        subQueryItems.push(` ORDER BY ${orders.subQueryOrder.join(', ')}`);\n      }\n    }\n\n    // Add LIMIT, OFFSET to sub or main query\n    const limitOrder = this.addLimitAndOffset(options, mainTable.model);\n    if (limitOrder && !options.groupedLimit) {\n      if (subQuery) {\n        subQueryItems.push(limitOrder);\n      } else {\n        mainQueryItems.push(limitOrder);\n      }\n    }\n\n    if (subQuery) {\n      this._throwOnEmptyAttributes(attributes.main, { modelName: model && model.name, as: mainTable.as });\n      query = `SELECT ${attributes.main.join(', ')} FROM (${subQueryItems.join('')}) ${this.getAliasToken()} ${mainTable.as}${mainJoinQueries.join('')}${mainQueryItems.join('')}`;\n    } else {\n      query = mainQueryItems.join('');\n    }\n\n    if (options.lock && this._dialect.supports.lock) {\n      let lock = options.lock;\n      if (typeof options.lock === 'object') {\n        lock = options.lock.level;\n      }\n      if (this._dialect.supports.lockKey && ['KEY SHARE', 'NO KEY UPDATE'].includes(lock)) {\n        query += ` FOR ${lock}`;\n      } else if (lock === 'SHARE') {\n        query += ` ${this._dialect.supports.forShare}`;\n      } else {\n        query += ' FOR UPDATE';\n      }\n      if (this._dialect.supports.lockOf && options.lock.of && options.lock.of.prototype instanceof Model) {\n        query += ` OF ${this.quoteTable(options.lock.of.name)}`;\n      }\n      if (this._dialect.supports.skipLocked && options.skipLocked) {\n        query += ' SKIP LOCKED';\n      }\n    }\n\n    return `${query};`;\n  }\n\n  aliasGrouping(field, model, tableName, options) {\n    const src = Array.isArray(field) ? field[0] : field;\n\n    return this.quote(this._getAliasForField(tableName, src, options) || src, model);\n  }\n\n  escapeAttributes(attributes, options, mainTableAs) {\n    return attributes && attributes.map(attr => {\n      let addTable = true;\n\n      if (attr instanceof Utils.SequelizeMethod) {\n        return this.handleSequelizeMethod(attr);\n      }\n      if (Array.isArray(attr)) {\n        if (attr.length !== 2) {\n          throw new Error(`${JSON.stringify(attr)} is not a valid attribute definition. Please use the following format: ['attribute definition', 'alias']`);\n        }\n        attr = attr.slice();\n\n        if (attr[0] instanceof Utils.SequelizeMethod) {\n          attr[0] = this.handleSequelizeMethod(attr[0]);\n          addTable = false;\n        } else if (this.options.attributeBehavior === 'escape' || !attr[0].includes('(') && !attr[0].includes(')')) {\n          attr[0] = this.quoteIdentifier(attr[0]);\n        } else if (this.options.attributeBehavior !== 'unsafe-legacy') {\n          throw new Error(`Attributes cannot include parentheses in Sequelize 6:\nIn order to fix the vulnerability CVE-2023-22578, we had to remove support for treating attributes as raw SQL if they included parentheses.\nSequelize 7 escapes all attributes, even if they include parentheses.\nFor Sequelize 6, because we're introducing this change in a minor release, we've opted for throwing an error instead of silently escaping the attribute as a way to warn you about this change.\n\nHere is what you can do to fix this error:\n- Wrap the attribute in a literal() call. This will make Sequelize treat it as raw SQL.\n- Set the \"attributeBehavior\" sequelize option to \"escape\" to make Sequelize escape the attribute, like in Sequelize v7. We highly recommend this option.\n- Set the \"attributeBehavior\" sequelize option to \"unsafe-legacy\" to make Sequelize escape the attribute, like in Sequelize v5.\n\nWe sincerely apologize for the inconvenience this may cause you. You can find more information on the following threads:\nhttps://github.com/sequelize/sequelize/security/advisories/GHSA-f598-mfpv-gmfx\nhttps://github.com/sequelize/sequelize/discussions/15694`);\n        }\n\n        let alias = attr[1];\n\n        if (this.options.minifyAliases) {\n          alias = this._getMinifiedAlias(alias, mainTableAs, options);\n        }\n\n        attr = [attr[0], this.quoteIdentifier(alias)].join(' AS ');\n      } else {\n        attr = !attr.includes(Utils.TICK_CHAR) && !attr.includes('\"')\n          ? this.quoteAttribute(attr, options.model)\n          : this.escape(attr);\n      }\n      if (!_.isEmpty(options.include) && (!attr.includes('.') || options.dotNotation) && addTable) {\n        attr = `${mainTableAs}.${attr}`;\n      }\n\n      return attr;\n    });\n  }\n\n  generateInclude(include, parentTableName, topLevelInfo) {\n    const joinQueries = {\n      mainQuery: [],\n      subQuery: []\n    };\n    const mainChildIncludes = [];\n    const subChildIncludes = [];\n    let requiredMismatch = false;\n    const includeAs = {\n      internalAs: include.as,\n      externalAs: include.as\n    };\n    const attributes = {\n      main: [],\n      subQuery: []\n    };\n    let joinQuery;\n\n    topLevelInfo.options.keysEscaped = true;\n\n    if (topLevelInfo.names.name !== parentTableName.externalAs && topLevelInfo.names.as !== parentTableName.externalAs) {\n      includeAs.internalAs = `${parentTableName.internalAs}->${include.as}`;\n      includeAs.externalAs = `${parentTableName.externalAs}.${include.as}`;\n    }\n\n    // includeIgnoreAttributes is used by aggregate functions\n    if (topLevelInfo.options.includeIgnoreAttributes !== false) {\n      include.model._expandAttributes(include);\n      Utils.mapFinderOptions(include, include.model);\n\n      const includeAttributes = include.attributes.map(attr => {\n        let attrAs = attr;\n        let verbatim = false;\n\n        if (Array.isArray(attr) && attr.length === 2) {\n          if (attr[0] instanceof Utils.SequelizeMethod && (\n            attr[0] instanceof Utils.Literal ||\n            attr[0] instanceof Utils.Cast ||\n            attr[0] instanceof Utils.Fn\n          )) {\n            verbatim = true;\n          }\n\n          attr = attr.map(attr => attr instanceof Utils.SequelizeMethod ? this.handleSequelizeMethod(attr) : attr);\n\n          attrAs = attr[1];\n          attr = attr[0];\n        }\n        if (attr instanceof Utils.Literal) {\n          return attr.val; // We trust the user to rename the field correctly\n        }\n        if (attr instanceof Utils.Cast || attr instanceof Utils.Fn) {\n          throw new Error(\n            'Tried to select attributes using Sequelize.cast or Sequelize.fn without specifying an alias for the result, during eager loading. ' +\n            'This means the attribute will not be added to the returned instance'\n          );\n        }\n\n        let prefix;\n        if (verbatim === true) {\n          prefix = attr;\n        } else if (/#>>|->>/.test(attr)) {\n          prefix = `(${this.quoteIdentifier(includeAs.internalAs)}.${attr.replace(/\\(|\\)/g, '')})`;\n        } else if (/json_extract\\(/.test(attr)) {\n          prefix = attr.replace(/json_extract\\(/i, `json_extract(${this.quoteIdentifier(includeAs.internalAs)}.`);\n        } else if (/json_value\\(/.test(attr)) {\n          prefix = attr.replace(/json_value\\(/i, `json_value(${this.quoteIdentifier(includeAs.internalAs)}.`);\n        } else {\n          prefix = `${this.quoteIdentifier(includeAs.internalAs)}.${this.quoteIdentifier(attr)}`;\n        }\n        let alias = `${includeAs.externalAs}.${attrAs}`;\n\n        if (this.options.minifyAliases) {\n          alias = this._getMinifiedAlias(alias, includeAs.internalAs, topLevelInfo.options);\n        }\n\n        return Utils.joinSQLFragments([\n          prefix,\n          'AS',\n          this.quoteIdentifier(alias, true)\n        ]);\n      });\n      if (include.subQuery && topLevelInfo.subQuery) {\n        for (const attr of includeAttributes) {\n          attributes.subQuery.push(attr);\n        }\n      } else {\n        for (const attr of includeAttributes) {\n          attributes.main.push(attr);\n        }\n      }\n    }\n\n    //through\n    if (include.through) {\n      joinQuery = this.generateThroughJoin(include, includeAs, parentTableName.internalAs, topLevelInfo);\n    } else {\n      this._generateSubQueryFilter(include, includeAs, topLevelInfo);\n      joinQuery = this.generateJoin(include, topLevelInfo);\n    }\n\n    // handle possible new attributes created in join\n    if (joinQuery.attributes.main.length > 0) {\n      attributes.main = attributes.main.concat(joinQuery.attributes.main);\n    }\n\n    if (joinQuery.attributes.subQuery.length > 0) {\n      attributes.subQuery = attributes.subQuery.concat(joinQuery.attributes.subQuery);\n    }\n\n    if (include.include) {\n      for (const childInclude of include.include) {\n        if (childInclude.separate || childInclude._pseudo) {\n          continue;\n        }\n\n        const childJoinQueries = this.generateInclude(childInclude, includeAs, topLevelInfo);\n\n        if (include.required === false && childInclude.required === true) {\n          requiredMismatch = true;\n        }\n        // if the child is a sub query we just give it to the\n        if (childInclude.subQuery && topLevelInfo.subQuery) {\n          subChildIncludes.push(childJoinQueries.subQuery);\n        }\n        if (childJoinQueries.mainQuery) {\n          mainChildIncludes.push(childJoinQueries.mainQuery);\n        }\n        if (childJoinQueries.attributes.main.length > 0) {\n          attributes.main = attributes.main.concat(childJoinQueries.attributes.main);\n        }\n        if (childJoinQueries.attributes.subQuery.length > 0) {\n          attributes.subQuery = attributes.subQuery.concat(childJoinQueries.attributes.subQuery);\n        }\n      }\n    }\n\n    if (include.subQuery && topLevelInfo.subQuery) {\n      if (requiredMismatch && subChildIncludes.length > 0) {\n        joinQueries.subQuery.push(` ${joinQuery.join} ( ${joinQuery.body}${subChildIncludes.join('')} ) ON ${joinQuery.condition}`);\n      } else {\n        joinQueries.subQuery.push(` ${joinQuery.join} ${joinQuery.body} ON ${joinQuery.condition}`);\n        if (subChildIncludes.length > 0) {\n          joinQueries.subQuery.push(subChildIncludes.join(''));\n        }\n      }\n      joinQueries.mainQuery.push(mainChildIncludes.join(''));\n    } else {\n      if (requiredMismatch && mainChildIncludes.length > 0) {\n        joinQueries.mainQuery.push(` ${joinQuery.join} ( ${joinQuery.body}${mainChildIncludes.join('')} ) ON ${joinQuery.condition}`);\n      } else {\n        joinQueries.mainQuery.push(` ${joinQuery.join} ${joinQuery.body} ON ${joinQuery.condition}`);\n        if (mainChildIncludes.length > 0) {\n          joinQueries.mainQuery.push(mainChildIncludes.join(''));\n        }\n      }\n      joinQueries.subQuery.push(subChildIncludes.join(''));\n    }\n\n    return {\n      mainQuery: joinQueries.mainQuery.join(''),\n      subQuery: joinQueries.subQuery.join(''),\n      attributes\n    };\n  }\n\n  _getMinifiedAlias(alias, tableName, options) {\n    // We do not want to re-alias in case of a subquery\n    if (options.aliasesByTable[`${tableName}${alias}`]) {\n      return options.aliasesByTable[`${tableName}${alias}`];\n    }\n\n    // Do not alias custom suquery_orders\n    if (alias.match(/subquery_order_[0-9]/)) {\n      return alias;\n    }\n\n    const minifiedAlias = `_${options.aliasesMapping.size}`;\n\n    options.aliasesMapping.set(minifiedAlias, alias);\n    options.aliasesByTable[`${tableName}${alias}`] = minifiedAlias;\n\n    return minifiedAlias;\n  }\n\n  _getAliasForField(tableName, field, options) {\n    if (this.options.minifyAliases) {\n      if (options.aliasesByTable[`${tableName}${field}`]) {\n        return options.aliasesByTable[`${tableName}${field}`];\n      }\n    }\n    return null;\n  }\n\n  generateJoin(include, topLevelInfo) {\n    const association = include.association;\n    const parent = include.parent;\n    const parentIsTop = !!parent && !include.parent.association && include.parent.model.name === topLevelInfo.options.model.name;\n    let $parent;\n    let joinWhere;\n    /* Attributes for the left side */\n    const left = association.source;\n    const attrLeft = association instanceof BelongsTo ?\n      association.identifier :\n      association.sourceKeyAttribute || left.primaryKeyAttribute;\n    const fieldLeft = association instanceof BelongsTo ?\n      association.identifierField :\n      left.rawAttributes[association.sourceKeyAttribute || left.primaryKeyAttribute].field;\n    let asLeft;\n    /* Attributes for the right side */\n    const right = include.model;\n    const tableRight = right.getTableName();\n    const fieldRight = association instanceof BelongsTo ?\n      right.rawAttributes[association.targetIdentifier || right.primaryKeyAttribute].field :\n      association.identifierField;\n    let asRight = include.as;\n\n    while (($parent = $parent && $parent.parent || include.parent) && $parent.association) {\n      if (asLeft) {\n        asLeft = `${$parent.as}->${asLeft}`;\n      } else {\n        asLeft = $parent.as;\n      }\n    }\n\n    if (!asLeft) asLeft = parent.as || parent.model.name;\n    else asRight = `${asLeft}->${asRight}`;\n\n    let joinOn = `${this.quoteTable(asLeft)}.${this.quoteIdentifier(fieldLeft)}`;\n    const subqueryAttributes = [];\n\n    if (topLevelInfo.options.groupedLimit && parentIsTop || topLevelInfo.subQuery && include.parent.subQuery && !include.subQuery) {\n      if (parentIsTop) {\n        // The main model attributes is not aliased to a prefix\n        const tableName = this.quoteTable(parent.as || parent.model.name);\n\n        // Check for potential aliased JOIN condition\n        joinOn = this._getAliasForField(tableName, attrLeft, topLevelInfo.options) || `${tableName}.${this.quoteIdentifier(attrLeft)}`;\n\n        if (topLevelInfo.subQuery) {\n          const dbIdentifier = `${tableName}.${this.quoteIdentifier(fieldLeft)}`;\n          subqueryAttributes.push(dbIdentifier !== joinOn ? `${dbIdentifier} AS ${this.quoteIdentifier(attrLeft)}` : dbIdentifier);\n        }\n      } else {\n        const joinSource = `${asLeft.replace(/->/g, '.')}.${attrLeft}`;\n\n        // Check for potential aliased JOIN condition\n        joinOn = this._getAliasForField(asLeft, joinSource, topLevelInfo.options) || this.quoteIdentifier(joinSource);\n      }\n    }\n\n    joinOn += ` = ${this.quoteIdentifier(asRight)}.${this.quoteIdentifier(fieldRight)}`;\n\n    if (include.on) {\n      joinOn = this.whereItemsQuery(include.on, {\n        prefix: this.sequelize.literal(this.quoteIdentifier(asRight)),\n        model: include.model\n      });\n    }\n\n    if (include.where) {\n      joinWhere = this.whereItemsQuery(include.where, {\n        prefix: this.sequelize.literal(this.quoteIdentifier(asRight)),\n        model: include.model\n      });\n      if (joinWhere) {\n        if (include.or) {\n          joinOn += ` OR ${joinWhere}`;\n        } else {\n          joinOn += ` AND ${joinWhere}`;\n        }\n      }\n    }\n\n    this.aliasAs(asRight, topLevelInfo);\n\n    return {\n      join: include.required ? 'INNER JOIN' : include.right && this._dialect.supports['RIGHT JOIN'] ? 'RIGHT OUTER JOIN' : 'LEFT OUTER JOIN',\n      body: this.quoteTable(tableRight, asRight),\n      condition: joinOn,\n      attributes: {\n        main: [],\n        subQuery: subqueryAttributes\n      }\n    };\n  }\n\n  /**\n   * Returns the SQL fragments to handle returning the attributes from an insert/update query.\n   *\n   * @param  {object} modelAttributes An object with the model attributes.\n   * @param  {object} options         An object with options.\n   *\n   * @private\n   */\n  generateReturnValues(modelAttributes, options) {\n    const returnFields = [];\n    const returnTypes = [];\n    let outputFragment = '';\n    let returningFragment = '';\n    let tmpTable = '';\n\n    if (Array.isArray(options.returning)) {\n      returnFields.push(...options.returning.map(field => this.quoteIdentifier(field)));\n    } else if (modelAttributes) {\n      _.each(modelAttributes, attribute => {\n        if (!(attribute.type instanceof DataTypes.VIRTUAL)) {\n          returnFields.push(this.quoteIdentifier(attribute.field));\n          returnTypes.push(attribute.type);\n        }\n      });\n    }\n\n    if (_.isEmpty(returnFields)) {\n      returnFields.push('*');\n    }\n\n    if (this._dialect.supports.returnValues.returning) {\n      returningFragment = ` RETURNING ${returnFields.join(',')}`;\n    } else if (this._dialect.supports.returnIntoValues) {\n      returningFragment = ` RETURNING ${returnFields.join(',')} INTO `;\n    } else if (this._dialect.supports.returnValues.output) {\n      outputFragment = ` OUTPUT ${returnFields.map(field => `INSERTED.${field}`).join(',')}`;\n\n      //To capture output rows when there is a trigger on MSSQL DB\n      if (options.hasTrigger && this._dialect.supports.tmpTableTrigger) {\n        const tmpColumns = returnFields.map((field, i) => `${field} ${returnTypes[i].toSql()}`);\n\n        tmpTable = `DECLARE @tmp TABLE (${tmpColumns.join(',')}); `;\n        outputFragment += ' INTO @tmp';\n        returningFragment = '; SELECT * FROM @tmp';\n      }\n    }\n\n    return { outputFragment, returnFields, returnTypes, returningFragment, tmpTable };\n  }\n\n  generateThroughJoin(include, includeAs, parentTableName, topLevelInfo) {\n    const through = include.through;\n    const throughTable = through.model.getTableName();\n    const throughAs = `${includeAs.internalAs}->${through.as}`;\n    const externalThroughAs = `${includeAs.externalAs}.${through.as}`;\n    const throughAttributes = through.attributes.map(attr => {\n      let alias = `${externalThroughAs}.${Array.isArray(attr) ? attr[1] : attr}`;\n\n      if (this.options.minifyAliases) {\n        alias = this._getMinifiedAlias(alias, throughAs, topLevelInfo.options);\n      }\n\n      return Utils.joinSQLFragments([\n        `${this.quoteIdentifier(throughAs)}.${this.quoteIdentifier(Array.isArray(attr) ? attr[0] : attr)}`,\n        'AS',\n        this.quoteIdentifier(alias)\n      ]);\n    });\n    const association = include.association;\n    const parentIsTop = !include.parent.association && include.parent.model.name === topLevelInfo.options.model.name;\n    const tableSource = parentTableName;\n    const identSource = association.identifierField;\n    const tableTarget = includeAs.internalAs;\n    const identTarget = association.foreignIdentifierField;\n    const attrTarget = association.targetKeyField;\n\n    const joinType = include.required ? 'INNER JOIN' : include.right && this._dialect.supports['RIGHT JOIN'] ? 'RIGHT OUTER JOIN' : 'LEFT OUTER JOIN';\n    let joinBody;\n    let joinCondition;\n    const attributes = {\n      main: [],\n      subQuery: []\n    };\n    let attrSource = association.sourceKey;\n    let sourceJoinOn;\n    let targetJoinOn;\n    let throughWhere;\n    let targetWhere;\n\n    if (topLevelInfo.options.includeIgnoreAttributes !== false) {\n      // Through includes are always hasMany, so we need to add the attributes to the mainAttributes no matter what (Real join will never be executed in subquery)\n      for (const attr of throughAttributes) {\n        attributes.main.push(attr);\n      }\n    }\n\n    // Figure out if we need to use field or attribute\n    if (!topLevelInfo.subQuery) {\n      attrSource = association.sourceKeyField;\n    }\n    if (topLevelInfo.subQuery && !include.subQuery && !include.parent.subQuery && include.parent.model !== topLevelInfo.options.mainModel) {\n      attrSource = association.sourceKeyField;\n    }\n\n    // Filter statement for left side of through\n    // Used by both join and subquery where\n    // If parent include was in a subquery need to join on the aliased attribute\n    if (topLevelInfo.subQuery && !include.subQuery && include.parent.subQuery && !parentIsTop) {\n      // If we are minifying aliases and our JOIN target has been minified, we need to use the alias instead of the original column name\n      const joinSource = this._getAliasForField(tableSource, `${tableSource}.${attrSource}`, topLevelInfo.options) || `${tableSource}.${attrSource}`;\n\n      sourceJoinOn = `${this.quoteIdentifier(joinSource)} = `;\n    } else {\n      // If we are minifying aliases and our JOIN target has been minified, we need to use the alias instead of the original column name\n      const aliasedSource = this._getAliasForField(tableSource, attrSource, topLevelInfo.options) || attrSource;\n\n      sourceJoinOn = `${this.quoteTable(tableSource)}.${this.quoteIdentifier(aliasedSource)} = `;\n    }\n    sourceJoinOn += `${this.quoteIdentifier(throughAs)}.${this.quoteIdentifier(identSource)}`;\n\n    // Filter statement for right side of through\n    // Used by both join and subquery where\n    targetJoinOn = `${this.quoteIdentifier(tableTarget)}.${this.quoteIdentifier(attrTarget)} = `;\n    targetJoinOn += `${this.quoteIdentifier(throughAs)}.${this.quoteIdentifier(identTarget)}`;\n\n    if (through.where) {\n      throughWhere = this.getWhereConditions(through.where, this.sequelize.literal(this.quoteIdentifier(throughAs)), through.model);\n    }\n\n    this.aliasAs(includeAs.internalAs, topLevelInfo);\n\n    // Generate a wrapped join so that the through table join can be dependent on the target join\n    joinBody = `( ${this.quoteTable(throughTable, throughAs)} INNER JOIN ${this.quoteTable(include.model.getTableName(), includeAs.internalAs)} ON ${targetJoinOn}`;\n    if (throughWhere) {\n      joinBody += ` AND ${throughWhere}`;\n    }\n    joinBody += ')';\n    joinCondition = sourceJoinOn;\n\n    if (include.where || include.through.where) {\n      if (include.where) {\n        targetWhere = this.getWhereConditions(include.where, this.sequelize.literal(this.quoteIdentifier(includeAs.internalAs)), include.model, topLevelInfo.options);\n        if (targetWhere) {\n          joinCondition += ` AND ${targetWhere}`;\n        }\n      }\n    }\n\n    this._generateSubQueryFilter(include, includeAs, topLevelInfo);\n\n    return {\n      join: joinType,\n      body: joinBody,\n      condition: joinCondition,\n      attributes\n    };\n  }\n\n  /*\n   * Appends to the alias cache if the alias 64+ characters long and minifyAliases is true.\n   * This helps to avoid character limits in PostgreSQL.\n   */\n  aliasAs(as, topLevelInfo) {\n    if (this.options.minifyAliases && as.length >= 64) {\n      const alias = `%${topLevelInfo.options.includeAliases.size}`;\n\n      topLevelInfo.options.includeAliases.set(alias, as);\n    }\n  }\n\n  /*\n   * Generates subQueryFilter - a select nested in the where clause of the subQuery.\n   * For a given include a query is generated that contains all the way from the subQuery\n   * table to the include table plus everything that's in required transitive closure of the\n   * given include.\n   */\n  _generateSubQueryFilter(include, includeAs, topLevelInfo) {\n    if (!topLevelInfo.subQuery || !include.subQueryFilter) {\n      return;\n    }\n\n    if (!topLevelInfo.options.where) {\n      topLevelInfo.options.where = {};\n    }\n    let parent = include;\n    let child = include;\n    let nestedIncludes = this._getRequiredClosure(include).include;\n    let query;\n\n    while ((parent = parent.parent)) { // eslint-disable-line\n      if (parent.parent && !parent.required) {\n        return; // only generate subQueryFilter if all the parents of this include are required\n      }\n\n      if (parent.subQueryFilter) {\n        // the include is already handled as this parent has the include on its required closure\n        // skip to prevent duplicate subQueryFilter\n        return;\n      }\n\n      nestedIncludes = [{ ...child, include: nestedIncludes, attributes: [] }];\n      child = parent;\n    }\n\n    const topInclude = nestedIncludes[0];\n    const topParent = topInclude.parent;\n    const topAssociation = topInclude.association;\n    topInclude.association = undefined;\n\n    if (topInclude.through && Object(topInclude.through.model) === topInclude.through.model) {\n      query = this.selectQuery(topInclude.through.model.getTableName(), {\n        attributes: [topInclude.through.model.primaryKeyField],\n        include: Model._validateIncludedElements({\n          model: topInclude.through.model,\n          include: [{\n            association: topAssociation.toTarget,\n            required: true,\n            where: topInclude.where,\n            include: topInclude.include\n          }]\n        }).include,\n        model: topInclude.through.model,\n        where: {\n          [Op.and]: [\n            this.sequelize.literal([\n              `${this.quoteTable(topParent.model.name)}.${this.quoteIdentifier(topParent.model.primaryKeyField)}`,\n              `${this.quoteIdentifier(topInclude.through.model.name)}.${this.quoteIdentifier(topAssociation.identifierField)}`\n            ].join(' = ')),\n            topInclude.through.where\n          ]\n        },\n        limit: 1,\n        includeIgnoreAttributes: false\n      }, topInclude.through.model);\n    } else {\n      const isBelongsTo = topAssociation.associationType === 'BelongsTo';\n      const sourceField = isBelongsTo ? topAssociation.identifierField : topAssociation.sourceKeyField || topParent.model.primaryKeyField;\n      const targetField = isBelongsTo ? topAssociation.sourceKeyField || topInclude.model.primaryKeyField : topAssociation.identifierField;\n\n      const join = [\n        `${this.quoteIdentifier(topInclude.as)}.${this.quoteIdentifier(targetField)}`,\n        `${this.quoteTable(topParent.as || topParent.model.name)}.${this.quoteIdentifier(sourceField)}`\n      ].join(' = ');\n\n      query = this.selectQuery(topInclude.model.getTableName(), {\n        attributes: [targetField],\n        include: Model._validateIncludedElements(topInclude).include,\n        model: topInclude.model,\n        where: {\n          [Op.and]: [\n            topInclude.where,\n            { [Op.join]: this.sequelize.literal(join) }\n          ]\n        },\n        limit: 1,\n        tableAs: topInclude.as,\n        includeIgnoreAttributes: false\n      }, topInclude.model);\n    }\n\n    if (!topLevelInfo.options.where[Op.and]) {\n      topLevelInfo.options.where[Op.and] = [];\n    }\n\n    topLevelInfo.options.where[`__${includeAs.internalAs}`] = this.sequelize.literal([\n      '(',\n      query.replace(/;$/, ''),\n      ')',\n      'IS NOT NULL'\n    ].join(' '));\n  }\n\n  /*\n   * For a given include hierarchy creates a copy of it where only the required includes\n   * are preserved.\n   */\n  _getRequiredClosure(include) {\n    const copy = { ...include, attributes: [], include: [] };\n\n    if (Array.isArray(include.include)) {\n      copy.include = include.include\n        .filter(i => i.required)\n        .map(inc => this._getRequiredClosure(inc));\n    }\n\n    return copy;\n  }\n\n  getQueryOrders(options, model, subQuery) {\n    const mainQueryOrder = [];\n    const subQueryOrder = [];\n\n    if (Array.isArray(options.order)) {\n      for (let order of options.order) {\n\n        // wrap if not array\n        if (!Array.isArray(order)) {\n          order = [order];\n        }\n\n        if (\n          subQuery\n          && Array.isArray(order)\n          && order[0]\n          && !(order[0] instanceof Association)\n          && !(typeof order[0] === 'function' && order[0].prototype instanceof Model)\n          && !(typeof order[0].model === 'function' && order[0].model.prototype instanceof Model)\n          && !(typeof order[0] === 'string' && model && model.associations !== undefined && model.associations[order[0]])\n        ) {\n          const field = model.rawAttributes[order[0]] ? model.rawAttributes[order[0]].field : order[0];\n          const subQueryAlias = this._getAliasForField(this.quoteIdentifier(model.name), field, options);\n\n          let parent = null;\n          let orderToQuote = [];\n\n          // we need to ensure that the parent is null if we use the subquery alias, else we'll get an exception since\n          // \"model_name\".\"alias\" doesn't exist - only \"alias\" does. we also need to ensure that we preserve order direction\n          // by pushing order[1] to the subQueryOrder as well - in case it doesn't exist, we want to push \"ASC\"\n          if (subQueryAlias === null) {\n            orderToQuote = order;\n            parent = model;\n          } else {\n            orderToQuote = [subQueryAlias, order.length > 1 ? order[1] : 'ASC'];\n            parent = null;\n          }\n\n          subQueryOrder.push(this.quote(orderToQuote, parent, '->'));\n        }\n\n        // Handle case where renamed attributes are used to order by,\n        // see https://github.com/sequelize/sequelize/issues/8739\n        // need to check if either of the attribute options match the order\n        if (options.attributes && model) {\n          const aliasedAttribute = options.attributes.find(attr => Array.isArray(attr)\n              && attr[1]\n              && (attr[0] === order[0] || attr[1] === order[0]));\n\n          if (aliasedAttribute) {\n            const modelName = this.quoteIdentifier(model.name);\n            const alias = this._getAliasForField(modelName, aliasedAttribute[1], options);\n\n            order[0] = new Utils.Col(alias || aliasedAttribute[1]);\n          }\n        }\n\n        mainQueryOrder.push(this.quote(order, model, '->'));\n      }\n    } else if (options.order instanceof Utils.SequelizeMethod) {\n      const sql = this.quote(options.order, model, '->');\n      if (subQuery) {\n        subQueryOrder.push(sql);\n      }\n      mainQueryOrder.push(sql);\n    } else {\n      throw new Error('Order must be type of array or instance of a valid sequelize method.');\n    }\n\n    return { mainQueryOrder, subQueryOrder };\n  }\n\n  _throwOnEmptyAttributes(attributes, extraInfo = {}) {\n    if (attributes.length > 0) return;\n    const asPart = extraInfo.as && `as ${extraInfo.as}` || '';\n    const namePart = extraInfo.modelName && `for model '${extraInfo.modelName}'` || '';\n    const message = `Attempted a SELECT query ${namePart} ${asPart} without selecting any columns`;\n    throw new sequelizeError.QueryError(message.replace(/ +/g, ' '));\n  }\n\n  selectFromTableFragment(options, model, attributes, tables, mainTableAs) {\n    this._throwOnEmptyAttributes(attributes, { modelName: model && model.name, as: mainTableAs });\n\n    let fragment = `SELECT ${attributes.join(', ')} FROM ${tables}`;\n\n    if (mainTableAs) {\n      fragment += ` ${this.getAliasToken()} ${mainTableAs}`;\n    }\n\n    if (options.indexHints && this._dialect.supports.indexHints) {\n      for (const hint of options.indexHints) {\n        if (IndexHints[hint.type]) {\n          fragment += ` ${IndexHints[hint.type]} INDEX (${hint.values.map(indexName => this.quoteIdentifiers(indexName)).join(',')})`;\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  /**\n   * Returns an SQL fragment for adding result constraints.\n   *\n   * @param  {object} options An object with selectQuery options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  addLimitAndOffset(options) {\n    let fragment = '';\n\n    /* eslint-disable */\n    if (options.offset != null && options.limit == null) {\n      fragment += ' LIMIT ' + this.escape(options.offset) + ', ' + 10000000000000;\n    } else if (options.limit != null) {\n      if (options.offset != null) {\n        fragment += ' LIMIT ' + this.escape(options.offset) + ', ' + this.escape(options.limit);\n      } else {\n        fragment += ' LIMIT ' + this.escape(options.limit);\n      }\n    }\n    /* eslint-enable */\n\n    return fragment;\n  }\n\n  handleSequelizeMethod(smth, tableName, factory, options, prepend) {\n    let result;\n\n    if (Object.prototype.hasOwnProperty.call(this.OperatorMap, smth.comparator)) {\n      smth.comparator = this.OperatorMap[smth.comparator];\n    }\n\n    if (smth instanceof Utils.Where) {\n      let value = smth.logic;\n      let key;\n\n      if (smth.attribute instanceof Utils.SequelizeMethod) {\n        key = this.getWhereConditions(smth.attribute, tableName, factory, options, prepend);\n      } else {\n        key = `${this.quoteTable(smth.attribute.Model.name)}.${this.quoteIdentifier(smth.attribute.field || smth.attribute.fieldName)}`;\n      }\n\n      if (value && value instanceof Utils.SequelizeMethod) {\n        value = this.getWhereConditions(value, tableName, factory, options, prepend);\n\n        if (value === 'NULL') {\n          if (smth.comparator === '=') {\n            smth.comparator = 'IS';\n          }\n          if (smth.comparator === '!=') {\n            smth.comparator = 'IS NOT';\n          }\n        }\n\n        return [key, value].join(` ${smth.comparator} `);\n      }\n      if (_.isPlainObject(value)) {\n        return this.whereItemQuery(smth.attribute, value, {\n          model: factory\n        });\n      }\n      if ([this.OperatorMap[Op.between], this.OperatorMap[Op.notBetween]].includes(smth.comparator)) {\n        value = `${this.escape(value[0])} AND ${this.escape(value[1])}`;\n      } else if (typeof value === 'boolean') {\n        value = this.booleanValue(value);\n      } else {\n        value = this.escape(value);\n      }\n\n      if (value === 'NULL') {\n        if (smth.comparator === '=') {\n          smth.comparator = 'IS';\n        }\n        if (smth.comparator === '!=') {\n          smth.comparator = 'IS NOT';\n        }\n      }\n\n      return [key, value].join(` ${smth.comparator} `);\n    }\n    if (smth instanceof Utils.Literal) {\n      return smth.val;\n    }\n    if (smth instanceof Utils.Cast) {\n      if (smth.val instanceof Utils.SequelizeMethod) {\n        result = this.handleSequelizeMethod(smth.val, tableName, factory, options, prepend);\n      } else if (_.isPlainObject(smth.val)) {\n        result = this.whereItemsQuery(smth.val);\n      } else {\n        result = this.escape(smth.val);\n      }\n\n      return `CAST(${result} AS ${smth.type.toUpperCase()})`;\n    }\n    if (smth instanceof Utils.Fn) {\n      return `${smth.fn}(${\n        smth.args.map(arg => {\n          if (arg instanceof Utils.SequelizeMethod) {\n            return this.handleSequelizeMethod(arg, tableName, factory, options, prepend);\n          }\n          if (_.isPlainObject(arg)) {\n            return this.whereItemsQuery(arg);\n          }\n          return this.escape(typeof arg === 'string' ? arg.replace(/\\$/g, '$$$') : arg);\n        }).join(', ')\n      })`;\n    }\n    if (smth instanceof Utils.Col) {\n      if (Array.isArray(smth.col) && !factory) {\n        throw new Error('Cannot call Sequelize.col() with array outside of order / group clause');\n      }\n      if (smth.col.startsWith('*')) {\n        return '*';\n      }\n      return this.quote(smth.col, factory);\n    }\n    return smth.toString(this, factory);\n  }\n\n  whereQuery(where, options) {\n    const query = this.whereItemsQuery(where, options);\n    if (query && query.length) {\n      return `WHERE ${query}`;\n    }\n    return '';\n  }\n\n  whereItemsQuery(where, options, binding) {\n    if (\n      where === null ||\n      where === undefined ||\n      Utils.getComplexSize(where) === 0\n    ) {\n      // NO OP\n      return '';\n    }\n\n    if (typeof where === 'string') {\n      throw new Error('Support for `{where: \\'raw query\\'}` has been removed.');\n    }\n\n    const items = [];\n\n    binding = binding || 'AND';\n    if (binding[0] !== ' ') binding = ` ${binding} `;\n\n    if (_.isPlainObject(where)) {\n      Utils.getComplexKeys(where).forEach(prop => {\n        const item = where[prop];\n        items.push(this.whereItemQuery(prop, item, options));\n      });\n    } else {\n      items.push(this.whereItemQuery(undefined, where, options));\n    }\n\n    return items.length && items.filter(item => item && item.length).join(binding) || '';\n  }\n\n  whereItemQuery(key, value, options = {}) {\n    if (value === undefined) {\n      throw new Error(`WHERE parameter \"${key}\" has invalid \"undefined\" value`);\n    }\n\n    if (typeof key === 'string' && key.includes('.') && options.model) {\n      const keyParts = key.split('.');\n      if (options.model.rawAttributes[keyParts[0]] && options.model.rawAttributes[keyParts[0]].type instanceof DataTypes.JSON) {\n        const tmp = {};\n        const field = options.model.rawAttributes[keyParts[0]];\n        _.set(tmp, keyParts.slice(1), value);\n        return this.whereItemQuery(field.field || keyParts[0], tmp, { field, ...options });\n      }\n    }\n\n    const field = this._findField(key, options);\n    const fieldType = field && field.type || options.type;\n\n    const isPlainObject = _.isPlainObject(value);\n    const isArray = !isPlainObject && Array.isArray(value);\n    key = this.OperatorsAliasMap && this.OperatorsAliasMap[key] || key;\n    if (isPlainObject) {\n      value = this._replaceAliases(value);\n    }\n    const valueKeys = isPlainObject && Utils.getComplexKeys(value);\n\n    if (key === undefined) {\n      if (typeof value === 'string') {\n        return value;\n      }\n\n      if (isPlainObject && valueKeys.length === 1) {\n        return this.whereItemQuery(valueKeys[0], value[valueKeys[0]], options);\n      }\n    }\n\n    if (value === null) {\n      const opValue = options.bindParam ? 'NULL' : this.escape(value, field);\n      return this._joinKeyValue(key, opValue, this.OperatorMap[Op.is], options.prefix);\n    }\n\n    if (!value) {\n      const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n      return this._joinKeyValue(key, opValue, this.OperatorMap[Op.eq], options.prefix);\n    }\n\n    if (value instanceof Utils.SequelizeMethod && !(key !== undefined && value instanceof Utils.Fn)) {\n      return this.handleSequelizeMethod(value);\n    }\n\n    // Convert where: [] to Op.and if possible, else treat as literal/replacements\n    if (key === undefined && isArray) {\n      if (Utils.canTreatArrayAsAnd(value)) {\n        key = Op.and;\n      } else {\n        throw new Error('Support for literal replacements in the `where` object has been removed.');\n      }\n    }\n\n    if (key === Op.or || key === Op.and || key === Op.not) {\n      return this._whereGroupBind(key, value, options);\n    }\n\n\n    if (value[Op.or]) {\n      return this._whereBind(this.OperatorMap[Op.or], key, value[Op.or], options);\n    }\n\n    if (value[Op.and]) {\n      return this._whereBind(this.OperatorMap[Op.and], key, value[Op.and], options);\n    }\n\n    if (isArray && fieldType instanceof DataTypes.ARRAY) {\n      const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n      return this._joinKeyValue(key, opValue, this.OperatorMap[Op.eq], options.prefix);\n    }\n\n    if (isPlainObject && fieldType instanceof DataTypes.JSON && options.json !== false) {\n      return this._whereJSON(key, value, options);\n    }\n    // If multiple keys we combine the different logic conditions\n    if (isPlainObject && valueKeys.length > 1) {\n      return this._whereBind(this.OperatorMap[Op.and], key, value, options);\n    }\n\n    if (isArray) {\n      return this._whereParseSingleValueObject(key, field, Op.in, value, options);\n    }\n    if (isPlainObject) {\n      if (this.OperatorMap[valueKeys[0]]) {\n        return this._whereParseSingleValueObject(key, field, valueKeys[0], value[valueKeys[0]], options);\n      }\n      return this._whereParseSingleValueObject(key, field, this.OperatorMap[Op.eq], value, options);\n    }\n\n    if (key === Op.placeholder) {\n      const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n      return this._joinKeyValue(this.OperatorMap[key], opValue, this.OperatorMap[Op.eq], options.prefix);\n    }\n\n    const opValue = options.bindParam ? this.format(value, field, options, options.bindParam) : this.escape(value, field);\n    return this._joinKeyValue(key, opValue, this.OperatorMap[Op.eq], options.prefix);\n  }\n\n  _findField(key, options) {\n    if (options.field) {\n      return options.field;\n    }\n\n    if (options.model && options.model.rawAttributes && options.model.rawAttributes[key]) {\n      return options.model.rawAttributes[key];\n    }\n\n    if (options.model && options.model.fieldRawAttributesMap && options.model.fieldRawAttributesMap[key]) {\n      return options.model.fieldRawAttributesMap[key];\n    }\n  }\n\n  // OR/AND/NOT grouping logic\n  _whereGroupBind(key, value, options) {\n    const binding = key === Op.or ? this.OperatorMap[Op.or] : this.OperatorMap[Op.and];\n    const outerBinding = key === Op.not ? 'NOT ' : '';\n\n    if (Array.isArray(value)) {\n      value = value.map(item => {\n        let itemQuery = this.whereItemsQuery(item, options, this.OperatorMap[Op.and]);\n        if (itemQuery && itemQuery.length && (Array.isArray(item) || _.isPlainObject(item)) && Utils.getComplexSize(item) > 1) {\n          itemQuery = `(${itemQuery})`;\n        }\n        return itemQuery;\n      }).filter(item => item && item.length);\n\n      value = value.length && value.join(binding);\n    } else {\n      value = this.whereItemsQuery(value, options, binding);\n    }\n    // Op.or: [] should return no data.\n    // Op.not of no restriction should also return no data\n    if ((key === Op.or || key === Op.not) && !value) {\n      return '0 = 1';\n    }\n\n    return value ? `${outerBinding}(${value})` : undefined;\n  }\n\n  _whereBind(binding, key, value, options) {\n    if (_.isPlainObject(value)) {\n      value = Utils.getComplexKeys(value).map(prop => {\n        const item = value[prop];\n        return this.whereItemQuery(key, { [prop]: item }, options);\n      });\n    } else {\n      value = value.map(item => this.whereItemQuery(key, item, options));\n    }\n\n    value = value.filter(item => item && item.length);\n\n    return value.length ? `(${value.join(binding)})` : undefined;\n  }\n\n  _whereJSON(key, value, options) {\n    const items = [];\n    let baseKey = this.quoteIdentifier(key);\n    if (options.prefix) {\n      if (options.prefix instanceof Utils.Literal) {\n        baseKey = `${this.handleSequelizeMethod(options.prefix)}.${baseKey}`;\n      } else {\n        baseKey = `${this.quoteTable(options.prefix)}.${baseKey}`;\n      }\n    }\n\n    Utils.getOperators(value).forEach(op => {\n      const where = {\n        [op]: value[op]\n      };\n      items.push(this.whereItemQuery(key, where, { ...options, json: false }));\n    });\n\n    _.forOwn(value, (item, prop) => {\n      this._traverseJSON(items, baseKey, prop, item, [prop]);\n    });\n\n    const result = items.join(this.OperatorMap[Op.and]);\n    return items.length > 1 ? `(${result})` : result;\n  }\n\n  _traverseJSON(items, baseKey, prop, item, path) {\n    let cast;\n\n    if (path[path.length - 1].includes('::')) {\n      const tmp = path[path.length - 1].split('::');\n      cast = tmp[1];\n      path[path.length - 1] = tmp[0];\n    }\n\n    let pathKey = this.jsonPathExtractionQuery(baseKey, path);\n\n    if (_.isPlainObject(item)) {\n      Utils.getOperators(item).forEach(op => {\n        const value = this._toJSONValue(item[op]);\n        let isJson = false;\n        if (typeof value === 'string' && op === Op.contains) {\n          try {\n            JSON.stringify(value);\n            isJson = true;\n          } catch (e) {\n            // failed to parse, is not json so isJson remains false\n          }\n        }\n        pathKey = this.jsonPathExtractionQuery(baseKey, path, isJson);\n        items.push(this.whereItemQuery(this._castKey(pathKey, value, cast), { [op]: value }));\n      });\n      _.forOwn(item, (value, itemProp) => {\n        this._traverseJSON(items, baseKey, itemProp, value, path.concat([itemProp]));\n      });\n\n      return;\n    }\n\n    item = this._toJSONValue(item);\n    items.push(this.whereItemQuery(this._castKey(pathKey, item, cast), { [Op.eq]: item }));\n  }\n\n  _toJSONValue(value) {\n    return value;\n  }\n\n  _castKey(key, value, cast, json) {\n    cast = cast || this._getJsonCast(Array.isArray(value) ? value[0] : value);\n    if (cast) {\n      return new Utils.Literal(this.handleSequelizeMethod(new Utils.Cast(new Utils.Literal(key), cast, json)));\n    }\n\n    return new Utils.Literal(key);\n  }\n\n  _getJsonCast(value) {\n    if (typeof value === 'number') {\n      return 'double precision';\n    }\n    if (value instanceof Date) {\n      return 'timestamptz';\n    }\n    if (typeof value === 'boolean') {\n      return 'boolean';\n    }\n    return;\n  }\n\n  _joinKeyValue(key, value, comparator, prefix) {\n    if (!key) {\n      return value;\n    }\n    if (comparator === undefined) {\n      throw new Error(`${key} and ${value} has no comparator`);\n    }\n    key = this._getSafeKey(key, prefix);\n    return [key, value].join(` ${comparator} `);\n  }\n\n  _getSafeKey(key, prefix) {\n    if (key instanceof Utils.SequelizeMethod) {\n      key = this.handleSequelizeMethod(key);\n      return this._prefixKey(this.handleSequelizeMethod(key), prefix);\n    }\n\n    if (Utils.isColString(key)) {\n      key = key.substr(1, key.length - 2).split('.');\n\n      if (key.length > 2) {\n        key = [\n          // join the tables by -> to match out internal namings\n          key.slice(0, -1).join('->'),\n          key[key.length - 1]\n        ];\n      }\n\n      return key.map(identifier => this.quoteIdentifier(identifier)).join('.');\n    }\n\n    return this._prefixKey(this.quoteIdentifier(key), prefix);\n  }\n\n  _prefixKey(key, prefix) {\n    if (prefix) {\n      if (prefix instanceof Utils.Literal) {\n        return [this.handleSequelizeMethod(prefix), key].join('.');\n      }\n\n      return [this.quoteTable(prefix), key].join('.');\n    }\n\n    return key;\n  }\n\n  _whereParseSingleValueObject(key, field, prop, value, options) {\n    if (prop === Op.not) {\n      if (Array.isArray(value)) {\n        prop = Op.notIn;\n      } else if (value !== null && value !== true && value !== false) {\n        prop = Op.ne;\n      }\n    }\n\n    let comparator = this.OperatorMap[prop] || this.OperatorMap[Op.eq];\n\n    switch (prop) {\n      case Op.in:\n      case Op.notIn:\n        if (value instanceof Utils.Literal) {\n          return this._joinKeyValue(key, value.val, comparator, options.prefix);\n        }\n\n        if (value.length) {\n          return this._joinKeyValue(key, `(${value.map(item => this.escape(item, field)).join(', ')})`, comparator, options.prefix);\n        }\n\n        if (comparator === this.OperatorMap[Op.in]) {\n          return this._joinKeyValue(key, '(NULL)', comparator, options.prefix);\n        }\n\n        return '';\n      case Op.any:\n      case Op.all:\n        comparator = `${this.OperatorMap[Op.eq]} ${comparator}`;\n        if (value[Op.values]) {\n          return this._joinKeyValue(key, `(VALUES ${value[Op.values].map(item => `(${this.escape(item)})`).join(', ')})`, comparator, options.prefix);\n        }\n\n        return this._joinKeyValue(key, `(${this.escape(value, field)})`, comparator, options.prefix);\n      case Op.between:\n      case Op.notBetween:\n        return this._joinKeyValue(key, `${this.escape(value[0], field)} AND ${this.escape(value[1], field)}`, comparator, options.prefix);\n      case Op.raw:\n        throw new Error('The `$raw` where property is no longer supported.  Use `sequelize.literal` instead.');\n      case Op.col:\n        comparator = this.OperatorMap[Op.eq];\n        value = value.split('.');\n\n        if (value.length > 2) {\n          value = [\n            // join the tables by -> to match out internal namings\n            value.slice(0, -1).join('->'),\n            value[value.length - 1]\n          ];\n        }\n\n        return this._joinKeyValue(key, value.map(identifier => this.quoteIdentifier(identifier)).join('.'), comparator, options.prefix);\n      case Op.startsWith:\n      case Op.endsWith:\n      case Op.substring:\n        comparator = this.OperatorMap[Op.like];\n\n        if (value instanceof Utils.Literal) {\n          value = value.val;\n        }\n\n        let pattern = `${value}%`;\n\n        if (prop === Op.endsWith) pattern = `%${value}`;\n        if (prop === Op.substring) pattern = `%${value}%`;\n\n        return this._joinKeyValue(key, this.escape(pattern), comparator, options.prefix);\n    }\n\n    const escapeOptions = {\n      acceptStrings: comparator.includes(this.OperatorMap[Op.like])\n    };\n\n    if (_.isPlainObject(value)) {\n      if (value[Op.col]) {\n        return this._joinKeyValue(key, this.whereItemQuery(null, value), comparator, options.prefix);\n      }\n      if (value[Op.any]) {\n        escapeOptions.isList = true;\n        return this._joinKeyValue(key, `(${this.escape(value[Op.any], field, escapeOptions)})`, `${comparator} ${this.OperatorMap[Op.any]}`, options.prefix);\n      }\n      if (value[Op.all]) {\n        escapeOptions.isList = true;\n        return this._joinKeyValue(key, `(${this.escape(value[Op.all], field, escapeOptions)})`, `${comparator} ${this.OperatorMap[Op.all]}`, options.prefix);\n      }\n    }\n\n    if (value === null && comparator === this.OperatorMap[Op.eq]) {\n      return this._joinKeyValue(key, this.escape(value, field, escapeOptions), this.OperatorMap[Op.is], options.prefix);\n    }\n    if (value === null && comparator === this.OperatorMap[Op.ne]) {\n      return this._joinKeyValue(key, this.escape(value, field, escapeOptions), this.OperatorMap[Op.not], options.prefix);\n    }\n\n    return this._joinKeyValue(key, this.escape(value, field, escapeOptions), comparator, options.prefix);\n  }\n\n  /*\n    Takes something and transforms it into values of a where condition.\n   @private\n  */\n  getWhereConditions(smth, tableName, factory, options, prepend) {\n    const where = {};\n\n    if (Array.isArray(tableName)) {\n      tableName = tableName[0];\n      if (Array.isArray(tableName)) {\n        tableName = tableName[1];\n      }\n    }\n\n    options = options || {};\n\n    if (prepend === undefined) {\n      prepend = true;\n    }\n\n    if (smth && smth instanceof Utils.SequelizeMethod) { // Checking a property is cheaper than a lot of instanceof calls\n      return this.handleSequelizeMethod(smth, tableName, factory, options, prepend);\n    }\n    if (_.isPlainObject(smth)) {\n      return this.whereItemsQuery(smth, {\n        model: factory,\n        prefix: prepend && tableName,\n        type: options.type\n      });\n    }\n    if (typeof smth === 'number' || typeof smth === 'bigint') {\n      let primaryKeys = factory ? Object.keys(factory.primaryKeys) : [];\n\n      if (primaryKeys.length > 0) {\n        // Since we're just a number, assume only the first key\n        primaryKeys = primaryKeys[0];\n      } else {\n        primaryKeys = 'id';\n      }\n\n      where[primaryKeys] = smth;\n\n      return this.whereItemsQuery(where, {\n        model: factory,\n        prefix: prepend && tableName\n      });\n    }\n    if (typeof smth === 'string') {\n      return this.whereItemsQuery(smth, {\n        model: factory,\n        prefix: prepend && tableName\n      });\n    }\n    if (Buffer.isBuffer(smth)) {\n      return this.escape(smth);\n    }\n    if (Array.isArray(smth)) {\n      if (smth.length === 0 || smth.length > 0 && smth[0].length === 0) return '1=1';\n      if (Utils.canTreatArrayAsAnd(smth)) {\n        const _smth = { [Op.and]: smth };\n        return this.getWhereConditions(_smth, tableName, factory, options, prepend);\n      }\n      throw new Error('Support for literal replacements in the `where` object has been removed.');\n    }\n    if (smth == null) {\n      return this.whereItemsQuery(smth, {\n        model: factory,\n        prefix: prepend && tableName\n      });\n    }\n\n    throw new Error(`Unsupported where option value: ${util.inspect(smth)}. Please refer to the Sequelize documentation to learn more about which values are accepted as part of the where option.`);\n  }\n\n  // A recursive parser for nested where conditions\n  parseConditionObject(conditions, path) {\n    path = path || [];\n    return _.reduce(conditions, (result, value, key) => {\n      if (_.isObject(value)) {\n        return result.concat(this.parseConditionObject(value, path.concat(key))); // Recursively parse objects\n      }\n      result.push({ path: path.concat(key), value });\n      return result;\n    }, []);\n  }\n\n  booleanValue(value) {\n    return value;\n  }\n\n  /**\n   * Returns the authenticate test query string\n   */\n  authTestQuery() {\n    return 'SELECT 1+1 AS result';\n  }\n}\n\nObject.assign(QueryGenerator.prototype, require('./query-generator/operators'));\nObject.assign(QueryGenerator.prototype, require('./query-generator/transaction'));\n\nmodule.exports = QueryGenerator;\n"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/query-generator/operators.js":{"lineLengths":[13,38,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,28,41,40,25,16,17,18,19,17,19,17,23,18,18,25,22,29,24,31,28,26,27,21,25,23,27,28,35,23,24,25,25,26,27,29,28,20,20,22,20,20,40,20,4,24,32,41,37,12,59,5,4,25,19,34,18,5,46,28,34,45,14,23,7,7,36,50,34,42,7,23,7,15,3,2,33,37,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/abstract/query-generator/operators.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst Op = require('../../../operators');\nconst Utils = require('../../../utils');\n\nconst OperatorHelpers = {\n  OperatorMap: {\n    [Op.eq]: '=',\n    [Op.ne]: '!=',\n    [Op.gte]: '>=',\n    [Op.gt]: '>',\n    [Op.lte]: '<=',\n    [Op.lt]: '<',\n    [Op.not]: 'IS NOT',\n    [Op.is]: 'IS',\n    [Op.in]: 'IN',\n    [Op.notIn]: 'NOT IN',\n    [Op.like]: 'LIKE',\n    [Op.notLike]: 'NOT LIKE',\n    [Op.iLike]: 'ILIKE',\n    [Op.notILike]: 'NOT ILIKE',\n    [Op.startsWith]: 'LIKE',\n    [Op.endsWith]: 'LIKE',\n    [Op.substring]: 'LIKE',\n    [Op.regexp]: '~',\n    [Op.notRegexp]: '!~',\n    [Op.iRegexp]: '~*',\n    [Op.notIRegexp]: '!~*',\n    [Op.between]: 'BETWEEN',\n    [Op.notBetween]: 'NOT BETWEEN',\n    [Op.overlap]: '&&',\n    [Op.contains]: '@>',\n    [Op.contained]: '<@',\n    [Op.adjacent]: '-|-',\n    [Op.strictLeft]: '<<',\n    [Op.strictRight]: '>>',\n    [Op.noExtendRight]: '&<',\n    [Op.noExtendLeft]: '&>',\n    [Op.any]: 'ANY',\n    [Op.all]: 'ALL',\n    [Op.and]: ' AND ',\n    [Op.or]: ' OR ',\n    [Op.col]: 'COL',\n    [Op.placeholder]: '$$PLACEHOLDER$$',\n    [Op.match]: '@@'\n  },\n\n  OperatorsAliasMap: {},\n\n  setOperatorsAliases(aliases) {\n    if (!aliases || _.isEmpty(aliases)) {\n      this.OperatorsAliasMap = false;\n    } else {\n      this.OperatorsAliasMap = { ...aliases };\n    }\n  },\n\n  _replaceAliases(orig) {\n    const obj = {};\n    if (!this.OperatorsAliasMap) {\n      return orig;\n    }\n\n    Utils.getOperators(orig).forEach(op => {\n      const item = orig[op];\n      if (_.isPlainObject(item)) {\n        obj[op] = this._replaceAliases(item);\n      } else {\n        obj[op] = item;\n      }\n    });\n\n    _.forOwn(orig, (item, prop) => {\n      prop = this.OperatorsAliasMap[prop] || prop;\n      if (_.isPlainObject(item)) {\n        item = this._replaceAliases(item);\n      }\n      obj[prop] = item;\n    });\n    return obj;\n  }\n};\n\nmodule.exports = OperatorHelpers;\n"],"mappings":";;;;;;;;;;;;;;;;;AAEA,MAAM,IAAI,QAAQ;AAClB,MAAM,KAAK,QAAQ;AACnB,MAAM,QAAQ,QAAQ;AAEtB,MAAM,kBAAkB;AAAA,EACtB,aAAa;AAAA,KACV,GAAG,KAAK;AAAA,KACR,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,KAAK;AAAA,KACR,GAAG,QAAQ;AAAA,KACX,GAAG,OAAO;AAAA,KACV,GAAG,UAAU;AAAA,KACb,GAAG,QAAQ;AAAA,KACX,GAAG,WAAW;AAAA,KACd,GAAG,aAAa;AAAA,KAChB,GAAG,WAAW;AAAA,KACd,GAAG,YAAY;AAAA,KACf,GAAG,SAAS;AAAA,KACZ,GAAG,YAAY;AAAA,KACf,GAAG,UAAU;AAAA,KACb,GAAG,aAAa;AAAA,KAChB,GAAG,UAAU;AAAA,KACb,GAAG,aAAa;AAAA,KAChB,GAAG,UAAU;AAAA,KACb,GAAG,WAAW;AAAA,KACd,GAAG,YAAY;AAAA,KACf,GAAG,WAAW;AAAA,KACd,GAAG,aAAa;AAAA,KAChB,GAAG,cAAc;AAAA,KACjB,GAAG,gBAAgB;AAAA,KACnB,GAAG,eAAe;AAAA,KAClB,GAAG,MAAM;AAAA,KACT,GAAG,MAAM;AAAA,KACT,GAAG,MAAM;AAAA,KACT,GAAG,KAAK;AAAA,KACR,GAAG,MAAM;AAAA,KACT,GAAG,cAAc;AAAA,KACjB,GAAG,QAAQ;AAAA;AAAA,EAGd,mBAAmB;AAAA,EAEnB,oBAAoB,SAAS;AAC3B,QAAI,CAAC,WAAW,EAAE,QAAQ,UAAU;AAClC,WAAK,oBAAoB;AAAA,WACpB;AACL,WAAK,oBAAoB,mBAAK;AAAA;AAAA;AAAA,EAIlC,gBAAgB,MAAM;AACpB,UAAM,MAAM;AACZ,QAAI,CAAC,KAAK,mBAAmB;AAC3B,aAAO;AAAA;AAGT,UAAM,aAAa,MAAM,QAAQ,QAAM;AACrC,YAAM,OAAO,KAAK;AAClB,UAAI,EAAE,cAAc,OAAO;AACzB,YAAI,MAAM,KAAK,gBAAgB;AAAA,aAC1B;AACL,YAAI,MAAM;AAAA;AAAA;AAId,MAAE,OAAO,MAAM,CAAC,MAAM,SAAS;AAC7B,aAAO,KAAK,kBAAkB,SAAS;AACvC,UAAI,EAAE,cAAc,OAAO;AACzB,eAAO,KAAK,gBAAgB;AAAA;AAE9B,UAAI,QAAQ;AAAA;AAEd,WAAO;AAAA;AAAA;AAIX,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/abstract/query-generator/transaction.js":{"lineLengths":[13,34,28,42,25,13,5,55,4,27,20,4,38,29,74,5,32,4,27,4,24,4,22,4,23,4,39,29,13,5,21,4,41,29,86,5,23,3,2,36,39,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/abstract/query-generator/transaction.js"],"sourcesContent":["'use strict';\n\nconst uuidv4 = require('uuid').v4;\n\nconst TransactionQueries = {\n  /**\n   * Returns a query that sets the transaction isolation level.\n   *\n   * @param  {string} value   The isolation level.\n   * @param  {object} options An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  setIsolationLevelQuery(value, options) {\n    if (options.parent) {\n      return;\n    }\n\n    return `SET TRANSACTION ISOLATION LEVEL ${value};`;\n  },\n\n  generateTransactionId() {\n    return uuidv4();\n  },\n\n  /**\n   * Returns a query that starts a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'START TRANSACTION;';\n  },\n\n  deferConstraintsQuery() {},\n\n  setConstraintQuery() {},\n  setDeferredQuery() {},\n  setImmediateQuery() {},\n\n  /**\n   * Returns a query that commits a transaction.\n   *\n   * @param  {Transaction} transaction An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n\n    return 'COMMIT;';\n  },\n\n  /**\n   * Returns a query that rollbacks a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `ROLLBACK TO SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'ROLLBACK;';\n  }\n};\n\nmodule.exports = TransactionQueries;\n"],"mappings":";AAEA,MAAM,SAAS,QAAQ,QAAQ;AAE/B,MAAM,qBAAqB;AAAA,EASzB,uBAAuB,OAAO,SAAS;AACrC,QAAI,QAAQ,QAAQ;AAClB;AAAA;AAGF,WAAO,mCAAmC;AAAA;AAAA,EAG5C,wBAAwB;AACtB,WAAO;AAAA;AAAA,EAUT,sBAAsB,aAAa;AACjC,QAAI,YAAY,QAAQ;AAEtB,aAAO,aAAa,KAAK,gBAAgB,YAAY,MAAM;AAAA;AAG7D,WAAO;AAAA;AAAA,EAGT,wBAAwB;AAAA;AAAA,EAExB,qBAAqB;AAAA;AAAA,EACrB,mBAAmB;AAAA;AAAA,EACnB,oBAAoB;AAAA;AAAA,EASpB,uBAAuB,aAAa;AAClC,QAAI,YAAY,QAAQ;AACtB;AAAA;AAGF,WAAO;AAAA;AAAA,EAUT,yBAAyB,aAAa;AACpC,QAAI,YAAY,QAAQ;AAEtB,aAAO,yBAAyB,KAAK,gBAAgB,YAAY,MAAM;AAAA;AAGzE,WAAO;AAAA;AAAA;AAIX,OAAO,UAAU;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/lib/dialects/mysql/query-interface.js":{"lineLengths":[13,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,48,66,48,50,54,28,123,16,44,60,69,195,5,140,3,71,42,37,58,92,32,103,52,3,62,92,16,44,23,100,53,8,38,14,52,56,85,35,24,9,5,54,81,12,100,5,54,3,1,50,43,0],"data":{"version":3,"sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/sequelize/src/dialects/mysql/query-interface.js"],"sourcesContent":["'use strict';\n\nconst sequelizeErrors = require('../../errors');\nconst { QueryInterface } = require('../abstract/query-interface');\nconst QueryTypes = require('../../query-types');\n\n/**\n * The interface that Sequelize uses to talk with MySQL/MariaDB database\n */\nclass MySQLQueryInterface extends QueryInterface {\n  /**\n   * A wrapper that fixes MySQL's inability to cleanly remove columns from existing tables if they have a foreign key constraint.\n   *\n   * @override\n   */\n  async removeColumn(tableName, columnName, options) {\n    options = options || {};\n\n    const [results] = await this.sequelize.query(\n      this.queryGenerator.getForeignKeyQuery(tableName.tableName ? tableName : {\n        tableName,\n        schema: this.sequelize.config.database\n      }, columnName),\n      { raw: true, ...options }\n    );\n\n    //Exclude primary key constraint\n    if (results.length && results[0].constraint_name !== 'PRIMARY') {\n      await Promise.all(results.map(constraint => this.sequelize.query(\n        this.queryGenerator.dropForeignKeyQuery(tableName, constraint.constraint_name),\n        { raw: true, ...options }\n      )));\n    }\n\n    return await this.sequelize.query(\n      this.queryGenerator.removeColumnQuery(tableName, columnName),\n      { raw: true, ...options }\n    );\n  }\n\n  /**\n   * @override\n   */\n  async upsert(tableName, insertValues, updateValues, where, options) {\n    options = { ...options };\n\n    options.type = QueryTypes.UPSERT;\n    options.updateOnDuplicate = Object.keys(updateValues);\n    options.upsertKeys = Object.values(options.model.primaryKeys).map(item => item.field);\n\n    const model = options.model;\n    const sql = this.queryGenerator.insertQuery(tableName, insertValues, model.rawAttributes, options);\n    return await this.sequelize.query(sql, options);\n  }\n\n  /**\n   * @override\n   */\n  async removeConstraint(tableName, constraintName, options) {\n    const sql = this.queryGenerator.showConstraintsQuery(\n      tableName.tableName ? tableName : {\n        tableName,\n        schema: this.sequelize.config.database\n      }, constraintName);\n\n    const constraints = await this.sequelize.query(sql, { ...options,\n      type: this.sequelize.QueryTypes.SHOWCONSTRAINTS });\n\n    const constraint = constraints[0];\n    let query;\n    if (!constraint || !constraint.constraintType) {\n      throw new sequelizeErrors.UnknownConstraintError(\n        {\n          message: `Constraint ${constraintName} on table ${tableName} does not exist`,\n          constraint: constraintName,\n          table: tableName\n        });\n    }\n\n    if (constraint.constraintType === 'FOREIGN KEY') {\n      query = this.queryGenerator.dropForeignKeyQuery(tableName, constraintName);\n    } else {\n      query = this.queryGenerator.removeIndexQuery(constraint.tableName, constraint.constraintName);\n    }\n\n    return await this.sequelize.query(query, options);\n  }\n}\n\nexports.MySQLQueryInterface = MySQLQueryInterface;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA,MAAM,kBAAkB,QAAQ;AAChC,MAAM,EAAE,mBAAmB,QAAQ;AACnC,MAAM,aAAa,QAAQ;AAK3B,kCAAkC,eAAe;AAAA,QAMzC,aAAa,WAAW,YAAY,SAAS;AACjD,cAAU,WAAW;AAErB,UAAM,CAAC,WAAW,MAAM,KAAK,UAAU,MACrC,KAAK,eAAe,mBAAmB,UAAU,YAAY,YAAY;AAAA,MACvE;AAAA,MACA,QAAQ,KAAK,UAAU,OAAO;AAAA,OAC7B,aACH,iBAAE,KAAK,QAAS;AAIlB,QAAI,QAAQ,UAAU,QAAQ,GAAG,oBAAoB,WAAW;AAC9D,YAAM,QAAQ,IAAI,QAAQ,IAAI,gBAAc,KAAK,UAAU,MACzD,KAAK,eAAe,oBAAoB,WAAW,WAAW,kBAC9D,iBAAE,KAAK,QAAS;AAAA;AAIpB,WAAO,MAAM,KAAK,UAAU,MAC1B,KAAK,eAAe,kBAAkB,WAAW,aACjD,iBAAE,KAAK,QAAS;AAAA;AAAA,QAOd,OAAO,WAAW,cAAc,cAAc,OAAO,SAAS;AAClE,cAAU,mBAAK;AAEf,YAAQ,OAAO,WAAW;AAC1B,YAAQ,oBAAoB,OAAO,KAAK;AACxC,YAAQ,aAAa,OAAO,OAAO,QAAQ,MAAM,aAAa,IAAI,UAAQ,KAAK;AAE/E,UAAM,QAAQ,QAAQ;AACtB,UAAM,MAAM,KAAK,eAAe,YAAY,WAAW,cAAc,MAAM,eAAe;AAC1F,WAAO,MAAM,KAAK,UAAU,MAAM,KAAK;AAAA;AAAA,QAMnC,iBAAiB,WAAW,gBAAgB,SAAS;AACzD,UAAM,MAAM,KAAK,eAAe,qBAC9B,UAAU,YAAY,YAAY;AAAA,MAChC;AAAA,MACA,QAAQ,KAAK,UAAU,OAAO;AAAA,OAC7B;AAEL,UAAM,cAAc,MAAM,KAAK,UAAU,MAAM,KAAK,iCAAK,UAAL;AAAA,MAClD,MAAM,KAAK,UAAU,WAAW;AAAA;AAElC,UAAM,aAAa,YAAY;AAC/B,QAAI;AACJ,QAAI,CAAC,cAAc,CAAC,WAAW,gBAAgB;AAC7C,YAAM,IAAI,gBAAgB,uBACxB;AAAA,QACE,SAAS,cAAc,2BAA2B;AAAA,QAClD,YAAY;AAAA,QACZ,OAAO;AAAA;AAAA;AAIb,QAAI,WAAW,mBAAmB,eAAe;AAC/C,cAAQ,KAAK,eAAe,oBAAoB,WAAW;AAAA,WACtD;AACL,cAAQ,KAAK,eAAe,iBAAiB,WAAW,WAAW,WAAW;AAAA;AAGhF,WAAO,MAAM,KAAK,UAAU,MAAM,OAAO;AAAA;AAAA;AAI7C,QAAQ,sBAAsB;","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lru-cache/dist/cjs/index-cjs.js":{"lineLengths":[13,72,62,2,58,114,37],"data":{"version":3,"file":"index-cjs.js","sourceRoot":"","sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lru-cache/src/index-cjs.ts"],"names":[],"mappings":";;;;AAAA,0DAAiC;AAEjC,iBAAS,MAAM,CAAC,MAAM,CAAC,kBAAQ,EAAE,EAAE,OAAO,EAAE,kBAAQ,EAAE,QAAQ,EAAR,kBAAQ,EAAE,CAAC,CAAA","sourcesContent":["import LRUCache from './index.js'\n\nexport = Object.assign(LRUCache, { default: LRUCache, LRUCache })\n"]},"url":null,"sourceURL":null},"file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lru-cache/dist/cjs/index.js":{"lineLengths":[13,3,19,3,62,26,47,18,41,17,11,25,46,34,18,49,50,53,2,47,28,73,21,40,70,71,71,72,55,27,56,44,10,27,20,32,25,36,29,48,31,27,20,31,23,20,21,5,1,13,9,11,26,33,24,42,21,22,35,42,36,17,5,31,29,35,75,9,28,37,24,5,13,37,5,11,40,5,1,3,61,2,64,72,70,77,25,3,16,75,76,40,9,13,13,18,17,7,39,7,8,7,49,7,18,7,48,7,17,7,50,7,19,7,50,7,19,7,46,7,15,7,50,7,19,7,47,7,16,7,48,7,17,7,51,7,20,7,60,7,29,7,54,7,23,7,58,7,27,7,62,7,31,7,52,7,21,26,10,20,12,13,13,10,10,10,10,10,14,11,12,10,16,20,21,7,61,65,65,6,45,6,16,7,37,16,25,30,26,28,30,32,32,26,26,24,31,14,24,31,14,26,22,62,108,56,54,56,50,10,5,34,7,51,7,15,25,5,7,55,7,19,29,5,7,64,7,26,36,5,7,58,7,16,26,5,7,59,7,23,33,5,7,55,7,19,29,5,7,60,7,24,34,5,26,348,42,76,9,58,25,57,9,24,32,58,47,35,55,106,13,61,75,13,9,40,48,79,9,40,45,33,55,55,40,40,23,23,39,23,33,44,36,9,49,46,32,9,14,43,39,9,43,53,47,41,67,71,63,51,57,38,38,47,91,17,13,47,92,13,43,9,39,55,47,47,28,58,31,20,43,28,23,38,83,13,42,9,51,71,84,9,65,47,35,33,86,62,74,13,9,5,7,58,7,26,52,5,30,46,48,26,30,64,50,30,49,44,47,58,21,28,57,37,30,30,17,36,13,10,40,63,10,46,30,40,44,33,37,51,63,13,10,66,39,26,30,33,41,30,80,49,37,30,30,17,36,13,21,10,39,48,38,25,13,59,26,72,10,34,40,38,71,10,5,55,31,27,28,24,27,31,47,33,28,41,49,29,10,62,55,66,45,25,13,34,38,64,82,21,49,42,104,21,17,22,91,82,48,17,13,24,10,54,32,32,61,56,38,17,13,49,25,40,66,13,10,5,32,40,55,38,100,9,17,6,54,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,55,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,26,38,62,5,7,56,63,7,16,42,49,49,61,59,13,9,5,7,56,6,56,63,7,17,43,49,49,61,59,13,9,5,7,57,63,7,13,42,39,34,61,24,13,9,5,7,53,6,57,63,7,14,43,39,34,61,24,13,9,5,7,59,63,7,15,42,39,34,61,39,13,9,5,7,55,6,59,63,7,16,43,39,34,61,39,13,9,5,7,65,31,7,25,30,5,7,76,71,7,31,42,39,52,40,20,36,25,52,62,13,9,5,7,74,66,69,42,7,31,42,39,52,40,20,36,25,58,9,5,7,74,78,7,32,43,39,52,40,20,36,25,58,9,5,7,70,23,7,18,28,63,35,46,31,13,9,23,5,7,75,29,7,12,23,62,41,39,52,40,20,57,25,36,45,42,73,76,57,59,13,30,44,13,38,9,19,5,7,76,73,48,7,15,21,41,30,75,77,77,31,18,76,53,47,13,46,9,5,7,32,7,32,140,60,84,53,53,60,25,36,51,13,66,27,24,9,71,34,23,37,28,41,38,46,44,38,37,37,39,43,43,31,25,51,23,35,32,9,14,21,36,48,31,78,74,17,43,43,58,21,48,65,21,17,44,55,41,29,43,78,53,33,47,51,17,13,30,38,13,9,39,42,9,25,31,52,13,23,47,9,73,38,21,42,46,13,9,20,5,7,65,37,7,11,13,32,54,34,51,51,56,21,17,45,31,17,13,9,17,58,42,25,46,50,17,13,9,5,18,32,38,38,65,60,9,61,35,47,13,40,54,13,9,35,67,19,44,44,34,9,31,40,34,9,14,42,9,31,21,20,5,7,75,76,20,6,38,58,7,29,76,42,34,43,45,55,29,13,40,37,47,17,29,39,51,17,28,13,30,37,47,13,9,26,32,9,21,5,7,75,13,6,55,54,7,31,61,42,34,52,43,80,75,9,5,50,73,41,21,9,41,35,65,74,30,11,27,30,20,20,10,48,42,76,33,46,55,65,36,64,17,22,56,17,13,58,51,13,81,25,45,38,50,71,21,26,39,21,17,22,39,59,54,17,13,21,10,28,33,52,47,13,33,10,35,42,80,87,76,25,45,85,86,79,26,35,17,46,72,72,71,73,67,17,13,29,78,56,17,47,13,44,25,13,10,37,61,48,43,13,58,58,43,55,48,53,26,69,57,47,21,17,15,10,27,50,50,37,34,36,34,11,34,45,73,40,9,14,38,9,18,5,27,34,25,20,22,35,55,60,5,39,16,22,122,22,144,34,288,36,23,37,32,27,31,35,23,15,9,25,23,27,31,16,27,17,28,24,37,39,35,29,19,19,10,40,34,23,38,72,38,9,14,47,43,45,81,29,46,30,52,17,75,13,79,76,49,44,27,41,40,37,47,17,27,51,25,13,77,33,72,66,52,25,61,40,48,13,74,9,5,7,74,19,6,62,7,29,153,42,34,47,60,23,47,39,27,41,67,32,46,39,21,45,52,58,17,22,33,37,67,52,21,79,17,13,18,27,39,80,81,82,84,53,31,54,17,40,37,47,17,29,13,9,26,32,9,5,20,26,26,5,24,41,44,15,69,50,29,29,23,35,39,47,13,18,68,13,45,31,9,5,7,38,60,7,15,28,31,46,38,31,39,33,17,22,48,51,53,72,21,73,47,60,25,52,67,25,21,43,53,53,47,55,21,52,55,21,26,74,74,21,33,43,17,13,9,62,38,21,42,46,13,9,23,5,7,58,7,13,67,43,45,64,13,18,47,39,52,17,44,59,17,13,9,29,38,38,41,31,33,9,26,32,9,23,23,30,33,23,54,38,21,42,46,13,9,5,1,28,27,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/admin/Desktop/workspace/dojotech/src/node_modules/lru-cache/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof process === 'object' &&\n  process &&\n  typeof process.emitWarning === 'function'\n    ? process.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\ntype PosInt = number & { [TYPE]: 'Positive Integer' }\ntype Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\ntype UintArray = Uint8Array | Uint16Array | Uint32Array\ntype NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\n\ntype StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined | void> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\ntype DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   */\n  export type DisposeReason = 'evict' | 'set' | 'delete'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Status object that may be passed to {@link LRUCache#fetch},\n   * {@link LRUCache#get}, {@link LRUCache#set}, and {@link LRUCache#has}.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no fetchMethod, so {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link OptionsBase.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context?: undefined\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | void | undefined> | V | void | undefined\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed\n     * by default, and MAY live in the cache long after they have expired.\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * Must be an integer number of ms. If set to 0, this indicates \"no TTL\"\n     *\n     * @default 0\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     * Note that this may significantly degrade performance,\n     * especially if the cache is storing a large number of items.\n     * It is almost always best to just leave the stale items in\n     * the cache, and let them fall out as new items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * @default false\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#get}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#has}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the cache.\n     * This can be handy if you want to close file descriptors or do other\n     * cleanup tasks when items are no longer accessible. Called with `key,\n     * value`.  It's called before actually removing the item from the\n     * internal cache, so it is *NOT* safe to re-add them.\n     *\n     * Use {@link OptionsBase.disposeAfter} if you wish to dispose items after\n     * they have been full removed, when it is safe to add them back to the\n     * cache.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when\n     * setting a new value for an existing key (ie, when updating a value\n     * rather than inserting a new value).  Note that the TTL value is\n     * _always_ set (if provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * If you wish to track item size, you must provide a maxSize\n     * note that we still will only keep up to max *actual items*,\n     * if max is set, so size tracking may cause fewer than max items\n     * to be stored.  At the extreme, a single item of maxSize size\n     * will cause everything else in the cache to be dropped when it\n     * is added.  Use with caution!\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod}, then it will not be stored in the\n     * cache.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the\n     * {@link LRUCache#fetch} fails, not any other times.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches an `'abort'`\n     * event, whether user-triggered, or due to internal cache behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and its return\n     * value will be ignored and not cached.\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls are not\n     * immediately resolved or rejected when they are aborted, and instead\n     * take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump}\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown> {\n  // properties coming in from the options of these, only max and maxSize\n  // really *need* to be protected. The rest can be modified, as they just\n  // set defaults for various methods.\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the remaining TTL time for a given entry key\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.delete(this.#keyList[index] as K)\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        status.remainingTTL = status.now + ttl - start\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      return ttls[index] === 0 || starts[index] === 0\n        ? Infinity\n        : starts[index] + ttls[index] - (cachedNow || getNow())\n    }\n\n    this.#isStale = index => {\n      return (\n        ttls[index] !== 0 &&\n        starts[index] !== 0 &&\n        (cachedNow || getNow()) - starts[index] > ttls[index]\n      )\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index]\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - sizes[index]\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index]\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to Array.find().  fn is called as fn(value, key, cache).\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from\n   * most recently used to least recently used.  fn is called as\n   * fn(value, key, cache).  Does not update age or recenty of use.\n   * Does not iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.delete(this.#keyList[i] as K)\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to cache.load()\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - this.#starts[i]\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   * Note that the shape of the resulting cache may be different if the\n   * same options are not used in both caches.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V>,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.delete(k)\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index !== undefined &&\n      (allowStale || !this.#isStale(index))\n    ) {\n      const v = this.#valList[index]\n      // either stale and allowed, or forcing a refresh of non-stale value\n      return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n    }\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AbortController()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | void | undefined,\n      updateCache = false\n    ): V | undefined | void => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.delete(k)\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.delete(k)\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | void | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res()\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AbortController\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   */\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V, FC>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<void | V>\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V, FC>\n      : never\n  ): Promise<void | V>\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<void | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.delete(k)\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.clear()\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, 'delete')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, 'delete'])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            this.#next[this.#prev[index]] = this.#next[index]\n            this.#prev[this.#next[index]] = this.#prev[index]\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, 'delete')\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, 'delete'])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n\nexport default LRUCache\n"]},"url":null,"sourceURL":null}}}